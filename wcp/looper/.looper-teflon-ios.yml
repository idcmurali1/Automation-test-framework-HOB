
inherit: 'job:///glass-mobile-app-automation/looper-base:.looper.yml'

gitShallowDepth: 10

branches:
  - spec: development
    scheduling: concurrent

    triggers:
      - pr:
          scheduling: cancelRunning
      - push:
          manualOnly: true

      - manual:
          name: US-iOS-English-Teflon-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-us-teflon-english', MAPPING_LABELS = 'us_en_ios_teflon', SAUCE_APP = 'storage:filename=us-development-latest.zip', TEST_TAGS = 'p1-us-teflon')
      
      - cron:
          spec: H 7 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-us-teflon-english', MAPPING_LABELS = 'us_en_ios_teflon', SAUCE_APP = 'storage:filename=us-development-latest.zip', TEST_TAGS = 'p1-us-teflon')

      - manual:
          name: MX-iOS-Teflon-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-mx-teflon', MAPPING_LABELS = 'mx_ea_ios_teflon', SAUCE_APP = 'storage:filename=mx-development-latest.zip', TEST_TAGS = 'p1-mx-ea-teflon')
    
      - cron:
          spec: H 7,19 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-mx-teflon', MAPPING_LABELS = 'mx_ea_ios_teflon', SAUCE_APP = 'storage:filename=mx-development-latest.zip', TEST_TAGS = 'p1-mx-ea-teflon')

      - manual:
          name: MX-Bodega-iOS-Teflon-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-mx-bodega-teflon', MAPPING_LABELS = 'bo_ea_ios_teflon', SAUCE_APP = 'storage:filename=mx-bodega-development-latest.zip', TEST_TAGS = 'p1-bodega-ea-teflon' )

      - cron:
          spec: H 7,19 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-mx-bodega-teflon', MAPPING_LABELS = 'bo_ea_ios_teflon', SAUCE_APP = 'storage:filename=mx-bodega-development-latest.zip', TEST_TAGS = 'p1-bodega-ea-teflon' )

      - manual:
          name: CA-iOS-English-Teflon-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-en-teflon')
      
      - cron:
          spec: H 7,19 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-en-teflon')

      - manual:
          name: CA-iOS-English-Teflon-Expressflows-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-en-exp-teflon')
      
      - cron:
          spec: H 7,19 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-en-exp-teflon')

      - manual:
          name: CA-iOS-French-Teflon-Development
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-french', MAPPING_LABELS = 'ca-fr_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-fr-teflon')

      - cron:
          spec: H 7,19 * * *
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-development-latest.zip', TEST_TAGS = 'p1-ca-fr-teflon')

  - spec: us/release-latest
    scheduling: concurrent

    triggers:
      - pr:
          scheduling: cancelRunning
      - push:
          manualOnly: true

    #   - manual:
    #       name: US-iOS-English-Teflon-Release
    #       call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-us-teflon-english', MAPPING_LABELS = 'us_en_ios_teflon', SAUCE_APP = 'storage:filename=us-release-latest.zip', TEST_TAGS = 'p1-us-teflon')

      - manual:
          name: CA-iOS-English-Teflon-Release
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-teflon')
      
      - cron:
          spec: H 10 * * 2-7
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-teflon')

      - manual:
          name: CA-iOS-English-Teflon-Expressflows-Release
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-exp-teflon')
      
      - cron:
          spec: H 10 * * 2-7
          call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-exp-teflon')

      - manual:
          name: CA-iOS-English-Teflon-Release-TestRail
          call: Run_Build_TestRail(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-teflon')
    
      - manual:
          name: CA-iOS-English-Teflon-Expressflows-Release
          call: Run_Build_TestRail(DEPENDENCY_PROFILE = 'looper-ca-teflon-english-release', MAPPING_LABELS = 'ca_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip', TEST_TAGS = 'p1-ca-en-exp-teflon')

    #   - manual:
    #       name: CA-iOS-French-Teflon-Release
    #       call: Run_Build_Teflon(DEPENDENCY_PROFILE = 'looper-ca-teflon-french', MAPPING_LABELS = 'ca-fr_ios_teflon', SAUCE_APP = 'storage:filename=ca-release-latest.zip')

envs:
  global:
    variables:
      SAUCE_USERNAME: wcp-apps-e2e
      SAUCE_ACCESS_KEY: ENC[rnmbZWq+9q4Y2NblUl3yKduKKFO9zq86fEbKAl0j4lm4uh5bgYho+//5ZRtDYEqx]
      POST_TO_SPLUNK: false
      POST_TO_XRAY: false
      ELK_HOST: ENC[1daRK3FgaXEjV7OCVK+66P0fcD+RYxs47xG01WmiaDCl0xeJURP612vwYH8/8BZ31h2tnp5FT1B18us0Ag4n6fjGS3DghPw4vafKEr04BII=]
      TEST_RESULTS_INDEX: testresults_apps_wcp
      POST_TO_ES: true
      MARKET: wcp
      APP_PLATFORM: ios
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      DEPENDENCY_FILE_NAME: wcp/test/dependencies/ios/ios-default.yaml
      GLASS_ENV: teflon

  iOS_testRail:
    variables:
      TESTRAIL_PLAN_ID: 783785

flows:

  #Get latest app version from txt
  get_app_version:
    - var(APP_VERSION):
        - shell  (name Get App Version): head us/app-versions/ios.txt


  # Get latest app version from saucelabs using api
  get_build_app_version:
    try:
      - var(VERSION_NAME = 'short_version')
      - var(STORAGE_NAME):
          - shell (name STORAGE_NAME): echo ${SAUCE_APP} | cut -f2 -d'='
      - var(BUILD_APP_VERSION):
          - shell (name BUILD_APP_VERSION): |
              curl -s -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" "https://api.us-west-1.saucelabs.com/v1/storage/files?per_page=1&name=${STORAGE_NAME}" | grep -o "\"${VERSION_NAME}\": \"[^\"]*\"" | cut -f4 -d'"' | cut -f1 -d"-"
    catch:
      - echo "Unable to get Sauce Labs build appVersion - $flowErrorMessage"

  Run_Build_Teflon:
    - call: build

  Run_Build_TestRail:
    - call: build(iOS_testRail)
