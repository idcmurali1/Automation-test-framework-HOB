functions:

  # Description: This function is used to add add address
  # Param  ${firstName}         [Mandatory]  >>  Used to enter First Name
  #        ${lastName}          [Mandatory]  >>  Used to enter Last Name
  #        ${apartmentName}     [Mandatory]  >>  Used to enter Apartment Field
  #        ${exteriorNumber}    [Mandatory]  >>  Used to enter Exterior Number
  #        ${interiorName}      [Mandatory]  >>  Used to enter Interior Number
  #        ${streetAddress}     [Mandatory]  >>  Used to enter Street Address
  #        ${municipalityName}  [Mandatory]  >>  Used to enter Municipality Name
  #        ${cityName}          [Mandatory]  >>  Used to enter City Name
  #        ${stateName}         [Mandatory]  >>  Used to enter State Name
  #        ${postalCode}        [Mandatory]  >>  Used to enter Postal Code
  #        ${phoneNumber}       [Mandatory]  >>  Used to enter Phone Number
  #        ${suggestionPopup}   [Mandatory]  >>  Used to Validate Suggestion popup for Invalid Address
  #        ${stateName}         [Mandatory]  >>  Used to enter State Name
  - name: functions.addAddressPage.addAddress
    flow:
      - executeFunction:
          name: functions.addAddressPage.isPageDisplayed
      - if:
          condition: '!${returnedIsDisplayed}'
          then: 
            - failTest:
                message: "Add Address Page not displayed after trying to continue to checkout"
      - if:
          condition: ${firstName} == null && ${lastName} == null && ${exteriorNumber} == null && ${interiorNumber} == null && ${streetAddress} == null && ${postalCode} == null && ${phoneNumber} == null ${coloniaName} == null
          then:
            - executeFunction:
                name: functions.utils.setDefaultAddressData # --> ${firstName}, ${lastName}, ${streetAddress}, ${exteriorNumber}, ${interiorNumber}, ${zipCode}, ${coloniaName}, ${phoneNumber}
      - executeFunction:
          name: functions.addAddressPage.enterFirstName # <-- ${firstName}
      - executeFunction:
          name: functions.addAddressPage.enterLastName # <-- ${lastName}
      - executeFunction:
          name: functions.addAddressPage.enterStreetAddress # <-- ${streetAddress}
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - executeFunction:
                name: functions.addAddressPage.enterExteriorNumber # <-- ${exteriorNumber}
            - executeFunction:
                name: functions.addAddressPage.enterInteriorNumber # <-- ${interiorNumber}
            - executeFunction:
                name: functions.addAddressPage.enterZipCode # <-- ${zipCode}
            - executeFunction:
                name: functions.addAddressPage.selectColonia # <-- ${coloniaName}

      # Android Workaround: Used to properly hide keyboard and be able to continue filling out the form...
      - if:
          condition: ${platform} == 'Android'
          then:
            # Need to tap previous field to break focus from Colonia field, then try to tap continue button
            # so the keyboard closes and the form is not able to continue due to missing fields. After that,
            # the process can continue filling out the rest of the fields.
            - click:
                identifier: addAddressPage.zipCodeField
            - click:
                identifier: addAddressPage.saveButton
                
      # - executeFunction:
      #     name: functions.addAddressPage.selectMunicipalityName # <-- ${municipality}
      # - executeFunction:
      #     name: functions.addAddressPage.selectCityName # <-- ${city}
      # - executeFunction:
      #     name: functions.addAddressPage.selectStateName # <-- ${state}
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - executeFunction:
                name: functions.addAddressPage.enterCrossingStreets # <-- ${crossingStreets}
            - executeFunction:
                name: functions.addAddressPage.enterReferences # <-- ${references}

      - executeFunction:
          name: functions.addAddressPage.enterPhoneNumber # <-- ${phoneNumber}
      - executeFunction:
          name: functions.addAddressPage.tapSaveButton
      - executeFunction:
          name: functions.addAddressPage.confirmExactLocationOnMap

      # Android Workaround: After confirming address on Map, Android requests to select the added address, 
      # while in iOS the process continue directly to checkout.
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: functions.addAddressBottomSheet.selectFirstAddressRadio
            - executeFunction:
                name: functions.addAddressBottomSheet.tapOnContinueButton

      - log:
          message: "End Functions: functions.addAddressPage.addAddress"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function is used to confirm and select exact address
  # No Param
  - name: functions.addAddressPage.confirmExactLocationOnMap
    flow:
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - sleep:
                duration: 10000
            - executeFunction:
                name: functions.addAddressPage.mapViewForAddressConfirmation.isPageDisplayed
            - if:
                condition: '!${returnedIsDisplayed}'
                then:
                  - failTest:
                      message: Page to choose exact location on Map and confirm Location not displayed
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: addAddressPage.geoPointView.confirmLocationDisabled
                      then:
                          - if:
                              condition: ${platform} == 'iOS'
                              then:
                                - executeFunction:
                                    name: functions.addAddressPage.mapViewForAddressConfirmation.tapReturnToFormOption
                                - executeFunction:
                                    name: functions.utils.hideKeyboard
                              else:
                                - executeFunction:
                                    name: functions.global.tapBackBtn
                          - executeFunction:
                              name: functions.addAddressPage.tapSaveButton
                          - sleep:
                              duration: 15000
                  - executeFunction:
                      name: functions.addAddressPage.mapViewForAddressConfirmation.confirmLocation
      - log:
          message: "End Functions: addAddressPage.confirmExactLocationOnMap"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function takes the user to Address list
  # No params required
  - name: functions.accountPage.navigateToAddressListPage
    flow:
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapOnAddressRow
      - log:
          message: "End Function: functions.accountPage.navigateToAddressListPage"
          color: GREEN_BOLD
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function Add and delete the address from the account page
  # No params required
  - name: functions.accountPage.addAndDeleteAddress
    flow:
      - executeFunction:
          name: functions.accountPage.tapOnAddressRow
      - executeFunction:
          name: functions.account.addAddressPage.tapAddAddressBtn   
      - executeFunction:
          name: functions.addAddressPage.addAddress
      - executeFunction:
          name: functions.addressPage.tapOnDeleteAddressBtn
          params:
            - name: addressLine
              string: ${streetAddress}
      - executeFunction:
          name: functions.addressPage.tapConfirmDeleteAddressBtn
      - sleep:
          duration: 5000
      - if:
          condition: ${market} == 'CA'
          then:
            - executeFunction:
                name: functions.global.tapBackBtn
            - scroll:
                direction: up
                scrollLimit: 1
      - log:
          message: "End Function: functions.accountPage.addAndDeleteAddress"
          color: GREEN_BOLD
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function takes the user to Address list
  # No params required
  - name: functions.accountPage.navigateToOrderHistoryPage
    flow:
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - log:
          message: "End Function: functions.accountPage.navigateToAddressListPage"
          color: GREEN_BOLD
  # ----------------------------------------------------------------------------------------------------------------
        
  # Description: This function handle select address Popup
  # Param [Madantory] colonia name
  - name: functions.addAddressBottomSheet.handleSelectAddressPopUp
    flow:
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then: 
            - sleep:
                duration: 5000
            - if:
                identifier:
                    present:
                    - identifier: reserveATime.addAddressTitle  
                then:
                   - click:
                       identifier: reserveATime.addAddressButton                
            - if:
                identifier:
                    present:
                    - identifier: selectAddressPage.title
                then:
                    - if:
                        identifier:
                            present:
                            - identifier: selectAddressPage.saveAndEditAddressAgainMessage
                        then:
                            - executeFunction:
                                name: functions.addAddressBottomSheet.tapOnEditLink
                            - executeFunction:
                                name: functions.utils.hideKeyboard
                            - executeFunction:
                                name: functions.addAddressPage.scrollDownToColonia
                            - executeFunction:
                                name: functions.invoicePage.selectColonia
                            - executeFunction:
                                name: functions.checkout.hideKeyboard
                            - executeFunction:
                                name: functions.addAddressPage.scrollDownToSaveButton
                            - executeFunction:
                                name: functions.addAddressPage.preferredAddressCheckbox
                            - executeFunction:
                                name: functions.addAddressPage.tapSaveButton
                            - executeFunction:
                                name: functions.addAddressPage.confirmExactLocationOnMap
                        else:
                            - executeFunction:
                                name: functions.addAddressBottomSheet.selectFirstAddressRadio
                    - executeFunction:
                            name: functions.addAddressBottomSheet.tapOnContinueButton
            - sleep:
                duration: 5000
      - log: 
          message: "End function: utils.handleSelectAddressPopUp"
          color: BLUE