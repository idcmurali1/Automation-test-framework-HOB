functions: 

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This flow navigates to my items page ,click on lists and validate the lists page
  # No params
  - name: functions.myItemsPage.lists.selectMyItemsAndListsValidation 
    flow:
      - executeFunction:
          name: functions.global.tapMyItemsBtn
      - executeFunction:
          name: functions.myItemsPage.tapLists
      - executeFunction:
          name: functions.myItemsPage.lists.validateLists
      - log:
          message: "End Functions: myItemsPage.lists.selectMyItemsAndListsValidation "
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------
  # Description: This flow navigates back to lists landing page and validate created list is visible on the landing page.
  # No params
  - name: functions.myItemsPage.lists.goBackListLandingAndNewListsValidation 
    flow:
      - click:
          identifier: myItemsPage.lists.backButton # iOS Mapping need to be updated
      - executeFunction:
          name: functions.myItemsPage.lists.createdListValidation 
      - log:
          message: "End Functions: myItemsPage.lists.goBackListLandingAndNewListsValidation"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function open the list of Favourites and validate that you are in
  # No params
  - name: functions.myItemsPage.lists.selectMyFavourites
    flow:
      - click:
          identifier: global.myItemsBtn # iOS Mapping need to be updated
      - click:
         identifier: myItemsPage.listsBtn
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.listsBtn
      - log:
          message: "End Functions: myItemsPage.lists.selectMyFavourites"
          color: BLUE
  # Description: This flow searches item from list page and select it and cancel the search
  # Param: ${productName}  [Mandatory]  Name of the product to be added to Lists.
  - name: functions.myItemsPage.lists.search.validateTypeAheadAndSelectAndCancel
    flow:
      - executeFunction:
          name: functions.myItemsPage.lists.search.validateTypeAheadFunctionalityAndAdd # <-- ${productName}
      - executeFunction:
          name: functions.myItemsPage.lists.cancelListSearch
      - log:
          message: "End Functions: myItemsPage.lists.search.validateTypeAheadAndSelectAndCancel"
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------
  # Description: This flow clicks on find item and add item from generic carousel
  # No params
  - name: functions.myItemsPage.lists.search.tapFindItemAndAddItem
    flow:
      - executeFunction:
          name: functions.myItemsPage.lists.tapFindItem
      - executeFunction:
          name: functions.myItemsPage.lists.addItemGenericCarousel
      - log:
          message: "End Functions: myItemsPage.lists.search.tapFindItemAndAddItem"
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------
  # Description: This flow edits the name of the existing list.
  # ${listName} [Mandatory]  List Name
  - name: functions.myItemsPage.lists.search.updateListNameAndValidate
    flow:
      - executeFunction:
          name: functions.myItemsPage.lists.tapSettingsBtn
      - executeFunction:
          name: functions.myItemsPage.lists.validateAndEditListName   # <--- ${listName}
      - log:
          message: "End Functions: myItemsPage.lists.search.tapFindItemAndAddItem"
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------
   # Description: This flow edits the name of the existing list.
  # ${listName} [Mandatory]  List Name
  - name: functions.myItemsPage.lists.search.openSpecificListAndMarkFav
    flow:
      - executeFunction:
          name: functions.myItemsPage.lists.tapListTile    # <--- ${listName}
      - executeFunction:
          name: functions.myItemsPage.lists.tapSettingsBtn
      - executeFunction:
          name: functions.myItemsPage.lists.tapFavouriteIcon   
      - log:
          message: "End Functions: myItemsPage.lists.search.tapFindItemAndAddItem"
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------

  # Description: This flow Removes all items from a list
  # No params
  - name: functions.myItemsPage.lists.removeAllItemsFromList
    doWhile: true
    flow:
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.lists.listGenericItemRemoveBtn
      - executeFunction:
          name: functions.myItemsPage.lists.removeGenericItemFromList
      - executeFunction:
          name: functions.myItemsPage.lists.tapRemoveItemConfirmationBtn
      - log:
          message: "End Functions: myItemsPage.lists.removeAllItemsFromList"
          color: BLUE
  #---------------------------------------------------------------------------------------------------------------------
