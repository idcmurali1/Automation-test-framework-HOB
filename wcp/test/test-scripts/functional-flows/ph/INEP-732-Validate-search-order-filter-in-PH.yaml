#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-732
#       Flow - MH: Validate search order filter in PH
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179446
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-732 
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-389
#
#######################################################################################################################

general:
  testCaseId: INEP-732
  tags: INEP-732, OPIF-179446, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon, INEP-389, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"


# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: "MH: Validate search order filter in PH"
    flow:
      # Create account using astro api.
      - log:
          message: PREREQUISITE — Creating user account using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload  # Return -> $userEmail , $userPassword
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 

      - log:
          message: PREREQUISITE — Creating order using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createOrder
          params:
            - name: payload
              string: data.mh.createOrderPayload1PItem.fcDelivery # Param -> ${userEmail}

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
    
      # Go to Order History Page and validate orders are created and visibles in PH
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication # Param -> $userEmail , $userPassword
      
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory

      # Assert user can search an order by order number
      - executeFunction:
          name: functions.orderHistoryPage.searchField.enterText
          params:
            - name: searchText
              string: ${returnedOrderNumber}
      # Assert number of orders displayed
      - executeFunction:
          name: functions.orderHistoryPage.assertCountOrdersDisplayed
          params:
            - name: expectedOrdersInHistory
              string: "1"
      - executeFunction:
          name: functions.orderHistoryPage.tapOnAllOrdersFilter
      - sleep:
          duration: 7000

      # Assert user can search an order by partial item name
      - executeFunction:
          name: functions.orderHistoryPage.searchField.enterText
          params:
            - name: searchText
              string: data.mh.inep-732.partialItemName
      # # SKELETON
      # # Assert results are displayed in order history
      # - executeFunction:
      #     name: functions.orderHistoryPage.assertNoOrderFoundItDisplayed
      #     params:
      #       - name: expectedNoOrderFound
      #         string: 'false'
      - executeFunction:
          name: functions.orderHistoryPage.tapOnAllOrdersFilter
      - sleep:
          duration: 7000
      
      # Assert user can search an order by partial item name
      - executeFunction:
          name: functions.orderHistoryPage.searchField.enterText
          params:
            - name: searchText
              string: data.mh.inep-732.fullItemName
      # # SKELETON
      # # Assert results are displayed in order history
      # - executeFunction:
      #     name: functions.orderHistoryPage.assertNoOrderFoundItDisplayed
      #     params:
      #       - name: expectedNoOrderFound
      #         string: 'false'
      - executeFunction:
          name: functions.orderHistoryPage.tapOnAllOrdersFilter
      - sleep:
          duration: 7000 

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"

      - log:
          message: "Main Scenario passed Successfully."
          color: GREEN_BOLD

      - log: "AFTER SCENARIO ENDED"