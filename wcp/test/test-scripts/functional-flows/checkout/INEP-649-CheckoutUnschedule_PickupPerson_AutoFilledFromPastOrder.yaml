#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-649
#       Flow - MH: Validate pickup person information persists when placing scheduled order
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179365
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-649
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-647
#
#######################################################################################################################

general:
  testCaseId: INEP-649
  tags: INEP-649, OPIF-179365, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"   
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: Validate pickup person information persists when placing scheduled order"
    flow:

      # Create account using astro api.
      - log:
          message: PREREQUISITE â€” Creating user account using Astro API...
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.groceryStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded


      # Login to the application.
      - log:
          message: "Login to the application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 


      # Navigating to shop
      - log:
          message: "Navigating to shop."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapShopBtn  


      # Search for a valid available product and A2C.
      - log:
          message: "Search for a valid available product and A2C."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray #TO-DO: Update with Grocery Items
          params:
            - name: productArray
              string: data.mh.TC01.groceryItemArray


      # Navigate to cart.
      - log:
          message: "Navigate to cart"
          color: PURPLE_BOLD_BRIGHT       
      - executeFunction:
          name: functions.global.tapCartIcon 

      - executeFunction:
         name: functions.cartPage.tapOnPickUpButton

      # Booking standared pickup slot
      - log:
          message: 'Book a standard pickup slot.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      
      - executeFunction:
          name: functions.reserveAtime.closeAddAddresspopup.Ifdisplayed

      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.cartPage.pickupFulfillmentType
            - name: slotType
              string: Standard


      # Navigate to checkout page
      - log:
          message: 'Navigate the checkout page.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn


      # Update the pickup person information. 
      - log:
          message: 'Update pickup person information in checkout.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.checkoutPage.updatePickupPersonInformation
          params:
            - name: pickupPersonName
              string: data.checkout.pickupPerson.newFirstName
            - name: pickupPersonLastName
              string: data.checkout.pickupPerson.newLastName
            - name: pickupPersonPhoneNumber
              string: data.checkout.pickupPerson.phoneNumber
      - executeFunction:
          name: functions.global.closePopUp

      - executeFunction:
         name: functions.checkoutPage.scrollDownToEditPaymentButton

      - executeFunction:
         name: functions.checkoutPage.addCVVIfCVVisDisplayed
         params:
           - name: CVV
             string: data.global.card.cvv.123         

      # Place order
      - log:
          message: 'Place order.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.checkoutPage.tapPlaceOrderButton


      # Navigating to home page.
      - log:
          message: 'Navigate to home page.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.thankYouPage.tapOnContinueShoppingButton
      - executeFunction:
          name: functions.global.tapShopBtn


      # Again adding GO items to cart
      - log:
          message: "Search for a valid available product and A2C."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray #TO-DO: Update with Grocery Items
          params:
            - name: productArray
              string: data.mh.TC01.groceryItemArray


      # Navigate to cart.
      - log:
          message: "Navigate to cart "
          color: GREEN_BOLD       
      - executeFunction:
          name: functions.global.tapCartIcon 


      #Booking standared pickup slot
      - log:
          message: 'Book a standard pickup slot.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn

      - executeFunction:
         name: functions.reserveAtime.closeAddAddresspopup.Ifdisplayed
         
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.cartPage.pickupFulfillmentType
            - name: slotType
              string: Standard


      #Navigate to checkout page
      - log:
          message: 'Navigate the checkout page.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn

      # Assert pickup person name in checkout fulfillment card.
      - log:
          message: 'Assert pickup person name in checkout fulfillment card.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.checkoutPage.assertPickupPersonInformation
          params:
            - name: FirstName
              string: data.checkout.pickupPerson.newFirstName
            - name: LastName
              string: data.checkout.pickupPerson.newLastName

      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'INEP: 649 MAIN SCENARIO END'

#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: "Main Scenario passed Successfully."
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Main Scenario failed."
      - log: "AFTER SCENARIO ENDED"             