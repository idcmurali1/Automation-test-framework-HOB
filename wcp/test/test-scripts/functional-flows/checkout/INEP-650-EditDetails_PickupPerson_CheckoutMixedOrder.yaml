#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-650
#       Flow - MH:  Validate user can edit pickup person to place mixed order.
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179365
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-650
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-647
#
#######################################################################################################################

general:
  testCaseId: INEP-650
  tags: INEP-650, OPIF-179365, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"   
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: EditDetails_PickupPerson_CheckoutMixedOrder"
    flow:
      # Create account using astro api.
      - log:
          message: PREREQUISITE â€” Creating user account using Astro API...
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 

      # Add GM products to add and validate product added sucessfully 
      - executeFunction:
          name: functions.global.tapShopBtn  

      - executeFunction:
         name: functions.homePage.selectAddress
         params:
           - name: streetAddress
             string: ${addressFirstLine}            

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.mh.TC01.groceryItemArray               

      # Adding unscheduled item to cart.
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.global.itemsArray.unscheduled
    
      # Navigate to cart.
      - log:
          message: "Navigate to cart "
          color: PURPLE_BOLD_BRIGHT       
      - executeFunction:
          name: functions.global.tapCartIcon 

      - executeFunction:
         name: functions.cartPage.tapOnPickUpButton

      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn

      #Booking standared unscheduled pickup slot
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.cartPage.unscheduledPickupFulfillmentType
            - name: slotType
              string: Standard

      #Navigate to checkout page
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn

      - executeFunction:
         name: functions.checkoutPage.scrollDownToEditPaymentButton

      - executeFunction:
         name: functions.checkoutPage.addCVVIfCVVisDisplayed
         params:
           - name: CVV
             string: data.global.card.cvv.123

      - executeFunction:
          name: functions.checkoutPage.tapPlaceOrderButton

      - executeFunction:
          name: functions.thankYouPage.tapOnContinueShoppingButton

      - executeFunction:
          name: functions.global.tapShopBtn


      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.mh.TC01.groceryItemArray          

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray 
          params:
            - name: productArray
              string: data.global.itemsArray.unscheduled


      # Navigate to cart.
      - log:
          message: "Navigate to cart "
          color: PURPLE_BOLD_BRIGHT       
      - executeFunction:
          name: functions.global.tapCartIcon 


      #Booking standared unscheduled pickup slot
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.cartPage.unscheduledPickupFulfillmentType
            - name: slotType
              string: Standard


      #Navigate to checkout page
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn


      # Update the pickup person information. 
      - log:
          message: 'Update pickup person information in checkout.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.checkoutPage.updatePickupPersonInformation
          params:
            - name: pickupPersonName
              string: data.checkout.pickupPerson.newFirstName
            - name: pickupPersonLastName
              string: data.checkout.pickupPerson.newLastName
            - name: pickupPersonPhoneNumber
              string: data.checkout.pickupPerson.phoneNumber
      - executeFunction:
          name: functions.global.closePopUp


      # Assert pickup person name in checkout fulfillment card.
      - log:
          message: 'Assert pickup person name in checkout fulfillment card.'
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.checkoutPage.assertPickupPersonInformation
          params:
            - name: FirstName
              string: data.checkout.pickupPerson.newFirstName
            - name: LastName
              string: data.checkout.pickupPerson.newLastName


      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'INEP: 650 MAIN SCENARIO END'

#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: "Main Scenario passed Successfully."
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Main Scenario failed."
      - log: "AFTER SCENARIO ENDED"                                              