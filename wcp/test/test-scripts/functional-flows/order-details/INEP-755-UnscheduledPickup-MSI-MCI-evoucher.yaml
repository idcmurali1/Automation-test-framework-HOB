#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-755
#       Flow - MH: Order Details Page for OD, EA and Mixed Orders : Unscheduled pickup order with MSI/MCI and evoucher displays correctly.
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179447
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-755
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-746
#
#
#######################################################################################################################

general:
  testCaseId: INEP-755
  tags: INEP-755, OPIF-179447, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon, INEP-746, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"
      - executeFunction:
          name: functions.utils.setMarketInfo
      - storeIn:
          key: tcVars_successfulExecution
          value: false
      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: Order Details Page for OD, EA and Mixed Orders : Unscheduled pickup order with MSI/MCI and evoucher displays correctly."
    flow:
    
      # Create user and order with pay at store
      - log:
          message: "Create user and order with pay at store."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload  # Return -> $userEmail , $userPassword
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
    
      # Log in
      - log:
          message: "Log In."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${userPassword}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 


      - executeFunction:
          name: functions.global.tapShopBtn
      - executeFunction:
          name: functions.utils.getTheFirstAvailableItemAndNavigateToPDPWithDeepLink
          params:
            - name: productArray
              string: data.searchPage.tc11.mciItem
      - executeFunction:
          name: functions.global.tapBackBtn
      - executeFunction:
          name: functions.global.tapCartIcon
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      - executeFunction:
          name: functions.checkoutPage.selectInvoice
      - executeFunction:
          name: functions.invoicePage.addNewInvoice
          params:
            - name: invoiceFirstName
              string: data.global.name.ACCEPT
            - name: invoiceLastName
              string: data.global.name.ACCEPT
            - name: invoiceMiddleName
              string: data.global.name.ACCEPT
            - name: invoiceRfc
              string: data.invoice.RFC
            - name: invoiceTaxRegime
              string: data.invoice.TaxRegime
            - name: invoiceCFDI
              string: data.invoice.CFDI
            - name: invoiceEmail
              string: testInvoice@test.com
            - name: invoicePostalCode 
              string: data.defaultAddress.zipCode
            - name: invoiceSteetAddress
              string: data.defaultAddress.streetAddress
            - name: invoiceAppartment
              string: data.defaultAddress.exteriorNumber
            - name: invoiceColoniaName
              string: data.defaultAddress.coloniaName
            - name: invoicePhoneCountryCode
              string: data.global.phoneCountryCode1
            - name: invoicePhoneNumber
              string: data.defaultAddress.phoneNumber
      - executeFunction:
          name: functions.checkoutPage.selectExistingInvoiceFromSheet
      - executeFunction:
          name: functions.checkoutPage.validateMciOptionsDisplayed
      - executeFunction:
          name: functions.checkoutPage.selectMCIoption
      - executeFunction:
          name: functions.checkoutPage.addCVV
          params:
            - name: CVV
              string: data.global.card.cvv.1234
      - executeFunction:
          name: functions.checkoutPage.tapPlaceOrderButton
        
      #TODO: get order number and save into ${orderId}
      # Move order using astro api.
      - log:
          message: Move order using Astro API -> "Ready for Pickup"
          color: BLUE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${orderId}
            - name: payload
              string: data.moveOrder.scheduledPickup.lineId.customerPicked
      # Go to Order History Page and validate order is created and opened
      - log:
          message: "Go to Order History Page and validate order is created and opened."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
          name: functions.orderHistoryPage.navigateToLatestOrder
    
   #TODO:
   # Validate MSI/MCI legend displayed.
      - log:
          message: "Validate MSI/MCI legend displayed."
          color: PURPLE_BOLD_BRIGHT
   # Validate invoice details
      - log:
          message: "Validate invoice details."
          color: PURPLE_BOLD_BRIGHT
   # Validate addToCart Button.
      - log:
          message: "Validate addToCart Button."
          color: PURPLE_BOLD_BRIGHT

      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'INEP-755: MAIN SCENARIO END'

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   A F T E R   S C E N A R I O                                                                                       #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              
      
  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: 'AFTER SCENARIO START'
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: TC PASSED
                color: GREEN_BOLD
          else:
            - failTest:
                message: TC FAILED
      - log: 'AFTER SCENARIO END'