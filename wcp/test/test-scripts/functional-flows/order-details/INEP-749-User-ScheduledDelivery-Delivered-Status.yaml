#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-749
#       Flow - MH: Order Details Page for OD, EA and Mixed Orders : User with scheduled order in "Delivered" status
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179447
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-749
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-746
#
#
#######################################################################################################################

general:
  testCaseId: INEP-749
  tags: INEP-749, OPIF-179447, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon, INEP-746, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: User with scheduled order in 'Delivered' status"
    flow:
    
      # Create account using astro api.
      - log:
          message: PREREQUISITE — Creating user account using Astro API...
          color: BLUE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 
    
      # Create order using astro api.
      - log:
          message: PREREQUISITE — Creating order using Astro API...
          color: BLUE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createOrder # -> Returns {returnedOrderNumber}
          params:
            - name: payload
              string: data.mh.createOrderPayload.scheduledDelivery # Param -> $userEmail

      - storeIn:
          key: lineId
          value: '1'

     # Move order using astro api.
      - log:
          message: PREREQUISITE —  Move order ${returnedOrderNumber} using Astro API -> "Out for Delivery"
          color: BLUE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.scheduledDelivery.lineId.outForDelivery

     # Move order using astro api.
      - log:
          message: PREREQUISITE —  Move order ${returnedOrderNumber} using Astro API -> "Delivered"
          color: BLUE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.scheduledDelivery.lineId.delivered

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
    
      # Log in
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${userPassword}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 
    
      # Go to Order History Page and validate order is created and opened
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
          name: functions.orderHistoryPage.navigateToLatestOrder
      
    # Validate delivery Pass Discount, reorder all Button and add to cart button
      - log:
          message: "Validate delivery pass discount, reorder all button and ATC button."
          color: PURPLE_BOLD_BRIGHT

      - executeFunction:
          name: functions.orderDetailPage.verifyDeliveryPassDiscount

      - executeFunction:
          name: mx.functions.order-details.assertReorderButtonDisplayed

      - executeFunction:
          name: functions.orderDetailPage.validateATCButtonDisplayed

      - log:
          message: "Validate return and track CTAs are not displayed."
          color: PURPLE_BOLD_BRIGHT
 
   # Validate the return CTA is not displayed.
   # TO-DO: No existing RETURN CTA button in Android ATM. Issue has been reported. Need to update once fix gets merged
 
      - if: 
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: functions.orderDetailPage.validateReturnCTANotDisplayed

    # Validate the return Grocery CTA text is not displayed.
      - executeFunction:
          name: functions.orderDetailPage.Grocery.validateReturnToStoreTextnotDisplayed

      # Validate the track CTA is not displayed.
      - executeFunction:
          name: functions.orderDetailPage.validateCTANotDisplayed
          params:
            - name: ctaTextButton
              string: data.orderTracker.primaryMainButton.trackShipment

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   A F T E R   S C E N A R I O                                                                                       #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              
      
  - name: After
    after: true
    executeOnFailure: false
    flow:
      - executeFunction:
          name: functions.utils.after