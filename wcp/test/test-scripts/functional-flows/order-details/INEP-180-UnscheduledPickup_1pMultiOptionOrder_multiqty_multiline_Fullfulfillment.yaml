
#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - OPIF-179472
#       Place an order with 1p items multiple options, multiline and multi qty, 
#         unscheduled delivery order, complete the fulfillment of all items
#    
#   CONFLUENCE OPIF TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179472   
#     
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-180
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-108
#######################################################################################################################

general:
  testCaseId: INEP-180
  tags: INEP-180, OPIF-179472, p1-mh-opif-teflon-d-feb, INEP-108, p1-mh-opif-teflon, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: "BEFORE SCENARIO"
      - executeFunction:
          name: functions.utils.setMarketInfo
      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: "MH: Unscheduled Pickup 1p Multi Option Order"
    flow:
      # Create account using astro api.
      - log:
          message: PREREQUISITE â€” Creating user account using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload # Return -> ${userEmail} and ${userPassword}
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa 

      # Create FC_DELIVERY order using astro api.
      - log:
          message: CREATE ORDER FOR FC_DELIVERY
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createOrder
          params:
            - name: payload
              string: data.mh.inep180.createOrderPayload.unscheduledPickupMultiOptionItems # Param -> ${userEmail} # NOTE: There a few items with these features, payload may change in future.
      
      - storeIn:
          key: orderId
          value: ${returnedOrderNumber}

      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded

      # Login
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication # Params -> ${userEmail} and ${userPassword}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 

      # Go to Order History Page and validate order is created and opened
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
          name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn # Param -> ${orderId}
      
      # Validate LOT with "Preparando" status in Order Details page
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.preparing

      # Validate Total items in order and quantity items for first product (line item 1)
      - executeFunction:
          name: functions.orderDetailPage.verifyTotalItemsInOrder
          params:
            - name: totalItemCount
              string: data.mh.inep57.totalCountItemsInOrder
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep57.lineItem1.quantity
      
      ##########################################################
      # Move FC order using astro API                          #
      ##########################################################
      - log:
          message: CHANGE ORDER STATUS -> READY FOR PICKUP
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${orderId}
            - name: payload
              string: data.moveOrder.unscheduledPickup.readyForPickup 
      - sleep:
          duration: 20000
      # Reload Order Details Page displayed.
      - executeFunction:
          name: functions.orderDetailPage.reloadOrderDetailPage
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber 
      # Validate LOT with "En Camino" status in Order Details page
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.readyForPickup
      # Validate Cancel items button is still displayed after order status updated
      - executeFunction:
          name: functions.orderDetailPage.assertCancelItemsButton
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber
      
      ###################################################################################
      # Change order status from Shipped -> Customer Picked                             #
      # Move 1p items using astro api                                                   #
      ###################################################################################
      # Move order to final status
      - log:
          message: Move order using Astro API -> Customer Picked
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${orderId}
            - name: payload
              string: data.moveOrder.unscheduledPickup.customerPicked
      - sleep:
          duration: 20000
      # Validate Estimated Delivery Date updated after order picked 
      - executeFunction:
          name: functions.orderDetailPage.reloadOrderDetailPage
      - executeFunction:
          name: functions.orderDetailPage.verifyEstimatedDeliveryDateText
          params:
            - name: expectedEDDText
              string: data.orderTracker.EDD.deliveredToday
      
      # Validate Write an Opinion button is displayed per some line item in order
      - executeFunction:
          name: functions.orderDetailPage.verifyWriteOpinionButtonPerLine
          params:
            - name: lineItem
              string: '2'
      
      # Validate Quantity is consistence per some line item in order
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep57.lineItem1.quantity
      
      # Validate Cancel Order button is NOT displayed
      - executeFunction:
          name: functions.orderDetailPage.assertCancelButton
          params:
            - name: isCancelButtonDisplayed
              string: 'false'
             
#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    #executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"
      - log:
          message: "Main Scenario passed Successfully."
          color: GREEN_BOLD
      - log: "AFTER SCENARIO ENDED"