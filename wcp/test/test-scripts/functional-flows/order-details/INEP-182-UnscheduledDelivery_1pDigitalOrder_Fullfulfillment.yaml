#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-182
#       Flow : Place a delivery order with 1p normal and 1 digital..
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   JIRA OPIF:
#     https://jira.walmart.com/browse/OPIF-179472   
#     
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-182
#
#######################################################################################################################

general:
  testCaseId: INEP-182
  tags: INEP-182, OPIF-179472, p1-mh-opif-teflon-d-feb, INEP-108, p1-mh-opif-teflon, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"
      - executeFunction:
          name: functions.utils.setMarketInfo
      - storeIn:
          key: tcVars_successfulExecution
          value: false
      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "Place a delivery order with 1p normal and 1 digital.."
    flow:

      # Create Account with Payload
      - log:
          message: "Create Account with Payload."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload # Return: -> ${userEmail} and ${userPassword}
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa
      
      # Place order via AstroAPI and save orderId for further use.
      - log:
          message: "Create order through Astro API"
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createOrder
          params:
            - name: payload
              string: data.inep-182.createOrderPayload # Param -> ${userEmail}

      # Onboard to application..
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
      
      # Sign in ..
      - log:
          message: "Sign in."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction: 
          name: functions.loginPage.userAuthentication # Params: -> ${userEmail} and ${userPassword}

      # Order is present in PH ..
      - log:
          message: "Order is present in PH."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
         name: functions.orderHistoryPage.isPageDisplayed
      - sleep:
          duration: 4000
      - executeFunction:
          name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn
          params:
            - name: orderId
              string: ${returnedOrderNumber}

      # Validate Order status is preparing.
      - log:
          message: "Validate Order status is preparing."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.preparing

      # Validate quantity items for products
      - log:
          message: "Validate quantity items for products."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep-182.lineItem.quantity
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "2"
            - name: quantity
              string: data.mh.inep-182.lineItem.quantity

     # Move order status from Preparing -> On the way.  
      - log:
          message: "Change order status to On the way."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fcDelivery.shippedStatus  

     # Move order status from Preparing -> Delivered. 
      - log:
          message: "Change order status to delivered."
          color: PURPLE_BOLD_BRIGHT   
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fcDelivery

      # Order is present in PH after fulfillment..
      - log:
          message: "Order is present in PH after fulfillment."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.orderDetailPage.tapbackButton
      - executeFunction:
          name: functions.purchaseHistoryPage.tapbackButton 
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
         name: functions.orderHistoryPage.isPageDisplayed
      - executeFunction:
          name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn
          params:
            - name: orderId
              string: ${returnedOrderNumber}
      - executeFunction:
          name: functions.orderDetailPage.reloadOrderDetailPage 

      # Validate Order status is delivered
      - log:
          message: "Validate Order status is delivered."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.delivered

      # Validate quantity items for products
      - log:
          message: "Validate quantity items for products."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep-182.lineItem.quantity
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "2"
            - name: quantity
              string: data.mh.inep-182.lineItem.quantity

      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'INEP-182: MAIN SCENARIO END'

#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: "Main Scenario passed Successfully."
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Main Scenario failed."
      - log: "AFTER SCENARIO ENDED"