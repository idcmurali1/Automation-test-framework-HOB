
#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - OPIF-179472
#       Flow - MH: Fulfillment: Fulfill 1P items/orders from FCs
#
#    
#   CONFLUENCE OPIF TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179472   
#     
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-142
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-108
#######################################################################################################################


general:
  testCaseId: INEP-142
  tags: INEP-142, OPIF-179472, p1-mh-opif-teflon-d-feb, INEP-108, p1-mh-opif-teflon, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"


# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: Unscheduled Pickup Fulfill With WFS item + WFS Big Item + WFSDigital"
    flow:
      # Create Account with Payload
      - log:
          message: "Create Account with Payload."
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload # <- RETURNS ${userEmail}, CREATES ${tenant-id}
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa

      # Create FC_DELIVERY order using astro api.
      - log:
          message: CREATE ORDER FOR FC_DELIVERY
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createOrder
          params:
            - name: payload
              string: data.mh.inep142.createOrderPayload.diffCarriers # Param -> ${userEmail} # TODO: Change this payload to fulfillment by different carriers. 
        
      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded

      # Login
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 

      
      # Go to Order History Page and validate order is created and opened
      - executeFunction:
          name: functions.accountPage.tapOnOrderHistory
      - executeFunction:
          name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn
          params:
            - name: orderId
              string: ${returnedOrderNumber}
      
      # Validate LOT with "Preparando" status in Order Details page -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.preparing

     # Validate partial items in order -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyTotalItemsInOrder
          params:
            - name: totalItemCount
              string: data.mh.inep142.partialCountInOrderbyCarrier
     # Validate quantity of the items (line item 1) -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep142.lineItem1.quantity
    
      # Scroll down to validate the next carrier 
      - executeFunction:
          name: functions.orderDetailPage.scrollToCarrierByName
          params:
            - name: carrierName
              string: data.mh.inep142.carrierName 

      # Validate LOT with "Preparando" status in Order Details page -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.preparing
    
      # Validate partial items in order -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyTotalItemsInOrder
          params:
             - name: totalItemCount
               string: data.mh.inep142.partialCountInOrderbyCarrier

      # Validate quantity of the items (line item 1) -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep142.lineItem1.quantity
      
      ##########################################################
      # Move FC order using astro api until - move all items   #
      ##########################################################
      - log:
          message: MOVE ORDER TO SHIPPED
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fcDelivery.shippedStatus
      - sleep:
          duration: 20000

      # Reload Order Details Page displayed.
      - executeFunction:
          name: functions.orderDetailPage.reloadOrderDetailPage
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber 

      # Validate LOT with "En Camino" status in Order Details page -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.onTheWay
      
       # Scroll down to validate the next carrier 
      - executeFunction:
          name: functions.orderDetailPage.scrollToCarrierByName
          params:
            - name: carrierName
              string: data.mh.inep142.carrierName 
      
       # Validate LOT with "En Camino" status in Order Details page -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.onTheWay
        
      #############################################################################
      # Change partial order status from Shipped ->  Out for Delivery             #
      #############################################################################
      
      - log:
          message: MOVE ORDER TO OUT FOR DELIVERY
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fcDelivery.outForDelivery   
      
      ###################################################################################
      # Change order status from Shipped -> Delivered.                                  #
      # Move 1p item using astro api                                                    #
      ###################################################################################
      - log:
          message: MOVE ORDER TO DELIVERED...
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fcDelivery
      - sleep:
          duration: 20000

      # Reload Order Details Page
      - executeFunction:
          name: functions.orderDetailPage.reloadOrderDetailPage

      # Validate LOT with "Delivered" status in Order Details page -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.delivered

     # Validate partial items in order -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyTotalItemsInOrder
          params:
            - name: totalItemCount
              string: data.mh.inep142.partialCountInOrderbyCarrier
     # Validate quantity of the items (line item 1) -> FIRST CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep142.lineItem1.quantity
    
      # Scroll down to validate the next carrier 
      - executeFunction:
          name: functions.orderDetailPage.scrollToCarrierByName
          params:
            - name: carrierName
              string: data.mh.inep142.carrierName 

      # Validate LOT with "Delivered" status in Order Details page -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
          params:
            - name: orderStatus
              string: data.orderTracker.status.delivered
   
     # Validate partial items in order -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyTotalItemsInOrder
          params:
            - name: totalItemCount
              string: data.mh.inep142.partialCountInOrderbyCarrier

     # Validate quantity of the items (line item 1) -> SECOND CARRIER
      - executeFunction:
          name: functions.orderDetailPage.verifyQuantityPerLine 
          params:
            - name: lineItem
              string: "1"
            - name: quantity
              string: data.mh.inep142.lineItem1.quantity

#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   A F T E R   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    #executeOnFailure: false
    flow:
      - log: "AFTER SCENARIO"
      - log:
          message: "Main Scenario passed Successfully."
          color: GREEN_BOLD
      - log: "AFTER SCENARIO ENDED"