######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-765
#       Flow : Create scheduled pickup order with pay on pickup with associate discount.
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179465
#
#   INEP TEST ID:
#     https://jira.walmart.com/browse/INEP-765
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-613
#######################################################################################################################

general:
  testCaseId: INEP-765
  tags: INEP-765, OPIF-179465, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon, native-apps-opif-test-case
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"

      - executeFunction:
          name: functions.utils.setMarketInfo

      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "Create scheduled pickup order with pay on pickup with associate discount"
    flow:

      # Create account using astro api..
      - log:
          message: PREREQUISITE â€” Creating user account using Astro API..
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.generateTimeStampEmail
      - executeFunction:
          name: functions.astroApi.createAccount
          params:
            - name: payload
              string: data.global.payload.associateAccount

      # Onboard to application..
      - log:
          message: "Onboard to the application.."
          color: PURPLE_BOLD_BRIGHT      
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore          
      - executeFunction:
         name: functions.homePage.assertPageLoaded

      # Add Products to Cart via Astro API 
      - log:
          message: "ASTRO API - ADD ITEM TO CART"
          color: PURPLE_BRIGHT
      # Add to cart MSI Item (Scheduled Cart)
      - executeFunction:
          name: functions.astroApi.addToCart  
          params:
            - name: userEmail
              string: ${userEmail}
            - name: password
              string: data.global.password.Password1
            - name: storeId
              string: data.inep-764.storeId # Need to update
            - name: s1
              string: data.inep-763.item1  # Need to update
            - name: q1
              string: "1"
            - name: orderType
              string: data.orderType.storeScheduledPickup        

      # Click on login and select sign in..
      - log:
          message: "Click on Login and Select Sign in.."
          color: PURPLE_BOLD_BRIGHT  
      - executeFunction:
          name: functions.global.tapAccountBtn          
      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      # Login with existing user user..
      - log:
          message: "Login with existing user account.."
          color: PURPLE_BOLD_BRIGHT       
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: data.global.password.Password1

      - executeFunction:
          name: functions.global.tapShopBtn 
              
# # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #       - log: 'R2_SUBFLOW_TRANSACTION'
# # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *              

      # Navigate to cart.
      - log:
          message: "Navigate to cart.. "
          color: PURPLE_BOLD_BRIGHT      
      - executeFunction:
          name: functions.global.tapCartIcon    

      # Validate item and quantity available in cart..
      - log:
          message: "Validate item and quantity available in cart.. "
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: function.cartPage.tapSeeDetails
      - executeFunction:
          name: functions.cartPage.validateItemDetails 

      # Select Pickup slot from cart..
      - log:
          message: "Select Pickup slot from cart.."
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      - executeFunction:
           name: functions.reserveATime.bookSlot
           params:
             - name: fufillment
               string: data.global.deliveryText.pickup
             - name: slotType
               string: Standard 
               
      - executeFunction:
          name: function.cartPage.validateFufillmentType
          params:
            - name: expectedFulfillmentType
              string: data.cartPage.freePickupFulfillmentType  

      # Validate MSI Interest Bottom Sheet on cart page
      - executeFunction:
          name: functions.cartPage.validateBankPromotionBottomSheet              

      # Click checkout button and navigate to ROP..
      - log:
          message: "Click checkout button and navigate to ROP.. "
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      - executeFunction:
          name: functions.addAddressBottomSheet.handleSelectAddressPopUp
          params:
            - name: invoiceColoniaName
              string: data.defaultAddress.coloniaName  

      # Select pay at store as payment method
      - log:
          message: "Validating User is able to select Pay At Store"
          color: GREEN_BOLD         
      - executeFunction:
          name: functions.checkoutPage.selectPaymentMethod
          params:
            - name: payment
              string: data.paymentMethod.payAtStore

      # Validate Pay At Store in ROP
      - log:
          message: "Validating Pay At Store Instruction Displayed"
          color: GREEN_BOLD         
      - executeFunction:
          name: functions.checkoutPage.validatePayAtStore

      #Place Order        
      - executeFunction:
          name: functions.checkoutPage.tapPlaceOrderButton

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Verify the Thank you page..
      - log:
          message: "Verify the Thank you page.."
          color: PURPLE_BOLD_BRIGHT      
      - executeFunction:
          name: functions.thankYouPage.verifyThankYouPageDisplayed

      # Navigate to ODP using deeplink..
      - log:
          message: "Navigate to ODP using deeplink.."
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.global.navigateToODPUseDeeplink

      # Verify the fulfillment and payment method displayed..
      - log:
          message: "Verify the fulfillment and payment method displayed.."
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.orderDetailPage.verifySectionDisplayed

      - executeFunction:
          name: functions.orderDetailPage.verifyItemDetails
      - log:
          message: "Validate Payment Details Displayed in ODP"   
          color: GREEN_BOLD
      - executeFunction:
          name: functions.orderDetailPage.verifyPaymentMethodSection
      - executeFunction:
          name: functions.orderDetailPage.verifyPaymentMethod
          params:
            - name: paymentType
              string: data.global.payAtStoreText    
      - executeFunction:
          name: functions.orderDetailPage.verifyDeliveryType
          params:
            - name: expectedDeliveryType
              string: data.cartPage.freePickupFulfillmentType 

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   A F T E R   S C E N A R I O                                                                                       #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              
      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - executeFunction:
          name: functions.utils.after    