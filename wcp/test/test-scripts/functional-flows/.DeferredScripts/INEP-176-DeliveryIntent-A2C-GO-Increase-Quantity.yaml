# #######################################################################################################################
# #
# # TEST CASE DETAILS: 
# #
# #   TC - INEP-176
# #       Flow : Add 1P GO Item and increase quantity with Delivery intent from PDP
# #    
# #   CONFLUENCE TRACKING DASHBOARD:
# #     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
# #
# #   JIRA OPIF TC:
# #     https://jira.walmart.com/browse/OPIF-196600?src=confmacro
# #
# #   INEP Ticket
# #     https://jira.walmart.com/browse/INEP-176
# #
# #######################################################################################################################

# general:
#   testCaseId: INEP-176
#   tags: #INEP-176, OPIF-179332, p1-mh-opif-teflon -- This has been deferred on the basis of review comment from the product owner
#   combineScenarios: true

# scenarios:

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   B E F O R E   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   - name: Before
#     before: true
#     endTestOnFailure: true
#     flow:

#       - log: "BEFORE SCENARIO"

#       - executeFunction:
#           name: functions.utils.setMarketInfo

#       - log: "BEFORE SCENARIO END"
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   M A I N   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

#   - name: "Add 1P GO Item and increase quantity with Delivery intent from PDP"
#     flow:

#       # Create account using astro api.
#       - log:
#           message: PREREQUISITE â€” Creating user account using Astro API..
#           color: PURPLE_BOLD_BRIGHT
#       - executeFunction:
#           name: functions.astroApi.createNewAccountWithCreatePayload

#       # Onboard to application..
#       - log:
#           message: "Onboard to the application.."
#           color: PURPLE_BOLD_BRIGHT      
#       - executeFunction:
#           name: functions.onboardingToHomePage.usingPostalCode
#           params:
#             - name: PostalCode
#               string: data.onboarding.userPostalCode
#             - name: ShoppingExperience
#               string: data.onboarding.onlineExclusiveStore          
#       - executeFunction:
#          name: functions.homePage.assertPageLoaded

#       # Click on login and select sign in.
#       - log:
#           message: "Click on Login and Select Sign in.."
#           color: PURPLE_BOLD_BRIGHT  
#       - executeFunction:
#           name: functions.global.tapAccountBtn          
#       - executeFunction:
#           name: functions.accountPage.tapSignInBtn

#       # Login with existing user user.
#       - log:
#           message: "Login with existing user using password as authentication method and ensure user is logged in.."
#           color: PURPLE_BOLD_BRIGHT       
#       - executeFunction:
#           name: functions.loginPage.userAuthentication
#           params:
#             - name: userEmail
#               string: ${userEmail}
#             - name: userPassword
#               string: data.global.password.Password2

#       - executeFunction:
#           name: functions.global.tapShopBtn  

#       # Select delivery intent from gic..
#       - log:
#           message: "Select delivery intent from gic"
#           color: PURPLE_BOLD_BRIGHT
#       - executeFunction:
#           name: functions.global.gic.selectDeliveryIntent
#           params:
#             - name: page
#               string: home

#       # Navigate to PDP for GO item..
#       - log:
#           message: "Navigate to PDP for GO item"
#           color: PURPLE_BOLD_BRIGHT
#       - executeFunction:
#           name: functions.searchPage.getTheFirstAvailableItemAndNavigateToPDP
#           params:
#             - name: productArray
#               string: data.global.GRItems  

#       # Validate PDP Details and add item to cart
#       - log:
#           message: "Validate PDP Details and add item to cart.."
#           color: PURPLE_BOLD_BRIGHT     
#       - executeFunction:
#           name: functions.productDetailsPage.validateItemDetails

#       - executeFunction:
#           name: functions.productDetailsPage.tapAddToCart
#           params:
#             - name: quantity
#               string: data.itemCount.qty2

#       - executeFunction:
#            name: functions.productDetailsPage.tapClose   

#       # Validate purchase limit in cart..
#       - log:
#           message: "Validate purchase limit in cart.."
#           color: PURPLE_BOLD_BRIGHT
#       - executeFunction:
#           name: functions.global.validateCartQuantity
#           params:
#             - name: cartQuantity
#               string: data.itemCount.qty2
#       - executeFunction:
#           name: functions.global.validateCartSubTotal
#           params:
#             - name: totalPrice
#               string: ${totalPrice}
# # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #       - log: 'R2_SUBFLOW_TRANSACTION'
# # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *              
    
#       # Navigate to cart.
#       - log:
#           message: "Navigate to cart.. "
#           color: PURPLE_BOLD_BRIGHT      
#       - executeFunction:
#           name: functions.global.tapCartIcon    

#       # Validate item and quantity available in cart..
#       - log:
#           message: "Validate item and quantity available in cart.. "
#           color: PURPLE_BOLD_BRIGHT    
#       - executeFunction:
#           name: function.cartPage.tapSeeDetails
#       - executeFunction:
#           name: functions.cartPage.validateItemDetails

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
# #   A F T E R   S C E N A R I O                                                                                       #
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              
#       - storeIn:
#           key: testStatus
#           value: passed

#   - name: After
#     after: true
#     flow:
#       - executeFunction:
#           name: functions.utils.after