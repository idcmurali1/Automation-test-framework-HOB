# #######################################################################################################################
# #
# # TEST CASE DETAILS: 
# #
# #   TC - INEP-55
# #       Flow : Validating request invoice after placing order and resend invoice button in order history
# #    
# #   CONFLUENCE TRACKING DASHBOARD:
# #     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
# #
# #   JIRA OPIF TC:
# #     https://jira.walmart.com/browse/OPIF-179405?src=confmacro
# #
# #   INEP Ticket
# #     https://jira.walmart.com/browse/INEP-55
# #
# #######################################################################################################################

# general:
#   testCaseId: INEP-55
#   tags: INEP-55, OPID-179332, p1-mh-opif-teflon
#   combineScenarios: true

# scenarios:

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   B E F O R E   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   - name: Before
#     before: true
#     endTestOnFailure: true
#     flow:

#       - log: "BEFORE SCENARIO"

#       - executeFunction:
#           name: functions.utils.setMarketInfo

#       - log: "BEFORE SCENARIO END"
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# #   M A I N   S C E N A R I O
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

#   - name: "Validating request invoice after placing order and resend invoice button in order history"
#     flow:

#       # Create account using astro api.
#       - log:
#           message: PREREQUISITE — Creating user account using Astro API...
#           color: GREEN_BOLD
#       - executeFunction:
#           name: functions.astroApi.createNewAccountWithCreatePayload

#       # Create order using astro api.
#       - log:
#           message: PREREQUISITE — Creating  Scheduled delivery order using Astro API...
#           color: GREEN_BOLD
#       - executeFunction:
#           name: functions.astroApi.createOrder
#           params:
#             - name: payload
#               string: data.tc055.createOrderPayload

#       - executeFunction:
#           name: functions.onboardingToHomePage.usingPostalCode
#           params:
#             - name: PostalCode
#               string: data.onboarding.userPostalCode
#             - name: ShoppingExperience
#               string: data.onboarding.onlineExclusiveStore

#       # Click on login and select sign in.
#       - log:
#           message: "Click on Login and Select Sign in"
#           color: GREEN_BOLD
#       - executeFunction:
#           name: functions.global.tapAccountBtn
#       - executeFunction:
#           name: functions.accountPage.tapSignInBtn

#       # Login with existing user user.
#       - log:
#           message: "Login with existing user using password as authentication method and ensure user is logged in"
#           color: GREEN_BOLD       
#       - executeFunction:
#           name: functions.loginPage.userAuthentication
#           params:
#             - name: userEmail
#               string: ${userEmail}
#             - name: userPassword
#               string: data.global.password.Password2
#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#       - log: 'R2_SUBFLOW_POST_TRANSACTION'
#  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

#      # Navigate to ODP and verify page displayed
#       - executeFunction:
#           name: functions.global.navigateToODPUseDeeplink    
#           params:
#             - name: returnedOrderNumber
#               string: ${returnedOrderNumber}                
#       - executeFunction:
#           name: functions.orderDetailPage.verifySectionDisplayed

#       # Add invoice details from ODP         
#       - executeFunction:
#           name: functions.orderDetailPage.addInvoice 
#           params:
#             - name: addNewInvoice
#               string: true
#             - name: invoiceFirstName
#               string: data.global.name.ACCEPT
#             - name: invoiceLastName
#               string: data.global.name.ACCEPT
#             - name: invoiceMiddleName
#               string: data.global.name.ACCEPT
#             - name: invoiceRfc
#               string: data.invoice.RFC
#             - name: invoiceTaxRegime
#               string: data.invoice.TaxRegime
#             - name: invoiceCFDI
#               string: data.invoice.CFDI
#             - name: invoiceEmail
#               string: testInvoice@test.com
#             - name: invoicePostalCode 
#               string: data.defaultAddress.zipCode
#             - name: invoiceSteetAddress
#               string: data.defaultAddress.streetAddress
#             - name: invoiceAppartment
#               string: data.defaultAddress.exteriorNumber
#             - name: invoiceColoniaName
#               string: data.defaultAddress.coloniaName
#             - name: invoicePhoneCountryCode
#               string: data.global.phoneCountryCode1
#             - name: invoicePhoneNumber
#               string: data.defaultAddress.phoneNumber

#       # Move FC_Delivery item using astro api
#       - log:
#           message: Move FC Delivery item using Astro API...
#           color: GREEN_BOLD
#       - executeFunction:
#           name: functions.astroApi.moveOrder
#           params:
#             - name: orderId
#               string: ${returnedOrderNumber}
#             - name: payload
#               string: data.moveOrder.fcDelivery.shippedStatus

#       # Refresh ODP and validate resend invoice button
#       - executeFunction:
#           name: functions.global.navigateToODPUseDeeplink     
#           params:
#             - name: returnedOrderNumber
#               string: ${returnedOrderNumber}
#       - executeFunction:
#           name: functions.orderDetailPage.validateResendInvoice
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
# #   A F T E R   S C E N A R I O                                                                                       #
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              
#       - storeIn:
#           key: testStatus
#           value: passed

#   - name: After
#     after: true
#     flow:
#       - executeFunction:
#           name: functions.utils.after