#######################################################################################################################
#
#   TEST CASE DETAILS: 
#
#      [ TC - INEP-385 ]
#      FLOW: Add two mix items to cart with pickup intent selected.
#    
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#      https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF ID:
#      https://jira.walmart.com/browse/OPIF-179326
#
#   JIRA TEST PLAN ID:
#      https://jira.walmart.com/browse/INEP-326
#
#   JIRA TEST ID:
#      https://jira.walmart.com/browse/INEP-385
#
#######################################################################################################################

general:
  testCaseId: INEP-385
  tags: p1-mh-opif-teflon, OPIF-179326, p1-mh-opif-teflon-d-feb, INEP-385, native-apps-opif-test-case, p1-mh-opif-prod
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   B E F O R E   S C E N A R I O                                                                                     #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: 'BEFORE SCENARIO START'

      - executeFunction:
          name: functions.utils.setMarketInfo

      - if:
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: tcVars_userEmail
                value: data.mh.inep385.user.email-android
          else:
            - storeIn:
                key: tcVars_userEmail
                value: data.mh.inep385.user.email-ios

      - storeIn:
          key: tcVars_successfulExecution
          value: false

      - log: 'BEFORE SCENARIO END'

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   M A I N   S C E N A R I O                                                                                         #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: "MH: Add two mix items to cart with pickup intent selected."
    flow:

      # Onboard to application ..
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded

      # Sign In ..
      - log:
          message: "Sign in."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${tcVars_userEmail}
            - name: userPassword
              string: data.mh.astrobot.password

      # Clear cart if needed before adding new products ..
      - log:
          message: "Clear cart if needed before adding new products."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapShopBtn
      - executeFunction:
          name: functions.cartPage.clearCart

      # Add two scheduled item to cart.
      - log:
          message: "Add two scheduled item to cart"
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails #--> Returns ${productName}
          params:
            - name: productArray
              string: data.global.itemsArray.groceryByPieces #TO-DO: Edit items array.
      # [VARIABLE] Product's name saved in ${first_product_name}
      - storeIn:
          key: first_product_name
          value: ${productName}

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails
          params:
            - name: productArray
              string: data.global.itemsArray.groceryByPieces #TO-DO: Edit items array.
      # [VARIABLE] Product's name saved in ${second_product_name}
      - storeIn:
          key: second_product_name
          value: ${productName}

      # Navigate to cart.
      - log:
          message: "Navigate to cart"
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.global.tapCartIcon

      # Validate Pickup intent is selected.
      - log:
          message: "Validate Pickup intent is selected."
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.global.deliveryText.pickup
            - name: slotType
              string: Standard
      - executeFunction:
          name: functions.cartPage.scheduledPickup.verifyCard

      # Validate Products in cart.
      - log:
          message: "Validate Products in cart"
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.validateProductInCart
          params:
            - name: productName
              string: ${first_product_name}
      - executeFunction:
          name: functions.cartPage.validateProductInCart
          params:
            - name: productName
              string: ${second_product_name}
      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'MAIN SCENARIO END'

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   A F T E R   S C E N A R I O                                                                                       #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: 'AFTER SCENARIO START'
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: TC PASSED
                color: GREEN_BOLD
          else:
            - failTest:
                message: TC FAILED
      - log: 'AFTER SCENARIO END'

