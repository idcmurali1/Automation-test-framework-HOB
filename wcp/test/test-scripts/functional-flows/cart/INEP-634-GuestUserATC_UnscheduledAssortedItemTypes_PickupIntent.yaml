#######################################################################################################################
#
# TEST CASE DETAILS: 
#
#   TC - INEP-634
#       Flow - MH:  Validate guest user ATC unscheduled assorted itemTypes pickup intent
#    
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/COMM/WCP+Merging+Hallways+-+Weekly+Summary#25049188467b442a39856942ffbf14209cc3ea19a5
#
#   CONFLUENCE AUTOMATION TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/~vn54czd/Native+Apps+Automation
#
#   JIRA OPIF TC:
#     https://jira.walmart.com/browse/OPIF-179322
#
#   JIRA TEST ID:
#     https://jira.walmart.com/browse/INEP-634
#
#   JIRA Test Plan ID:
#     https://jira.walmart.com/browse/INEP-627
#
#
#######################################################################################################################

general:
  testCaseId: INEP-634
  tags: INEP-634, OPIF-179322, p1-mh-opif-teflon-d-feb, p1-mh-opif-teflon, native-apps-opif-test-case, p1-mh-opif-prod
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - log: "BEFORE SCENARIO"
      - executeFunction:
          name: functions.utils.setMarketInfo
      - storeIn:
          key: tcVars_successfulExecution
          value: false
      - log: "BEFORE SCENARIO END"

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: "MH: Validate guest user ATC unscheduled assorted itemTypes pickup intent"
    flow:

      # Create user and onboard to application..
      - log:
          message: "Create user and onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload
      # Onboard to application
      - log:
          message: "Onboard to application."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully 

    # Add 1P/2P/WFS/3P unscheduled items to cart.
      - log:
          message: "Add 1P/2P/WFS/3P unscheduled items to cart."
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails 
          params:
            - name: productArray
              string: data.global.1PItems 
      # [VARIABLE] Product's name saved in ${1P_product_array}
      - storeIn:
          key: 1P_productDetails_array
          value: ${productDetailsArray}
      - executeFunction:
          name: functions.global.resetCartInformation/GlobalVars
      - log:
          message: '✔︎ 1P Item added to Cart: ${productName}'
          color: GREEN_BOLD

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails
          params:
            - name: productArray
              string: data.globalShared_2PRegularItems 
      # [VARIABLE] Product's name saved in ${2P_product_array}
      - storeIn:
          key: 2P_productDetails_array
          value: ${productDetailsArray}
      - executeFunction:
          name: functions.global.resetCartInformation/GlobalVars
      - log:
          message: '✔︎ 2P Item added to Cart: ${productName}'
          color: GREEN_BOLD

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails 
          params:
            - name: productArray
              string: data.globalShared_3PWFSItems 
      # [VARIABLE] Product's name saved in ${WFS_product_array}
      - storeIn:
          key: WFS_productDetails_array
          value: ${productDetailsArray}
      - executeFunction:
          name: functions.global.resetCartInformation/GlobalVars
      - log:
          message: '✔︎ WFS Item added to Cart: ${productName}'
          color: GREEN_BOLD

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArrayList-GetProductDetails 
          params:
            - name: productArray
              string: data.globalShared_3PSOSItems 
      # [VARIABLE] Product's name saved in ${3P_product_array}
      - storeIn:
          key: 3P_productDetails_array
          value: ${productDetailsArray}
      - executeFunction:
          name: functions.global.resetCartInformation/GlobalVars
      - log:
          message: '✔︎ 3P Item added to Cart: ${productName}'
          color: GREEN_BOLD

     # Navigate to cart.
      - log:
          message: "Navigate to cart "
          color: PURPLE_BOLD_BRIGHT      
      - executeFunction:
          name: functions.global.tapCartIcon 
          
      # Validate Pickup intent is selected.
      - log:
          message: "Validate Pickup intent is selected."
          color: PURPLE_BOLD_BRIGHT    
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: data.global.deliveryText.pickup
            - name: slotType
              string: Standard
      - executeFunction:
          name: functions.cartPage.scheduledPickup.verifyCard
    
    # Validate 1P/2P/WFS/3P unscheduled items in cart.
      - log:
          message: "Validate 1P/2P/WFS/3P unscheduled items in cart"
          color: PURPLE_BOLD_BRIGHT
      - executeFunction:
          name: functions.cartPage.assertItemsArrayListed-byFulfillmentMethod # TODO: WORKS FOR IOS ONLY. FOR ANDROID IT IS JUST A FUNCTION PLACEHOLDER.
          params:
            - name: fulfillmentMethod
              string: unscheduledDelivery
            - name: itemsArray
              string: ${1P_productDetails_array}
            - name: assertItemDetails
              string: 'false'

      - executeFunction:
          name: functions.cartPage.assertItemsArrayListed-byFulfillmentMethod # TODO: WORKS FOR IOS ONLY. FOR ANDROID IT IS JUST A FUNCTION PLACEHOLDER.
          params:
            - name: fulfillmentMethod
              string: unscheduledDelivery
            - name: itemsArray
              string: ${2P_productDetails_array}
            - name: assertItemDetails
              string: 'false'

      - executeFunction:
          name: functions.cartPage.assertItemsArrayListed-byFulfillmentMethod # TODO: WORKS FOR IOS ONLY. FOR ANDROID IT IS JUST A FUNCTION PLACEHOLDER.
          params:
            - name: fulfillmentMethod
              string: unscheduledDelivery
            - name: itemsArray
              string: ${WFS_productDetails_array}
            - name: assertItemDetails
              string: 'false'

      - executeFunction:
          name: functions.cartPage.assertItemsArrayListed-byFulfillmentMethod # TODO: WORKS FOR IOS ONLY. FOR ANDROID IT IS JUST A FUNCTION PLACEHOLDER.
          params:
            - name: fulfillmentMethod
              string: unscheduledDelivery
            - name: itemsArray
              string: ${3P_productDetails_array}
            - name: assertItemDetails
              string: 'false'

      - storeIn:
          key: tcVars_successfulExecution
          value: true
      - log: 'INEP-634: MAIN SCENARIO END'
      
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
#   A F T E R   S C E N A R I O                                                                                       #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #              

  - name: After
    after: true
    executeOnFailure: false
    flow:
      - log: 'AFTER SCENARIO START'
      - if:
          condition: ${tcVars_successfulExecution}
          then:
            - log:
                message: TC PASSED
                color: GREEN_BOLD
          else:
            - failTest:
                message: TC FAILED
      - log: 'AFTER SCENARIO END'
        