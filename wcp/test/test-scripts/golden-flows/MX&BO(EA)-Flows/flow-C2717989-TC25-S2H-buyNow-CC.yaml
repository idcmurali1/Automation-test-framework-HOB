# ================================================================================================================================
# TC: 025
# Flow: TC-025:Test Accounts: Existing user + Payment Information: CC +  BuyNow
# ================================================================================================================================

general: 
  testCaseId: C2717989
  tags: C2717989, p1-mx-ea-teflon, p1-bodega-ea-teflon,p1-mx-ea-prod,p1-bodega-ea-prod, p1-ca-en-prod, p1-mx-mh-e2e-teflon, p1-mx-mh-e2e-prod
  combineScenarios: true

scenarios:
  - name: Before
    before: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main 
    flow: 

      # Onboarding to home page with EA Options
      - executeFunction: 
          name: functions.onboardingToHomePage.usingPostalCode 
          params: 
            - name: PostalCode 
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      
      
      - if:
          condition: ${environment} == 'Teflon'
          then:
          # Create new Account using Astro API
            - executeFunction:
                name: functions.astroApi.generateTimeStampEmail

            - executeFunction:
                name: functions.astroApi.createAccount
                params:
                  - name: payload
                    string: data.global.payload.visaCard4242

      # Tap global account button
      - executeFunction:
          name: functions.global.tapAccountBtn

      # Tap Sign in button
      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      - if: 
          condition: ${environment} == 'Production'
          then:
            - if: 
                condition: ${environment} == 'iOS'
                then:
                  - storeIn:
                       key: userEmail
                       value: data.wcp025.ios.email 
                else:
                   - storeIn:
                       key: userEmail
                       value: data.wcp025.android.email
                 
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
              - name: userEmail
                string: ${userEmail}
              - name: userPassword
                string: data.global.password.Password1   
                         
       # Tap shop button
      - executeFunction: 
          name: functions.global.tapShopBtn

      - if: 
          condition: ${environment} == 'Production'
          then:
            # Navigate to Purchase history page
            - executeFunction: 
                name: functions.accountPage.navigateToOrderHistoryPage

          # Validate all filters are displayed in PH page (Only applicable to MX and BO)
            - if:
               condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
               then:
                 - executeFunction:
                    name: functions.orderHistoryPage.assertFiltersDisplayed 

          # Navigate to Order details page
            - executeFunction: 
                name: functions.orderHistoryPage.navigateToLatestOrder

          # validate ODP page loaded successfully
            - executeFunction: 
                name: functions.orderDetailPage.verifySectionDisplayed

            # Navigate  ODP  to PDP Page
            - executeFunction: 
                name:  functions.orderDetailPage.navigateODPTOPDPPage

            # validate item details pagee.
            - executeFunction: 
                name: functions.productDetailsPage.validateItemDetails

          # Close product details page.
            - executeFunction: 
                name: functions.productDetailsPage.tapClose
            
          # Click on back button in ODP page.
            - executeFunction: 
                name: functions.orderDetailPage.tapbackButton

            - if:
                condition: ${platform} == 'Android'
                then:
                  - executeFunction: 
                      name: functions.orderDetailPage.tapbackButton

            - executeFunction: 
                name: functions.global.tapShopBtn
            
                  # Get the first available item and add into cart
            - executeFunction:
                  name: functions.searchPage.getTheFirstAvailableItemAndNavigateToPDP
                  params:
                      - name: productArray
                        string: data.wcp25.buyNowItems
          else:
            - executeFunction:
                name: functions.utils.getTheFirstAvailableItemAndNavigateToPDPWithDeepLink
                params:
                    - name: productArray
                      string: data.wcp25.buyNowItems
          
      # # Select Buy Now Option
      - if:
          condition: ${market} == 'CA''
          then:
            - executeFunction:
               name: functions.productDetailsPage.validateBuyNowButtonnotDisplayed
          else:     
            - executeFunction:
               name: functions.productDetailsPage.GoToCheckoutWithBuyNowOption
      
            - executeFunction:
                name: functions.addAddressBottomSheet.handleSelectAddressPopUp
                params:
                - name: invoiceColoniaName
                  string: data.defaultAddress.coloniaName
              
            - executeFunction:
                name: functions.checkoutPage.validateItemDetails
      
            - if:
                condition: ${environment} == 'Teflon'
                then:    
                   - executeFunction:
                      name: functions.checkoutPage.scrollToCVVTextfield
    
                   - executeFunction:
                        name: functions.checkoutPage.addCVV
                        params:
                          - name: CVV
                            string: data.global.card.cvv.123

                   - executeFunction:
                        name: functions.checkoutPage.tapPlaceOrderButton

      # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                   - log: 'R2_SUBFLOW_POST_TRANSACTION'
      # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

                   - executeFunction:
                      name: functions.thankYouPage.verifyThankYouPageDisplayed

      # Do not cover post transation sa far for this flow
      # - if:
      #     condition: ${platform} == 'iOS'
      #     then:
      #       - executeFunction:
      #           name: functions.utils.terminateApp
      #       - sleep:
      #           duration: 10000

      # - executeFunction:
      #     name: functions.global.navigateToODPUseDeeplink
      
      # - executeFunction:
      #     name: functions.orderDetailPage.verifySectionDisplayed

      # - executeFunction:
      #     name: functions.orderDetailPage.verifyDeliveryType
      #     params:
      #       - name: expectedDeliveryType
      #         string: data.global.deliveryText.delivery

      # - executeFunction:
      #     name: functions.orderDetailPage.scrollToPOS
        
      # - executeFunction:
      #     name: functions.orderDetailPage.verifyCardPayment
      #     params:
      #       - name: expectedCardLastFourDigit
      #         string: data.global.cardLastFourDigit.1111

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: functions.utils.after