# ================================================================================================================================
# TC: 006
# Flow: TC-006:Test Accounts: Existing user + Payment Information: Cash ( Pay-at-store ) +  Delivery (1P (Clearance item), S2H)
# ================================================================================================================================

general:
  testCaseId: C2720130
  tags: wcp-006, p1-mx-ea-teflon, p1-bodega-ea-teflon, p1-mx-ea-prod, p1-bodega-ea-prod, C2720130, p1-mx-mh-e2e-teflon, p1-mx-mh-e2e-prod
  combineScenarios: true

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    flow:

      - if: 
          condition: ${environment} == 'Production'
          then:
            - executeFunction: 
                name: functions.login.storeEmail
                params:
                  - name: userAndroidEmail
                    string: data.tc-006.androidUserEmail
                  - name: useriOSEmail
                    string: data.tc-006.iosUserEmail
          else:
            - executeFunction:
                name: functions.astroApi.createNewAccountWithCreatePayload


      # Navigate and validate to homepage.
      - log:
          message: "Step 1:  Navigate to HomePage and validate HomePage is Loaded"
          color: GREEN_BOLD      
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.homePage.assertPageLoaded


      # Click on login and select sign in.
      - log:
          message: "Step 2: Click on Login and Select Sign in"
          color: GREEN_BOLD
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn


      # Login with existing user user.
      - log:
          message: "Step 3: Login with existing user using password as authentication method and ensure user is logged in"
          color: GREEN_BOLD       
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: data.global.password.Password2


      # Search for 1p item and validate the search result page.
      - log:
          message: "Step 4: Search for a 1P item and validate if search results are displayed"
          color: GREEN_BOLD
      - executeFunction:
          name: functions.global.tapShopBtn    
      - executeFunction:
          name: functions.cartPage.clearCart

      - if: 
          condition: ${environment} == 'Production'
          then:
            - executeFunction:
                name: functions.searchPage.getTheFirstAvailableItemAndNavigateToPDP
                params:
                  - name: productArray
                    string: data.tc-006.alcohol.array

            # Navigate to PDP.
            - log:
                message: "Step 5: Validate PDP Details"
                color: GREEN_BOLD      
            - executeFunction:
                name: functions.productDetailsPage.validateItemDetails

            # Validate alcohol badge.
            - log:
                message: "Validate alcohol Badge"
                color: GREEN_BOLD        
            - executeFunction:
                name: functions.productDetailsPage.validate.alcoholBadge

            # Add products to add and validate product added sucessfully      
            - executeFunction:
                name: functions.productDetailsPage.tapAddToCart
                params:
                  - name: quantity
                    string: data.tc-006.itemCount         
            - executeFunction:
                name: functions.productDetailsPage.verifyItemCount
                params:
                  - name: itemCount
                    string: data.tc-006.itemCount
            - executeFunction:
                name: functions.productDetailsPage.decreaseItemQuantity

            - executeFunction:
                name: functions.productDetailsPage.tapClose

      - if: 
          condition: ${environment} == 'Teflon'
          then: 
            - executeFunction:
                name: functions.utils.getTheFirstAvailableItemAndNavigateToPDPWithDeepLink
                params:
                  - name: productArray
                    string: data.global.1PItems
            - executeFunction:
                name: functions.productDetailsPage.tapClose
          else: 
            - executeFunction:
                name: functions.searchPage.addToCartUsingItemArray
                params:
                  - name: productArray
                    string: data.global.1PItems


      # Navigate to cart and ensure Items are added to cart.
      - log:
          message: "Step 7: Navigate to cart and ensure items are added to cart and correct total is displayed. "
          color: GREEN_BOLD       
      - executeFunction:
          name: functions.global.tapCartIcon    
      - executeFunction:
          name: functions.cartPage.scrollToTopOfCart           
      - executeFunction:
          name: functions.cartPage.validateItemDetails  
      - executeFunction:
          name: functions.cartPage.validateMoneybox


      # Select continue to checkout
      - log:
          message: "Step 8: Navigate to ROP"
          color: GREEN_BOLD       
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      - executeFunction:
          name: functions.addAddressBottomSheet.handleSelectAddressPopUp

      # Validate item details in checkout page
      - log:
          message: "Validate item details in ROP"
          color: GREEN_BOLD        
      - executeFunction:
          name: functions.checkoutPage.validateItemDetails


      # Select pay at store as payment method
      - log:
          message: "Validating User is able to select Pay At Store"
          color: GREEN_BOLD         
      - executeFunction:
          name: functions.checkoutPage.selectPaymentMethod
          params:
            - name: payment
              string: data.paymentMethod.payAtStore


      # Validate Pay At Store in ROP
      - log:
          message: "Validating Pay At Store Instruction Displayed"
          color: GREEN_BOLD         
      - executeFunction:
          name: functions.checkoutPage.validatePayAtStore

    # # TODO: Need to replace with add invoice function. Pay at store have some limits so after few 
    # # orders order placement were failing.
    #   # Validate invoice displayed
    #   - log:
    #       message: "Validating if invoice section is displayed"
    #       color: GREEN_BOLD           
    #   - executeFunction:
    #       name: functions.checkoutPage.validateInvoiceDisplayed


    #   # Validating user is able to select existing invoice
    #   - log:
    #       message: "Validating user is able to select existing invoice"
    #       color: GREEN_BOLD        
    #   - executeFunction:
    #       name: functions.checkoutPage.selectInvoice
    #   - executeFunction:
    #       name: functions.checkoutPage.selectExistingInvoiceFromSheet

    #   # Validating invoice  in ROP
    #   - log:
    #       message: "Validating invoice is displayed in ROP"
    #       color: GREEN_BOLD
    #   - executeFunction:
    #       name: functions.checkoutPage.validateInvoice

      - if:
          condition: ${environment} == 'Teflon'
          then:
            # Place the order
            - log:
                message: "Step 9: Click Place Order"
                color: GREEN_BOLD         
            - executeFunction: 
                name: functions.checkoutPage.tapPlaceOrderButton
            
            # Verify thankyou page
            - log:
                message: "Step 10: Validate Thankyou Page Header"
                color: GREEN_BOLD
            - executeFunction:
                name: functions.thankYouPage.verifyThankYouPageDisplayed
            
            # Navigate to ODP
            - log:
                message: "Step 11: Navigate to ODP"
                color: GREEN_BOLD
            - executeFunction:
                name: functions.global.navigateToODPUseDeeplink
            
            # Validate ODP
            - log:
                message: "Validate Correct Item is Displayed in ODP"
                color: GREEN_BOLD
            - executeFunction:
                name: functions.orderDetailPage.verifySectionDisplayed
            - executeFunction:
                name: functions.orderDetailPage.verifyDeliveryType
                params:
                  - name: expectedDeliveryType
                    string: data.global.deliveryText.delivery
            
            # - executeFunction:
            #     name: functions.orderDetailPage.invoiceSectionValidation

            - executeFunction:
                name: functions.orderDetailPage.verifyItemDetails
            - log:
                message: "Validate Payment Details Displayed in ODP"   
                color: GREEN_BOLD
            - executeFunction:
                name: functions.orderDetailPage.verifyPaymentMethodSection
            - executeFunction:
                name: functions.orderDetailPage.verifyPaymentMethod
                params:
                  - name: paymentType
                    string: data.global.payAtStoreText
            - executeFunction:
                name: functions.orderDetailPage.validateMoneybox
                
            # Cancel order Process 
            - executeFunction:
                name: functions.orderDetailsPage.cancelOrder
                params:
                  - name: reasonIndex
                    string: data.global.orderCancellation.reasonIndex3
            
            # Validate ODP after order cancellation
            - executeFunction:
                name: functions.orderDetailsPage.validateAfterCancellation
                params:
                  - name: orderCancelled
                    string: true      

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   A F T E R   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - storeIn:
          key: testStatus
          value: passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: functions.utils.after