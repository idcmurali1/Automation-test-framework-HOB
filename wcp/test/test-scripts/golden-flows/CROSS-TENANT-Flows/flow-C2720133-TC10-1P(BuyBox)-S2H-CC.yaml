# ================================================================================================================================
# TC: 010
# Flow: TC-010: 1P Buy Box Item + CC
# ================================================================================================================================
general:
  testCaseId: C2720133
  tags: C2720133, p1-us-prod, p1-mx-ea-teflon, p1-bodega-ea-teflon, p1-mx-ea-prod, p1-bodega-ea-prod, p1-ca-en-teflon, p1-ca-en-prod, p1-ca-fr-prod, p1-mx-mh-e2e-prod, p1-mx-mh-e2e-teflon
  combineScenarios: true

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:

      # Onboarding&Sign in
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore

      - executeFunction: 
          name: functions.login.storeEmail
          params:
            - name: userAndroidEmail
              string: data.wcp010.android.email
            - name: useriOSEmail
              string: data.wcp010.ios.email

      # - if:
      #     condition: ${environment} == 'Teflon'
      #     then:
      #       - executeFunction:
      #           name: functions.astroApi.createNewAccountWithCreatePayload

      - executeFunction:
          name: functions.global.tapAccountBtn

      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - if:
          condition: ${environment} == 'Teflon'
          then:
            - executeFunction: 
                name: functions.loginPage.userAuthentication
                params:
                  - name: userEmail
                    string: ${userEmail}
                  - name: userPassword
                    string: data.global.password.Password1

      - if:
          condition: ${environment} == 'Production'
          then:
            - if: 
                condition: ${platform} == 'Android'
                then:
                  - executeFunction:
                      name: functions.loginPage.userAuthentication
                      params:
                        - name: userEmail
                          string: ${userAndroidEmail}
                        - name: userPassword
                          string: data.global.password.Password1
                else:
                  - executeFunction:
                      name: functions.loginPage.userAuthentication
                      params:
                        - name: userEmail
                          string: ${useriOSEmail}
                        - name: userPassword
                          string: data.global.password.Password1

      # Navigate to home page
      - executeFunction:
          name: functions.global.tapShopBtn

      - executeFunction:
          name: functions.cartPage.clearCart

      # Add 1 item into cart / Add 1 item into cart from PDP multiseller page (2 item added on production, 1 item added on teflon)
      - if:
          condition: ${environment} == 'Production'
          then:
            - if:
                condition: ${market} == 'US' # US market select shipping intent to skip reserving time
                then:
                  - executeFunction:
                      name: functions.global.gic.selectShippingIntent
                      params:
                        - name: page
                          string: 'home'
            - executeFunction:
                  name:  functions.utils.getTheFirstAvailableItemAndNavigateToPDPWithDeepLink
                  params:
                    - name: productArray
                      string: data.wcp10.1PBuyBoxItem
            # Add one item which walmart is seller          
            # - executeFunction:
            #       name: functions.productDetailsPage.tapAddToCart
            # Add one item which other vendor is seller               
            - executeFunction:
                  name: functions.productDetailsPage.validateMultiSellerPage
          else:
            - executeFunction:
                  name: functions.utils.getTheFirstAvailableItemAndNavigateToPDPWithDeepLink
                  params:
                    - name: productArray
                      string: data.wcp10.1PBuyBoxItem
            - executeFunction:
                name: functions.productDetailsPage.tapClose     

      - executeFunction:
          name: functions.global.tapCartIcon


      # Validate cart quantity on cart 
      - if:
          condition: ${environment} == 'Production'
          then:
            - executeFunction:
                name: functions.cartPage.assertCartQuantity
                params:
                  - name: expectedQuantity
                    string: data.global.item.2count 

      # Go to Checkout page
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      - executeFunction:
          name: functions.addAddressBottomSheet.handleSelectAddressPopUp
          params:
            - name: invoiceColoniaName
              string: data.defaultAddress.coloniaName

      # Validate the delivery banner
      - if:
          condition: ${environment} == 'Production'
          then:
            - executeFunction:
                name: function.checkout.storeValueToExpectedFulfillmentTypeAsDelivery
            - executeFunction:
                name: functions.checkout.validateFufillmentType
      

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Transaction & Post-Transaction validation on Teflon
      - if:
          condition: ${environment} == 'Teflon'
          then:
            - executeFunction:
                name: functions.checkoutPage.tapPlaceOrderButton

      - if:
          condition: ${environment} == 'Teflon'
          then:
            - if:
                condition: ${platform} == 'Android'
                then:
                  - if:
                      condition: ${market} == 'MX-Bodega'
                      then:
                        - storeIn:
                            key: varTC_expectedFulfillmentAddress
                            value: data.global.s2h.deliveryAddress # (replace with 'data.defaultAddress.fullString.forThankYouPage.android' once CEPG-233223 is resolved. Issue is present only for Android Bodega )
                      else:
                        - storeIn:
                            key: varTC_expectedFulfillmentAddress
                            value: data.defaultAddress.fullString.forThankYouPage.android
                else:      
                  - storeIn:
                      key: varTC_expectedFulfillmentAddress
                      value: data.defaultAddress.fullString.forThankYouPage.ios

            - executeFunction:
                name: functions.thankYouPage.verifyThankYouPageDetails
                params:
                  - name: expectedDeliveryType
                    string: data.global.deliveryType.S2H
                  - name: expectedFulfillmentName
                    string: data.global.userName.ACCEPT
                  - name: expectedFulfillmentAddress
                    string: ${varTC_expectedFulfillmentAddress}
                  - name: expectedTotalItemsCount
                    string: data.global.item.1count

            - executeFunction:
                name: functions.thankYouPage.tapOnContinueShoppingButton 
            
            # Navigate to ODP from home page OST
            - executeFunction:
                name: functions.homePage.taponOrderStatusTracker
            
            - executeFunction:
                name: functions.orderDetailPage.verifySectionDisplayed

            - executeFunction:
                name: functions.orderDetailPage.verifyDeliveryType
                params:
                  - name: expectedDeliveryType
                    string: data.global.deliveryText.delivery

            - executeFunction:
                name: functions.orderDetailPage.scrollToPOS

            - executeFunction:
                name: functions.orderDetailPage.verifyCardPayment
                params:
                  - name: expectedCardLastFourDigit
                    string: data.global.creditCard.vale.3729.last4DigitsOnly

      - storeIn:
          key: testStatus
          value: passed

  #After Scenarios
  - name: After
    after: true
    executeOnFailure: false
    flow:
      - executeFunction:
          name: functions.utils.after
          

