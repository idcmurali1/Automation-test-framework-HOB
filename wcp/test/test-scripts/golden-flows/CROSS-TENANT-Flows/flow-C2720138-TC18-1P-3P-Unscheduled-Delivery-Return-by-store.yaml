# ================================================================================================================================
# TC: 018
# Flow: TC-018: Items:  1P + 3P  Return by Store + Cancel Return (MX & BO)
# ================================================================================================================================
general:
  testCaseId: C2720138
  tags: C2720138, p1-mx-ea-teflon, p1-bodega-ea-teflon, p1-ca-en-teflon, p1-mx-mh-e2e-teflon
  combineScenarios: true

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:

      - if:  # CA
          condition: ${market} == 'CA'
          then:
            - if:
                condition: ${platform} == 'Android'
                then:
                  - storeIn:
                      key: userEmail
                      value: data.wcp018.user.email.android
                  - storeIn:
                      key: returnedOrderNumber
                      value: data.wcp018.order.android
                else:
                  - storeIn:
                      key: userEmail
                      value: data.wcp018.user.email.ios
                  - storeIn:
                      key: returnedOrderNumber
                      value: data.wcp018.order.ios
            - storeIn:
                key: password
                value: data.wcp018.user.password

      - if:  # MX and BO
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
              # Create account using astro api.
              - executeFunction:
                  name: functions.astroApi.createNewAccountWithCreatePayload
                  params:
                    - name: paymentMethod
                      string: data.default.astroAPI.createAccount.paymentMethod.CCVisa #-> Need to create account with Master card but we are not able to place order with master card so going with Visa
              # Create 1P + 3P order using astro api.
              - executeFunction:
                  name: functions.astroApi.createOrder
                  params:
                    - name: emailId
                      string: ${userEmail}                  
                    - name: payload
                      string: data.tc018.createOrderPayload #-> Need to create order with masterCard its blocked due to error in mastercard
              # Move 1p item using astro api
              - executeFunction:
                  name: functions.astroApi.moveOrder
                  params:
                    - name: orderId
                      string: ${returnedOrderNumber}
                    - name: payload
                      string: data.moveOrder.fcDelivery
              # Move 3p item using astro api
              - executeFunction:
                  name: functions.astroApi.moveOrder
                  params:
                    - name: orderId
                      string: ${returnedOrderNumber}
                    - name: payload
                      string: data.moveOrder.mpWfsDelivery
          

      # Onboarding and sign in
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn


      # Login with existing user.
      - log:
          message: "Login with existing user and ensure user is logged in..."
          color: GREEN_BOLD
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Initiate return for eligible items.
      - executeFunction:
          name: functions.global.navigateToODPUseDeeplink     

           
      # - if:
      #     condition: ${platform} == 'Android'
      #     then: 
      #     - executeFunction:
      #         name: functions.orderHistoryPage.validateOrderCardBasedOnOrderId
      #         params:
      #           - name: orderId
      #             string: ${returnedOrderNumber}
      # - executeFunction:
      #     name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn
      #     params:
      #       - name: orderId
      #         string: ${returnedOrderNumber}
      - executeFunction:
          name: functions.orderDetailsPage.tapReturnCta
      - executeFunction:
          name: functions.returnWebPage.selectAllReturnableItems
      - executeFunction:
          name: functions.returnWebPage.tapContinuarBtn


      # Select all the eligible items to return.
      - executeFunction:
          name: functions.returnWebPage.selectReturnReason
      - executeFunction:
          name: functions.returnWebPage.tapContinuarBtn
      
      - executeFunction:
          name: functions.returnWebPage.chooseReturnMethod.tapReturnMethod
          params:
            - name: returnMethod
              string: ReturnInShop
            - name: lineItem
              string: "1"

      - executeFunction:
          name: functions.returnWebPage.tapContinuarBtn

      - if: 
          condition: ${market} == 'CA'
          then:
            - executeFunction:
                name: functions.returnWebPage.validateReturnToStore

      - if:  # MX and BO
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - executeFunction: 
                 name: functions.returnWebPage.SubmitRequest.validateReturnToStoreInitiatedDetails

            - executeFunction: 
                 name: functions.returnWebPage.reviewSubmitRequest.tapReturnSendrequest

            - executeFunction:
                name: functions.returnWebPage.SubmitRequest.tapDone    

            - executeFunction:
                name: functions.global.navigateToODPUseDeeplink     

            - executeFunction:
                name: functions.orderDetailPage.taponReturnCancellation

            - executeFunction:
                name: functions.orderDetailPage.confirmReturnCancellation

            - executeFunction:
                name: functions.orderDetailPage.submitReturnCancellation       

      - storeIn:
          key: testStatus
          value: passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: functions.utils.after