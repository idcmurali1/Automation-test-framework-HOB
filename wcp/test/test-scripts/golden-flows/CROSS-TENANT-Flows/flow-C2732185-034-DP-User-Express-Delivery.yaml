general:
  testCaseId: C2732185
  tags: wcp-034, p1-ca-en-exp-prod,  p1-ca-en-exp-teflon, C2732185, p1-ca-fr-prod, p1-mx-mh-e2e-prod, p1-mx-mh-e2e-teflon

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

  - name: Main
    flow:

     # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
     # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Onboarding & Sign in
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      # Teflon: DP user, Prod: regular user
      - if:
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: userEmail
                value: data.wcp034.android.email
          else:
            - storeIn:
                key: userEmail
                value: data.wcp034.ios.email
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: data.wcp034.password
      
      # Clear Cart
      - executeFunction:
          name: functions.global.tapShopBtn
      - executeFunction:
          name: functions.cartPage.clearCart

      # Select delivery intent
      - executeFunction:
          name: functions.global.gic.selectDeliveryIntent
          params:
            - name: page
              string: home

      # Add 1 each item to cart
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.wcp034.EachItems

      # Add 1 VM item to cart
      - executeFunction:
            name: functions.searchPage.addToCartUsingItemArray
            params:
              - name: productArray
                string: data.wcp034.VWItems    



      # Go to cart and reseve express delivery
      - executeFunction:
          name: functions.global.tapCartIcon
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: Delivery
            - name: slotType
              string: Express
            - name: ExpressSlotType
              string: Standard

      - executeFunction:
          name: function.cartPage.validateFufillmentType
          params:
            - name: expectedFulfillmentType
              string: data.cart.expressDelivery

      - executeFunction:
          name: functions.cartPage.validatebelowMinFeeAndExpressSlotFee
          params:
            - name: expectedbelowOrderMinFee
              string: data.wcp034.belowMinFee

      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn

      # Validate fulfilment type
      - executeFunction:
          name: functions.checkout.validateFufillmentType
          params:
            - name: expectedFulfillmentType
              string: data.checkout.expressDelivery

      - executeFunction:
          name: functions.checkoutPage.validatebelowMinFeeAndExpressSlotFee
          params:
            - name: expectedbelowOrderMinFee
              string: data.wcp034.belowMinFee
            
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      # - log: 'R2_SUBFLOW_POST_TRANSACTION'
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - if:
          condition: ${environment} == 'Teflon'
          then:
            # Trasaction and Post-txn Validations
            - executeFunction:
                name: functions.checkoutPage.scrollUpToEditPaymentButton

            - executeFunction:
                  name: functions.checkoutPage.addCVVIfCVVisDisplayed
                  params:
                    - name: CVV
                      string: data.global.card.cvv.123
            # Place Order
            - executeFunction:
                name: functions.checkoutPage.tapPlaceOrderButton

            - executeFunction:
                name: functions.thankYouPage.verifyThankYouPageDisplayed    
            - sleep:
                duration: 10000
            - executeFunction:
                name: functions.global.navigateToODPUseDeeplink

            # Validate express delivery
            - executeFunction:
                name: functions.orderDetailPage.verifyFulfillmentText
                params:
                  - name: expectedDeliveryType
                    string: data.odp.expressDelivery
            
            # Validate amend is not displayed
            - executeFunction:
                name: functions.orderDetailsPage.verifyAmmendsBannerIsNotDisplayed
            
            # Validate below minimum fee and express delivery fee
            - executeFunction:
                name: functions.orderDetailsPage.validatebelowMinFeeAndExpressSlotFee


      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: functions.utils.after