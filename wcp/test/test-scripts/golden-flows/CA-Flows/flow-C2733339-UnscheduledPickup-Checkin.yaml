general:
  testCaseId: C2733339
  tags: p1-ca-en-teflon, C2733339
  combineScenarios: true

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:


      # Create account using astro api.
      - log:
          message: PREREQUISITE — Creating user account using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createNewAccountWithCreatePayload
          params:
            - name: paymentMethod
              string: data.default.astroAPI.createAccount.paymentMethod.CCVisa

      # Create 1P Unscehduled Pickup order using astro api.
      - log:
          message: PREREQUISITE — Creating 1P Unscheduled Pickup order using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.createOrder
          params:
            - name: emailId
              string: ${userEmail}
            - name: payload
              string: data.checkinFlow.createOrderPayload


      # Move 1p SFS_Pickup item using astro api
      - log:
          message: PREREQUISITE — Move 1P Unscheduled Pickup item using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string:  data.moveOrder.fc_s2s
      
      # Move 1p FC_S2S item using astro api
      - log:
          message: PREREQUISITE — Move 1P Unscheduled Pickup item using Astro API...
          color: GREEN_BOLD
      - executeFunction:
          name: functions.astroApi.moveOrder
          params:
            - name: orderId
              string: ${returnedOrderNumber}
            - name: payload
              string: data.moveOrder.fc_s2s

      # Onboarding
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore

       # Click on login and select sign in.
      - log:
          message: "Click on Login and Select Sign in..."
          color: GREEN_BOLD
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn


      # Login with existing user.
      - log:
          message: "Login with existing user and ensure user is logged in..."
          color: GREEN_BOLD
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: ${password}
      
      # Tap on Purchase History Page
      - executeFunction:
          name: functions.accountPage.tapPurchaseHistory
    
      - executeFunction:
          name: functions.orderHistoryPage.tapOnViewOrderDetailsBtn
          params:
            - name: orderId
              string: ${returnedOrderNumber}

      # Validate I'm On My Way CTA displayed on PH
      - executeFunction:
          name: functions.purchaseHistoryPage.validateI'mOnMyWayCtaDisplayed

      # Validate Checkin Functionality
      - executeFunction:
          name: functions.orderdetails.checkin
   
      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.after