general:
  testCaseId: C2728479
  tags: wcp-033, p1-ca-fr-prod, p1-ca-fr-teflon, p1-ca-en-exp-prod,  p1-ca-en-exp-teflon, C2728479

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

  - name: Main
    flow:

     # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
     # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Onboarding
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore
      
      # Sign in
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      - executeFunction:
          name: functions.login.storeEmail
          params:
            - name: userAndroidEmail
              string: data.wcp033.android.email
            - name: useriOSEmail
              string: data.wcp033.ios.email
    
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: data.global.password.Password1
      
      - executeFunction:
          name: functions.global.tapShopBtn

      - executeFunction:
          name: functions.cartPage.clearCart

      # Add an OG item to cart
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.searchPage.groceryItemArray

      # Add 1P item to cart
      - executeFunction:
            name: functions.searchPage.addToCartUsingItemArray
            params:
              - name: productArray
                string: data.searchPage.1PItems

      - executeFunction:
          name: functions.global.tapCartIcon
  
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn

      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: delivery
            - name: slotType
              string: Express
            - name: ExpressSlotType
              string: insta
 
      - executeFunction:
          name: functions.cartPage.validateItemDetails

      -  executeFunction:
           name: functions.cartPage.moneyBox.feeValidation
           params:
             - name: feeLabel
               string: data.moneyBox.expressdeliveryText  
              
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn

    
      - executeFunction:
          name: functions.checkoutPage.assertPageLoaded     

      - executeFunction:
          name: functions.checkoutPage.validateItemDetails

      - executeFunction: 
          name: functions.checkoutPage.addDeliveryInstructions

      - executeFunction:
          name: functions.checkoutPage.moneyBox.assertFeeValidation
          params:
               - name: feeLabel
                 string: data.moneyBox.expressdeliveryText     
            
      # # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      # # - log: 'R2_SUBFLOW_POST_TRANSACTION'
      # # # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Trasaction and Post-txn will implement on Teflon
      - if:
          condition: ${environment} == 'Teflon'
          then:
            - executeFunction:
                name: functions.checkoutPage.scrollToCVVTextfield
            - executeFunction:
                name: functions.checkoutPage.addCVV
                params:
                  - name: CVV
                    string: data.global.card.cvv.123

            # Place Order
            - executeFunction:
                    name: functions.checkoutPage.tapPlaceOrderButton
              

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: functions.utils.after