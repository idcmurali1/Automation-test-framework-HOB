general:
  testCaseId: C2728483
  tags: wcp-035, p1-ca-fr-teflon, p1-ca-fr-prod, p1-ca-en-exp-prod,  p1-ca-en-exp-teflon, C2728483

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - executeFunction:
          name: functions.utils.setMarketInfo

  - name: Main
    flow:
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
      
      - executeFunction: 
          name: functions.login.storeEmail
          params:
            - name: userAndroidEmail
              string: data.wcp035.user.email.android
            - name: useriOSEmail
              string: data.wcp035.user.email.ios

      # Sign in
      - executeFunction:
          name: functions.global.tapAccountBtn

      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction: 
                name: functions.loginPage.userAuthentication
                params:
                  - name: userEmail
                    string: ${userAndroidEmail}
                  - name: userPassword
                    string: data.wcp038.password
          else:
            - executeFunction:
                name: functions.loginPage.userAuthentication
                params:
                  - name: userEmail
                    string: ${useriOSEmail}
                  - name: userPassword
                    string: data.wcp038.password
      
      - executeFunction:
          name: functions.global.tapShopBtn
      
      # Select Pickup Store from GIC
      - executeFunction:
          name: functions.global.gic.selectPickupIntent
          params:
            - name: page
              string: home      

      - executeFunction:
          name: functions.cartPage.clearCart
      
      # Add GO Items To Cart
      - executeFunction:
          name: functions.searchPage.getTheFirstAvailableItemAndNavigateToPDP
          params: 
            - name: productArray
              string: data.searchPage.groceryItemArray
      
      - executeFunction:
          name: functions.productDetailsPage.tapAddToCart
          params:
            - name: quantity
              string: 4
      
      - executeFunction:
          name: functions.productDetailsPage.tapClose

      - executeFunction:
          name: functions.searchPage.getTheFirstAvailableItemAndNavigateToPDP
          params:
            - name: productArray
              string: data.searchPage.groceryItemArray2

      - executeFunction:
          name: functions.productDetailsPage.tapAddToCart
          params:
            - name: quantity
              string: 4
      
      - executeFunction:
          name: functions.productDetailsPage.tapClose

      - executeFunction:
          name: functions.global.tapCartIcon
      
      # Reserve Express Pickup Slot
      - executeFunction:
          name: functions.cartPage.tapReserveATimeBtn
    
      - executeFunction:
          name: functions.reserveATime.bookSlot
          params:
            - name: fufillment
              string: Pickup
            - name: slotType
              string: Express
      
       # Validate Express Pickup Slot Displayed
      - executeFunction:
           name: functions.cartPage.moneyBox.feeValidation
           params:
             - name: feeLabel
               string: data.moneyBox.expressPickupText
      
      # Need to fix this function and handle error scenarios
      # Validate Minimum Order Fee not displayed for Subtotal > 35$
      - executeFunction: 
          name: functions.cartPage.moneyBox.assertFeeNotPresent
          params:
            - name: feeLabel
              string: data.moneyBox.belowMinOrderFeeText
      
      # Navigate to ROP
      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      
      - executeFunction:
          name: functions.checkoutPage.assertPageLoaded     

      - executeFunction:
          name: functions.checkoutPage.validateItemDetails
      - if:
          condition: ${environment} == 'Production'
          then:
            # Validate Wallet Page Loaded
            - executeFunction: 
                name: functions.checkoutPage.tapAddPaymentMethodBtn
            - executeFunction:
                name: functions.checkoutPage.isWalletTileDisplayed
            - executeFunction:
                name: functions.checkoutPage.walletPopup.tapCloseBtn

            - executeFunction:
                   name: functions.checkoutPage.moneyBox.assertFeeValidation
                   params:
                     - name: feeLabel
                       string: data.moneyBox.expressPickupText   

      - if:
          condition: ${environment} == 'Teflon'
          then:         
            - executeFunction:
                name: functions.checkoutPage.addCVV
                params:
                  - name: CVV
                    string: data.global.card.cvv.123
            
            # Tap Place Order Btn
            - executeFunction:
                name: functions.checkoutPage.tapPlaceOrderButton
            
            # Validate ThankYou Page Displayed
            - executeFunction:
                name: functions.thankYouPage.verifyThankYouPageDisplayed

            # Validate Cart Empty After Order Placed
            - executeFunction:
                name: functions.cartPage.cartEmptyAfterPlaceOrder

            # Navigate to purchase history
            - executeFunction:
                name: functions.accountPage.navigateToPurchaseHistoryFromHomeScreen
            
            # Navigate to ODP using DeepLink
            - executeFunction:
                name: functions.global.navigateToODPUseDeeplink
            
            # Validate Amend Banner not displayed for Express Order
            - executeFunction:
                name: functions.orderDetailsPage.verifyAmmendsBannerIsNotDisplayed
            
            # Validate Delivery Type on ODP
            - executeFunction:
                name: functions.orderDetailPage.verifyDeliveryType
                params:
                  - name: expectedDeliveryType
                    string: data.orderDetailsPage.expressPickupText
          
            - executeFunction:
                name: functions.orderDetailPage.verifySectionDisplayed
            
            # Validate Item Details on ODP
            - executeFunction:
                name: functions.orderDetailPage.verifyItemDetails
            
            # Validate Payment Method Section on ODP
            - executeFunction:
                name: functions.orderDetailPage.verifyPaymentMethodSection
            
            # Validate Card Payment on ODP
            - executeFunction:
                name: functions.orderDetailPage.verifyCardPayment
                params:
                  - name: expectedCardLastFourDigit
                    string: data.global.creditCard.visa.4242.last4DigitsOnly

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    flow:
      - executeFunction:
          name: functions.utils.after