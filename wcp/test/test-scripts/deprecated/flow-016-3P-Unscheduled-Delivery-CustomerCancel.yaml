# ================================================================================================================================
# TC: 016
# EPIC: CEPG-212303
# USER STORY: GPMNETE-145460
# Flow: TC-006:Test Accounts: Existing user + Payment Information: Cash ( Pay-at-store ) +  Delivery (1P (Clearance item), S2H)
# ================================================================================================================================

general:
  testCaseId: wcp-016
  tags: wcp-016
scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:

      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: Exclusivos online

      - executeFunction:
          name: functions.global.tapAccountBtn

      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: data.tc016.userEmail 
            - name: userPassword
              string: data.tc016.userPassword 

      - executeFunction:
          name: functions.global.tapShopBtn

      - executeFunction:
          name: functions.cartPage.clearCart

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: data.tc-016.searchItem

      - executeFunction:
          name: functions.global.tapCartIcon

      - executeFunction:
          name: functions.cartPage.continueToCheckout

      - executeFunction:
          name: functions.checkoutPage.selectPaymentMethod
          params:
            - name: payment
              string: data.paymentMethod.creditCard

      - executeFunction:
          name: functions.reviewOrderPage.placeOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - executeFunction:
          name: functions.thankYouPage.verifyThankYouPageDetails

      - executeFunction:
          name: functions.thankYouPage.storeOrderNumber

      # Go to orders page
      # - executeFunction:
      #     name: functions.accountPage.orders [Need to Add]

      # Verify order is displayed in purchase history page 
      - executeFunction:
          name: functions.orderPage.PageValidation

      # Order cancellation 
      - executeFunction:
          name: functions.orderPage.orderCancellation

      # # Validating order cancellation page
      # - executeFunction:
      #     name: functions.purchaseHistory.orderCancellationPageValidation [Need to Add]

      - storeIn:
          key: testStatus
          value: passed