functions:
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is for validating order detail page is loading
  # No param  
  - name: functions.orderDetailPage.verifySectionDisplayed
    flow:
      - executeFunction:
          name: functions.utils.handlePopUp
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailPage.orderNumber
            - log:
                message: "Order details page loaded successfully"
                color: YELLOW
          catch:
            flow:
              - loop:
                  begin: 1
                  end: 5
                  storeIndex: i
                  mode: increment
                  flow:
                    - if:
                        identifier:
                          present:
                            - identifier: homePage.technicalError
                        then:
                          - log:
                              message: Retrying due to technical error. Retry count - ${i}
                              color: CYAN
                          - click:
                              identifier: homePage.technicalErrorDismissButton
                          - sleep:
                              duration: 2000
                        else:
                          - storeIn:
                              key: loadedSuccessfully
                              value: true
                          - break: true
              - if:
                  condition: ${loadedSuccessfully} != true
                  then:
                    - failTest:
                        message: Unable to load order details page 
      - if:
          identifier:
            notPresent:
              - identifier: orderDetailPage.orderNumber
          then:
            - scroll:
                direction: up
                untilIdentifier: orderDetailPage.orderNumber
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.orderNumber
            - identifier: orderDetailPage.orderAddress
      - log:
          message: "End functions: orderDetailPage.verifySectionDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is for scrolling down to bottom of page
  # No param  
  - name: functions.orderDetailPage.scrollToPOS
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: orderDetailPage.posSummary
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: orderDetailPage.posSummary
                scrollLimit: 2
                wait: 3000
      - log:
          message: "End functions: orderDetailPage.scrollToPOS"
          color: BLUE

  #-------------------------------------------------------------------------------------------------------------------- 
   # Description: This function validates correct Delivery Type for all individual deliveries in case the Order has multiple.
   # Params:      ${expectedDeliveryType}  [Mandatory]  Delivery Type to be validated.
  - name: functions.orderDetailPage.verifyDeliveryType
    flow:
      - log:
          message: Checking all deliveries are displaying the expected Delivery Type '${expectedDeliveryType}'...
          color: GREEN
      - storeIn:
          key: atLeastOneStatusLabelDisplayed
          value: false
      - storeIn:
          key: foundShipmentCount
          value: 0
      - loop:
          begin: 1
          end: 6
          storeIndex: lap
          flow:
            - log:
                message: Try ${lap}/5 looking for multiple Deliveries within the Order...
                color: GREEN
            - if:
                identifier:
                  present:
                    - identifier: orderDetailPage.orderStatus
                then:
                  - storeIn:
                      key: atLeastOneStatusLabelDisplayed
                      value: true
                  - executeFunction:
                      name: functions.orderDetailPage.verifyFulfillmentText
                  - arithmetic:
                      expression: ${foundShipmentCount} + 1
                      storeIn: foundShipmentCount
                  - log:
                      message: Delivery found with label '${expectedDeliveryType}', scrolling down to check for more deliveries...
                      color: GREEN
            # Used `drag` instead of `scroll` due to  Android issue where the tap to scroll was selecting the text instead of scrolling.
            # This issue is caused because in R2, all instructions inside a `loop` execute slower than regular, so the tap executes as a long tap, causing text selection.
            - drag:
                from:
                  x: 2%
                  y: 50%
                to:
                  x: 2%
                  y: 10%
      - if:
          condition: '!${atLeastOneStatusLabelDisplayed}'
          then:
            - failTest:
                message: No Delivery Type labels were found in ODP.
          else:
            - log:
                message: "[âœ“] Shipments found with delivery type ${expectedDeliveryType}: ${foundShipmentCount}"
                color: GREEN_BOLD
      - log:
          message: "End function: functions.orderDetailPage.verifyDeliveryType"
          color: BLUE
  
  #-------------------------------------------------------------------------------------------------------------------- 
   # Description: This function validates fulfillment text
   # Params:      ${expectedDeliveryType}  [Mandatory]  fulfillment text to be validated.
  - name: functions.orderDetailPage.verifyFulfillmentText
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                text:
                  - identifier: orderDetailPage.orderStatus
                    contains: ${expectedDeliveryType}
          else:
            - verifyIdentifier:
                value:
                  - identifier: orderDetailPage.orderStatus
                    contains: ${expectedDeliveryType}
      - log:
          message: "End function: orderDetailPage.verifyFulfillmentText"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is for validating payment
  # Param: {expectedCardLastFourDigit}  [Mandotory]
  - name: functions.orderDetailPage.verifyCardPayment
    flow:
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.cardPayment
      - getString:
          identifier: orderDetailPage.cardPayment
          extractNumbers: true
          storeIn: displayedCardLastFourDigit
      - if:
          condition: ${expectedCardLastFourDigit} == ${displayedCardLastFourDigit}
          then:
            - log:
                message: "Card payment is ${expectedCardLastFourDigit}"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Displayed Card payment is not correct: '${displayedCardLastFourDigit}' (expected: '${expectedCardLastFourDigit}')"
      - if:
          condition: ${isSalesFinancingApplied}
          then:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.paymentMethod.WalmartCardFinancingTitle
                  - identifier: orderDetailPage.paymentMethod.WalmartCardFinancingDescription
      - log:
          message: "End function: functions.orderDetailPage.verifyCardPayment"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validate return Inprogress msg on  ODP page
  - name: functions.orderDetailPage.validateReturnInprogressMsg
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.ReturnInprogressMsg
      - log:
          message: "End function: orderDetailPage.validateReturnInprogressMsg"
          color: BLUE

   #--------------------------------------------------------------------------------------------------------------------
  # Description: This function tap on cancel Return  button on  ODP page
  - name: functions.orderDetailPage.taponReturnCancellation
    flow:
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.returns.cancelReturnCta
      - click:
          identifier: orderDetailPage.returns.cancelReturnCta
      - log:
          message: "End function: orderDetailPage.taponReturnCancellation"
          color: BLUE        

 #--------------------------------------------------------------------------------------------------------------------
  # Description: To confirm cancellation of return initiated
  - name: functions.orderDetailPage.confirmReturnCancellation
    flow:
      - verifyIdentifier:
          present:
            - identifier: returns.cancelReturnTitle
            - identifier: returns.cancelReturnDescription
            - identifier: returns.cancelReturnItemsText
            
      - click:
          identifier: returns.cancelReturnConfirmationCta
      - log:
          message: "End function: orderDetailPage.confirmReturnCancellation"
          color: BLUE   

   #--------------------------------------------------------------------------------------------------------------------
  # Description: To submit cancellation of return initiated
  - name: functions.orderDetailPage.submitReturnCancellation
    flow:
      - verifyIdentifier:
          present:
            - identifier: returns.cancelSuccessIcon
            - identifier: returns.cancelSuccessTitle
          
      - click:
          identifier: returns.cancelReturnDoneCta 
      - log:
          message: "End function: orderDetailPage.confirmReturnCancellation"
          color: BLUE 

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function search for invoice label link 
  # Return ${invoiceDisplayed} 
  - name: functions.orderDetailPage.invoiceLabelDisplayed
    flow:
      - storeIn:
          key: invoiceDisplayed
          value: false
      - scroll:
          direction: down
          untilIdentifier: orderDetailsPage.invoiceLabel
          scrollLimit: ${scrollLimit:6}
          position: center
      - if:
          identifier:
            present:
              - identifier: orderDetailsPage.invoiceInstruction
          then:
            - storeIn:
                key: invoiceDisplayed
                value: true
            - log:
                message: "End function: functions.orderDetailPage.invoiceLabelDisplayed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: functions.orderDetailPage.invoiceLabelDisplayed (Not displayed)"
                color: CYAN
                               
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is for validating order detail page invoice section
  # No param  
  - name: functions.orderDetailPage.invoiceSectionValidation
    flow:
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.invoiceAddress
            - identifier: orderDetailPage.invoiceInfor
      - log:
          message: "End functions: orderDetailPage.invoiceSectionValidation" 
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is to validate item details in ODP
  # No param  
  - name: functions.orderDetailPage.verifyItemDetails
    flow:
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber
      - log:
          message: "Reached the top of ODP"
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.itemDetailsExpandButton
          position: center
      - if:
          identifier:
            present:
              - identifier: orderDetailPage.itemDetailsCollapsedButton
          then:
            - click:
                identifier: orderDetailPage.itemDetailsExpandButton
          else:
            - log: 
                  message: "Item details are already expanded in ODP"
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.itemCount
            - identifier: orderDetailPage.itemImage
            - identifier: orderDetailPage.itemName
            - identifier: orderDetailPage.itemPrice
            - identifier: orderDetailPage.itemSection
      - log: 
            message: "Item details are present in ODP"
      - if:
            condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
            then: 
              - verifyIdentifier:
                  present:
                    - identifier:  orderDetailPage.sellerInfo
              - if: 
                  condition: ${3P_item}
                  then:
                    - executeFunction:
                        name: functions.orderDetailPage.3PItem.verifySellerInfo
                            
      - log:
          message: "End functions: orderDetailPage.verifyItemDetails"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function verify items quantity per line in a multiline order (multiple products in an order).
  # Param: ${lineItem}
  #        ${quantity}
  - name: functions.orderDetailPage.verifyQuantityPerLine
    flow:
      - executeFunction:
          name: functions.orderDetailPage.scrollToItemDetails
      - executeFunction:
          name: functions.orderDetailPage.expandItemDetails
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.lineItemQuantityLabel # Params -> ${lineItem}, ${quantity}
      - log:
          message: "End functions: functions.orderDetailPage.verifyQuantityPerLine"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------      
  # Description: This function is to validate payment method in ODP
  # No param  
  - name: functions.orderDetailPage.verifyPaymentMethodSection
    flow:  
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.paymentMethod.logo
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.paymentMethodTitle
            - identifier: orderDetailPage.paymentMethod.logo
            - identifier: orderDetailPage.paymentMethodHeaderLogo
      - log:
          message: "End functions: orderDetailPage.verifyPaymentMethodSection"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
   
  # Description: The function to expand item details on the ODP page.
  # No param  
  - name: functions.orderDetailPage.expandItemDetails
    flow:  
      
      - if:
          identifier:
            present:
              - identifier: orderDetailPage.itemDetailsCollapsedButton
          then:
            - click:
                identifier: orderDetailPage.itemDetailsExpandButton
          
      - log:
          message: "End functions: orderDetailPage.expandItemDetails"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
   
  # Description: The function scrolls to the item details section on the ODP page
  # No param  
  - name: functions.orderDetailPage.scrollToItemDetails
    flow:  
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber
      - log:
          message: "Reached the top of ODP"
      
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.itemDetailsExpandButton
          position: center
      
      - log:
          message: "End functions: orderDetailPage.scrollToItemDetails"
          color: BLUE

 #-----------------------------------------------------------------------------------------------------------------

  # Description: This function scrolls to an specific carrier 
  # Param: ${carrierName}  carrier to scroll to.
  - name: functions.orderDetailPage.scrollToCarrierByName
    flow:
      - if:
          identifier:
            present: 
              - identifier: orderDetailPage.carrierByName # <- ${carrierName}
          then:
            - log:
                message: "Found carrier: ${carrierName}"
          else:
            - scroll:
                direction: down
                untilIdentifier: orderDetailPage.carrierByName # <- ${carrierName}
                position: center
      - log:
          message: "End function: orderDetailPage.scrollToCarrierByName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is for validating payment method in ODP
  # Param: ${paymentType}      [Mandatory] payment method to assert Options: [ payAtStore | PayPal | Card | etc ]  
  #        ${cardDescription}  [Optional]
  #TODO: Need to update more payment cases once they are needed        
  - name: functions.orderDetailPage.verifyPaymentMethod
    flow:
      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.paymentMethod.logo
      - if:
          condition: ${paymentType} == 'payAtStore'
          then:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.payAtStore
      - if:
          condition: ${paymentType} == 'Paypal'
          then:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.paypal
      - if:
          condition: ${paymentType} == 'Card'
          then:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailPage.cardDescriptionLabel # Param -> ${cardDescription}                
      - log:
          message: "End functions: orderDetailPage.verifyPaymentMethod"
          color: BLUE                
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validate moneybox in ODP
  # Param: ${orderCancelled} [Optional] To validate total amount after order cancellation
  - name: functions.orderDetailPage.validateMoneybox
    flow:
        - if:
            condition: ${market} == 'CA' && ${platform} == 'iOS'
            then:
               - log: "Validating total amount"
            else:
               - executeFunction: 
                  name: functions.orderDetailPage.scrollToPOS
        - if:
            condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
            then:     
              - scroll:
                  direction: down
                  untilIdentifier: orderDetailsPage.shipingText
                  scrollLimit: 2
                  wait: 2000
                  position: center
              - verifyIdentifier:  
                  present:
                    - identifier: orderDetailsPage.shipingCharge
                    - identifier: orderDetailPage.posSummary
                    - identifier: orderDetailPage.totalAmount
        - getString:
            identifier: orderDetailPage.totalAmount
            storeIn: totalAmount
        - executeNode:
            file: wcp/test/helpers/Price/cleanPrice.js
            args:
              - value: ${totalAmount}
            getResponse:
              storeIn: cleanTotalAmount
        - log: "Total amount is ${cleanTotalAmount}"
        - if: 
            condition: ${orderCancelled}
            then:
              - if:
                  condition: ${cleanTotalAmount} == 0
                  then:
                    - log: "Correct total is displayed after order cancellation"
                  else:
                    - failTest:
                        message: "Total Value is not correct: '${cleanTotalAmount}'"  
            else:
              - if:
                  condition: ${cleanTotalAmount} <= 0
                  then:
                    - failTest:
                        message: "Total Value is not correct: '${cleanTotalAmount}'"
        - log:
            message: "End function: orderDetailPage.validateMoneybox"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate if cancellation button is displayed
  # No params
  - name: functions.orderDetailPage.isCancelButtonDispalyed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: orderDetailsPage.orderCancellationButton
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: orderDetailPage.isCancelButtonDispalyed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: orderDetailPage.isCancelButtonDispalyed (Not displayed)"
                color: CYAN 
  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: The function assert Cancel Button button is displayed when order is not finished yet
  # Param: ${isCancelButtonDisplayed:true} 
  - name: functions.orderDetailPage.assertCancelButton
    flow:
      - executeFunction:
          name: functions.orderDetailPage.scrollToPOS
      - executeFunction:
          name: functions.orderDetailPage.isCancelButtonDispalyed # Return -> ${returnedIsDisplayed}
      - verifyCondition: "${returnedIsDisplayed} == ${isCancelButtonDisplayed:true}"
      - log:
          message: "End functions: functions.orderDetailPage.assertCancelButton"
          color: BLUE         

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function taps on cancel button
  # No params
  - name: functions.orderDetailPage.tapCancelButton
    flow:
      - click:
          identifier: orderDetailsPage.orderCancellationButton
      - log:
          message: "End function: orderDetailPage.tapCancelButton"
          color: CYAN     
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function taps on cancel partial button
  # No params
  - name: functions.orderDetailPage.tapCancelParcialButton
    flow:
      - click:
          identifier: orderDetailsPage.orderPartialCancellationButton
      - log:
          message: "End function: orderDetailPage.tapCancelButton"
          color: CYAN     

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function taps on the item image on the ODP page 
  # No params
  - name: functions.orderDetailPage.tapItemImage
    flow:
      - click:
          identifier: orderDetailPage.itemImage
          wait: 3000
      - log:
          message: "End function: functions.orderDetailPage.tapItemImage"
          color: CYAN     

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function taps on back button
  # No params
  - name: functions.orderDetailPage.tapbackButton
    flow:
      - click:
          identifier: orderDetailsPage.backButton
      - log:
          message: "End function: orderDetailPage.tapbackButton"
          color: CYAN     

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate cancellation bottom sheet
  # No params
  - name: functions.orderDetailPage.orderCancellation.validateBottomSheet
    flow:
        - verifyIdentifier:
            present:
              - identifier: orderDetailsPage.orderCancellation.bottomsheetTitle
              - identifier: orderDetailsPage.orderCancellation.reasonsForOrderCancellation
              - identifier: orderDetailsPage.orderCancellation.confirmationButton
        - log:
            message: "End function: orderDetailPage.orderCancellation.validateBottomSheet"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function selects cancellation reason
  # Param   ${reasonIndex}  [Optional] To select cancellation reason from bottom sheet [default value = '2']
  - name: functions.orderDetailPage.orderCancellation.selectReason      
    flow:
        - if:
            condition: ${reasonIndex} == null  
            then:
              - storeIn:
                  key: reasonIndex
                  value: data.global.orderCancellation.reasonIndex2
        - click:
            identifier: orderDetailsPage.orderCancellation.selectReason
        - log:
            message: "End function: orderDetailPage.orderCancellation.selectReason"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function confirm order cancellation
  # No params
  - name: functions.orderDetailPage.orderCancellation.confirmCancellation
    flow:
        - click:
            identifier: orderDetailsPage.orderCancellation.confirmationButton
        - sleep:
            duration: 10000
        - log:
            message: "End function: orderDetailPage.orderCancellation.confirmCancellation"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function check for the order cancellation error.
  # No params
  - name: functions.orderDetailPage.orderCancellation.checkForErrorPopup
    flow:
        - if:
            identifier:
              present:
                - identifier: orderDetailsPage.orderCancellation.errorPopUp
            then:
              - failTest:
                  message: "[x] SCENARIO FAILED: Cancellation error encountered."
        - log:
            message: "End function: orderDetailPage.orderCancellation.checkForErrorPopup"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function is used for validating discount has been applied to the order in order detail page
  # No param  
  - name: functions.orderDetailPage.validateReducedPrice 
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
                label:
                  - identifier: orderDetailPage.discount  
                    notContains: 0.00       
          else:
            - verifyIdentifier:
                text:
                  - identifier: orderDetailPage.discount  
                    notContains: 0.00      
      - log:
          message: "End functions: ordersPage.validateReducedPrice"
          color: BLUE
            

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is used for validating shipping charge is 0.00 in ODP
  # No param  
  - name: functions.orderDetailPage.validatePickUpFreeShipping
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.noShippingCharge
      - log:
          message: "End functions: orderDetailPage.validatePickUpFreeShipping "
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function is used for validating there is a discount applied to shipping charge and hence the total shipping is free.
  # No param  
  - name: functions.orderDetailPage.validateNoShippingChargeWithDiscount
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.shippingChargeText
            - identifier: orderDetailPage.shippingDiscountText


      - if:
          condition: ${platform} == 'Android'
          then:
            - getString:
                  identifier: orderDetailPage.shippingChargeValue
                  attribute: text
                  storeIn:  totalShippingCharge
                  
            - getString:
                  identifier: orderDetailPage.shippingDiscountValue
                  attribute: text
                  storeIn:  totalShippingDiscount

      - if:
          condition: ${platform} == 'iOS'
          then:
            - getString:
                  identifier: orderDetailPage.shippingChargeValue
                  attribute: value
                  storeIn:  totalShippingCharge

            - getString:
                  identifier: orderDetailPage.shippingDiscountValue
                  attribute: value
                  storeIn:  totalShippingDiscount

      - storeIn:
          key: totalShippingCharge
          value: -${totalShippingCharge} 
          
      - if:
          condition: ${totalShippingCharge} == ${totalShippingDiscount}
          then:
            - log: the shipping is free after appling the discount
          else:
            - failTest:
                message: Shipping is not free after applying the shipping discount
            
      - log:
          message: "End functions.orderDetailPage.validateNoShippingChargeWithDiscount"
          color: BLUE


  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is to validate order status after cancellation
  # No param  
  - name: functions.orderDetailPage.orderCancellation.validateOrderStatus
    flow: 
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.orderCancellation.cancelledText
            - log:
                message: "Order has been successfully cancelled"
                color: CYAN
          catch:   
            flow:
              - loop:
                  begin: 1
                  end: 4
                  storeIndex: i
                  mode: increment
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: orderDetailPage.orderNumber
                    - if:
                        identifier:
                          present:
                            - identifier: orderDetailsPage.orderCancellation.cancelledText
                        then:
                          - storeIn:
                              key: orderCancelled 
                              value: true
                          - break: true
                        else:
                          - log:
                              message: "Refreshing ODP.Retry count - ${i}"
              - if:
                  condition: ${orderCancelled} != true
                  then:
                    - failTest:
                        message: Cancellation validation failed. Item cancellation was not proper
      - verifyIdentifier:
          notPresent:
            - identifier: orderDetailPage.orderStatusTracker
      - log:
            message: "End functions: orderDetailPage.orderCancellation.validateOrderStatus"
            color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for validating no shipping charge in order detail page
   # No param  
  - name: functions.orderDetailsPage.tapReturnCta
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: orderDetailsPage.returnCta
          then:
            - scroll:
                direction: down
                untilIdentifier: orderDetailsPage.returnCta
                scrollLimit: "5"
      - click:
          identifier: orderDetailsPage.returnCta
      - log:
          message: "End functions: orderDetailsPage.tapReturnCta"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for verify Amends in order detail page
   # No param  
  - name: functions.orderDetailsPage.verifyAmmendsBannerIsDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderConfirmation.amendsBanner
            - identifier: orderconfirmation.addItems
      - log:
          message: "AmendsBanner displayed"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used to  click Reschedule button in  order detail page
   # No param  
  - name: functions.orderDetailsPage.clickRescheduleCTA
    flow:
      
      - click:
            identifier: amendOrder.Rescheduleslot     
      - log:
          message: "End functions:functions.orderDetailsPage.clickRescheduleCTA"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used to Reschedule slot in Order Details page
   # No param  
  - name: functions.orderDetailsPage.Rescheduleslot
    flow:
      
       - loop:
             begin: 1
             end: 7
             storeIndex: index
             mode: increment
             flow:
                
                 - executeFunction:
                      name: functions.reserveATime.checkRescheduleSlotAvailability
                 - if: 
                      condition: ${isSlotAvailable}
                      then: 
                        - click:
                              identifier: reserveATime.ResscheduleSlot
                        - break: true 
       - executeFunction:
           name: functions.reserveATime.tapReserveBtn           
       - log:
          message: "End functions:functions.orderDetailsPage.Rescheduleslot"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for verify Reschedule CTA not showing  in order detail page
   # No param  
  - name: functions.orderDetailsPage.verifyRescheduleIsNotDisplayed
    flow:

     - verifyIdentifier:
          notPresent:
            - identifier: amendOrder.Rescheduleslot
     - log:
          message: "End functions:functions.orderDetailsPage.verifyRescheduleIsNotDisplayed"
          color: BLUE          
  #--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for verify Amends in order detail page
   # No param  
  - name: functions.orderDetailsPage.verifyAmmendsBannerIsNotDisplayed
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: orderConfirmation.amendsBanner
            - identifier: orderconfirmation.addItems
      - log:
          message: "AmendsBanner NOT displayed"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for edit Amends in order detail page
   # No param  
  - name: functions.amends.editButton
    flow:
        - click:
            identifier: amends.editButton

  #--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for Amends increase item quantity
   # No param  
  - name: functions.amendOrder.increaseQty
    flow:
      - click:
          identifier: amendOrder.increaseQty

#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used for Amends decrease item quantity
   # No param  
  - name: functions.amendOrder.decreaseQty
    flow:
      - click:
          identifier: amendOrder.decreaseQty

#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used to save the updated quantity for Ammends
   # No param  
  - name: functions.amendOrder.updateOrderButton
    flow:
      - click:
          identifier: amendOrder.updateOrderButton
      - sleep:
          duration: 5000
      - log:
          message: "End function: amendOrder.updateOrderButton"

#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used to save the updated quantity for Ammends
   # No param  
  - name: functions.amendOrder.removeItem
    flow:
      - click:
          identifier: amendOrder.removeItem
      - verifyIdentifier:
          present:
            - identifier: orderConfirmation.amendsBanner
            - identifier: orderconfirmation.addItems

#--------------------------------------------------------------------------------------------------------------------
   # Description: This function is used to save the updated quantity for Ammends
   # No param  
  - name: functions.amendOrder.addItems
    flow:
      - click:
          identifier: amendOrder.addItems
      - log:
          message: "End function: amendOrder.addItems"
          color: GREEN_BOLD
#--------------------------------------------------------------------------------------------------------------------  
  # Description: The function scrolls to the item details section on the ODP page
  # No param  
  - name: functions.orderDetailPage.verifyPOSSummary
    flow:
      - executeFunction:
          name: functions.orderDetailPage.scrollToPOS
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.associateDiscountText
            - identifier: orderDetailPage.subscribetoSaveDiscountText
      - log: "Associate Discount text is present"
      - log: "Subscribe to Save Discount text is present"
      - log:
          message: "End functions: functions.orderDetailPage.verifyPOSSummary"
          color: BLUE
 #--------------------------------------------------------------------------------------------------------------------
 
  # Description: This function scrolls up to section.
  # Param ${section} Mapping or identifier.
  # Example: Mapping name -> orderDetailPage.statusTracker
  - name: functions.orderDetailPage.scrollUpToSection
    flow:
      - scroll:
          direction: up
          position: center
          untilIdentifier: ${section}
          scrollLimit: 4
      - log:
          message: "End functions: orderDetailPage.scrollUpToSection"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function scrolls down to section.
  # Param ${section} Mapping or identifier to scroll down.
  # Example: Mapping name -> orderDetailPage.statusTracker
  - name: functions.orderDetailPage.scrollDownToSection
    flow:
       - scroll:
           direction: down
           position: center
           untilIdentifier: ${section}
           scrollLimit: ${scrollLimit:3}
       - log:
           message: "End functions: orderDetailPage.scrollDownToRequestReturn"
           color: BLUE

 #--------------------------------------------------------------------------------------------------------------------  
  # Description: The function scrolls to the item details section on the ODP page
  # Param: ${totalItemCount}  
  - name: functions.orderDetailPage.verifyTotalItemsInOrder
    flow:
      - getString:
          identifier: orderDetailPage.itemCount
          storeIn: displayedTotalItemsInOrder
          extractNumbers: true
      - log: "Current dipslayed total items in order = ${displayedTotalItemsInOrder}"
      - log: "Expected total items: ${totalItemCount}"
      - verifyCondition: "${totalItemCount} == ${displayedTotalItemsInOrder}"
      - log: 
          message: "âœ”ï¸Ž Expected total items in order is correct."
          color: GREEN
      - log:
          message: "End functions: functions.orderDetailPage.verifyTotalItemsInOrder"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------
  # Description: The function assert text in EDD label updates after order is delivered or picked 
  # Param: ${expectedEDDText}  
  - name: functions.orderDetailPage.verifyEstimatedDeliveryDateText
    flow:
      - executeFunction:
          name: functions.orderDetailPage.getEstimatedDeliveryDateText # Return -> $currentDisplayedEDD
      - verifyCondition: "${currentDisplayedEDD} == ${expectedEDDText}"
      - log: 
          message: "âœ”ï¸Ž EDD label it was updated."
          color: GREEN
      - log:
          message: "End functions: functions.orderDetailPage.verifyEstimatedDeliveryDateText"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------
  # Description: The function return true or false in a variable if Cancel Item is displayed or not
  # Param: ${returnedIsDisplayed} 
  - name: functions.orderDetailPage.isCancelItemsButtonDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - scroll:
         direction: down
         untilIdentifier: orderDetailsPage.invoiceLabel
         position: center
         scrollLimit: ${scrollLimit:6}
      - if:
          identifier:
            present:
              - identifier: orderDetailPage.cancelItemsButton
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: orderDetailPage.isCancelItemsButtonDisplayed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: orderDetailPage.isCancelItemsButtonDisplayed (Not displayed)"
                color: CYAN   
     
 #--------------------------------------------------------------------------------------------------------------------
  # Description: The function assert Cancel Items button is displayed when order is not finished yet
  # Param: ${isCancelItemsButtonDisplayed:true} 
  - name: functions.orderDetailPage.assertCancelItemsButton
    flow:
      - executeFunction:
          name: functions.orderDetailPage.isCancelItemsButtonDisplayed # Return -> ${returnedIsDisplayed}
      - verifyCondition: "${returnedIsDisplayed} == ${isCancelItemsButtonDisplayed:true}"
      - log:
          message: "End functions: functions.orderDetailPage.assertCancelItemsButton"
          color: BLUE
 
 #--------------------------------------------------------------------------------------------------------------------
  # Description: The function return true or false in a variable if Cancel Item is displayed or not
  # Param -> ${lineItem}
  # Return: ${returnedIsDisplayed} 
  - name: functions.orderDetailPage.isWriteAnOpinionButtonDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - executeFunction:
          name: functions.orderDetailPage.scrollToItemDetails
      - executeFunction:
          name: functions.orderDetailPage.expandItemDetails
      - if:
          identifier:
            present:
              - identifier: orderDetailPage.lineItemWriteOpinionButton # Param -> ${lineItem}
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: orderDetailPage.isWriteAnOpinionButtonDisplayed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: orderDetailPage.isWriteAnOpinionButtonDisplayed (Not displayed)"
                color: CYAN

 #--------------------------------------------------------------------------------------------------------------------
  # Description: This function verify Write Opinion Button is displayed or not per line in a multiline order (multiple products in an order).
  # Param: ${lineItem}
  #        ${isWriteAnOpinionDisplayed:true}   
  - name: functions.orderDetailPage.verifyWriteOpinionButtonPerLine
    flow:
      - executeFunction:
          name: functions.orderDetailPage.isCancelItemsButtonDisplayed # Return -> ${returnedIsDisplayed}
      - verifyCondition: "${returnedIsDisplayed} == ${isWriteAnOpinionDisplayed:true}"
      - log:
          message: "End functions: functions.orderDetailPage.verifyWriteOpinionButtonPerLine"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------
  # Description: This function reloads order details page by swipping/dragging up 
  # Param ${sleepAfterRelod:10000}
  - name: functions.orderDetailPage.reloadOrderDetailPage
    flow:
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber
      - drag:
          from:
            x: 50%
            y: 40%
          to:
            x: 50%
            y: 80%
          longPress: true
          longPressDuration: 5000
      - sleep:
          duration: ${sleepAfterRelod:10000}
      - log:
          message: "End functions: functions.orderDetailPage.reloadOrderDetailPage"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------                       
  # Description: This function asserts on request cancellation button displayed.
  - name: functions.orderDetailPage.assertRequestCancelButtonDisplayed
    flow: 
       # First, scroll back again to the top.
       - log:
            message: "First scroll up to the top..."
            color: CYAN
       - scroll:
            direction: up
            scrollLimit: 3
            wait: 2000
       # Scroll Down until finding the request cancellation button.
       - if: 
           identifier:
             notPresent:
               - identifier: orderDetailPage.requestCancelOrderButton
           then:
               - scroll:
                  direction: down
                  untilIdentifier: orderDetailPage.requestCancelOrderButton
                  scrollLimit: 2
                  wait: 2000
                  position: center
       - log:
            message: "Scroll completed!"
            color: CYAN
       # Now validate is displayed
       - if:
           identifier:
             present:
               - identifier: orderDetailPage.requestCancelOrderButton
           then:
               - log:
                   message: "Request Cancellation Button found!"
                   color: CYAN
               - log:
                   message: "End Function: orderDetailPage.assertRequestCancelButtonDisplayed"
                   color: BLUE
           else:
               -  failTest:
                    message: "Request Cancellation Button not displayed!"

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function asserts on add a review button displayed.
  - name: functions.orderDetailPage.assertWriteAReviewIsDisplayed
    flow: 
       - if: 
           identifier:
             notPresent:
               - identifier: orderDetailPage.writeAReviewButton
           then:
               - executeFunction:
                  name: functions.orderDetailPage.expandItemDetails
               - scroll:
                  direction: down
                  untilIdentifier: orderDetailPage.writeAReviewButton
                  scrollLimit: 3
                  wait: 2000
                  position: center
       # Now validate is displayed
       - if:
           identifier:
             present:
               - identifier: orderDetailPage.writeAReviewButton
           then:
               - log:
                   message: "End Function: orderDetailPage.assertWriteAReviewIsDisplayed"
                   color: BLUE
           else:
               -  failTest:
                    message: "Request Write a Review Button not displayed!"

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function asserts Request a Return of product Button is displayed.
  - name: functions.orderDetailPage.assertRequestAReturnIsDisplayed
    flow: 
       - if: 
           identifier:
             notPresent:
               - identifier: orderDetailsPage.returnCta
           then:
               - scroll:
                  direction: down
                  untilIdentifier: orderDetailsPage.returnCta
                  scrollLimit: 3
                  wait: 2000
                  position: center
       # Now validate is displayed
       - if:
           identifier:
             present:
               - identifier: orderDetailsPage.returnCta
           then:
               - log:
                   message: "End Function: orderDetailPage.assertRequestAReturnIsDisplayed"
                   color: BLUE
           else:
               -  failTest:
                    message: "Request a Return Button not found!"
  
  #--------------------------------------------------------------------------------------------------------------------
    # Description: assert status in order tracker view
    # Param  ${orderStatus}
  - name: functions.orderDetailPage.verifyOrderStatusInOrderTracker
    flow:
       - verifyIdentifier:
          present:
            - identifier: orderDetailPage.progressTrackerContentView # Param -> ${orderStatus}
       - log:
          message: "End function: functions.orderDetailPage.verifyOrderStatusInOrderTracker"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates below minimum fee in POS 
  - name: functions.orderDetailPage.validateBelowMinimumFee
    flow:
       - verifyIdentifier:
           present:
             - identifier: orderDetailsPage.belowMinimumFeeLabel
             - identifier: orderDetailsPage.belowMinimumFeeValue
       - log:
          message: "End functions: orderDetailPage.validateBelowMinimumFee"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates the express in POS 
  - name: functions.orderDetailPage.DPuserValidateExpressScheduleDeliveryFee
    flow:
       - verifyIdentifier:
          present:
            - identifier: orderDetailPage.DPuserDeliveryFromStoreText
            - identifier: orderDetailPage.expressScheduleDeliveryFeeValue
       - log:
          message: "End functions: orderDetailPage.DPuserValidateExpressScheduleDeliveryFee"
          color: BLUE

  
  # Description: This function used to tap on IamOnWay CTA on ODP
  # No Param
  - name: functions.orderDetailsPage.tapIamOnWayCTA
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailsPage.iAmOnWayCTA
      - click:
          identifier: orderDetailsPage.iAmOnWayCTA
      - log:
          message: "End function: orderDetailsPage.tapIamOnWayCTA"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to Validate Ready For Pickup Status on ODP
  # No Param
  - name: functions.orderDetailsPage.verifyRFPOrderStatus
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailsPage.readyForPickupStatusMsg
      - log:
          message: "End function: orderDetailsPage.verifyRFPOrderStatus"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to allow Device Location Permission Msg
  # No Param
  - name: functions.orderDetailsPage.allowDeviceLocationPermissionMsg
    flow:
      - if:
          condition: ${market} == 'US'
          then:
            - if:
                identifier:
                  present:
                    - identifier: orderDetailsPage.preciseLocationText
                then: 
                  - click: 
                      identifier: orderDetailsPage.continueWithoutSharingText
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if:
                identifier:
                  present:
                    - identifier: orderDetailsPage.shareYourLocationText
                then:
                  - click:
                      identifier: orderDetailsPage.sharePreciseBtn
      - if:
          identifier:
            present:
              - identifier: orderDetailsPage.deviceLocationPermissionText
          then:
            - click:
                identifier: orderDetailsPage.deviceLocationPermission.allowBtn
      - log:
          message: "End function: orderDetailsPage.allowDeviceLocationPermissionMsg"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Verify Trip Overview Page Displayed
  # No Param
  - name: functions.orderDetailsPage.verifyTripOverviewPageDisplay
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: orderDetailsPage.tripOverviewPage.tripOverviewTitle
      - log: 
          message: "End function: orderDetailsPage.verifyTripOverviewPageDisplay"
          color: BLUE
  
 #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Validate Trip Overview Page
  # No Param
  - name: functions.orderDetailsPage.tripOverviewPageValidation
    flow:
      - if:
          condition: ${market} == 'US'
          then:
            - if: 
                identifier:
                  present:
                    - identifier: orderDetailsPage.tripOverviewPage.shareYourLocationBtn
                then:
                  - click:
                      identifier: orderDetailsPage.tripOverviewPage.shareYourLocationBtn
      - verifyIdentifier:
          present:
            - identifier: orderDetailsPage.tripOverviewPage.mapIcon
            - identifier: orderDetailsPage.tripOverviewPage.storeName
            - identifier: orderDetailsPage.tripOverviewPage.fulfillmentText
            - identifier: orderDetailsPage.tripOverviewPage.checkinArrivalDate
            - identifier: orderDetailsPage.tripOverviewPage.checkinArrivalInfoInstructions
      - log: 
          message: "End function: orderDetailsPage.tripOverviewPageValidation"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Decription: This function used to Validate Store Name on Trip Overview Page
  # No Param
  - name: functions.orderDetailsPage.tripOverview.validateStoreName
    flow:
      - getString:
          identifier: orderDetailsPage.tripOverviewPage.pickupStoreName
          storeIn: expectedPickupStoreName
      - log: 
          message: Expected Pickup Store is ${expectedPickupStoreName}
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This funtion used to Validate Fulfillment Details on Trip Overview Page
  # No Param
  - name: functions.orderDetailsPage.tripOverviewPage.validateFulfillmentDetails
    flow:
      - scroll:
          direction: down
          untilIdentifier: orderDetailsPage.tripOverviewPage.checkinViewDetailsLink
      - verifyIdentifier:
          present:
            - identifier: orderDetailsPage.tripOverviewPage.fulfillmentTitle
            - identifier: orderDetailsPage.tripOverviewPage.checkinTitle
            - identifier: orderDetailsPage.tripOverviewPage.checkinOrderId
            - identifier: orderDetailsPage.tripOverviewPage.checkinViewDetailsLink
            - identifier: orderDetailsPage.tripOverviewPage.checkinItemCount
            - identifier: orderDetailsPage.tripOverviewPage.checkinTripOverviewBtn
      - log:
          message: "End function: orderDetailsPage.tripOverviewPage.validateFulfillmentDetails"
          color: BLUE
  
 #--------------------------------------------------------------------------------------------------------------------

  # Description: This function is used to tap on I've Parked CTA
  # No Param
  - name: functions.orderDetailsPage.tripOverviewPage.tapI'veParkedCTA
    flow:
      - click:
          identifier: orderDetailsPage.tripOverviewPage.checkinTripOverviewBtn
      - if:
          condition: ${market} == 'US'
          then:
            - if:
                identifier:
                  present:
                    - identifier: orderDetailsPage.tripOverviewPage.pickedAreaTitle
                then:
                  - click:
                      identifier: orderDetailsPage.tripOverviewPage.parkedInPickupAreaCta
      - log:
          message: "End Function: orderDetailsPage.tripOverviewPage.tapI'veParkedCTA"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Validate Parking Info Page
  # No Param
  - name: functions.orderDetailsPage.validateParkingInfoPage
    flow:
      - if:
          identifier:
            present:
              - identifier: orderDetailsPage.parkingInfoPage.parkingInfoTitle
          then:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.parkingInfoPage.checkinHeadlineTitle 
                  - identifier: orderDetailsPage.parkingInfoPage.checkinSubtitle
                  - identifier: orderDetailsPage.parkingInfoPage.parkedCardImage
                  - identifier: orderDetailsPage.parkingInfoPage.parkingSpotTitle
                  - identifier: orderDetailsPage.parkingInfoPage.parkingSpotDescription
                  - identifier: orderDetailsPage.parkingInfoPage.carColorTitle
                  - identifier: orderDetailsPage.parkingInfoPage.carScrollView
                  - identifier: orderDetailsPage.parkingInfoPage.checkinDoneBtn
      - log:
          message: "End function: orderDetailsPage.validateParkingInfoPage"
          color: BLUE
    
 #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to select Car Color
  # No Param
  - name: functions.orderDetailsPage.parkingInfoPage.selectCarColor
    flow:
      - click:
          identifier: orderDetailsPage.parkingInfoPage.selectCarIndex
      - log:
          message: "End function: orderDetailsPage.parkingInfoPage.selectCarColor"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Select Parking Spot
  # No Param
  - name: functions.orderDetailsPage.parkingInfoPage.selectParkingSpot
    flow:
      - click:
          identifier: orderDetailsPage.parkingInfoPage.selectParkingSpot
      - log:  
          message: "End function: orderDetailsPage.parkingInfoPage.selectParkingSpot"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to tap on Done Btn
  # No Param
  - name: functions.orderDetailsPage.parkingInfoPage.tapDoneBtn
    flow:
      - click:
          identifier: orderDetailsPage.parkingInfoPage.checkinDoneBtn
      - sleep:
          duration: 5000
      - log:
          message: "End function: orderDetailsPage.parkingInfoPage.tapDoneBtn"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Validate Pickup Details Page
  # No Param
  - name: functions.orderDetailsPage.validatePickupDetailsPage
    flow:
      - if:
          identifier:
            present:
              - identifier: orderDetailsPage.pickupDetailsPage.title
          then:        
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.pickupDetailsPage.checkinTitle
                  - identifier: orderDetailsPage.pickupDetailsPage.checkinSubtitle
      - if:
          identifier:
            notPresent:
              - identifier: orderDetailsPage.pickupDetailsPage.viewDetails
          then:
            - scroll:
                direction: down
                untilIdentifier: orderDetailsPage.pickupDetailsPage.viewDetails
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.pickupDetailsPage.parkingInfoHeader
                  - identifier: orderDetailsPage.pickupDetailsPage.parkingInfoEditBtn
                  - identifier: orderDetailsPage.pickupDetailsPage.parkingInfoDetails
                  - identifier: orderDetailsPage.pickupDetailsPage.orderDetailsHeader
                  - identifier: orderDetailsPage.pickupDetailsPage.orderDetailsOverview
                  - identifier: orderDetailsPage.pickupDetailsPage.groupTitle
                  - identifier: orderDetailsPage.pickupDetailsPage.groupOrderInfo
                  - identifier: orderDetailsPage.pickupDetailsPage.viewDetails
                  - identifier: orderDetailsPage.pickupDetailsPage.groupOrderItemCount
                  - identifier: orderDetailsPage.pickupDetailsPage.finishBtn
      - log:
          message: "End function: orderDetailsPage.validatePickupDetailsPage"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function used to Tap on I'm Finished CTA
  # No Param
  - name: functions.orderDetailsPage.pickupDetailsPage.tapI'mFinishedBtn
    flow:
      - click:
          identifier: orderDetailsPage.pickupDetailsPage.finishBtn
      - sleep:
          duration: 5000
      - log:
          message: "End function: orderDetailsPage.pickupDetailsPage.tapI'mFinishedBtn"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to Validate View Pickup Details CTA Display
  # No Param
  - name: functions.orderDetailsPage.validateViewPickupDetailsCTA
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: orderDetailsPage.viewPickupDetailsBtn
          then:
            - click:
                identifier: purchaseHistoryPage.backBtn
            - executeFunction:
                name: functions.accountPage.tapPurchaseHistory
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.viewPickupDetailsBtn
          else:
            - verifyIdentifier:
                present:
                  - identifier: orderDetailsPage.viewPickupDetailsBtn
      - log:
          message: "End function: orderDetailsPage.validateViewPickupDetailsCTA"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function used to validate I'm on my way CTA Displayed on PH Page
  # No Param
  - name: functions.purchaseHistoryPage.validateI'mOnMyWayCtaDisplayed
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: purchaseHistoryPage.I'mOnMyWayCTA
          then:
            - scroll:
                direction: down
                untilIdentifier: purchaseHistoryPage.I'mOnMyWayCTA
      - verifyIdentifier:
          present:
            - identifier: purchaseHistoryPage.I'mOnMyWayCTA
      - log:
          message: "End function: purchaseHistoryPage.validateI'mOnMyWayCtaDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates contact Seller link in ODP
  # No Params
  - name: functions.orderDetailPage.validateContactSelller
    flow:
       - if:  
           identifier:
             notPresent:
               - identifier: orderDetailPage.contactSellerLink
           then:
             - scroll:
                 direction: down
                 untilIdentifier: orderDetailPage.contactSellerLink
       - verifyIdentifier:
           present:
             - identifier: orderDetailPage.contactSellerLink
       - log:
          message: "End functions: orderDetailPage.validateContactSelller"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
 # Description: This function taps on Contact seller link 
 # No Params
  - name: functions.orderDetailPage.tapOnContactSelller
    flow:
      - click:
          identifier: orderDetailPage.contactSellerLink
      - log:
           message: "End functions: orderDetailPage.tapOnContactSelller"
           color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validates the order level details are displayed
  - name: functions.orderDetailsPage.validateOrderDetailsAreDisplayed
    flow:
      - scroll:
          direction: up
          untilIdentifier: orderDetailPage.orderNumber

      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.orderNumber
              occurrences: 1
      - log:
          message: "[âœ“] Only one order number is displayed"
          color: GREEN_BOLD

      - scroll:
          direction: down
          untilIdentifier: orderDetailPage.totalAmount

      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.shippingDiscountValue
            - identifier: orderDetailPage.subtotalAmount
            - identifier: orderDetailPage.totalAmount

      - log:
          message: "[âœ“] Shipping discount, subtotal and total are displayed"
          color: GREEN_BOLD
      - log:
          message: "End function: orderDetailsPage.validatebelowMinFeeAndExpressSlotFee"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: Validate one or more item details are displayed by its index
  # Params ${itemCount}  [Mandatory] Number of items to validate
  - name: functions.orderDetailsPage.validateItemDetailsByIndex
    flow:
      - arithmetic:
          expression: ${itemCount} + 1
          storeIn: itemCountEndLoop
      - loop:
          begin: 1
          end: ${itemCountEndLoop}
          storeIndex: index
          mode: increment
          flow:
            - log:
                message: "Validate item details. Item ${index} of ${itemCount}"
                color: CYAN
            - executeFunction:
                name: functions.orderDetailsPage.getItemDetailsByIndex # <--- ${index}
            - verifyIdentifier:
                present:
                  - identifier: orderDetailPage.itemDetails.descriptionByIndex
                  - identifier: orderDetailPage.itemDetails.priceByIndex
                  - identifier: orderDetailPage.itemDetails.quantityByIndex
                  - identifier: orderDetailPage.itemDetails.sellerByIndex
            - scroll:
                direction: down
      - log:
           message: "End functions: orderDetailsPage.validateItemDetailsByIndex"
           color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: Retrieve the item details by its index
  # Params ${index}  [Mandatory] Index of the item
  - name: functions.orderDetailsPage.getItemDetailsByIndex
    flow:
      - getString:
          identifier: orderDetailPage.itemDetails.descriptionByIndex
          storeIn: productName
      - getString:
          identifier: orderDetailPage.itemDetails.priceByIndex
          storeIn: productPrice
      - getString:
          identifier: orderDetailPage.itemDetails.quantityByIndex
          storeIn: productQuantity
      - getString:
          identifier: orderDetailPage.itemDetails.sellerByIndex
          storeIn: productSeller
      - log:
          message: "Product at index ${index}: ${productName}, ${productPrice}, ${productQuantity}, ${productSeller}"
          color: GREEN_BOLD
      - log:
           message: "End functions: orderDetailsPage.validateItemDetailsByIndex"
           color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
 # Description: This function verify Contact seller details
 # No Params
  - name: functions.orderDetailPage.validateContactSelllerDetails
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.contactSeller.title
            - identifier: orderDetailPage.contactSeller.productImage
            - identifier: orderDetailPage.contactSeller.productName
            - identifier: orderDetailPage.contactSeller.orderNumber
            - identifier: orderDetailPage.contactSeller.messageHeadingLabel
            - identifier: orderDetailPage.contactSeller.reasonStackView
      - log:
           message: "End functions:orderDetailPage.validateContactSelllerDetails"
           color: BLUE
    
 #--------------------------------------------------------------------------------------------------------------------
    # Description: Validate Return CTA button is not displayed.
  - name: functions.orderDetailPage.validateReturnCTANotDisplayed
    flow:
        # Scroll to the top of the page. 
        - scroll:
            direction: up
            untilIdentifier: orderDetailPage.orderNumber 
        - verifyIdentifier:
            notPresent:
              - identifier: orderDetailPage.returnCtaButton
        - log:
           message: "End function: orderDetailPage.validateReturnCTANotDisplayed"
           color: BLUE
 
  #--------------------------------------------------------------------------------------------------------------------
    # Description: Validate CTA button with specific text is not displayed.
    # ${ctaTextButton} <- Expected text inside the CTA button. 
  - name: functions.orderDetailPage.validateCTANotDisplayed
    flow:
        # Scroll to the top of the page. 
        - scroll:
            direction: up
            untilIdentifier: orderDetailPage.orderNumber 
        - verifyIdentifier:
            notPresent:
              - identifier: orderDetailPage.ctaButton # <- ${ctaTextButton}
        - log:
           message: "End function: orderDetailPage.validateCTANotDisplayed"
           color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
    # Description: Validate CTA button with specific text is displayed.
    # ${ctaTextButton} <- Expected text inside the CTA button. 
  - name: functions.orderDetailPage.validateCTADisplayed
    flow:
        # Scroll to the top of the page. 
        - scroll:
            direction: up
            untilIdentifier: orderDetailPage.orderNumber 
        - verifyIdentifier:
            present:
              - identifier: orderDetailPage.ctaButton # <- ${ctaTextButton}
        - log:
           message: "End function: orderDetailPage.validateCTADisplayed"
           color: BLUE
    
  #--------------------------------------------------------------------------------------------------------------------
    # Description: Validate an item of the order has an ATC button. 
    # Param: ${expectedATCDisplayed:true} [Optional]   
  - name: functions.orderDetailPage.validateATCButtonDisplayed
    flow:
        - storeIn:
            key: isATCDisplayed
            value: false
        # Scroll to the top of the page.
        - scroll:
            direction: up
            untilIdentifier: orderDetailPage.orderNumber
        # Expand item details.
        - executeFunction:
            name: functions.orderDetailPage.expandItemDetails
        - if:
           identifier:
             present:
               - identifier: orderDetailPage.addToCartButton
           then:
             - storeIn:
                 key: isATCDisplayed
                 value: true
             - log:
                message: "ATC is displayed"
                color: GREEN_BOLD
           else:
             - log:
                message: "ATC is NOT displayed"
                color: YELLOW
        - verifyCondition: "{isATCDisplayed} == ${expectedATCDisplayed:true}"
        - log:
            message: "End function: orderDetailPage.validateATCButtonExists"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
    # Description: Validates the item count and correct measure for eaches and weighted items. 
    # Params: 
    #   ${itemQty} -> Expected quantity of the ordered item
    #   ${itemMeasure} -> Expected measure of the ordered item (pz/g)
  - name: functions.orderDetailPage.validateItemCount
    flow:
        # Expand item details.
        - executeFunction:
            name: functions.orderDetailPage.expandItemDetails
        - if:
            identifier:
              present:
                - identifier: orderDetailPage.itemQtyMeasure
            then:
              - log:
                  message: "[âœ“] Expected pieces  and measure for is correct"
                  color: GREEN_BOLD
            else:
              - failTest:
                  message: "[X] There was a problem while trying to obtain the product qty"
        - log:
            message: "End function: orderDetailPage.validateItemCount"
            color: BLUE

#--------------------------------------------------------------------------------------------------------------------
    # Description: Validate the Return to store text not displayed.
    # No Params
  - name: functions.orderDetailPage.Grocery.validateReturnToStoreTextnotDisplayed
    flow:
        - verifyIdentifier:
            notPresent:
              - identifier: orderDetailPage.Grocery.returnToStoreText
        - scroll:
            direction: down
            untilIdentifier: orderDetailPage.Grocery.returnToStoreText
            scrollLimit: 3
            wait: 2000
            position: center
        - if:
           identifier:
             notPresent:
               - identifier: orderDetailPage.Grocery.returnToStoreText
           then:
               - log:
                   message: "[âœ”ï¸Ž] Success: Return CTA text not displayed."
                   color: BLUE
           else:
               -  failTest:
                    message: "[x] Failed: Return CTA found."
        - log:
           message: "End function: orderDetailPage.Grocery.validateReturnToStoreTextnotDisplayed"
           color: BLUE

 #--------------------------------------------------------------------------------------------------------------------
    # Description: Validates the delivery pass - "Free delivery from store" discount
    # No Params
  - name: functions.orderDetailPage.verifyDeliveryPassDiscount
    flow:
        - if:
            identifier:
              present:
                - identifier: orderDetailPage.deliveryPassDiscount
            then:
              - scroll:
                  direction: down
                  untilIdentifier: orderDetailPage.deliveryPassDiscount
                  scrollLimit: 3
                  wait: 2000
                  position: center
              - if:
                  identifier:
                    present:
                      - identifier: orderDetailPage.deliveryPassDiscount
                  then:
                    - log:
                        message: "[âœ“] Expected delivery pass discount is displayed"
                        color: GREEN_BOLD
                  else:
                    - failTest:
                        message: "[X] Expected delivery pass discount is not displayed"
        - log:
            message: "End function: orderDetailPage.verifyDeliveryPassDiscount"
            color: BLUE
  
    #--------------------------------------------------------------------------------------------------------------------
    # Description: Validate an item of the order has an ATC button. 
    # No Params   
  - name: functions.orderDetailPage.validatePendingPayment
    flow:
        - verifyIdentifier:
            present:
              - identifier: orderDetailPage.pendingPaymentAlert
        - log:
            message: "End function: orderDetailPage.validatePendingPayment"
            color: BLUE
 
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function tap on the current displayed primary button below the order tracker. 
  #              Primary buttons like CTA's button i.e. 'track order', 'track shipment' 'check-in', etc
  - name: functions.orderDetailPage.tapOnOrderTrackerPrimaryButton
    flow:
      - if:
         identifier:
           notPresent:
             - identifier: orderDetailPage.orderTrackerPrimaryButton
         then:
           - scroll:
              direction: up
              untilIdentifier: orderDetailPage.orderNumber
              scrollLimit: ${scrollLimit:7}
      - click:
          identifier: orderDetailPage.orderTrackerPrimaryButton
      - log:
            message: "End function: orderDetailPage.tapOnCTAButton"
            color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: Verify address mapping is displayed. 
  # Param: ${address} 
  # TODO: This function do not make an assertion in text displayed in address mapping, added an if case when is needed to make this assertion.
  - name: functions.orderDetailPage.verifyAddressLabelIsDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: orderDetailPage.orderAddress
      - getString:
          identifier: orderDetailPage.orderAddress
          storeIn: ${displayedAddress}
      - log:
         message: Displayed address - '${displayedAddress}'
         color: CYAN
      - log:
            message: "End function: orderDetailPage.verifyAddressLabelIsDisplayed"
            color: BLUE
  
