functions:

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts whether the Thank You Page is correctly displayed.
  # No Params
  - name: functions.thankYouPage.assertPageDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: thankYouPage.title
            - identifier: thankYouPage.orderTotal
            - identifier: thankYouPage.orderNumber
            - identifier: thankYouPage.deliveryType
            - identifier: thankYouPage.fulfillmentDate
            - identifier: thankYouPage.fulfillmentName
            - identifier: thankYouPage.fulfillmentAddress
            # - identifier: thankYouPage.arrivalDate
            - identifier: thankYouPage.itemsCount
            - identifier: thankYouPage.itemsThumbnailsContainer
            - identifier: thankYouPage.continueShoppingBtn
      - log:
          message: Successful Assertion for Thank You Page (all expected elements are displaying)
          color: GREEN_BOLD
      - log:
          message: "Enf function: functions.thankYouPage.assertPageDisplayed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the displayed Order Total.
  # No Params
  - name: functions.thankYouPage.assertOrderTotal.notNull
    flow:
      - getString:
          identifier: thankYouPage.orderTotal
          storeIn: displayedOrderTotal
      - executeNode:
          file: wcp/test/helpers/Price/cleanPrice.js
          args:
            - value: ${displayedOrderTotal}
          getResponse:
            storeIn: cleanOrderTotal
      - if:
          condition: ${cleanOrderTotal} <= 0.00
          then:
            - failTest:
                message: "Order total is not correct: '${cleanOrderTotal}' (expected to be > 0.00)"
          else:
            - log:
                message: "Successful Assertion for Order Total: '${cleanOrderTotal}' (expected to be > 0.00)"
                color: GREEN_BOLD
      - log:
          message: "End function: functions.thankYouPage.assertOrderTotal.notNull"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: Asserts the displayed Order Total.
  # PARAMS:  ${expectedOrderTotal}  [Mandatory]  Expected Order Total to be displayed.
  - name: functions.thankYouPage.assertOrderTotal
    flow:
      # Get displayed order total...
      - getString:
          identifier: thankYouPage.orderTotal
          storeIn: displayedOrderTotal
      # Clean displayed order total...
      - executeNode:
          file: wcp/test/helpers/Price/cleanPrice.js
          args:
            - value: ${displayedOrderTotal}
          getResponse:
            storeIn: cleanDisplayedOrderTotal
      # Clean expected order total...
      - executeNode:
          file: wcp/test/helpers/Price/cleanPrice.js
          args:
            - value: ${expectedOrderTotal}
          getResponse:
            storeIn: cleanExpectedOrderTotal
      - if:
          condition: ${cleanDisplayedOrderTotal} != ${cleanExpectedOrderTotal}
          then:
            - failTest:
                message: "X Order Total is not correct (displayed '${cleanDisplayedOrderTotal}' vs expected '${cleanExpectedOrderTotal}')"
          else:
            - log:
                message: "✔︎ Order Total is correct: (displayed '${cleanDisplayedOrderTotal}' & expected '${cleanExpectedOrderTotal}')"
                color: GREEN_BOLD
      - log:
          message: "End function: thankYouPage.assertOrderTotal"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Gets the Order Number generated in the Thank You Page.
  # No Params
  # Returns:  ${returnedOrderNumber}
  - name: functions.thankYouPage.getOrderNumber
    flow:
      - getString:
          identifier: thankYouPage.orderNumber
          extractNumbers: true
          storeIn: returnedOrderNumber
      - log:
          message: "Order Number successfully got: '${returnedOrderNumber}'"
          color: GREEN_BOLD
      - log:
          message: "End function: functions.thankYouPage.getOrderNumber"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the Tank You Page is displaying the correct expected Delivery Type.
  # Params:   ${expectedDeliveryType}  [Mandatory]  Expected Delivery Type. Options: [ S2H | Pickup ]
  - name: functions.thankYouPage.assertCorrectDeliveryType
    flow:
      - if:
          condition: ${expectedDeliveryType} != 'S2H' && ${expectedDeliveryType} != 'Pickup'
          then:
            - failTest:
                message: "Incorrect value for param 'expectedDeliveryType': '${expectedDeliveryType}'"
      - getString:
          identifier: thankYouPage.deliveryType
          storeIn: rawDeliveryTypeDisplayed
      - if:
          condition: ${expectedDeliveryType} == 'S2H'
          then:
            - storeIn:
                key: expectedText
                value: data.global.deliveryText
          else:
            - storeIn:
                key: expectedText
                value: Pickup # TODO: review and correct if necessary once able to create a Pickup order.
      - executeNode:
          file: wcp/test/helpers/stringContains.js
          args:
            - value: ${rawDeliveryTypeDisplayed}
            - value: ${expectedText}
          getResponse:
            storeIn: isDisplayingCorrectDeliveryMethod
      - if:
          condition: ${isDisplayingCorrectDeliveryMethod}
          then:
            - log:
                message: "Successful Assertion for Delivery Type: '${rawDeliveryTypeDisplayed}' (expected to contain: '${expectedText}' for '${expectedDeliveryType}' orders)"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Displayed Delivery Type not correct: '${rawDeliveryTypeDisplayed}' (expected to contain: '${expectedText}' for '${expectedDeliveryType}' orders)"
      - log:
          message: "End function: functions.thankYouPage.assertCorrectDeliveryType"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the Tank You Page is displaying the correct expected Fulfillment Name.
  # Params:   ${expectedFulfillmentName}  [Mandatory]  Expected Fulfillment Name.
  - name: functions.thankYouPage.assertFulfillmentName
    flow:
      - getString:
          identifier: thankYouPage.fulfillmentName
          storeIn: displayedFulfillmentName
      - log:
          message: "Validate if fulfillment name is displayed: (expected: '${expectedFulfillmentName}')"
          color: CYAN
      - executeNode:
          file: wcp/test/helpers/stringContains.js
          args:
            - value: ${displayedFulfillmentName}
            - value: ${expectedFulfillmentName}
          getResponse:
            storeIn: isExpectedFulfillmentName
      - if:
          condition: ${isExpectedFulfillmentName}
          then:
            - log:
                message: "Successful Assertion for Fulfillment Name: (Dislpayed: '${displayedFulfillmentName}') (expected: '${expectedFulfillmentName}')"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Displayed Fulfillment Name not correct: (Displayed: '${displayedFulfillmentName}') (expected: '${expectedFulfillmentName}')"
      - log:
          message: "End function: functions.thankYouPage.assertFulfillmentName"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the Tank You Page is displaying the correct expected Fulfillment Address.
  # Params:   ${expectedFulfillmentAddress}  [Mandatory]  Expected Fulfillment Address.
  - name: functions.thankYouPage.assertFulfillmentAddress
    flow:
      - getString:
          identifier: thankYouPage.fulfillmentAddress
          storeIn: displayedFulfillmentAddress
      - if:
          condition: ${displayedFulfillmentAddress} == ${expectedFulfillmentAddress}
          then:
            - log:
                message: "Successful Assertion for Fulfillment Address: '${displayedFulfillmentAddress}' (expected: '${expectedFulfillmentAddress}')"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Displayed Fulfillment Address not correct: '${displayedFulfillmentAddress}' (expected: '${expectedFulfillmentAddress}')"
      - log:
          message: "End function: functions.thankYouPage.assertFulfillmentAddress"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the displayed Total Items Count.
  # Params:  ${expectedTotalItemsCount}  [Mandatory]  Expected Total Items Count.
  - name: functions.thankYouPage.assertTotalItemsCount
    flow:
      - storeIn:
          key: totalQuantityDisplayed
          value: 0
      - numberOfChildElements:
          identifier: thankYouPage.fulfillmentContainer
          filterBy: thankYouPage.itemsCount
          storeIn: qtyLabelsFound
      - arithmetic:
          expression: ${qtyLabelsFound} + 1
          storeIn: maxPosition
      - loop:
          begin: 1
          end: ${maxPosition}
          storeIndex: position
          flow:
            - getString:
                identifier: thankYouPage.itemsCount.byPosition # <-- ${position}
                extractNumbers: true
                storeIn: labelQty
            - arithmetic:
                expression: ${totalQuantityDisplayed} + ${labelQty}
                storeIn: totalQuantityDisplayed
      - if:
          condition: ${totalQuantityDisplayed} == ${expectedTotalItemsCount}
          then:
            - log:
                message: "Successful Assertion for Total Items Count: '${totalQuantityDisplayed}' (expected: '${expectedTotalItemsCount}')"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Total Items Count not correct: '${totalQuantityDisplayed}' (expected: '${expectedTotalItemsCount}')"
      - log:
          message: "End function: functions.thankYouPage.assertTotalItemsCount"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Click on continue shopping button
  - name: functions.thankYouPage.tapOnContinueShoppingButton
    flow:
      - click:
          identifier: thankYouPage.continueShoppingBtn
      - log:
          message: "End function: thankYouPage.tapOnContinueShoppingButton"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
# Description: Verify Promotion Code Text
  - name: functions.thankYouPage.verifyPromoCodeTextIsDisplayed
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: thankYouPage.promoCodeText
          then:
            - scroll:
                direction: down
                untilIdentifier: thankYouPage.promoCodeText
      - verifyIdentifier:
          present:
            - identifier: thankYouPage.promoCodeText
      - log:
          message: "End function: thankYouPage.promotionTextIsDisplayed"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------

  # Description: Validate Thank you page for subscription item.
  # No Params
  - name: functions.thankYouPage.assertPageforSubscriptionItem
    flow:
      - verifyIdentifier:
          present:
            - identifier: thankYouPage.title
            - identifier: thankYouPage.orderTotal
            - identifier: thankYouPage.orderNumber
            - identifier: thankYouPage.deliveryType
            - identifier: thankYouPage.fulfillmentDate
            - identifier: thankYouPage.fulfillmentName
            - identifier: thankYouPage.fulfillmentAddress
            - identifier: thankYouPage.arrivalDate
            - identifier: thankYouPage.subscriptionitemsCount
            - identifier: thankYouPage.manageNowLink
            - identifier: thankYouPage.subscriptionItemsThumbnailsContainer
            - identifier: thankYouPage.continueShoppingBtn
      - log:
          message: Successful Assertion for Thank You Page (all expected elements are displaying)
          color: GREEN_BOLD
      - log:
          message: "Enf function: functions.thankYouPage.assertPageforSubscriptionItem"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------

  # Description: Valdidate fulfillment date (delivery or pickup) displayed correctly
  # Params ${expectedFulfillmentDate}
  - name: functions.thankYouPage.assertFulfillmentDate
    flow:
      - log: "Expected fulfillment date: ${expectedFulfillmentDate}"
      - getString:
          identifier: thankYouPage.fulfillmentDate
          storeIn: ${currentDisplayedFulfillmentdate}
      - log: "Extracted current displayed fulfillment date: ${currentDisplayedFulfillmentdate}"
      - verifyCondition: "${expectedFulfillmentDate} == ${currentDisplayedFulfillmentdate}"
      - log:
          message: Successful Assertion for expected fullfillment date displayed.
          color: GREEN_BOLD
      - log:
          message: "Enf function: functions.thankYouPage.assertFulfillmentDate"
          color: BLUE
#----------------------------------------------------------------------------------------------------------------------
  # Description: This function is used to verify the manage subscription page
  # No Param
  - name: functions.thankyouPage.manageNow.navigateToManageSubscription 
    flow:
      - if:
          identifier:
            present:
              - identifier: thankYouPage.manageNowLink
          then:
            - click:
               identifier: thankYouPage.manageNowLink      
          else:
            - failTest:
                message: "End Functions: functions.thankyouPage.manageNow.navigateToManageSubscription"
      - log: 
          message: "End Functions: functions.thankyouPage.manageNow.navigateToManageSubscription"
          color: BLUE
#----------------------------------------------------------------------------------------------------------------------
# This function clicks on Not now button from ratings pop up
# No param
  - name: functions.thankYouPage.tapNotNowRatingsButton
    flow:
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: thankYouPage.notNowRatingsButton
          then:
              - click:
                  identifier: thankYouPage.notNowRatingsButton
          else:
            - log:
                message: "Ratings pop-up is not displayed"

#----------------------------------------------------------------------------------------------------------------------
# This function asserts the savings container and value are displayed as well as that the correct savings value is displayed
# Params:   ${expectedSavingsValue}  [Optional]  Expected savings value.
  - name: functions.thankYouPage.assertSavingsDisplayed
    flow:
      - scroll:
          direction: down
          untilIdentifier: thankYouPage.savingsContainer

      - verifyIdentifier:
          present:
            - identifier: thankYouPage.savingsContainer
            - identifier: thankYouPage.savingsValue

      - if:
          condition: ${expectedSavingsValue} != null
          then:
              - getString:
                  identifier: thankYouPage.savingsValue
                  storeIn: displayedSavings
              - executeNode:
                  file: wcp/test/helpers/Price/cleanPrice.js
                  args:
                    - value: ${displayedSavings}
                  getResponse:
                    storeIn: cleanedSavings
              - if:
                  condition: ${expectedSavingsValue} != ${cleanedSavings}
                  then:
                      - failTest: "X Displayed savings not correct: '${cleanedSavings}' (expected: '${expectedSavingsValue}')"
                  else:
                      - log: "Savings are displayed correctly"
          else:
              - log: "Savings value validation skipped"

      - log:
          message: "End Functions: thankYouPage.assertSavingsDisplayed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: Asserts the Order Number is displayed.
  - name: functions.thankYouPage.assertOrderNumberDisplayed
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: thankYouPage.orderNumber
            - log:
                message: ✔︎ Order Number displayed successfully.
                color: GREEN_BOLD
          catch:
            flow:
              - failTest:
                  message: X Order Number not displayed.
      - log:
          message: "End function: thankYouPage.assertOrderNumberDisplayed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: Asserts correct format for the Order Number label.
  # PARAMS:  ${assertPrefix}  [Optional]  Prefix to assert. If null, default prefix will be used per market.
  #          ${length}        [Optional]  Expected length of the order number. If null, default length will be used per market.
  - name: functions.thankYouPage.assertOrderNumberFormat
    flow:
      # Set defaults for assertPrefix if needed...
      - if:
          condition: ${assertPrefix} == "null" && ${market} == 'MX'
          then:
            - storeIn:
                key: assertPrefix
                value: 'Pedido #'
      - if:
          condition: ${assertPrefix} == "null" && (${market} == 'US' || ${market} == 'CA')
          then:
            - storeIn:
                key: assertPrefix
                value: ""
      # Set defaults for length if needed...
      - if:
          condition: ${length} == "null" && ${market} == 'MX'
          then:
            - storeIn:
                key: length
                value: 15
      - if:
          condition: ${length} == "null" && (${market} == 'US' || ${market} == 'CA')
          then:
            - storeIn:
                key: length
                value: 15 # TODO: update with specific value for US & CA once required.
      # Get full order number label and order number alone...
      - if:
          condition: ${platform} == 'Android'
          then:
            - getString:
                identifier: thankYouPage.orderNumber
                attribute: content-desc
                storeIn: displayedLabel
            - getString:
                identifier: thankYouPage.orderNumber
                attribute: content-desc
                storeIn: displayedOrderNumber
                extractNumbers: true
          else:
            - getString:
                identifier: thankYouPage.orderNumber
                attribute: label
                storeIn: displayedLabel
            - getString:
                identifier: thankYouPage.orderNumber
                attribute: label
                storeIn: displayedOrderNumber
                extractNumbers: true
      # Assert length of order number...
      - executeNode:
          file: wcp/test/helpers/stringLengthCheck.js
          args:
            - value: ${displayedOrderNumber} # <--- string to check
            - value: ${length}               # <--- expected length
          getResponse:
            storeIn: lengthCheck
      - if:
          condition: ${lengthCheck}
          then:
            - log:
                message: ✔︎ Order Number length is correct (${length} digits)
                color: GREEN_BOLD
          else:
            - failTest:
                message: X Order Number length is not correct (expected ${length} digits)
      # Assert format...
      - executeNode:
          file: wcp/test/helpers/stringContains.js
          args:
            - value: ${displayedLabel}                      # <-- string to check
            - value: ${assertPrefix}${displayedOrderNumber} # <-- substring expected to be contained
          getResponse:
            storeIn: formatCheck
      - if:
          condition: ${formatCheck}
          then:
            - log:
                message: ✔︎ Order Number format is correct (${assertPrefix}${displayedOrderNumber})
                color: GREEN_BOLD
          else:
            - failTest:
                message: 'X Order Number format is not correct (expected: ${assertPrefix}${displayedOrderNumber})'
      # Reset defaults...
      - storeIn:
          key: assertPrefix
          value: 'null'
      - storeIn:
          key: length
          value: 'null'
      - log:
          message: "End function: thankYouPage.assertOrderNumberFormat"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: This function asserts the items listed in the Thank You Page in the corresponding list by Fulfillment
  #    Method. In Merge Hallways, a single order can have different type of fulfillment methods per the item types
  #    (unscheduled delivery, scheduled delivery or scheduled pickup), so, the products will display in separate
  #    sections/lists in the page depending on their fulfillment type.
  #
  # PARAMS:
  #   ${fulfillmentMethod}  [Mandatory]
  #        Defines in which category/list the items array will be validated.
  #        Options: [ scheduledPickup | scheduledDelivery | unscheduledDelivery ]
  #
  #   ${itemsArray}  [Mandatory]
  #         List of items to be asserted.
  #         Similar items array as the one obtained by the function 'searchPage.addToCartUsingItemArrayList-GetProductDetails'.
  #
  #   ${assertItemDetails}  [Mandatory]
  #         Whether to assert the items details or only whether it's displayed or not.
  #         Options: [ true | false ]. If null, it will be taken as true.
  - name: functions.thankYouPage.assertItemsArrayListed-byFulfillmentMethod
    flow:
      # NOTE: FUNCTION PLACEHOLDER.
      # TODO: IMPLEMENT FUNCTION ONCE UPDATED THANK YOU PAGE IS AVAILABLE IN MERGE HALLWAYS.
      - failTest:
          message: Function 'thankYouPage.assertItemsArrayListed-byFulfillmentMethod' is not implemented yet.
      - log:
          message: "End function: thankYouPage.assertItemsArrayListed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: This function asserts the payment method displayed is a CC or a DC and it's correct.
  # PARAMS:  ${cardLast4Digits}  [Mandatory]  Last 4 digits of the CC/DC that must be displaying.
  - name: functions.thankYouPage.assertPaymentMethod-CC/DC
    flow:
      # NOTE: FUNCTION PLACEHOLDER.
      # TODO: IMPLEMENT FUNCTION ONCE UPDATED THANK YOU PAGE IS AVAILABLE IN MERGE HALLWAYS.
      - failTest:
          message: Function 'thankYouPage.assertPaymentMethod-CC/DC' is not implemented yet.
      - log:
          message: "End function: functions.thankYouPage.assertPaymentMethod-CC/DC"
          color: BLUE
