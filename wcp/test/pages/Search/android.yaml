functions:
        
#--------------------------------------------------------------------------------------------------------------------

  # Description: Get product name for product added to cart
  # No Params
  - name: functions.searchResultPage.getProductName
    platform: android
    flow:
      - getString:
          identifier: searchResultPage.productName
          storeIn: productName
          attribute: text
      - log: 
          message: "Product name added to cart: ${productName}"
          color: CYAN
      - log:
          message: "End Functions: searchResultPage.getProductName"
          color: BLUE
        
#--------------------------------------------------------------------------------------------------------------------

  # Description: Gets the name of the first product displayed in SLP regardless it has been added or not to the cart.
  # No Params
  # Returns:     ${returnedProductName}  A string with the full product name.
  # Works for:    [ MX [✓]   MX-Bodega [_TBD_]   US [_TBD_] ]
  - name: functions.searchResultPage.getProductName.ofFirstProduct
    platform: android
    flow:
      - getString:
          identifier: searchResultPage.firstProductName
          storeIn: returnedProductName
      - log: 
          message: "Name of first product: ${returnedProductName}"
          color: CYAN
      - log:
          message: "End function: functions.searchResultPage.getProductName.ofFirstProduct"
          color: BLUE
        
#--------------------------------------------------------------------------------------------------------------------

  # Description: Get product price for product added to cart
  # Params:    ${productName}  [Mandatory]  Product name for which the price is required.
  - name: functions.searchResultPage.getProductPrice
    platform: android
    flow:
      - getString:
          identifier: searchResultPage.productPrice
          storeIn: productPrice
          attribute: content-desc
      - log: 
          message: "Product price added to cart: ${productPrice}"
          color: CYAN
      - log:
          message: "End Functions: searchResultPage.getProductPrice"
          color: BLUE

#----------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: Gets the Original Price of the Product. The Original Price is the one that displays strikethrough when
  #              the product has some sort of discount.
  #
  # PARAMS:   ${productName}  [Mandatory]
  #              Name of the Product to get its Original Price.
  #
  # RETURNS:  ${productOriginalPrice}
  #              The Original Price of the product. If the product doesn't have any sort of discount, the returned value
  #              will be the same final price that it is displaying.
  - name: functions.searchResultPage.getOriginalPrice
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: searchResultPage.productOriginalPrice
            timeout: 5000
          then:
            - getString:
                identifier: searchResultPage.productOriginalPrice
                storeIn: productOriginalPrice
                attribute: text
          else:
            - getString:
                identifier: searchResultPage.productPrice
                storeIn: productOriginalPrice
                attribute: content-desc
      - log:
          message: "Product Original Price Got: ${productOriginalPrice}"
          color: CYAN
      - log:
          message: "End function: functions.searchResultPage.getOriginalPrice"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts whether the given tag is displayed for the given product.
  # Params:      ${productName}  [Mandatory]  Name of the product to assert it's tag is displayed.
  #              ${tag}          [Mandatory]  Name of the Tag to assert its displayed.
  #                                             Options: [ InternationalSeller | <TBD> ] # TODO: add more tags as they are coded in the function logic.
  # Works for:    [ MX [✓]   MX-Bodega [_TBD_]   US [_TBD_] ]
  - name: functions.searchResultPage.assertProductTagDisplayed
    platform: android
    flow:
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Tag to assert: '${tag}'"
          color: CYAN

      - storeIn:
          key: tagText
          value: undefined

      # International Seller...
      - if:
          condition: ${tag} == 'InternationalSeller'
          then:
            - storeIn:
                key: tagText
                value: Envío internacional

      # TODO: complete additional IFs here for other Tags once they are required (no need to nest IFs)...

      - if:
          condition: ${tagText} == 'undefined'
          then:
            - failTest:
                message: "Incorrect tag received: '${tag}'"
          else:
            - verifyIdentifier:
                present:
                  - identifier: searchResultPage.productTag.byProductNameAndTagText # <-- ${productName}, ${tagText}
      - log:
          message: "End function: functions.searchResultPage.assertProductTagDisplayed"
          color: BLUE


        
#--------------------------------------------------------------------------------------------------------------------

  # Description: Close the fulfillment bottom sheet
  # No Params
  - name: functions.searchPage.closeFulfillmentReminderBottomSheet
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: searchPage.fulfillmentBottomSheet
            timeout: 2000
          then:
            - click:
                identifier: searchPage.fulfillmentBottomSheetCloseBtn
            - log: 
                message: "Fulfillment reminder bottom sheet is closed"
                color: CYAN
      - log:
          message: "End functions: functions.searchPage.closeFulfillmentReminderBottomSheet"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Search for products using sku, keywords, name or category
  # Params:      ${searchText}  [Mandatory]  Product search info
  - name: functions.searchField.enterText
    platform: android
    flow:
      - enterText:
          identifier: searchPage.searchField
          string: ${searchText}
          pressEnter: true
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: functions.searchPage.closeFulfillmentReminderBottomSheet
            - executeFunction:
                name: functions.homePage.personalizedShoppingExperiencePopup.dismissIfDisplayed
      - executeFunction:
          name: functions.utils.handlePopUp
      - log:
          message: "End Functions: searchField.enterText"
          color: BLUE
