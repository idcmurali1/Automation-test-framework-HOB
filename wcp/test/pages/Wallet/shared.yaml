functions:

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function will validate if the wallet page is opened
  # No Param
  - name: functions.walletPageTitle.isPageDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: walletPage.pageTitle
              - identifier: walletPage.continueButton
              - identifier: walletPage.payWithPaypalButton
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: walletPage.isPageDisplayed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: walletPage.isPageDisplayed (Not displayed)"
                color: BLUE                

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This function taps on add new payment method button.
  # No Param
  - name: functions.walletPage.addNewPaymentMethodButton
    flow:
      - click:
          identifier: walletPage.addNewPaymentMethodButton
      - log:
          message: "End function: walletPage.addNewPaymentMethodButton"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This function taps on credit/debitCard button.
  # No Param
  - name: functions.walletPage.addPaymentMethod.creditDebitCardButton
    flow:
      - click:
          identifier: walletPage.addPaymentMethod.creditDebitCardButton
      - log:
          message: "End function: walletPage.addPaymentMethod.CreditDebitCardButton"
          color: BLUE                

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function will validate if the add a payment method page is opened
  # No Param
  - name: functions.walletPage.addCreditOrDebitCard.isPageDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: walletPage.addCreditOrDebitCard.pageTitle
              - identifier: walletPage.addCreditOrDebitCard.saveButton
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: walletPage.addCreditOrDebitCard.isPageDisplayed (returnedIsDisplayed)"
                color: CYAN
          else:
            - log:
                message: "End function: walletPage.addCreditOrDebitCard.isPageDisplayed (Not displayed)"
                color: BLUE 

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function checks defalut card
  # param: ${addrChkBox}    [Mandatory] default card
  - name: functions.walletPage.addCreditCard.setDefaultCard.checkBox
    flow:
      -  if:
          identifier:
            present:
              - identifier: walletPage.addCreditCard.setDefaultCard.checkBox
          then:
            - getString:
                identifier: walletPage.addCreditCard.setDefaultCard.checkBox
                attribute: checked
                storeIn: addrChkBox
            - if:
                condition: ${addrChkBox} == false
                then:
                  - click:
                      identifier: walletPage.addCreditCard.setDefaultCard.checkBox
                      wait: 3000
      - log:
          message: "End function: walletPage.addCreditCard.setDefaultCard.checkBox"
          color: BLUE             

  # ----------------------------------------------------------------------------------------------------------------     

  # Description:  This function taps on save button.
  # No Param
  - name: functions.walletPage.saveButton
    flow:
      - click:
          identifier: walletPage.saveButton
      - log:
          message: "End function: walletPage.saveButton"
          color: BLUE                

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function scrolls into the Cards Section.
  # No Params
  - name: functions.walletPage.scrollIntoCardsSection
    flow:
      - if:
          identifier:
            present:
              - identifier: checkoutPage.wallet.cardsSection.cardContainer
            timeout: 2000
          then:
            # Small position correction...
            - drag:
                from:
                  x: 50%
                  y: 50%
                to:
                  x: 50%
                  y: 25%
                wait: 3000
          else:
            - scroll:
                direction: down
                untilIdentifier: checkoutPage.wallet.cardsSection.cardContainer
                wait: 3000
                scrollLimit: 3
      - if:
          identifier:
            present:
              - identifier: checkoutPage.wallet.cardsSection.addCardButton
            timeout: 2000
          then:
            - log:
                message: ✓ Successfully scrolled into Cards section.
                color: GREEN
          else:
            - failTest:
                message: X Cards Section not found after scrolling.
      - log:
          message: "End function: functions.walletPage.scrollIntoCardsSection"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function returns whether there are cards listed.
  # No Params
  # Returns:  ${areCardsListed}  Whether there are cards listed ( true | false ).
  - name: functions.walletPage.cardsSection.areCardsListed
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: checkoutPage.wallet.cardsSection.firstCardListed
          then:
            - storeIn:
                key: areCardsListed
                value: true
            - log:
                message: ✓ Cards listed
                color: GREEN
          else:
            - storeIn:
                key: areCardsListed
                value: false
            - log:
                message: X Cards not listed
                color: GREEN
      - log:
          message: "End function: functions.walletPage.cardsSection.areCardsListed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the last 4 digits of the first card listed.
  # No Params
  # Returns:  ${cardLast4Digits}  The last 4 digits of the first card listed.
  - name: functions.walletPage.cardsSection.getLast4DigitsOfFirstCardListed
    flow:
      - getString:
          identifier: checkoutPage.wallet.cardsSection.firstCardListed
          extractNumbers: true
          storeIn: cardLast4Digits
      - log:
          message: "Last 4 Digits of first Card listed: *${cardLast4Digits}"
          color: CYAN
      - log:
          message: "End function: functions.walletPage.cardsSection.getLast4DigitsOfFirstCardListed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function selects the first card.
  # No Params
  - name: functions.walletPage.cardsSection.selectFirstCard
    flow:
      - click:
          identifier: checkoutPage.wallet.cardsSection.firstCardListed
      - if:
          identifier:
            present:
              - identifier: checkoutPage.wallet.cardsSection.firstCardRadioBtn
          then:
            - click:
                identifier: checkoutPage.wallet.cardsSection.firstCardRadioBtn
      - sleep:
          duration: 3000
      - log:
          message: "End function: functions.walletPage.cardsSection.selectFirstCard"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function enters CVV in the selected card.
  # Params:  ${cvv}  [Optional]  Desired CVV. If not provided, default CVV will be entered.
  - name: functions.walletPage.cardsSection.enterCVV
    flow:
      - if:
          condition: ${cvv} == "null"
          then:
            - storeIn:
                key: cvv
                value: data.global.card.cvv.123
      - if:
          identifier:
            present:
              - identifier: checkoutPage.wallet.cardsSection.displayedCVV
            timeout: 5000
          then:
            - enterText:
                identifier: checkoutPage.wallet.cardsSection.displayedCVV
                clickFirst: true
                pressEnter: true
                string: ${cvv}
            - sleep:
                duration: 3000
            - log:
                message: ✓ CVV entered successfully.
                color: GREEN
          else:
            - failTest:
                message: X There is no CVV displayed for selected card in Checkout/Wallet.
      - log:
          message: "End function: functions.walletPage.cardsSection.enterCVV"
          color: BLUE

  # Description: This function validates Cashi container
  # No params 
  - name: functions.walletPage.validateCashiBox
    flow: 
      - verifyIdentifier:
          present:
            - identifier: walletPage.cashiBox
      - log: 
          message: "End Function: functions.walletPage.validateCashiBox"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on Cashi container when trying to add new payment
  # No params 
  - name: functions.walletPage.tapCashiBox
    flow: 
      - click:
          identifier: walletPage.cashiBox
      - log: 
          message: "End Function: functions.accountPage.tapCashiBox"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates cashi pop up is displayed 
  # No params 
  - name: functions.walletPage.validateCashiPopupIsDisplayed
    flow: 
      - if: 
          identifier:
            present:
              - identifier: phoneNumber.popUpTitle
          then: 
            - click:
                identifier: phoneNumber.popUpTitle.notNowBtn
          else:
              - verifyIdentifier:
                  present:
                    - identifier: cashi.popupTitleLabel
                    - identifier: cashi.popupContainter
      - log: 
          message: "End Function: functions.accountPage.verifyCashiPopUpIsDisplaye"
          color: BLUE

  #------------------------------------------------------------------------------------------------------------------
  
  # Description: This function taps on add payment method button
  # No params
  - name: functions.walletPage.tapAddPaymentMethod
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: checkoutPage.wallet.cardsSection.addCardButton
          then:
            - scroll:
                direction: down
                untilIdentifier: checkoutPage.wallet.cardsSection.addCardButton
                position: center
                scrollLimit: 5
                timeout: 10000
      - click:
          identifier: checkoutPage.wallet.cardsSection.addCardButton
      - log:
          message: "End function: walletPage.tapAddPaymentMethod"
          color: BLUE

  #------------------------------------------------------------------------------------------------------------------
  
  # Description: This function taps on add payment method button
  # No params
  - name: functions.walletPage.tapCredit$DebitCardBtn
    flow:
      - click:
          identifier: checkoutPage.wallet.credit$DebitCard
      - log:
          message: "End function: walletPage.tapAddPaymentMethod"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on back navigation button
  # No params 
  - name: functions.walletPage.tapBackNavigationButton 
    flow: 
      - click:
          identifier: walletPage.backNavigationButton          
      - log: 
          message: "End Function: walletPage.tapBackNavigationButton"
          color: BLUE   

  #-----------------------------------------------------------------------------------------------------------------

  # Description: This function clicks on add address link
  # No params 
  - name: functions.walletPage.tapAddAddressLink
    flow: 
      - click:
          identifier: walletPage.addAddressLink
      - log: 
          message: "End Function: walletPage.tapAddAddressLink"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------

  # Description: This function clicks on add address link
  # No params 
  - name: functions.walletPage.billingAddress
    flow: 
      - click:
          identifier: walletPage.addCreditOrDebitCard.billingAddress
      - log: 
          message: "End Function: walletPage.tapAddAddressLink"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------          
  # Description: This function verify the fields in address section
  # No params 
  - name: functions.walletPage.verifyAddAddressFields
    flow:
      - verifyIdentifier:
          present:
            - identifier: walletPage.addAddress.addressField
            - identifier: walletPage.addAddress.zipcode$PostalField
      - if:
          condition: ${market} == 'CA'
          then:
            - verifyIdentifier:
                present:
                  - identifier: walletPage.creditOrDebitCard.cityName
                  - identifier: walletPage.creditOrDebitCard.stateName
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - verifyIdentifier:
                present:
                  - identifier: walletPage.addAddress.countrySelector
                  - identifier: walletPage.addAddress.exteriorNumber
                  - identifier: walletPage.addAddress.interiorNumber
            - if:
                identifier:
                  notPresent:
                    - identifier: walletPage.addAddress.coloniaSelector
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: walletPage.addAddress.coloniaSelector
                      timeout: 5000
                      scrollLimit: 5
            - verifyIdentifier:
                present:
                  - identifier: walletPage.addAddress.coloniaSelector
      - log: 
          message: "End Function: walletPage.verifyAddAddressFields"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------              
  # Description: This function enters the Address
  # Params:      ${addressField}  [Mandatory]  The address field.
  - name: functions.addCreditDebitCardPage.enterAddressField
    flow:
      - if:
          condition: ${platform} == 'iOS' && (${market} == 'MX' || ${market} == 'MX-Bodega')
          then:
            - click:
                identifier: walletPage.addAddress.selectCountryMexico
      - enterText:
          identifier: walletPage.addAddress.addressField
          string: ${addressField}
          clickFirst: true
          clearField: true
      - executeFunction:
          name: functions.utils.hideKeyboard
      - log:
          message: "End function: addCreditDebitCardPage.enterAddressField"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------
  # Description: This function enters the exterior number
  # Params:      ${exteriorNumber}  [Mandatory]  The exterior Number.
  - name: functions.addCreditDebitCardPage.enterExteriorNumber
    flow:
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - enterText:
                identifier: walletPage.addAddress.exteriorNumber
                string: ${exteriorNumber}
                clickFirst: true
                clearField: true
            - executeFunction:
                name: functions.utils.hideKeyboard          
      - log:
          message: "End function: addCreditDebitCardPage.enterExteriorNumber"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------
  # Description: This function enters the zipcode
  # Params:      ${zipcode}  [Mandatory]  The zipcode.
  - name: functions.addCreditDebitCardPage.enterPostal$Zipcode
    flow:
      - enterText:
          identifier: walletPage.addAddress.zipcode$PostalField
          string: ${zipcode}
          clickFirst: true
          clearField: true
      - executeFunction:
          name: functions.utils.hideKeyboard
      - log:
          message: "End function: addCreditDebitCardPage.enterZipcode"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function verifies the wallet page
  # No params
  - name: functions.walletPage.assertPageDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: checkoutPage.addCreditDebitCardButton
            - identifier: walletPage.paymentMethodTitle
            - identifier: walletPage.cashiBox
            - identifier: walletPage.DiscountsAndPromotionsSectionHeading
      - log:
          message: "End function: walletPage.assertPageDisplayed"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: Asserts the Credit/Debit Card is listed.
  # Params:      ${cardLast4Digits}  [Mandatory]  The last 4 digits of the card to be asserted.
  - name: functions.walletPage.assertCardListed
    flow:
      - log:
          message: Checking if card ending in '${cardLast4Digits}' is listed...
          color: GREEN
      - verifyIdentifier:
          present:
            - identifier: walletPage.cardsSection.cardContainer.byCardLast4Digits # <-- ${cardLast4Digits}
          timeout: 5000
      - log:
          message: "End function: functions.walletPage.assertCardListed"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------
  # Description: This function check or uncheck billing address same as delivery address checkbox.
  # No Params
  - name: functions.addCreditDebitCardPage.billingSameDeliveryAddressCheckbox
    flow:
      - click:
          identifier: walletPage.addCreditOrDebitCard.billingAddress
      - log:
          message: "End function: addCreditDebitCardPage.billingSameDeliveryAddressCheckbox"
          color: BLUE

  #-------------------------------------------------------------------------------------------------------------------
  # Description: This function taps on the Gift Card option in the Add payment method bottom sheet
  - name: functions.walletPage.addPaymentMethod.tapGiftCardButton
    flow:
      - click:
          identifier: walletPage.addPaymentMethod.giftCardContainer
      - log:
          message: "End Function: wallet.addPaymentMethod.tapGiftCardButton"
          color: BLUE
#-------------------------------------------------------------------------------------------------------------------
  # Description: This function is used to enter gift card pin number
  # Param  ${giftCardPin} [Mandatory] >> Used to Enter Gift card pin
  - name: functions.walletPage.addPaymentMethod.giftCard.enterGiftCardPin
    flow:
      - enterText:
          identifier: walletPage.addPaymentMethod.giftCardPinField
          string: ${giftCardPin}
      - goBack: true
      - log:
          message: "End Function: walletPage.addPaymentMethod.enterGiftCardPin"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to enter gift card number
  # Param  ${giftCardNumber} [Mandatory] >> Used to enter gift card number

  - name: functions.walletPage.addPaymentMethod.giftCard.enterGiftCardNumber
    flow:
      - enterText:
          identifier: walletPage.addPaymentMethod.giftCardNumberField
          string: ${giftCardNumber}
      - log:
          message: "End Function: walletPage.addPaymentMethod.enterGiftCardNumber"
          color: BLUE


  #-----------------------------------------------------------------------------------------------------------------

  # Description: This function is used to validatte gift card page displayed
  # No Param
  - name: functions.walletPage.addPaymentMethod.addGiftCard.isPageDisplayed
    flow:
      - storeIn:
          key: isReturnedDisplayed
          value: false
      - if: 
          identifier:
            present:
              - identifier: walletPage.addPaymentMethod.giftCardPageTitle
          then:
            - storeIn:
                key: isReturnedDisplayed
                value: true
            - log:
                message: "End Function: walletPage.addPaymentMethod.addGiftCard.isPageDisplayed (Displayed)"
                color: BLUE
          else:
            - failTest:
                message: "End Function: walletPage.addPaymentMethod.addGiftCard.isPageDisplayed (Not Displayed)"

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to click on save button
  # No Param
  - name: functions.walletPage.addPaymentMethod.giftCard.tapOnSaveBtn
    flow:
      - click:
          identifier: walletPage.addPaymentMethod.giftCard.saveBtn
      - log:
          message: "End Function: walletPage.addPaymentMethod.tapOnSaveBtn"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to tab on klarna in wallet page.
  # No Param
  - name: functions.walletPage.tabKlarnaBtn
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: walletPage.otherWaysToPay.klarnaBtn
      - log:
          message: "End Function: walletPage.tabKlarnaBtn"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to validate and accept klarna pop up.
  # No Param
  - name: functions.walletPage.valdiateAndAcceptKlarnaPopUp
    flow:
      - verifyIdentifier:
          present:
            - identifier: walletPage.otherWaysToPay.klarnaPopUp
      - click:
          identifier: walletPage.otherWaysToPay.klarnaPopUp.continueBtn
      - log:
          message: "End Function: walletPage.valdiateAndAcceptKlarnaPopUp"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is used to validate and accept klarna pop up.
  # No Param
  - name: functions.walletPage.klarnaPage.isPageDisplayed
    flow:
      - storeIn:
          key: isPageDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: walletPage.otherWaysToPay.klarnaTxt
              - identifier: walletPage.otherWaysToPay.klarnaTitle
              - identifier: walletPage.otherWaysToPay.klarnaDescription
          then:
            - storeIn:
                key: isPageDisplayed
                value: true
            - log:
                message: ✓ Klarna page is displayed successfully.
                color: GREEN_BOLD
      - log:
          message: "End Function: walletPage.klarnaPage.isPageDisplayed"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function enter mobile number in klarna.
  # Param:       ${mobileNumber}   Klarna account mobile number
  - name: functions.walletPage.klarnaPage.enterMobileNumber
    flow:
      - enterText:
          identifier: walletPage.otherWaysToPay.klarna.mobileNumberField
          string: ${mobileNumber}
          clearField: true
          pressEnter: true
      - log:
          message: "End Function: walletPage.klarnaPage.enterMobileNumber"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function tabs on continue button on klarna page.
  # No params
  - name: functions.walletPage.klarnaPage.tabContinueBtn
    flow:
      - click:
          identifier: walletPage.otherWaysToPay.klarna.mobileNumberField.continueBtn
      - log:
          message: "End Function: walletPage.klarnaPage.enterMobileNumber"
          color: BLUE

#-------------------------------------------------------------------------------------------------------------------
  
  # Description: This function enter mobile number in klarna.
  # Param:       ${otp}   Klarna account mobile number
  - name: functions.walletPage.klarnaPage.enterVerificationCode
    flow:
      - enterText:
          identifier: walletPage.otherWaysToPay.klarna.verificationCodeField
          string: ${otp}
          clearField: true
          pressEnter: true
      - log:
          message: "End Function: walletPage.klarnaPage.enterVerificationCode"
          color: BLUE

  #-------------------------------------------------------------------------------------------------------------------- 
  # Description: Select Pay Pal As Payment
  # Params: No params
  - name: functions.checkoutPage.walletPage.selectPayPalAsPayment
    flow:
      - scroll:
          direction: down
          untilIdentifier: walletPage.paypalSection.paypalCta
          position: center
      - click:
            identifier: walletPage.paypalSection.paypalCta
      - sleep:
          duration: 2000
      - executeFunction:
          name: functions.checkoutPage.wallet.tapContinueButton
      - log: 
          message: "End function: checkoutPage.walletPage.selectPayPalAsPayment"
          color: BLUE  

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enters the city name
  # Params:      ${city}  [Mandatory]  The city.
  - name: functions.addCreditDebitCardPage.cityName
    flow:
      - if:
          condition: ${market} == 'CA'
          then:
            - enterText:
                identifier: walletPage.creditOrDebitCard.cityName
                string: ${city}
                clickFirst: true
                clearField: true
            - executeFunction:
                name: functions.utils.hideKeyboard
      - log:
          message: "End function: addCreditDebitCardPage.cityName"
          color: BLUE
