functions:

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the count of checkbox present in the return web view.
  # No params
  - name: functions.returnWebPage.selectAllReturnableItems
    flow:
      - executeFunction:
          name: functions.webPage.closePopup
      - verifyIdentifier:
          timeout: 60000
          present:
            - identifier: returnWebView.mainItemContainer
      - numberOfChildElements:
          identifier: returnWebView.mainItemContainer
          filterBy: returnWebView.itemLevelCheckbox
          storeIn: checkBoxCount
      - arithmetic:
          expression: ${checkBoxCount} + 1
          storeIn: iteration
      - loop:
          begin: 1
          end: ${iteration}
          mode: increment
          storeIndex: _index
          flow:
            - click:
                identifier: returnWebView.itemCheckboxBasedOnIndex
      - log:
          message: "End functions: returnWebPage.selectAllReturnableItems"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the count of checkbox present in the return web view.
  # No params
  - name: functions.returnWebPage.tapContinuarBtn
    flow:
      - click:
          identifier: returnWebView.selecReturnProduct.contuineBtn
      - sleep:
          duration: 5000
      - log:
          message: "End functions: returnWebPage.tapContinuarBtn"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function select the reason to return the product. The function will take the count from UI and 
  #              select a common return reason for all the items.
  # No params
  - name: functions.returnWebPage.selectReturnReason
    flow:
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-bo'
          then:
            - if:
                identifier:
                  present:
                    - identifier: returnWebView.updateReturnReasonPage.quantityFragment
                then:
                  - executeFunction:
                      name: functions.returnWebView.updateReturnReasonPage.selectReturnReasonForFirstItem
                  - executeFunction:
                      name: functions.returnWebView.updateReturnReasonPage.scrollDownUntilPoliciesText
                  - executeFunction:
                      name: functions.returnWebView.updateReturnReasonPage.selectReturnReasonForSecondItem
                else: 
                  - storeIn:
                      key: index__
                      value: 1
                  - click:
                      identifier: returnWebView.updateReturnReasonPage.selectReturnReasonDropDown
                  - click:
                      identifier: returnWebView.updateReturnReasonPage.selectReceivedDifferentProductAsReason
      - if:
          condition: ${market} == 'CA'
          then:
            - executeFunction:
                name: functions.returnWebView.updateReturnReasonPage.selectReturnReasonForFirstItem

      - log:
          message: "End functions: returnWebPage.tapContinuarBtn"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate return and review submit request
 
  - name: functions.returnWebPage.reviewSubmitRequest.validatereturndetails
    flow:
      - verifyIdentifier:
          present:
              - identifier: returnWebView.reviewSubmitRequest.ordernumber
              - identifier: returnWebView.reviewSubmitRequest.returnmethod 
      - log:
          message: "End functions: returnWebPage.reviewSubmitRequest.validatereturndetails"
          color: BLUE        

 #--------------------------------------------------------------------------------------------------------------------

  # Description: This function tap on Send reuest button in return and review submit request screen
 
  - name: functions.returnWebPage.reviewSubmitRequest.tapReturnSendrequest
    flow:
      - click:
          identifier: returnWebView.reviewSubmitRequest.returnSendRequest
      - log:
          message: "End functions: returnWebPage.reviewSubmitRequest.tapReturnSendrequest"
          color: BLUE  
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function tap on Done button in Return submit screen
 
  - name: functions.returnWebPage.SubmitRequest.tapDone
    flow:
      - click:
          identifier: global.doneBtn
      - log:
          message: "End functions: returnWebPage.SubmitRequest.tapDone"
          color: BLUE 

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate return details on review screen
  - name: functions.returnWebPage.SubmitRequest.validateReturnInitiatedDetails
    flow:
      - verifyIdentifier:
          present:
              - identifier: returnWebView.reviewSubmitRequest.ordernumber
              - identifier: returnWebView.reviewSubmitRequest.returnmethod
              - identifier: returnWebView.SubmitRequest.refundInitiated
            
      - log:
          message: "End functions: returnWebPage.r.SubmitRequest.validateReturnInitiatedDetails"
          color: BLUE 
 #--------------------------------------------------------------------------------------------------------------------
 # Description: This function select the return method
  # params:      ${returnMethod}  Represents the user-selected approach to return goods.
  #              ${lineItem}      Indicates the individual item to return.
  - name: functions.returnWebPage.chooseReturnMethod.tapReturnMethod
    flow:
      - if:
          condition: ${market} == 'MX' || ${market} == 'MX-Bodega'
          then:
            - try:
                flow:
                  - scroll:
                      direction: down
                      untilIdentifier: returnWebPage.chooseReturnMethod.productContainer
                      position: center
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: returnWebPage.chooseReturnMethod.productContainer
                        position: center
      - if:
          condition: ${returnMethod} == 'ReturnInShop'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: returnWebView.chooseReturnMethod.returnToStore
                then:
                  - failTest:
                      message: "Return to shop option not present for line item - ${lineItem}"
                else:
                  - click:
                      identifier: returnWebView.chooseReturnMethod.returnToStore
                  - log:
                      message: "Successful selected return to shop checkbox."
                      color: GREEN_BOLD
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: returnWebView.chooseReturnMethod.returnByParcel
                then:
                  - failTest:
                      message: "Return by parcel option not present for line item - ${lineItem}"
                else:
                  - click:
                      identifier: returnWebView.chooseReturnMethod.returnByParcel
                  - log:
                      message: "Successful selected return as parcel checkbox."
                      color: GREEN_BOLD
      - log:
          message: "End functions: returnWebPage.chooseReturnMethod.tapReturnMethod"
          color: BLUE


  #--------------------------------------------------------------------------------------------------------------------
  # Description: This functions selects the return reason for the first item
  # No params
  - name: functions.returnWebView.updateReturnReasonPage.selectReturnReasonForFirstItem
    flow:
      - click:
          identifier: returnWebView.updateReturnReasonPage.firstReturnableItem
      - click:
          identifier: returnWebView.updateReturnReasonPage.selectArriveAfterEstimatedDateAsReason
      - log:
          message: "End functions: returnWebView.updateReturnReasonPage.selectReturnReasonForFirstItem"
          color: BLUE


  #--------------------------------------------------------------------------------------------------------------------
  # Description: This functions selects the return reason for the second item
  # No params
  - name: functions.returnWebView.updateReturnReasonPage.selectReturnReasonForSecondItem
    flow:
      - click:
          identifier: returnWebView.updateReturnReasonPage.secondReturnableItem
      - click:
          identifier: returnWebView.updateReturnReasonPage.selectArriveAfterEstimatedDateAsReason
      - log:
          message: "End functions: returnWebView.updateReturnReasonPage.selectReturnReasonForSecondItem"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This functions scroll downs until checking policies text in select return reason
  # No params
  - name: functions.returnWebView.updateReturnReasonPage.scrollDownUntilPoliciesText
    flow:
      - scroll:
          direction: down
          untilIdentifier: returnWebView.updateReturnReasonPage.returnPolicies
      - log:
          message: "End functions: returnWebView.updateReturnReasonPage.scrollDownUntilPoliciesText"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate return to store in submition 
  # No params

  - name: functions.returnWebPage.reviewSubmitRequest.validateReturnToStoreDetails
    flow:
      - verifyIdentifier:
          present:
              # - identifier: returnWebView.reviewSubmitRequest.ordernumber
              - identifier: returnWebView.reviewSubmitRequest.storeReturnMethod
      - log:
          message: "End functions: returnWebPage.reviewSubmitRequest.validateReturnToStoreDetails"
          color: BLUE    

              
 #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validate return to store details on review screen
  # No params
  - name: functions.returnWebPage.SubmitRequest.validateReturnToStoreInitiatedDetails
    flow:
      - verifyIdentifier:
          present:
              # - identifier: returnWebView.reviewSubmitRequest.ordernumber
              - identifier: returnWebView.reviewSubmitRequest.storeReturnMethod
              - identifier: returnWebView.SubmitRequest.refundInitiated
            
      - log:
          message: "End functions: returnWebPage.r.SubmitRequest.validateReturnToStoreInitiatedDetails"
          color: BLUE 

  #--------------------------------------------------------------------------------------------------------------------
  # Close pop up
  - name: functions.webPage.closePopup
    flow:
      - if:
          identifier:
            present:
              - identifier: returnWebView.popupTitle
          then:
            - click: 
                identifier: returnWebView.closeButton
      - log:
          message: "End functions: returnWebPage.closePopup"
          color: BLUE 

  #----------------------------------------------------------------------------------------------------------------
  # Validate return to store page for CA market
  - name: functions.returnWebPage.validateReturnToStore
    flow: 
      - verifyIdentifier:
          present:
            - identifier: returnWebView.returnToStoreTitle
            - identifier: returnWebView.returnStepsTitle
            - identifier: returnWebView.returnPolicyLink
            - identifier: returnWebView.nearStoreTitle
            - identifier: returnWebView.getDirectionLink
            - identifier: returnWebView.findStoreLink
      - log:
          message: "End functions: returnWebPage.validateReturnToStore"
          color: BLUE 