functions:

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This method checks if create account page is displayed.
  # No Params
  - name: functions.createAnAccountPage.assertPageDisplayed
    platform: ios
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if:
          condition: ${market} == 'MX-Bodega'
          then:
            - if:
                identifier:
                  present:
                    - identifier: createAnAccountPage.title
                  timeout: 5000
                then:
                  - storeIn:
                      key: returnedIsDisplayed
                      value: true
          else:
            - if:
                identifier:
                  present:
                    - identifier: createAnAccountPage.walmartLogo
                    - identifier: createAnAccountPage.title
                  timeout: 5000
                then:
                  - storeIn:
                      key: returnedIsDisplayed
                      value: true
      - if:
          condition: ${returnedIsDisplayed}
          then:
            - log:
                message: "End function: createAnAccountPage.assertPageDisplayed (Displayed)"
                color: BLUE
          else: 
            - log:
                message: "End function: createAnAccountPage.assertPageDisplayed (Not displayed)"
                color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enters user first name in the text field.
  # Param:       ${UserFirstName}  [Mandatory] User First Name
  - name: functions.createAnAccountPage.enterUserFirstName
    platform: ios
    flow:
      - enterText:
          identifier: createAnAccountPage.firstNameField
          string: ${UserFirstName}
      # - executeFunction:
      #     name: functions.utils.keyboard.tapNextBtn
      - hideKeyboard: true
      - log: 
          message: "End functions: createAnAccountPage.enterUserFirstName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enters user last name in the text field.
  # Param:       ${UserLastName}  [Mandatory] User Last Name
  - name: functions.createAnAccountPage.enterUserLastName
    platform: ios
    flow:
      - enterText:
          identifier: createAnAccountPage.lastNameField
          string: ${UserLastName}
      # - executeFunction:
      #     name: functions.utils.keyboard.tapNextBtn
      - hideKeyboard: true
      - log: 
          message: "End functions: createAnAccountPage.enterUserLastName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enters user mother's last name in the text field.
  # Param:       ${UserMotherLastName}  [Mandatory] User Mother Last Name
  - name: functions.createAnAccountPage.enterMotherLastName
    platform: ios
    flow:
      - enterText:
          identifier: createAnAccountPage.motherLastNameField
          string: ${UserMotherLastName}
      - executeFunction:
          name: functions.utils.keyboard.tapNextBtn
      - log: 
          message: "End functions: createAnAccountPage.enterMotherLastName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enters user phone number in the text field.
  # Param:       ${UserPhoneNumber}  [Mandatory] User Phone Number
  - name: functions.createAnAccountPage.enterUserPhoneNumber
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: createAnAccountPage.phoneNumberField
          then: 
            - scroll:
                direction: up
                untilIdentifier: createAnAccountPage.phoneNumberField
                scrollLimit: 5
      - enterText:
          identifier: createAnAccountPage.phoneNumberField
          string: ${UserPhoneNumber}
      - log: 
          message: "End functions: createAnAccountPage.enterUserPhoneNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function selects the Phone Number's Country Code.
  # Param:       ${countryCode}  [Mandatory]  Desired Country Code. Options: [ MX | US | CA ]
  # Returns:     ${returnedPhoneNumberPrefix}
  - name: functions.createAnAccountPage.selectPhoneNumberCountryCode.ifDisplayed
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: createAnAccountPage.phoneNumberField
          then:
            - scroll:
                direction: up
                untilIdentifier: createAnAccountPage.phoneNumberField
                scrollLimit: 5
      - if:
          identifier:
            present:
              - identifier: createAnAccountPage.phoneNumber.countryCodeDropdown
          then:
            - click:
                identifier: createAnAccountPage.phoneNumber.countryCodeDropdown
            - sleep:
                duration: 2000
            - if:
                condition: ${countryCode} == null
                then:
                  - storeIn:
                      key: countryCode
                      value: US
            - if:
                condition: ${countryCode} != 'US' && ${countryCode} != 'MX' && ${countryCode} != 'CA' && ${countryCode} != 'MX-Bodega'
                then:
                  - failTest:
                      message: Selected Country Code '${countryCode}' is not valid.
            - if:
                condition: ${countryCode} == 'US'
                then:
                  - if: 
                      condition: ${language} == 'en'
                      then:
                        - storeIn:
                            key: countryName
                            value: United States
                  - if: 
                      condition: ${language} == 'es-mx'
                      then:
                        - storeIn:
                            key: countryName
                            value: Estados Unidos
            - if:
                condition: ${countryCode} == 'MX' || ${countryCode} == 'MX-Bodega'
                then:
                  - storeIn:
                      key: countryName
                      value: MÃ©xico
                            
            - if:
                condition: ${countryCode} == 'CA'
                then:
                  - storeIn:
                     key: countryName
                     value: Canada
            - click:
                identifier: createAnAccountPage.phoneNumber.countryCodeSelector.radioButton.byName # <-- ${countryName}
            - getString:
                identifier: createAnAccountPage.phoneNumber.countryCodeSelector.phoneCode.byName # <-- ${countryName}
                attribute: label
                extractNumbers: true
                storeIn: returnedPhoneNumberPrefix
            - click:
                identifier: createAnAccountPage.phoneNumber.countryCodeSelector.confirmationBtn
      - log: 
          message: "End function: functions.createAnAccountPage.selectPhoneNumberCountryCode"
          color: BLUE
