functions:

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on my items lists
  # No Param

  - name: functions.myItemsPage.tapLists
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: myItemsPage.listsBtn
      - log:
          message: "End function: myItemsPage.tapLists"
          color: BLUE

#################################################### LISTS ####################################################

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates lists page in my items
  # No Param

  - name: functions.myItemsPage.lists.validateLists
    flow:
     - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.createANewList
            #  - identifier: myItemsPage.lists.yourClippedCoupons # Mappings need to be updated
     - log:
          message: "End function: myItemsPage.lists.validateLists"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates your clipped coupons in lists
  # No Param

  - name: functions.myItemsPage.lists.validateYourClippedCoupon
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.yourClippedCouponsText 
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyList
              - identifier: myItemsPage.lists.yourClippedCouponsImage             
      - click:
          identifier: myItemsPage.lists.yourClippedCoupons
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.yourClippedCouponsMainTitle
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyImage
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyTitle
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyMessage
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyMessageOne
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyMessageTwo
              - identifier: myItemsPage.lists.yourClippedCouponsEmptyMessageThree
              - identifier: myItemsPage.lists.yourClippedCouponsRewardsShopBtn
      - log:
          message: "End function: myItemsPage.lists.validateYourClippedCoupon"
          color: BLUE        

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates whether user is able to create a new list.
  # ${listName} [Mandatory]  List Name

  - name: functions.myItemsPage.lists.validateCreateNewLists
    flow:
      - click:
          identifier: myItemsPage.lists.createANewList
      - enterText:
              identifier: myItemsPage.lists.enterListName  # Android Mapping need to be updated
              string: ${listName}
              clickFirst: true
              clearField: true
      - click:
          identifier: myItemsPage.lists.CreateANewListBtn 
      - verifyIdentifier:
              present:
                - identifier: myItemsPage.lists.listHeaderName # iOS Mapping need to be updated
      - log:
          message: "End function: myItemsPage.lists.createNewLists"
          color: BLUE
  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates created list is visible on the list landing page.
  # No Param

  - name: functions.myItemsPage.lists.createdListValidation 
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.newListName # Mappings need to be updated
      - log:
          message: "End function: myItemsPage.lists.createdListValidation"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates empty list page.
  # No Param

  - name: functions.myItemsPage.lists.validateEmptyListsPage   # Mappings need to be updated 
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.listHeaderName
              - identifier: myItemsPage.lists.listSearchBar
              - identifier: myItemsPage.lists.listShare
              - identifier: myItemsPage.lists.listSettings
      - log:
          message: "End function: myItemsPage.lists.createdListValidation"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function navigates to list page with items.
  # No Param

  - name: functions.myItemsPage.lists.nonEmptylistPage   # Mappings need to be updated
    flow:
      - click:
          identifier: myItemsPage.lists.newListName       
      - log:
          message: "End function: myItemsPage.lists.nonEmptylistPage"
          color: BLUE
  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function validates non-empty list page.
  # No Param

  - name: functions.myItemsPage.lists.validateNonEmptyListsPage
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.listHeaderName
              - identifier: myItemsPage.lists.listSearchBar
              - identifier: myItemsPage.lists.listShare
              - identifier: myItemsPage.lists.listSettings
              - identifier: myItemsPage.lists.listItemCount
              - identifier: myItemsPage.lists.listEstimatePrice
              - identifier: myItemsPage.lists.listManageItems
              - identifier: myItemsPage.lists.listAddAllItems
              - identifier: myItemsPage.lists.listSortBy
              # - identifier: myItemsPage.lists.listBadge --> Need to update once badge is visible
      - log:
          message: "End function: myItemsPage.lists.validateNonEmptyListsPage"
          color: BLUE

# ----------------------------------------------------------------------------------------------------------------

# Description: This function add individual item to cart from list
# Param: ${productName}  [Mandatory]  Name of the product to be added to Lists.

  - name: functions.myItemsPage.lists.addIndividualItemFromList  
    flow:
      - click:
          identifier: myItemsPage.lists.addIndividualItem
          wait: 2000
      - log:
          message: "End function: myItemsPage.lists.addIndividualItem"
          color: BLUE
  # ---------------------------------------------------------------------------------------------------------------- 

  # Description: This function add all items to cart from list.
  # No Param

  - name: functions.myItemsPage.lists.addAllItemFromList
    flow:
      - click:
          identifier: myItemsPage.lists.listAddAllItems     
      - log:
          message: "End function: myItemsPage.lists.addIndividualItem"
          color: BLUE
  # ---------------------------------------------------------------------------------------------------------------- 
  # Description: This function validates product details list page.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to Lists.

  - name: functions.myItemsPage.lists.validateProductDetailsListsPage   #Mappings need to be updated
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.listProductDescription
              - identifier: myItemsPage.lists.listProductName
              - identifier: myItemsPage.lists.listProductPrice
              - identifier: myItemsPage.lists.addIndividualItem 
              - identifier: myItemsPage.lists.listProductNeed
              - identifier: myItemsPage.lists.listProductRemoveBtn
      - log:
          message: "End function: myItemsPage.lists.validateProductDetailsListsPage"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function taps remove button in list page for specified item
  - name: functions.myItemsPage.lists.removeIndividualItemFromList 
    flow:
      - click:
          identifier: myItemsPage.lists.tapRemoveBtn    # Mappings need to be updated
      - log:
          message: "End functions: myItemsPage.lists.removeIndividualItemFromList"
          color: BLUE 
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates empty list page.
  # No Param

  - name: functions.myItemsPage.lists.validateEmptyLists
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.listEmptyMessage
      - log:
          message: "End function: myItemsPage.lists.createdListValidation"
          color: BLUE         

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates TypeAhead Functionality in list search and add items.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to Lists.

  - name: functions.myItemsPage.lists.search.validateTypeAheadFunctionalityAndAdd
    flow:
      - click:
          identifier: myItemsPage.lists.listSearchBar
      - enterText:
          identifier: myItemsPage.lists.listSearchBar
          string: ${productName}
      - sleep:
          duration: 1000
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.lists.listSearchTypeAhead  # Mappings need to be updated
      - log: Type ahead functionality.
      - getString:
          identifier: myItemsPage.lists.listSearchTypeAhead
          storeIn: typeAhead
      - click:
          identifier: myItemsPage.lists.listSearchTypeAhead
      - log:
          message: "End function: myItemsPage.lists.search.validateTypeAheadFunctionalityAndAdd"
          color: BLUE 

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function scrolls down to the first See-Similar link displayed.
  - name: functions.myItemsPage.scrollDownToTheFirstSeeSimilarLinkDisplayed
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: myItemsPage.seeSimilarLink 
          then:
            - scroll:
                direction: down
                wait: 2000
                untilIdentifier: myItemsPage.seeSimilarLink
                scrollLimit: 10   
                position: center
      - log:
          message: "End function: myItemsPage.scrollDownToTheFirstSeeSimilarLinkDisplayed"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on the first See-Similar link displayed.
  - name: functions.myItemsPage.tapFirstSeeSimilarLinkDisplayed
    flow:
      - executeFunction:
          name: functions.myItemsPage.scrollDownToTheFirstSeeSimilarLinkDisplayed
      - click:
          identifier: myItemsPage.seeSimilarLink 
      - log:
          message: "End function: myItemsPage.scrollDownToTheFirstSeeSimilarLinkDisplayed"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function asserts "See Similar items" carousel displayed
  - name: functions.myItemsPage.seeSimilar.assertSeeSimilarCarousel
    flow:
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.seeSimilarCarouselTitle
          timeout: 10000
      - log:
          message: "End function: myItemsPage.seeSimilar.assertSeeSimilarCarousel"
          color: BLUE
    
  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on the first See-Similar item available.
  - name: functions.myItemsPage.seeSimilar.addFirstElementAvailable
    flow:
      - click:
          identifier: myItemsPage.seeSimilar.addBtn 
      - log:
          message: "End function: myItemsPage.seeSimilar.addFirstElementAvailable"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function opens an specific list by it's name.
  # Param: ${listName}  [Mandatory]  Name of the list to be opened. 

  - name: functions.myItemsPage.lists.openListByName
    flow:
      - click:
          identifier: myItemsPage.lists.listByName
      - log:
          message: "End function: myItemsPage.lists.openListByName"
          color: BLUE  
 #--------------------------------------------------------------------------------------------------------------------           
 # Description: This function opens the first Favourite, open the list and delete the article from the list
 # **This function only work with one product in the list**

  - name: functions.myItemsPage.lists.openFirstFavourite
    flow:
      - click:
          identifier: myItemsPage.lists.firstFavourite
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.lists.firstProduct
      - click:
          identifier: myItemsPage.lists.removeButton
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.lists.removeArticleMessage
      - click:
          identifier: myItemsPage.lists.removeIndividualItemFromList 
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: myItemsPage.lists.listEmptyMessage
      - log:
          message: "End function: functions.myItemsPage.lists.openFirstFavourite"
          color: BLUE   


#################################################### REORDER ####################################################
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function navigates back to list page after adding item through search in list.
  # No Param

  - name: functions.myItemsPage.lists.cancelListSearch
    flow:
      - click:
          identifier: myItemsPage.lists.listSearchCancel
      - log:
          message: "End function: myItemsPage.lists.cancelListSearch"
          color: BLUE           
#--------------------------------------------------------------------------------------------------------------------
# Description: This function validates generic item details list page.
# No Param
  - name: functions.myItemsPage.lists.validateGenericItemListsPage
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.findItemBtn 
              - identifier: myItemsPage.lists.listGenericItemRemoveBtn
      - log:
          message: "End function: myItemsPage.lists.validateGenericItemListsPage"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------   
  # Description: This function taps remove button in list page for generic item
  # No Param
  - name: functions.myItemsPage.lists.removeGenericItemFromList 
    flow:
      - click:
          identifier: myItemsPage.lists.listGenericItemRemoveBtn
          wait: 4000
      - log:
          message: "End functions: myItemsPage.lists.removeGenericItemFromList"
          color: BLUE 
  #--------------------------------------------------------------------------------------------------------------------     
  # Description: This function taps find item and verify the carousel gets opened or not.
  # No Param
  - name: functions.myItemsPage.lists.tapFindItem
    flow:
      - click:
          identifier: myItemsPage.lists.findItemBtn
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.hideItemBtn      
      - log:
          message: "End functions: myItemsPage.lists.tapAndVerifyFindItem"
          color: BLUE 
  #--------------------------------------------------------------------------------------------------------------------  
  # Description: This function scrolls down to add to list button in carousel and adds item from the generic carousel.
  # No Param
  - name: functions.myItemsPage.lists.addItemGenericCarousel # Mappings need to be updated
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.carouselContainer 
      - scroll:
          direction: down
          untilIdentifier: myItemsPage.lists.addToListGenericCarousel 
      - click:
          identifier: myItemsPage.lists.addToListGenericCarousel   
      - log:
          message: "End functions: myItemsPage.lists.addItemGenericCarousel"
          color: BLUE 
  #--------------------------------------------------------------------------------------------------------------------  
  # Description: This function validates correct product added to list using product name
  # # Param: ${productName}  [Mandatory]  Name of the product to be added to Lists.

  - name: functions.myItemsPage.lists.validateCorrectItemAdded
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.listProductName
      - log:
          message: "End function: myItemsPage.lists.validateProductDetailsListsPage"
          color: BLUE
# ----------------------------------------------------------------------------------------------------------------    
  # Description: This function taps the sort by in lists
  # No Param
  - name: functions.myItemsPage.lists.tapSortByPopUp 
    flow:
      - click:
          identifier: myItemsPage.lists.tapSortBy
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.sortByTitle
      - log:
          message: "End functions: myItemsPage.lists.tapSortByPopUp "
          color: BLUE 

# ----------------------------------------------------------------------------------------------------------------    
  # Description: This function taps the sort by in lists contains "Most recent", "Department", "Price Low", "Price High" options.
  # No Param
  - name: functions.myItemsPage.lists.validatesortByPopUp  
    flow:
      - verifyIdentifier:
            present:
              - identifier: myItemsPage.lists.sortByMostRecent
              - identifier: myItemsPage.lists.sortByDepartment
              - identifier: myItemsPage.lists.sortByPriceLow
              - identifier: myItemsPage.lists.sortByPriceHigh
      - log:
          message: "End functions: myItemsPage.lists.validatesortByPopUp"
          color: BLUE           

#--------------------------------------------------------------------------------------------------------------------
  # Description: This function taps on the settings button inside list.
  # No Param

  - name: functions.myItemsPage.lists.tapSettingsBtn
    flow:
      - click:
          identifier: myItemsPage.lists.tapSettingsBtn        #Mappings need to be updated for iOS
      - log:
          message: "End function: myItemsPage.lists.tapSettingsBtn"
          color: BLUE            

#--------------------------------------------------------------------------------------------------------------------
  # Description: This function opens specific list with list name.
  # ${listName} [Mandatory]  List Name

  - name: functions.myItemsPage.lists.tapListTile
    flow:
      - click:
          identifier: myItemsPage.lists.tapListName 
      - log:
          message: "End function: myItemsPage.lists.tapListTile"
          color: BLUE             

#--------------------------------------------------------------------------------------------------------------------
  # Description: This function taps on favourite icon in lists settings

  - name: functions.myItemsPage.lists.tapFavouriteIcon
    flow:
      - click:
          identifier: myItemsPage.lists.tapFavourite
      - click:
          identifier: myItemsPage.lists.tapSetAsFavourite
      - log:
          message: "End function: myItemsPage.lists.tapFavouriteIcon"
          color: BLUE                     

#--------------------------------------------------------------------------------------------------------------------

  # Description: This function taps Remove button confirmation once remove item btn is clicked
  # No params
  - name: functions.myItemsPage.lists.tapRemoveItemConfirmationBtn
    flow:
      - click:
          identifier: myItemsPage.lists.removeItemConfirmationBtn
          wait: 4000
      - log:
          message: "End function: myItemsPage.lists.tapRemoveItemConfirmationBtn"
          color: BLUE 

#--------------------------------------------------------------------------------------------------------------------

  # Description: This function taps Remove button confirmation once remove item btn is clicked
  # No params
  - name: functions.myItemsPage.lists.tapSignInBtn
    flow:
      - click:
          identifier: myItemsPage.lists.signInBtn
      - log:
          message: "End function: myItemsPage.lists.tapSignInBtn"
          color: BLUE 

#################################################### REORDER ####################################################
