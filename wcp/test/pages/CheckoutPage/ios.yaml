functions:

#--------------------------------------------------------------------------------------------------------------------
  # Description: This function hide key board on checkout page
  # No param     
  - name: functions.checkout.hideKeyboard
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: global.doneBtn
          then:
            - click:
                identifier: global.doneBtn
      - log:
          message: "End functions: checkoutPage.keyboard.readyBtn"
          color: BLUE

  #-------------------------------------------------------------------------------------------------------------------- 
  # Description: This function select the paypal if its already attached to the profile.
  # Params: No params
  - name: functions.checkoutPage.paymentMethod.selectAttachedPaypalPayment
    platform: ios
    flow:
      - click:
          identifier: checkoutPage.paymentMethod.selectPaypal
      - verifyIdentifier:
          present:
            - identifier: BottomSheetContainerViewController.bottomSheetView
      - click:
          identifier: BottomConfirmationViewController.topButton
      - log: 
          message: "End function: checkoutPage.paymentMethod.selectAttachedPaypalPayment"
          color: BLUE

  #-------------------------------------------------------------------------------------------------------------------- 
  # Description: This function validate shipping charge in review order page
  # No params
  - name: functions.checkoutPage.validateShippingCharge
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: checkoutPage.shippingChargeText
      - verifyIdentifier:
          present:
            - identifier: checkoutPage.shippingChargeText
            - identifier: checkoutPage.shippingChargeValue

      - getString:
            identifier: checkoutPage.shippingChargeValue
            attribute: label
            storeIn: productPrice
      - executeNode:
            file: wcp/test/helpers/Price/cleanPrice.js
            args:
              - value: ${productPrice}
            getResponse:
              storeIn: cleanProductPrice
      - storeIn:
            key: shippingChargeAmountcheckoutPage
            value: ${cleanProductPrice} 
      - log:
            message: Shipping charge is ${shippingChargeAmountcheckoutPage}
      - if:
            condition: ${shippingChargeAmountcheckoutPage} > 0 && ${shippingChargeAmountcheckoutPage} != 'Free'
            then:
            - log:
                message: Shipping charge is present
      - if:
            condition: ${shippingChargeAmountcheckoutPage} == ${shippingChargeAmountCartPage}
            then:
            - log:
                message: Shipping charge is same in cart and review order page
      - log:
          message: "End function: checkoutPage.validateShippingCharge"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Validates MSI options displayed
  # No params
  - name: functions.checkoutPage.selectMsiOption
    platform: ios
    flow:
      - executeFunction:
          name: functions.checkoutPage.scrollDownToEditPaymentButton
      - click:
          coordinates: 35%,42%
      - drag:
          from:
            x: 200
            y: 790
          to:
            x: 200
            y: 690
      - click:
          identifier: global.doneBtn
      - log:
          message: "End function: functions.checkoutPage.selectMsiOption"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------
  # Description: This function selects MCI option in the checkout page
  # No param
  - name: functions.checkoutPage.selectMCIoption
    platform: ios
    flow:
      - executeFunction:
          name: functions.checkoutPage.scrollDownToEditPaymentButton
      - click:
          coordinates: 35%,35%
      - if:
          identifier:
            notPresent:
              - identifier: global.doneBtn
          then:
            - click:
                coordinates: 87%,42%
      - drag:
          from:
            x: 200
            y: 790
          to:
            x: 200
            y: 690
      - click:
          identifier: global.doneBtn
      - log:
          message: "End functions: checkoutPage.selectMCIoption"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
 # Description: This function will be used to get the taxpayer's name displayed in the invoice section on the checkout page.
  # No Param
  - name: functions.checkoutPage.getSelectedInvoiceTaxPayerName
    platform: ios
    flow:  
      - getString:
          identifier: checkoutpage.invoiceTaxPayerFullName
          attribute: value
          storeIn: displayedInvoiceTaxPayerFullName
      - log:
          message: "End function:  functions.checkoutPage.getSelectedInvoiceTaxPayerName; Get Name as: &{displayedInvoiceTaxPayerFullName}"
          color: BLUE

  # Description: This function verifies selected pickup store is displayed on checkout page
  # No param 
  - name: functions.checkoutPage.verifyPickupAddress
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: checkoutPage.fulfillmentAddressText
              contains: ${fulfillmentAddressLabel}
      - log:
          message: "End function: checkoutPage.verify.pickupAddress"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function validates the MCI options displayed in the review order page.
  # No params
  - name: functions.checkoutPage.validateMciOptionsDisplayed
    platform: ios
    flow:
      - executeFunction:
          name: functions.checkoutPage.scrollDownToEditPaymentButton    
      - verifyIdentifier:
          present:
            - identifier: checkoutPage.msiOptionsContainer
      - log:
          message: "End function: checkoutPage.validateMciOptionsDisplayed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
  # Description: Asserts the fulfillment name in checkout.
  # Params:   ${returnedSelectedAddressName}  [Mandatory]  Expected Address Name.
  - name: functions.checkoutPage.assertFulfillmentAddressName
    platform: ios
    flow:
      - if:
          identifier: 
            label:
              - identifier: checkoutPage.fulfillmentAddressText
                contains: ${returnedSelectedAddressName}
          then:
            - log:
                message: "Successful assertion for fulfillment name in checkout"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Fulfillment name is not correctly displayed in checkout"
      - log:
          message: "End function: checkoutPage.assertFulfillmentAddressName"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
  # Description: Asserts the fulfillment address in checkout.
  # Param:   ${fulfillmentAddressLabel}   [Mandatory]  Expected Fulfillment Address. 
  - name: functions.checkoutPage.assertFulfillmentAddress
    platform: ios
    flow:
      - if:
          identifier: 
            label:
              - identifier: checkoutPage.fulfillmentAddress
                contains: ${fulfillmentAddressLabel} 
          then:
            - log:
                message: "Successful assertion for fulfillment address in checkout"
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Fulfillment address is not correctly displayed in checkout"              
      - log:
          message: "End function: checkoutPage.assertFulfillmentAddress" 
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
  # Description: Validate if the fufillment type is contains expected text
  - name: functions.checkout.validateFufillmentType
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: checkoutPage.fulfillmentMethod
              contains: ${expectedFulfillmentType}

      - log:
          message: "End function: checkout.validateFufillmentType" 
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: navigate to checkout page from PayPal Page
  - name: function.checkout.navigateBackFromPayPalPage
    platform: ios
    flow:
      - executeFunction:
          name: functions.payPalPage.tapCancelBtn
      - executeFunction:
          name: functions.checkoutPage.walletPopup.tapCloseBtn
      - log:
          message: "End function: checkout.navigateBackFromPayPalPage" 
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function enter the custom driver tip.
  # Params:      ${customTip} - Custom tip amount to apply to the order.
  - name: functions.checkoutPage.enterCustomTip
    platform: ios
    flow:
      - enterText:
          identifier: checkoutPage.driverTip.customTipField
          string: ${customTip}.00
          clearField: true
          clickFirst: true
      - executeFunction:
          name: functions.utils.hideKeyboard
      - log:
          message: "End function: checkoutPage.enterCustomTip"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description:This function validates the suggested driver tip based on the order value.
  # Params: ${suggestTipCount} Suggest tip count.
  #         ${tipPercentage} Suggest tip percentage.
  - name: functions.checkoutPage.driverTip.validateSuggestTipPercentage
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: checkoutPage.driverTip.suggestTipPercentages  # <-- ${suggestTipCount}
              contains: ${tipPercentage}
      - log:
          message: "End function: checkoutPage.driverTip.validateSuggestTipPercentage" 
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function validates selected tip amount.
  # Params: ${tipAmount} Tip amount to validate.
  - name: functions.checkoutPage.driverTip.validateTipAmount
    platform: ios
    flow:
      - verifyIdentifier:
          value:
            - identifier: checkoutPage.driverTip.selectedTipAmount
              contains: ${tipAmount}
      - log:
          message:  "End function: checkoutPage.driverTip.validateSuggestTipPercentage"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------

  # Description: This function validate the sales financing detils in review order page and also checkbox 
  #              the financing option
  # No params
  - name: functions.checkoutPage.selectSalesFinancingOptions
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: checkoutPage.paymentMethod.salesFinancingDetails
          position: center
          scrollLimit: 5
          timeout: 15000
      - verifyIdentifier:
          present:
            - identifier: checkoutPage.paymentMethod.cardType
            - identifier: checkoutPage.paymentMethod.salesFinancingDetails
            - identifier: checkoutPage.paymentMethod.salesFinancingTitle
            - identifier: checkoutPage.paymentMethod.salesFinancingDescription
            - identifier: checkoutPage.paymentMethod.salesFinancingCheckBox
      - click:
          identifier: checkoutPage.paymentMethod.salesFinancingCheckBox
      - log:
          message: "End functions: checkoutPage.moneyBox.assertFeeNotPresent"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------

  # Description: This functions validates below minimum fee
  # Params expectedbelowOrderMinFee
  - name: functions.checkout.validateBelowMinimumFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: checkout.POSSection.belowOrderMinFeeLabel
          label:
            - identifier: checkout.POSSection.belowOrderMinFeeValue
              contains: ${expectedbelowOrderMinFee}          
      - log:
          message: "End functions: checkout.validateBelowMinimumFee"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------
  # Description: This functions validates the shared PickupPerson information is correct or not
  # Param [required]: FirstName, Lastname
  - name: functions.checkoutPage.assertPickupPersonInformation
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: checkoutPage.pickupPersonName
              equals: ${FirstName} ${LastName}
      - log:
          message: "End of function: functions.checkoutPage.assertPickupPersonInformation"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------