functions:

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function will scroll down to home page carousel and add items to cart.
  # Params:
  #     ${carouselName}  Name of the carousel to scroll and add item to cart.
  #     ${subFilter} Type of item to add to cart [EachWeightItem]
  - name: functions.homePage.carousel.productAddToCart
    platform: ios
    flow:
      - if:
          condition: ${subFilter} == 'EachWeightItem'
          then:   
            - scroll:
                direction: down
                untilIdentifier: homePage.carousel.weightItemText
                scrollLimit: 15
                timeout: 60000
          else:
            - scroll:
                direction: down
                untilIdentifier: homePage.carousel
                position: center
                scrollLimit: 15
                timeout: 60000
      - getString:
          identifier: homePage.firstCarouselText
          attribute: label
          storeIn: carouselName
      - loop:
          begin: 1
          end: 4
          mode: increment
          storeIndex: count
          flow:
            - click:
                identifier: homePage.carouselAddToCartBtn
            - sleep:
                duration: 10000
            - if:
                identifier:
                  notPresent:
                    - identifier: globalPage.errorBottomSheet
                then:
                  - storeIn:
                      key: _count
                      value: ${count}
                  - break: true
      - getString:
          identifier: homePage.carouselProductName
          storeIn: carouselProductName
          attribute: label
      - getString:
          identifier: homePage.carouselProductPrice
          storeIn: carouselProductPrice
          attribute: value
  # ----------------------------------------------------------------------------------------------------------------
  # Description: This function verfies store name in gic intent.
  # Params      ${storeName}  Store name
  - name: functions.homePage.gic.verifyStoreName
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: homePage.gic.closebButton
              contains: ${storeName}
      - log:
          message: "End function: homePage.gic.verifyStoreName"
          color: BLUE   
 # ----------------------------------------------------------------------------------------------------------------                

#--------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function obtains the price of a product in a specific carousel. 
  # PARAM: ${productName}  [Mandatory]  Name of the product to get the name from.
  # RETURNS: ${returnedProductPrice} The price of the product.
  - name: functions.homePage.getProductPriceByName
    flow:     
      - getString: 
          identifier: homePage.productPrice.byProductName # <--PARAM--${productNam}
          attribute: label
          storeIn: returnedProductPrice
      - log:  
          message: "Returned product price: ${returnedProductPrice}"
      - log:  
          message: "End function: functions.categoryLandingPage.specificCarousel.getProductPrice"
          color: BLUE


 
