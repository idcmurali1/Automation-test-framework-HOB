functions:

  # ----------------------------------------------------------------------------------------------------------------
  # Description: This functions check for signIn page is opened.
  # No Param

  - name: functions.login.isSignInPageDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if: 
          identifier:
            present:
              - identifier: loginPage.signInTitle
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: signIn.isSignInPageDisplayed (Displayed)"
                color: BLUE
          else: 
            - log:
                message: "End function: signIn.isSignInPageDisplayed (Not displayed)"
                color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method enters user's password.
  # Param:        ${userEmail} [Mandatory] Email for registered user.
  - name: functions.loginPage.enterEmail
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: functions.homePage.personalizedShoppingExperiencePopup.dismissIfDisplayed
      - log:
          message: "Email: ${userEmail}"
          color: CYAN
      - enterText:
          identifier: loginPage.emailField
          string: "${userEmail}"
          clickFirst: true
          clearField: true
      - log:
          message: "End function: login.enterEmail"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method enters user's email in SSO Login Page.
  # Param:        ${userEmail}  [Mandatory]  Email for registered user.
  # Works for:    [ MX [✓]   MX-Bodega [✓]   US [TBD] ]
  - name: functions.loginPage.enterEmail.forSSOFlow
    flow:
      - if:
          condition: ${platform} == 'Android' 
          then:
            - executeFunction:
                name: functions.homePage.personalizedShoppingExperiencePopup.dismissIfDisplayed
      - log:
          message: "Email: '${userEmail}'"
          color: CYAN
      - enterText:
          identifier: loginPage.ssoLogin.emailField
          string: ${userEmail}
          clickFirst: true
          clearField: true
      - log:
          message: "End function: functions.loginPage.enterEmail.forSSOFlow"
          color: BLUE
  
  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method enters user's password.
  # Param:        ${userPassword} [Mandatory] Password for registered user.
  - name: functions.loginPage.enterPassword
    flow:
      - enterText:
          identifier: loginPage.passwordField
          string: "${userPassword}"
          clickFirst: true
          clearField: true
      - if:
          condition: ${platform} == 'Android'
          then:
              - executeFunction:
                  name: functions.utils.hideKeyboard
      - log:
          message: "End function: login.enterPassword"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method enters user's password in SSO Login Page.
  # Param:        ${userPassword}  [Mandatory]  Password for registered user.
  # Works for:    [ MX [✓]   MX-Bodega [✓]   US [TBD] ]
  - name: functions.loginPage.enterPassword.forSSOFlow
    flow:
      - log:
          message: "Password: '${userPassword}'"
          color: CYAN
      - enterText:
          identifier: loginPage.ssoLogin.passwordField
          string: ${userPassword}
          clickFirst: true
          clearField: true    
      - if:
          condition: ${platform} == 'Android'
          then:
              - executeFunction:
                  name: functions.utils.hideKeyboard
      - log:
          message: "End function: functions.loginPage.enterPassword.forSSOFlow"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method taps on Login button.
  # No Param
  - name: functions.loginPage.tapSignInBtn
    flow:
      - click:
          identifier: loginPage.signInBtn
      - log:
          message: "End function: loginPage.tapSignInBtn"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This method taps on Continue button.
  # No Param
  # Works for:    [ MX [✓]   MX-Bodega [✓]   US [TBD] ]
  - name: functions.loginPage.tapContinue
    flow:
      - click:
          identifier: loginPage.continueBtn
      - log:
          message: "End function: functions.loginPage.tapContinue"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description: Taps the create account button.
  # No Param
  - name: functions.loginPage.tapCreateAccountBtn
    flow:
      - click:
          identifier: loginPage.createAccountBtn
      - log:
          message: "End function: functions.loginPage.tapCreateAccountBtn"
          color: BLUE
  
  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method taps on send code button
  # No Param
  - name: functions.loginPage.securityCheck.tapSendCode
    flow:
      - click:
          identifier: loginPage.securityCheck.sendCodeBtn
      - log:
          message: "End function: loginPage.securityCheck.tapSendCode"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description: This functions check if the security page is displayed
  # No Param
  - name: functions.loginPage.isSecurityCheckDisplayed
    flow:
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if: 
          identifier:
            present:
              - identifier: loginPage.quickSecurityCheckTxt
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: "End function: loginPage.isSecurityCheckDisplayed (Displayed)"
                color: BLUE
          else: 
            - log:
                message: "End function: loginPage.isSecurityCheckDisplayed (Not displayed)"
                color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method enters otp for login verification
  # No Param
  - name: functions.loginPage.enterVerificationCodes
    flow:
      - enterText:
          identifier: loginPage.enterVerificationCode
          string: ${stepUpOtpFromEmail}
          pressEnter: true
      - log:
          message: "End function: loginPage.enterVerificationCode"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method tap on otp submit button
  # No Param
  - name: functions.loginPage.enterVerificationCode.submitBtn
    flow:
      - click:
          identifier: loginPage.enterVerificationCode.submitBtn
      - log:
          message: "End function: loginPage.enterVerificationCode.submitBtn"
          color: BLUE

  # -----------------------------------------------------------------------------------------------------------------

  # Description: This method checks whether the Unified Account Popup in the Login Page is displayed or not.
  # No Param
  # Works for:    [ MX [✓]   MX-Bodega [✓]   US [TBD] ]
  - name: functions.loginPage.isUnifiedAccountPopupDisplayed
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: loginPage.unifiedAccountPopup.subtitle
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - log:
                message: Unified Account Popup is displayed.
                color: GREEN
          else:
            - storeIn:
                key: returnedIsDisplayed
                value: false
            - log:
                message: Unified Account Popup is not displayed.
                color: GREEN
      - log:
          message: "End function: functions.loginPage.isUnifiedAccountPopupDisplayed"
          color: BLUE

  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method taps the Continue button in the Unified Account Popup in the Login Page.
  # No Param
  # Works for:    [ MX [✓]   MX-Bodega [✓]   US [TBD] ]
  - name: functions.loginPage.unifiedAccountPopup.tapContinue
    flow:
      - sleep:
          duration: 5000
      - if: 
          identifier:
            present:
              - identifier: loginPage.unifiedAccountPopup.continueBtn
          then:
            - click:
                identifier: loginPage.unifiedAccountPopup.continueBtn
      - log:
          message: "End function: functions.loginPage.unifiedAccountPopup.tapContinue"
          color: BLUE


  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method is select password radio button when choice login is displayed 
  # No Param
  # Works for:   US 

  - name: functions.login.isChoiceSignInPageDisplayed
    flow: 
      - storeIn:
          key: returnedIsDisplayed
          value: false
      - if: 
          identifier:
            present:
              - identifier: loginPage.choiceSignIn.title
          then:
            - log:
                message: "Sign in Choice Screen Displayed"
                color: BLUE
            - click:
                identifier: loginPage.choiceSignIn.passwordButton
          else: 
            - log:
                message: "End function: signIn Choice screen is not displayed"
                color: BLUE

  # ----------------------------------------------------------------------------------------------------------------
  # Description: Store log in email 
  # No Param
  - name: functions.login.storeEmail
    flow:
      - if: 
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: userEmail
                value: ${userAndroidEmail}
          else:
            - storeIn:
                key: userEmail
                value: ${useriOSEmail}

  # ----------------------------------------------------------------------------------------------------------------

  # Description: This method taps on send code button
  # No Param 
  - name: functions.loginPage.selectEmailOptOption
    flow:
      - click:
          identifier: loginPage.emailOptRadioBtn
      - log:
          message: "End function: loginPage.selectEmailOptOption"
          color: BLUE
