functions:

#--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function verify item count
  # Params:      ${itemCount}    Verify product quantity add to cart.
  - name: functions.productDetailsPage.verifyItemCount
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: productDetailsPage.itemCount
              contains: ${itemCount}
      - log:
          message: "End functions: productDetailsPage.verifyItemCount"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # Description: Validate tag in product details page.
  # Params:      ${itemBadge}   Validate badges in the PDP.
  - name: functions.productDetailsPage.validateBadge
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: productDetailsPage.badgeLabel
              contains: ${itemBadge}
          
      - log:
          message: "End functions: productDetailsPage.validateBadge"
          color: BLUE

  #-----------------------------------------------------------------------------------------------------------------
  
  # Description: This function validates delivery address in product details page.
  # Params:      ${streetAddress}
  # Works for:   [ MX [✓]   MX-Bodega [✓]   US [__] ]
  - name: functions.productDetailsPage.verifyDeliveryAddress
    platform: ios
    flow:
      - log:
          message: Expected Delivery address - "${streetAddress}".
          color: CYAN
      - try:
          flow:
            - verifyIdentifier:
                label:
                  - identifier: productDetailsPage.addressBtn
                    contains: ${streetAddress}
          catch:
            flow:
              - getString:
                  identifier: productDetailsPage.addressBtn
                  attribute: label
                  storeIn: returnedAddress
              - failTest:
                  message: Returned Delivery address - "${returnedAddress}".
      - log:
          message: "End functions: productDetailsPage.verifyDeliveryAddress"
          color: BLUE

  
#--------------------------------------------------------------------------------------------------------------------

  # Description: Get product name for product added to cart
  # No Params
  - name: functions.productDetailsPage.getProductName
    platform: ios
    flow:
      - getString:
          identifier: productDetailsPage.productName
          storeIn: itemtName
          attribute: label
      - executeNode:
          file: wcp/test/helpers/SearchPage/extractProductName.js
          args:
            - value: ${itemtName}
          getResponse:
            storeIn: productName
      - log: 
          message: "Product name added to cart: ${productName}"
          color: CYAN
      - log:
          message: "End Functions: productDetailsPage.getProductName"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------

  # Description: This function helps in getting product price from product details page.
  # No params
  - name: functions.productDetailsPage.getProductPrice
    platform: ios
    flow:
      - getString:
          identifier: productDetailsPage.productPrice
          storeIn: productPrice
          attribute: label
      - log: 
          message: "Product price added to cart: ${productPrice}"
          color: CYAN

      - executeNode:
          file: wcp/test/helpers/Price/cleanPrice.js
          args:
            - value: ${productPrice}
          getResponse:
            storeIn: sanitizedPrice
      - log:
          message: "Sanitized produce price: ${sanitizedPrice}"
          color: GREEN_BOLD
      - log:
          message: "End Functions: productDetailsPage.getProductPrice"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------          
 
  # Description: This function helps in getting product quantity from product details page.
  # No params
  - name: functions.productDetailsPage.getProductQuantity
    platform: ios
    flow:
      - log:
          message: Getting product quantity...
          color: GREEN_BOLD
      - getString:
          identifier: productDetailsPage.itemCount
          storeIn: itemCount
          attribute: label
      - log: 
          message: "Current product quantity: ${itemCount}"
          color: GREEN_BOLD
      - executeNode:
          file: wcp/test/helpers/productPage/extractItemQuantity.js
          args:
            - value: ${itemCount}
          getResponse:
            storeIn: productQuantity    
      - storeIn:
         key: cartItemCount
         value: ${productQuantity}
      - log:
          message: "Sanitized produce quantity: ${productQuantity}"
          color: GREEN_BOLD
      - log:
          message: "End functions: productDetailsPage.getProductQuantity"
          color: BLUE  
  #--------------------------------------------------------------------------------------------------------------------            

  # Description: This function is used to add maximum quantity of an item to cart
  # No param 
  - name: functions.productDetailsPage.addMaxQuantityItemToCart
    platform: ios
    doWhile: true 
    flow:     
      - verifyIdentifier:
          label:
          - identifier: productDetailsPage.quantityStepperText
            notContains: Máx
          timeout: 50000
      - click:
          identifier: productDetailsPage.incrementButton
          wait: 1000
      - log:
          message: "End Functions: productDetailsPage.addMaxQuantityItemToCart"
          color: BLUE
#--------------------------------------------------------------------------------------------------------------------                  

  # Description: This function is used to add assert that the product details are the expected ones. 
  # Params: 
  #     ${productName}  [Mandatory]  Expected product name to be displayed.
  #     ${productPrice}  [Mandatory]  Expected product price to be displayed.
  - name: functions.productDetailsPage.assertProductDetailsConsistency
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: productDetailsPage.productName
              contains: ${productName}
      - verifyIdentifier:
          label:
            - identifier: productDetailsPage.productPrice
              contains: ${productPrice}
      - log:
          message: "End function: functions.productDetailsPage.assertProductDetails"
          color: BLUE