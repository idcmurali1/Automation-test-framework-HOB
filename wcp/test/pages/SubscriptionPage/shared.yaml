functions:

#------------------------------------------------------------------------------------------------------------------
# Description: This function is used to verify if one time purchase option is enabled by default.
# No Param
  - name: functions.productPage.isOnetimePurchaseEnabled
    flow:
      - scroll:
          direction: down
          untilIdentifier: productPage.oneTimePurchaseRadioButton
          scrollLimit: 2
          position: center
      - if:
          identifier:
            present:
              - identifier: productPage.oneTimePurchaseRadioButton
          then:
            - log:
               message: "One-time purchase option is enabled by default"
          else:
            - failTest:
                message: "One-time purchase option is NOT enabled by default"

      - log:
          message: "End Functions: functions.productPage.isOnetimePurchaseEnabled"
          color: BLUE
  
#------------------------------------------------------------------------------------------------------------------
# Description: This function selects subscribe to save Radio button from item page
# No Param
  - name: functions.productPage.selectSubscribeRadioButton
    flow:
      # - scroll:
      #     direction: down
      #     untilIdentifier: productPage.subscribeTosaveRadioButton
      #     scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: productPage.subscribeTosaveRadioButton
      - click:
            identifier: productPage.subscribeTosaveRadioButton
      - log:
          message: "End Functions: functions.productPage.selectSubscribeRadioButton"
          color: BLUE
#------------------------------------------------------------------------------------------------------------------
# Description: This function clicks on Set up subscription button
# No Param
  - name: functions.productPage.clicksetUpSubscriptionButton
    flow:
      - verifyIdentifier:
          present:
            - identifier: productPage.setUpSubscriptionButton
      - click:
            identifier: productPage.setUpSubscriptionButton
      - log:
          message: "End Functions: functions.productPage.clicksetUpSubscriptionButton"
          color: BLUE

#----------------------------------------------------------------------------------------------------------------------

  # Description: This function is used to Validate if setup subscription popup displayed
  # No Param 
  - name: functions.isSetUpSubscriptionPopupDisplayed
    flow:
      - storeIn:
          key: isReturnedDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: productPage.setupSubscriptionPopup.setupSubscriptionTitle
          then:
            - storeIn:
                key: isReturnedDisplayed
                value: true
            - log: 
                message: "End Functions: functions.isSetUpSubscriptionPopupDisplayed (Displayed)"
                color: BLUE
          else:
            - failTest:
                message: "End Functions: functions.isSetUpSubscriptionPopupDisplayed (Not Displayed)"
#------------------------------------------------------------------------------------------------------------------
  # Description: This function clicks on Add Subscription to cart button
  # No Param

  - name: functions.setupSubscriptionPopup.tapAddSubscriptionToCartBtn
    flow:
      - click:
          identifier: productPage.setUpSubscriptionPopUp.AddSubscriptionToCartButton
      - sleep:
          duration: 5000
      - log:
          message: "End Functions: functions.setupSubscriptionPopup.tapAddSubscriptionToCartBtn"
          color: BLUE

#----------------------------------------------------------------------------------------------------------------------
  # Description: This function is used to click on delivery Frequency
  # No Param

  - name: functions.setupSubscriptionPopup.tapDeliveryFrequency
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: productPage.setupSubscriptionPopup.deliveryFrequencyText
          then:
            - if: 
                condition: ${platform} == 'iOS'
                then:
                  - scroll:
                      direction: up
                      untilIdentifier: productPage.setupSubscriptionPopup.subscriptionFrequencySection
                      scrollLimit: 4
                      position: center
                  - log: 
                      message: Subscription Frequency Bar is visible now 
                      color: GREEN_BOLD
            - if:
                 condition: ${environment} == 'Production'
                 then:
                    - scroll:
                        direction: right
                        untilIdentifier: productPage.setupSubscriptionPopup.deliveryFrequencyText
                        withinIdentifier: productPage.setupSubscriptionPopup.subscriptionFrequencySection
                        scrollLimit: 2
                        position: center 
      - click:
          identifier: productPage.setupSubscriptionPopup.deliveryFrequencyText
          wait: 5000 # Select 3 weeks frequency
      - log:
          message: "End Functions: functions.productPage.setupSubscriptionPopup.tapOnDeliveryFrequency"
          color: BLUE

#----------------------------------------------------------------------------------------------------------------------
  # Description: This function is used to validate delivery frequency in cart page
  # No Param

  - name: functions.setupSubscriptionPopup.verifyDeliveryFrequencyInCartpage
    flow:
      - storeIn:
          key: isReturnedDisplayed
          value: false
      - if:
          identifier:
            present:
              - identifier: cartPage.setupSubscriptionPopup.deliveryFrequencyText
          then:
            - storeIn:
                key: isReturnedDisplayed
                value: true
            - log: 
                message: "End Functions: setupSubscriptionPopup.verifyDeliveryFrequencyinCartpage (Displayed)"
                color: BLUE
          else:
            - failTest:
                message: "End Functions: setupSubscriptionPopup.verifyDeliveryFrequencyinCartpage (Not Displayed)"

#----------------------------------------------------------------------------------------------------------------------
  # Description: This function is used to validate My subscription page
  # No Param
  # ****************To do *****************************
  - name: functions.subscriptionPage.verifyMySubscription
    flow:
      - log : 
          message: "End Functions: functions.subscriptionPage.verifyMySubscription"
          color: BLUE
#----------------------------------------------------------------------------------------------------------------------
  # This function opens My subscriptions page 
  #  No param
  - name: functions.accountPage.taponMySubscription
    flow:
        - if: 
            condition: ${platform} == 'iOS' && ${market} == 'CA'
            then:
              - scroll:
                  direction: down
                  untilIdentifier: accountPage.subscriptionsAndPlans
              - if: 
                  identifier:
                    present:
                      - identifier: accountPage.subscriptionsAndPlans
                  then:
                    - click:
                        identifier: accountPage.subscriptionsAndPlans
        - if:
            identifier:
              notPresent:
                - identifier: accountPage.taponMySubscription 
            then:
              - scroll:
                  direction: down
                  untilIdentifier: accountPage.taponMySubscription
        - if: 
            identifier:
              present:
                - identifier: accountPage.taponMySubscription
            then:
              - click:
                  identifier: accountPage.taponMySubscription
            else:
              - failTest:
                  message: "End Functions: functions.accountPage.taponMySubscription - My subscriptions not displayed"
        - log :
            message: "End Functions: functions.accountPage.taponMySubscription"
            color: BLUE

#----------------------------------------------------------------------------------------------------------------------
  # This function opens Manage subscription page 
  #  No param
  - name: functions.accountPage.mySubscription.tapOnFrequencychevron
    flow:
            - click:
                identifier: accountPage.mySubscription.tapOnFrequencychevron
            - log :
                message: "End Functions: functions.accountPage.mySubscription.tapOnFrequencychevron - Manage subscriptions page is displayed"
                color: BLUE

#----------------------------------------------------------------------------------------------------------------------
  # This function opens Unsubscribe confirmation bottom sheet
  #  No param
  - name: functions.mySubscription.manageSubscriptions.tapOnUnSubscribe
    flow:
      - if: 
          identifier:
            present:
              - identifier: mySubscription.manageSubscriptions.unSubscribe
          then:
            - click:
                identifier: mySubscription.manageSubscriptions.unSubscribe
          else:
            - failTest:
                message: "End Functions: functions.mySubscription.manageSubscriptions.tapOnUnSubscribe - Unsubscribe button is not clickable"
      - log :
          message: "End Functions: functions.mySubscription.manageSubscriptions.tapOnUnSubscribe - Unsubscribe button is clicked"
          color: BLUE

#----------------------------------------------------------------------------------------------------------------------
  # This function clicks on confirmation button from  Unsubscribe confirmation bottom sheet
  #  No param
  - name: functions.mySubscription.manageSubscriptions.unSubscribeConfirmationBottomSheet
    flow:
      - verifyIdentifier:
          present:
          - identifier: mySubscription.manageSubscriptions.unSubscribeConfirmationBottomSheet
      - click:
          identifier: mySubscription.manageSubscriptions.confirmUnSubscribe
      - click:
          identifier: mySubscription.manageSubscriptions.confirmUnSubscribe.selectReason
      - click:
          identifier: mySubscription.manageSubscriptions.confirmUnSubscribe.tapOnSubmitButton
      - if:
          identifier:
            present:
              - identifier: mySubscriptions.statusMessage
          then:
            - log :
                message: "Unsubscription is successful"
          else:
            - failTest:
                message: "Unsubscription is not successful. There is some issue"

      - log :
          message: "End Functions:functions.mySubscription.manageSubscriptions.unSubscribeConfirmationBottomSheet"
          color: BLUE
#----------------------------------------------------------------------------------------------------------------------
  # This function changes the delivery day from My subscriptions page
  #  No param
  - name: functions.accountPage.mySubscriptions.changeDeliveryDay
    flow:
      - click:
         identifier: mySubscriptions.edit
      - if:
          identifier:
            present:
             - identifier:  mySubscriptions.changeDeliveryDayBottomSheetTitle
          then:
            - log: "Change delivery day bottom sheet is present"
          else:
            - failTest:
                message: "Change delivery day bottom sheet is not present"
    
      - executeFunction:
          name: functions.mySubscriptions.changeDeliveryDay.editAddressPage
      - if:
          identifier:
            notPresent:
              - identifier: mySubscriptions.selectDeliveryDay
          then:
            - executeFunction:
                name: functions.accountPage.mySubscriptions.changeDeliveryDay.DragandDrop
      - click:
          identifier: mySubscriptions.selectDeliveryDay
      - click:
          identifier: reserveATime.reserveBtn
      # There is no success status message displayed for iOS. created a ticket-CEPG-274259 for the same.
      # This condition will be removed once this ticket is resolved. 
      - if: 
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                present:
                  - identifier: mySubscriptions.updatedSuccessMessage
      - verifyIdentifier:
          present:
            - identifier: mySubscriptions.updatedDeliveryDay
      - log: "Delivery day is selected as Wednesday"
      - log:
          message: "End Functions:functions.accountPage.mySubscriptions.changeDeliveryDay"
          color: BLUE
#----------------------------------------------------------------------------------------------------------------------
  # This function updates the delivery frequency from Manage subscription page
  #  No param
  - name: functions.mySubscriptions.manageSubscription.updateFrequency
    flow:
      - click:
          identifier: mySubscriptions.manageSubscriptions.editFrequency
      - if:
          identifier:
            present:
             - identifier:  mySubscriptions.selectFrequencyBottomSheetTitle
          then:
            - log: "Select a frequency bottom sheet is present"
          else:
            - failTest:
                message: "Select a frequency bottom sheet is NOT present"
      - click:
          identifier: mySubscriptions.manageSubscriptions.selectFrequency
      - verifyIdentifier:
          present:
            - identifier: mySubscriptions.manageSubscriptions.selectedFrequency
      - click:
          identifier: mySubscriptions.manageSubscriptions.continueBtn
      - click:
          identifier: mySubscriptions.manageSubscriptions.confirmBtn
      - log:
          message: "End Functions:functions.mySubscriptions.manageSubscription.updateFrequency"
          color: BLUE
  #----------------------------------------------------------------------------------------------------------------------
  # This function verifies the updated frequency from Manage subscription page
  #  No param
  - name: functions.mySubscriptions.manageSubscription.veifiyUpdatedFrequency
    flow:
      - verifyIdentifier:
          present:
            - identifier: mySubscriptions.updatedSuccessMessage
            - identifier: mySubscription.manageSubscriptions.headerFrequencyText
            - identifier: mySubscription.manageSubscriptions.subHeaderFrequencyText
      - log: "Selected frequency is updated successfully"
      - log:
          message: "End Functions:functions.mySubscriptions.manageSubscription.veifiyUpdatedFrequency"
          color: BLUE

  #----------------------------------------------------------------------------------------------------------------------
  # This function verifies if select address page is displayed when user clicks on Edit address link from change delivery day page.
  #  No param
  - name: functions.mySubscriptions.changeDeliveryDay.editAddressPage
    flow:
      - click: 
          identifier: mySubscriptions.changeDeliveryDay.editAddressLink
      - verifyIdentifier:
          present:
            - identifier: selectAddressPage.title
      - log: 
          message: "Select Address page is displayed" 
      - click:
          identifier: selectAddressPage.continuebutton
      - log:
          message: "End Functions:functions.accountPage.mySubscriptions.changeDeliveryDay.editAddressPage"
          color: BLUE
  
  #----------------------------------------------------------------------------------------------------------------------
  # This function verifies the updated frequency from Manage subscription page
  #  No param
  - name: functions.mySubscriptions.manageSubscription.editPayment
    flow:
      - click:
          identifier: mySubscription.manageSubscriptions.editPaymentLink
      - verifyIdentifier:
          present:
            - identifier: mySubscription.manageSubscriptions.editPaymentMethodsTitle
      - log: 
          message: "Payment methods bottom sheet is displayed"
      - click:
          identifier: checkoutPage.wallet.closeBtn
      - log:
          message: "End Functions:functions.mySubscriptions.manageSubscription.editPayment"
          color: BLUE
  #----------------------------------------------------------------------------------------------------------------------
  # This function increases the quantity of subscriptions items from Manage subscription page
  #  No param
  - name: functions.mySubscriptions.manageSubscription.increaseQuantity
    flow:
      - click:
          identifier: mySubscriptions.manageSubscriptions.editItems
      - click:
          identifier: amendOrder.increaseQty 
      - executeFunction:
          name: functions.mySubscriptions.manageSubscription.verifyUpdatedQty
      - log:
          message: "End Functions:functions.mySubscriptions.manageSubscription.increaseQuantity"
          color: BLUE
