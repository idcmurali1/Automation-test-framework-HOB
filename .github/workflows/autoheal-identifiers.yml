name: "Autoheal: extract IDs → update mappings → PR"

on:
  workflow_dispatch:
    inputs:
      app_repo:
        description: "App repository to scan (owner/repo). Leave empty to use default."
        required: false
        type: string
      ref:
        description: "Branch or tag in the app repo. Leave empty to use default."
        required: false
        type: string

  repository_dispatch:
    types: [app_change]

  push:
    paths:
      - ".github/workflows/autoheal-identifiers.yml"
      - "autoheal_fw/**"
      - "us/e2e-tests/**"

permissions:
  contents: write
  pull-requests: write

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}

jobs:
  update-identifiers:
    name: extract IDs → update mappings → PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tests repo (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ✅ Repo/ref selection with fallback
      - name: Determine app repo/ref
        id: app
        shell: bash
        env:
          DEFAULT_APP_REPO: idcmurali1/hob-shop   # <-- change if your app repo differs
          DEFAULT_APP_REF: main
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            APP_REPO="${{ github.event.client_payload.app_repo || env.DEFAULT_APP_REPO }}"
            WANT_REF="${{ github.event.client_payload.ref || github.event.client_payload.branch || env.DEFAULT_APP_REF }}"
          else
            APP_REPO="${{ inputs.app_repo || env.DEFAULT_APP_REPO }}"
            WANT_REF="${{ inputs.ref || env.DEFAULT_APP_REF }}"
          fi

          echo "Requested app repo: $APP_REPO"
          echo "Requested app ref:  $WANT_REF"

          if git ls-remote --heads --tags "https://github.com/$APP_REPO" "$WANT_REF" | grep -q . ; then
            APP_REF="$WANT_REF"
          else
            echo "Ref '$WANT_REF' not found in $APP_REPO, falling back to '${DEFAULT_APP_REF}'."
            APP_REF="$DEFAULT_APP_REF"
          fi

          echo "repo=$APP_REPO" >> "$GITHUB_OUTPUT"
          echo "ref=$APP_REF"  >> "$GITHUB_OUTPUT"
          echo "Using app repo: $APP_REPO @ $APP_REF"

      - name: Checkout app repo at requested ref
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.app.outputs.repo }}
          ref:        ${{ steps.app.outputs.ref }}
          path:       app-src
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install autoheal framework
        shell: bash
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -U pip
          if [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          fi
          if [[ -d autoheal_fw ]]; then
            pip install -e autoheal_fw
          fi

      - name: Write config.yaml for CLI (OpenAI + RN patterns)
        shell: bash
        run: |
          mkdir -p autoheal_fw/config
          cat > autoheal_fw/config/config.yaml <<'YAML'
          app:
            platform: react_native
            testid_patterns:
              - match: "^product_sku_hoodie.*$"
                logical: us.mappings.yourOrders.hoodieProduct
              - match: "^product_sku_cap.*$"
                logical: us.mappings.yourOrders.capProduct
              - match: "^product_sku_shirt.*$"
                logical: us.mappings.yourOrders.shirtProduct

          source_files:
            react_native:
              - "src/catalog.ts"
              - "src/menu.ts"

          llm:
            provider: openai
            openai_api_key: "${OPENAI_API_KEY:-}"
            anthropic_api_key: "${ANTHROPIC_API_KEY:-}"
            model: "gpt-4o"
            temperature: 0.1

          vectordb:
            provider: local
            index_name: "autoheal-failures"
            base_path: "./vector_index"

          artifact_store:
            path: "./artifacts"

          logging:
            level: "INFO"
            patch_ledger: "./patches/ledger.jsonl"
          YAML

      - name: Run autoheal (extract from app-src → update tests → PR)
        id: run_cli
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          source venv/bin/activate
          echo "LLM provider=openai model=gpt-4o"

          BRANCH="autoheal/rn-sync-$(date +%s)"
          python -m autoheal.cli update-mappings-from-app \
            --app_repo   "$(pwd)/app-src" \
            --tests_repo "$(pwd)" \
            --branch     "${BRANCH}" \
            --config     "autoheal_fw/config/config.yaml" \
            --github_token "${GITHUB_TOKEN}" || true

          # Read PR URL without heredoc (avoids YAML parse issues)
          if [[ -f pull_request.json ]]; then
            PR_URL=$(python -c 'import json,sys; \
import pathlib; p=pathlib.Path("pull_request.json"); \
print(json.load(p.open()).get("html_url","")) if p.exists() else print("")' 2>/dev/null || true)
            if [[ -n "$PR_URL" ]]; then
              echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Upload artifacts (debug)
        uses: actions/upload-artifact@v4
        with:
          name: autoheal-identifiers-artifacts
          if-no-files-found: ignore
          path: |
            artifacts/**
            autoheal_fw/config/config.yaml
            pull_request.json
            identifiers_discovered*.json
            rag_index_manifest_*.json
            llm_info.json
