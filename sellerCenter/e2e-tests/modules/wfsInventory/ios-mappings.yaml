ios:

  - name: sc.mappings.wfsInventory.filter
    identifier: //XCUIElementTypeButton[contains(@name,"sort and filter")]

  - name: sc.mappings.wfsInventory.search
    identifier: search

  - name: sc.mappings.wfsInventory.searchBar
    identifier: com.walmart.android.seller.debug:id/search_bar
  
  - name: sc.mappings.wfsInventory.quickFilterSection
    identifier: WFSInventoryViewController.quickFilterView

  - name: sc.mappings.wfsInventory.quickFilters
    identifier: //XCUIElementTypeStaticText[contains(@name,"${quickFilter}")]

  - name: sc.mappings.wfsInventory.firstWFSItemCard
    identifier: //XCUIElementTypeTable[@name="WFSInventoryViewController.tableView"]/XCUIElementTypeCell[1] | //XCUIElementTypeTable[@name="SellerSearchTableView<SCItemsCoordinator>.tableView"]/XCUIElementTypeCell[1]

  - name: sc.mappings.wfsInventory.nthWFSItemCard
    identifier: //XCUIElementTypeTable[@name="WFSInventoryViewController.tableView"]/XCUIElementTypeCell[${index}]

  - name: sc.mappings.wfsInventory.firstWFSItemCardOrNoResult
    identifier: //XCUIElementTypeStaticText[@name="SellerErrorView.titleLabel"] | //XCUIElementTypeTable[@name="WFSInventoryViewController.tableView"]

  - name: sc.mappings.wfsInventory.wfsItemCard
    identifier: (//XCUIElementTypeStaticText[@name="LDTag.label"])[${index}]

  - name: sc.mappings.wfsInventory.selectedQuickFilter
    identifier: //*[contains(@resource-id,"seller_search_scope_btn") and contains(@text,"${quickFilter}")]/following-sibling::*[contains(@resource-id,"seller_title_underline")]

  - name: sc.mappings.wfsInventory.nthWFSItemAvailableTitle
    identifier: com.walmart.android.seller.debug:id/seller_wfs_inventory_available_title

  - name: sc.mappings.wfsInventory.nthWFSItemAvailableValue
    identifier: com.walmart.android.seller.debug:id/seller_wfs_inventory_available_value

  - name: sc.mappings.wfsInventory.nthWFSItemInboundTitle
    identifier: com.walmart.android.seller.debug:id/seller_wfs_inventory_inbound_title

  - name: sc.mappings.wfsInventory.nthWFSItemInboundValue
    identifier: com.walmart.android.seller.debug:id/seller_wfs_inventory_inbound_value

  # Item details page
  - name: sc.mappings.wfsInventory.wfsItemDetails.header
    identifier: //android.widget.TextView[@resource-id="com.walmart.android.seller.debug:id/titleText" and @text="Inventory details"]

  - name: sc.mappings.wfsInventory.wfsItemDetails.wfsItemTitle
    identifier: com.walmart.android.seller.debug:id/seller_item_name

  - name: sc.mappings.wfsInventory.wfsItemDetails.wfsItemId
    identifier: com.walmart.android.seller.debug:id/itemId_value

  - name: sc.mappings.wfsInventory.wfsItemDetails.sku
    identifier: com.walmart.android.seller.debug:id/sku_value

  - name: sc.mappings.wfsInventory.wfsItemDetails.gtin
    identifier: com.walmart.android.seller.debug:id/gtin_value

  - name: sc.mappings.wfsInventory.wfsItemDetails.status
    identifier: //android.widget.TextView[contains(@content-desc,"${quickFilter}")]

  # Item filters
  - name: sc.mappings.wfsInventory.filters.itemType
    identifier: //android.widget.TextView[@resource-id="com.walmart.android.seller.debug:id/filter_check_box_item_text" and contains(@text, "${itemType}")]

  - name: sc.mappings.wfsInventory.filters.bundleType
    identifier: //android.widget.TextView[@resource-id="com.walmart.android.seller.debug:id/filter_check_box_item_text" and contains(@text, "${bundleType}")]

  - name: sc.mappings.wfsInventory.filters.viewResults
    identifier: com.walmart.android.seller.debug:id/apply_filters

  - name: sc.mappings.wfsInventory.filters.resetButton
    identifier: //android.widget.Button[@resource-id="com.walmart.android.seller.debug:id/seller_common_menu_icon_text" and @text="Clear all"]