ios:

  - name: sc.mappings.inbox.title
    identifier: Inbox

  - name: sc.mappings.inbox.messageList
    identifier: SellerMessagesViewController.messageListTableView

  - name: sc.mappings.inbox.firstCard
    identifier: (//XCUIElementTypeOther[@name="LDCard.contentSlotView"])[1] | //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]| //XCUIElementTypeOther[@name="SellerErrorView.stackView"] | (//XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]//XCUIElementTypeCell)[1] | (//XCUIElementTypeCell[contains(@name,"SellerUI.SellerInboxCell-msgId-")])[1]

  - name: sc.mappings.inbox.firstUnSpamCard
    identifier: (//XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]//XCUIElementTypeCell[. and ./*[not(contains(@label,'Spam'))]])[1]

  - name: sc.mappings.inbox.firstCardFlagImage
    identifier: //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[1]//*[@name='SellerInboxCardView.flagIcon']

  - name: sc.mappings.inbox.firstCardSpamImage
    identifier: //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[1]//*[@name='LDTag.label' and @label='Spam']

  - name: sc.mappings.inbox.firstCardUnreadImage
    identifier: //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[1]//*[@name='SellerInboxCardView.badgeView']

  - name: sc.mappings.inbox.nthCard
    identifier: //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[${index}]

  - name: sc.mappings.inbox.nthMessageTitle
    identifier: //XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[${index}]//XCUIElementTypeStaticText[@name="SellerInboxCardView.headerLabel"]

  - name: sc.mappings.inbox.nthMessageSubTitle
    identifier: (//XCUIElementTypeTable[@name="SellerMessagesViewController.messageListTableView"]/XCUIElementTypeAny[${index}]//XCUIElementTypeStaticText[@name="SellerInboxCardView.titleLabel"]

  - name: sc.mappings.inbox.messageTitle
    identifier: SellerInboxCardView.headerLabel

  - name: sc.mappings.inbox.messageSubTitle
    identifier: SellerInboxCardView.titleLabel

  - name: sc.mappings.inbox.messageBody
    identifier: SellerInboxCardView.cardView # SellerInboxCardView.subtitleLabel

  - name: sc.mappings.inbox.search
    identifier: search

  - name: sc.mappings.inbox.filter
    identifier: Filter || Filter, 1 filter applied || Filter, 2 filters applied

  - name: sc.mappings.inbox.filter.title
    identifier: //XCUIElementTypeNavigationBar[@name="SellerUI.SellerFilterView"] 

  - name: sc.mappings.inbox.moreOptions
    identifier: //XCUIElementTypeButton[@name="SellerBarButton_more options"] | //XCUIElementTypeButton[@name="more options"]

  - name: sc.mappings.inbox.composeMessage
    identifier: Message customer

  # Message Details
  - name: sc.mappings.inbox.messageDetails.unflaggedMessage
    identifier: unflagged

  - name: sc.mappings.inbox.messageDetails.flaggedMessage
    identifier: flagged

  - name: sc.mappings.inbox.messageDetails.flagUnflagMessage
    identifier: //*[@name="flagged"] | //*[@name="unflagged"]

# Message filters
  - name: sc.mappings.inbox.filters.messageStatus
    identifier: //XCUIElementTypeOther[@name="Status"]/following-sibling::*//XCUIElementTypeStaticText[@name="${messageStatus}"]

  - name: sc.mappings.inbox.filters.messageType
    identifier: //XCUIElementTypeOther[@name="Type"]/following-sibling::*//XCUIElementTypeStaticText[@name="${messageType}"]

  - name: sc.mappings.inbox.filters.viewResults
    identifier: SellerFilterViewController.applyButton

  - name: sc.mappings.inbox.filters.clearAll
    identifier: //XCUIElementTypeButton[@name="Clear all"]

  # Message compose
  - name: sc.mappings.inbox.compose.messageTitle
    identifier: //XCUIElementTypeStaticText[@name="Message customer"]

  - name: sc.mappings.inbox.compose.messageClose
    identifier: //XCUIElementTypeButton[@name="Close"] | //XCUIElementTypeButton[@name="close"] | //XCUIElementTypeButton[@name="SellerBarButton_close"]

  - name: sc.mappings.inbox.compose.messageAlert
    identifier: //XCUIElementTypeStaticText[@name="LDAlert.messageLabel"]

  - name: sc.mappings.inbox.compose.messagePONumber
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and contains(@label,"PO")]

  - name: sc.mappings.inbox.compose.messagePOSearchButton
    identifier: SellerMessageComposerViewController.searchButton

  - name: sc.mappings.inbox.compose.messageItem
    identifier: //XCUIElementTypeButton[@name="LDSelect.trailingView"]

  - name: sc.mappings.inbox.compose.itemSelection
    identifier: SellerDetailsImageWithTitleView.mainStackView

  - name: sc.mappings.inbox.compose.templateSelectionWithName
    identifier: (//XCUIElementTypeCell[contains(@name,'${templateName}')])[1]

  - name: sc.mappings.inbox.compose.templateItem
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="Message template (optional)"]

  - name: sc.mappings.inbox.compose.tagSelectionWithName
    identifier: //XCUIElementTypeCell[@name="${tagName}"]

  - name: sc.mappings.inbox.compose.insertTagItem
    identifier: Insert tag

  - name: us.mappings.ios.DoneButton
    identifier: //XCUIElementTypeButton[@name="Done"] 

  - name: sc.mappings.inbox.compose.messageBody
    identifier: SellerMessageComposerViewController.messageTextArea

  - name: sc.mappings.inbox.compose.messageSend
    identifier: SellerMessageComposerViewController.sendButton

  # Message details
  - name: sc.mappings.inbox.messageDetails.title
    identifier: Message

  - name: sc.mappings.inbox.messageDetails.detailsTitle
    identifier: Details

  - name: sc.mappings.inbox.messageDetails.subject
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="Subject"]//following-sibling::XCUIElementTypeButton

  - name: sc.mappings.inbox.messageDetails.poLink
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and contains(@label,"PO")]//following-sibling::XCUIElementTypeButton

  - name: sc.mappings.inbox.messageDetails.skuLink
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="SKU"]//following-sibling::XCUIElementTypeLink

  - name: sc.mappings.inbox.messageDetails.orderValue
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and contains(@label,"Order#")]//following-sibling::XCUIElementTypeButton

  - name: sc.mappings.inbox.messageDetails.tracking
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="Tracking"]//following-sibling::XCUIElementTypeLink

  - name: sc.mappings.inbox.messageDetails.status
    identifier: SellerMessageDetailView.statusTitleLabel
  
  - name: sc.mappings.inbox.messageDetails.statusBadge
    identifier: //XCUIElementTypeStaticText[@name="LDTag.label"]

  - name: sc.mappings.inbox.messageDetails.SentMessage
    identifier: //XCUIElementTypeStaticText[contains(@name,"LDLabel_0_1_")]
    
  # Message Details - Spam
  - name: sc.mappings.inbox.messageDetails.spamMessageEnabled
    identifier: //android.view.ViewGroup[@content-desc="Spam Action"]

  - name: sc.mappings.inbox.messageDetails.spamMessageDisabled
    identifier: //android.view.ViewGroup[@content-desc="Disable Spam Action"] | //XCUIElementTypeButton[@name="spam"]

  - name: sc.mappings.inbox.messageDetails.spamDialog
    identifier: 

  - name: sc.mappings.inbox.messageDetails.spamDialogReason
    identifier: 

  - name: sc.mappings.inbox.messageDetails.spamDialogReasonSubmit
    identifier: 

  - name: sc.mappings.inbox.messageDetails.spammedMessageStatus
    identifier: 

  - name: sc.mappings.inbox.messageDetails.replyButton
    identifier: Reply

  - name: sc.mappings.inbox.messageDetails.replySection
    identifier: SellerDetailsView.tableView

  - name: sc.mappings.inbox.messageDetails.lastMessage
    identifier: (//XCUIElementTypeStaticText[contains(@name,"LDLabel_0_")])[last()]

  - name: sc.mappings.inbox.messageDetails.noResponseNeededButton
    identifier: SellerMessageDetailFooterView.secondaryButton

  - name: sc.mappings.inbox.messageDetails.noResponseNeededButton.body
    identifier: //XCUIElementTypeButton[@name="SellerRadioView.mainStackView" and @label="Courtesy message, does not need response"]

  - name: sc.mappings.inbox.messageDetails.noResponseNeededButton.title
    identifier: //XCUIElementTypeNavigationBar[@name="No response needed"]
  
  - name: sc.mappings.inbox.messageDetails.noResponseNeededButton.subtitle
    identifier: //XCUIElementTypeStaticText[@name="SellerNoResponseViewController.indicationLabel"]
    
  - name: sc.mappings.inbox.messageDetails.spamDialogReasonSubmit
    identifier: //XCUIElementTypeButton[@name="SellerNoResponseViewController.submitButton"]

  # Message reply
  - name: sc.mappings.inbox.reply.title
    identifier: Reply

  - name: sc.mappings.inbox.reply.body
    identifier: SellerMessageComposerViewController.messageTextArea

  - name: sc.mappings.inbox.reply.sendButton
    identifier: SellerMessageComposerViewController.sendButton

  - name: sc.mappings.inbox.reply.closeButton
    identifier: Close

  # Select any message
  - name: sc.mappings.inbox.selectAnyMessage
    identifier: (//XCUIElementTypeOther[@name="SellerInboxCardView.rightStackView"])[2]

  # subject at Message tile
  - name: sc.mappings.inbox.subjectMessage
    identifier: (//XCUIElementTypeStaticText[@name="SellerInboxCardView.titleLabel"])[2]

  - name: sc.mappings.inbox.statusMessage
    identifier: (//XCUIElementTypeStaticText[@name="LDTag.label"])[2]

  # subject at Message details screen
  - name: sc.mappings.inbox.subjectMessageDetails
    identifier: SellerMessageDetailView.subjectValueLabel

  # Sort and fitler
  - name: sc.mappings.inbox.filter.statusInFilter
    identifier: //XCUIElementTypeStaticText[@name="Status"]

  - name: sc.mappings.inbox.filter.typeInFilter
    identifier: //XCUIElementTypeStaticText[@name="Type"]
  
  - name: sc.mappings.inbox.filter.unreadInFilter
    identifier: //XCUIElementTypeStaticText[@name="Unread"]

  - name: sc.mappings.inbox.filter.readInFilter
    identifier: //XCUIElementTypeStaticText[@name="Read"]

  - name: sc.mappings.inbox.filter.failedInFilter
    identifier: //XCUIElementTypeStaticText[@name="Failed"]

  - name: sc.mappings.inbox.filter.responseNeededInFilter
    identifier: //XCUIElementTypeStaticText[@name="Response needed"]
  
  - name: sc.mappings.inbox.filter.flaggedInFilter
    identifier: //XCUIElementTypeStaticText[@name="Flagged"]

  - name: sc.mappings.inbox.filter.customerCareInFilter
    identifier: //XCUIElementTypeStaticText[@name="Customer Care"]
    
  - name: sc.mappings.inbox.filter.spamInFilter
    identifier: //XCUIElementTypeStaticText[@name="Spam"]

  # Seach inbox
  - name: sc.mappings.inbox.search.title
    identifier: Search inbox

  - name: sc.mappings.inbox.search.searchBar
    identifier: TextFieldStackView.textField

  - name: sc.mappings.inbox.search.searchIcon
    identifier: TextFieldStackView.iconView
  
  - name: sc.mappings.inbox.search.searchHintText
    identifier: HelperTextView.helperTextLabel
  
  - name: sc.mappings.inbox.search.searchMessage
    identifier: TextFieldStackView.containerStackView

  # swpie message flag or unflag
  - name: sc.mappings.inbox.swpieFlagUnflag
    identifier: //XCUIElementTypeButton[@name="Flag"]
  
  - name: sc.mappings.inbox.verifySwpieFlagUnflag
    identifier: //XCUIElementTypeStaticText[@name="Flag"]

  # no result 
  - name: sc.mappings.inbox.noResult
    identifier: SellerErrorView.stackView

  - name: sc.mappings.inbox.noResultTitle
    identifier: //XCUIElementTypeStaticText[@name="SellerErrorView.titleLabel"]

  - name: sc.mappings.inbox.noResultText
    identifier: //XCUIElementTypeStaticText[@name="SellerErrorView.subtitleLabel"]