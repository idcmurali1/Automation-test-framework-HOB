ios:

  # Orders
  - name: sc.mappings.orders.title
    identifier: Orders navigationBar

  - name: sc.mappings.orders.filterButton
    identifier: //XCUIElementTypeButton[contains(@name,"sort and filter")] | //XCUIElementTypeButton[contains(@name,"Filter")]

  - name: sc.mappings.orders.searchButton
    identifier: //XCUIElementTypeNavigationBar[@name="Orders navigationBar"]/XCUIElementTypeButton[2]

  - name: sc.mappings.orders.filterSelectedValue
    identifier: //XCUIElementTypeButton[contains(@name,"SellerBarButton_Filter")]/XCUIElementTypeStaticText[@name="LDBadge.label"]

  - name: sc.mappings.orders.quickFilterSection
    identifier: SellerOrdersViewController.quickFilterView
    #//XCUIElementTypeCollectionView[@name="SellerPillsBarView.collectionView"]//XCUIElementTypeScrollView

  - name: sc.mappings.orders.quickFilters
    identifier: //XCUIElementTypeOther[@name="SellerOrdersViewController.quickFilterView"]//XCUIElementTypeCell[contains(@name, "${quickFilter}")]
    #//XCUIElementTypeCollectionView[@name="SellerPillsBarView.collectionView"]//XCUIElementTypeButton[contains(@name, "${quickFilter}")]

  - name: sc.mappings.orders.firstOrderCard
    identifier: //XCUIElementTypeTable[@name="SellerOrdersViewController.tableView" or @name="SellerSearchTableView<SellerOrderListViewModel>.tableView"]//XCUIElementTypeCell[1]

  - name: sc.mappings.orders.nthOrderCard
    identifier: //XCUIElementTypeTable[@name="SellerOrdersViewController.tableView" or @name="SellerSearchTableView<SellerOrderListViewModel>.tableView"]//XCUIElementTypeCell[${index}]

  - name: sc.mappings.orders.orderCard
    identifier: //XCUIElementTypeTable[@name="SellerOrdersViewController.tableView" or @name="SellerSearchTableView<SellerOrderListViewModel>.tableView"]//XCUIElementTypeCell[${index}]/XCUIElementTypeButton

  - name: sc.mappings.orders.firstOrderCardOrNoResult
    identifier: //*[@name="SellerErrorView.titleLabel" and (contains(@value, "No orders") or contains(@value, "There were no results"))] | //XCUIElementTypeTable[@name="SellerOrdersViewController.tableView"]//XCUIElementTypeCell[1]

  - name: sc.mappings.orders.selectedQuickFilter
    identifier: //XCUIElementTypeCell[contains(@name,"${quickFilter}")]/XCUIElementTypeOther/XCUIElementTypeOther[2]

  - name: sc.mappings.orders.noOrdersMessage
    identifier: //XCUIElementTypeStaticText[@name="SellerErrorView.titleLabel" and @label="No orders"]

  # Order search
  - name: sc.mappings.orders.searchField
    identifier: //XCUIElementTypeSearchField[contains(@name, "Search orders")]

  - name: sc.mappings.orders.searchCancel
    identifier: //XCUIElementTypeButton[@name="Cancel"]

  - name: sc.mappings.orders.searchType
    identifier: //XCUIElementTypeCell[contains(@name,"${searchType}")]

  # Order details page
  - name: sc.mappings.orders.orderDetails.header
    identifier: //XCUIElementTypeStaticText[@name="Order details"]

  - name: sc.mappings.orders.orderDetails.detailsLink
    identifier: //XCUIElementTypeButton[@name="Details"]

  - name: sc.mappings.orders.orderDetails.bottomSheet.close
    identifier: //XCUIElementTypeButton[@name="Close"]

  - name: sc.mappings.orders.orderDetails.backNavigation
    identifier: back

  - name: sc.mappings.orders.orderDetails.bottomSheet.orderTitle
    identifier: //XCUIElementTypeNavigationBar[@name="Details"]

  - name: sc.mappings.orders.orderDetails.bottomSheet.poNumber
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="PO#"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.orders.orderDetails.bottomSheet.orderNumber
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="Order#"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.orders.acknowledgedOrderExist
    identifier: Acknowledge order

  - name: sc.mappings.orders.orderDetails.printpackingslip
    identifier: //XCUIElementTypeStaticText[@name="Print packing slip"]

  - name: sc.mappings.orders.orderDetails.printpackingslip.cancel
    identifier: Cancel

  - name: sc.mappings.orders.orderDetails.moreActionsButton
    identifier: //XCUIElementTypeButton[@name="More actions for Order details"]

  - name: sc.mappings.orders.orderDetails.acknowledgeOrder
    identifier: (//XCUIElementTypeButton[@name="Acknowledge order"])[2]

  - name: sc.mappings.orders.orderDetails.orderOptions
    identifier: //XCUIElementTypeNavigationBar[@name="Orders navigationBar"]/XCUIElementTypeButton[2]

  - name: sc.mappings.orders.orderDetails.orderOptions.printOrder
    identifier: //XCUIElementTypeButton[@name="Print order"]

  - name: sc.mappings.orders.orderDetails.orderStatus
    identifier: LDTag.label

  - name: sc.mappings.orders.orderDetails.orderCancelled.successStickyMessage
    identifier: Your order has been Canceled.

  - name: sc.mappings.orders.orderDetails.orderCancelled.successMessage
    identifier: LDAlert.messageLabel #Order Canceled.

  # Order details options
  - name: sc.mappings.orders.orderDetails.orderOptions.actionsTitle
    identifier: //XCUIElementTypeNavigationBar[@name="Actions"]

  - name: sc.mappings.orders.orderDetails.orderOptions.close
    identifier: //XCUIElementTypeNavigationBar[@name="Actions"]/XCUIElementTypeButton

  - name: sc.mappings.orders.orderDetails.orderOptions.cancel
    identifier: //XCUIElementTypeButton[@name="Cancel order"]

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelOrder.title
    identifier: //XCUIElementTypeNavigationBar[@name="Cancel order?"]

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelOrder.close
    identifier: //XCUIElementTypeNavigationBar[@name="Cancel order?"]/XCUIElementTypeButton

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelOrder.cancelButton
    identifier: SellerCancelViewController.cancelButton

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelOrder.doNotCancelButton
    identifier: SellerCancelViewController.doNotCancelButton

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelOrder.reasonDropdown
    identifier: LDSelect.trailingView

  - name: sc.mappings.orders.orderDetails.orderOptions.cancelorder.selectReason
    identifier: //XCUIElementTypeStaticText[@name="Pricing Error"]/preceding-sibling::XCUIElementTypeButton

  # Order filters
  - name: sc.mappings.orders.filters.filterTitle
    identifier: Filter

  - name: sc.mappings.filters.dateRadioButton
    identifier: //*[@name='${orderDate}'][@value='${orderDate}']/preceding-sibling::XCUIElementTypeButton | //XCUIElementTypeCell[@name="Today"]/XCUIElementTypeOther[2]/XCUIElementTypeButton

  - name: sc.mappings.orders.filters.resetButton
    identifier: Clear all

  - name: sc.mappings.orders.filters.closeButton
    identifier: //XCUIElementTypeNavigationBar[@name="SellerUI.SellerFilterView"]//XCUIElementTypeButton[@name="close"]

  - name: sc.mappings.orders.filters.orderDateTab
    identifier: //XCUIElementTypeButton[contains(@name, "Order date")]

  - name: sc.mappings.orders.filters.shipByTab
    identifier: //XCUIElementTypeButton[contains(@name, "Ship by")]

  - name: sc.mappings.orders.filters.orderStatus
    identifier: //XCUIElementTypeCell[@name="${orderStatus}"]//XCUIElementTypeButton

  - name: sc.mappings.orders.filters.orderShipByDate
    identifier: //XCUIElementTypeCell[@name="${orderShipByDate}"]//XCUIElementTypeButton

  - name: sc.mappings.orders.filters.orderDate
    identifier: //XCUIElementTypeCell[@name="${orderDate}"]//XCUIElementTypeButton

  - name: sc.mappings.orders.filters.viewResults
    identifier: SellerFilterViewController.applyButton
  
    # select New at the filter 
  - name:  sc.mappings.orders.unshipped.selectedNew
    identifier: //XCUIElementTypeCell[@name="New"]/XCUIElementTypeOther[2]/XCUIElementTypeButton

    # click View results
  - name: sc.mappings.orders.confirmViewResults
    identifier: //XCUIElementTypeStaticText[@name="View results"]

    # select any order
  - name: sc.mappings.orders.selectAnyNewItem
    identifier: (//XCUIElementTypeOther[@name="SellerMultiItemCardView.titleStackView"])[${index}]/XCUIElementTypeOther

  - name: sc.mappings.orders.orderDetails.unshippedLabel
    identifier: Unshipped

  - name: sc.mappings.orders.orderDetails.carrierLabel
    identifier: LDSelect.containerView
  
  - name: sc.mappings.orders.orderDetails.carrierDropdown
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="Carrier"]

  # - name: sc.mappings.orders.orderDetails.carrierOption
  #   identifier: 

  - name: sc.mappings.orders.orderDetails.trackingNoLabel
    identifier: LDTextField.containerView
  
  - name: sc.mappings.orders.orderDetails.trackingNoField
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="Tracking number"]

  - name: sc.mappings.orders.orderDetails.markAsShippedCTA
    identifier: //XCUIElementTypeButton[@name="Mark as shipped"]

  - name: sc.mappings.orders.orderDetails.shippedLabel
    identifier: //XCUIElementTypeStaticText[@name="LDTag.label" and @label="Shipped"]