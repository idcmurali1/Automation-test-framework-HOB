functions:

  ###########################################################################################
  # Description : Function to select the first wfs shipment item from the list              #
  # ---------------------------------------- Params --------------------------------------- #
  # [optional]  ${validateData}   - true/false [Default false].                             #
  ###########################################################################################
  - name: sc.functions.wfsShipment.selectFirstWFSShipmentItem
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.firstWFSShippingCard
      - sleep:
          duration: 5000
      - if:
          condition: ${validateData}
          then:
            - storeIn:
                key: index
                value: 1
            - verifyIdentifier:
                present:
                  - identifier: sc.mappings.wfsShippment.nthWFSShippingImage
                  - identifier: sc.mappings.wfsShippment.nthWFSShippingId
                  - identifier: sc.mappings.wfsShippment.nthWFSShippingUnitsCount
                  - identifier: sc.mappings.wfsShippment.nthWFSShippingTo
                  - identifier: sc.mappings.wfsShippment.nthWFSShippingCarrier
      - click:
          identifier: sc.mappings.wfsShippment.firstWFSShippingCard
      - sleep:
          duration: 3000
      - executeFunction:
          name: sc.functions.reloadPage
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.wfsShipmentDetails.header
      - storeIn:
          key: validateData
          value: 'null'

  ###########################################################################################
  # Description : Function to verify if the searched shipment is displayed or not           #
  # ---------------------------------------- Params --------------------------------------- #
  # [optional]  ${validateData}   - true/false [Default false].                             #
  #                                 If true, wfsShipmentID, orderId & shipTo are mandatory. #
  # [optional]  ${wfsShipmentID}  - [Earlier fetched wfs shipment Id to be validated]       #
  # [optional]  ${orderId}        - [Earlier fetched wfs shipment order id to be validated] #
  # [optional]  ${shipTo}         - [Earlier fetched wfs shipTo to be validated]            #
  ###########################################################################################
  - name: sc.functions.wfsShipment.verifywfsShipment
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.wfsShipmentDetails.header
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.shipmentDetails.title
      - executeFunction:
          name: sc.functions.wfsShipment.verifywfsShipmentDetailsPage

  ###########################################################################################
  # Description : Function to verify wfs shipment details page display of specific shipment #
  ###########################################################################################
  - name: sc.functions.wfsShipment.verifywfsShipmentDetailsPage
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShipment.shipmentDetails.itemsTitle
            - identifier: sc.mappings.wfsShipment.shipmentDetails.shipmentsTitle
      - if:
          condition: ${validateData}
          then:
            - if:
                condition: ${APP_PLATFORM} == 'android'
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.shipmentIdValue
                          equals: ${wfsShipmentID}
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.inboundOrderIdValue
                          equals: ${orderId}
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.shipToValue
                          equals: ${shipTo}
                else:
                  - verifyIdentifier:
                      label:
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.shipmentIdValue
                          equals: ${wfsShipmentID}
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.inboundOrderIdValue
                          equals: ${orderId}
                        - identifier: sc.mappings.wfsShipment.shipmentDetails.shipToValue
                          equals: ${shipTo}
      - storeIn:
          key: validateData
          value: 'null'

  ###########################################################################################
  # Description : Function to select quick filter                                           #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]  ${quickFilter}       - Domestic / International                            #
  ###########################################################################################
  - name: sc.functions.wfsShipment.quickFilterwfsShipment
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShipment.quickFilterSection
      - if:
          identifier:
            notPresent:
              - identifier: sc.mappings.wfsShipment.quickFilters
          then:
            - scroll:
                direction: left
                withinIdentifier: sc.mappings.wfsShipment.quickFilterSection
            - sleep:
                duration: 1000
      - click:
          identifier: sc.mappings.wfsShipment.quickFilters
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.firstWFSShippingCard
            - identifier: sc.mappings.wfsShippment.selectedQuickFilter

  ###########################################################################################
  # Description : Function to verify if quick filter selection is proper                    #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]   ${quickFilter}            - Domestic / International                      #
  # [optional]    ${validatewfsshipment}        - true/false [default false]                #
  #                                           [If true, validates the shipment as well]     #
  # [optional]    ${validateIndexes} - [default 1] Indexes of items to be verified          # 
  ###########################################################################################
  - name: sc.functions.wfsShippment.verifyQuickFilters
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.selectedQuickFilter
      - if:
          condition: ${validatewfsshipment}
          then:
            - if:
                condition: ${validateIndexes} == null
                then:
                  - storeIn:
                      key: validateIndexes
                      value: 1
            - executeNode:
                file: sellerCenter/e2e-tests/helpers/generateR2Array.js
                args:
                  - value: ${validateIndexes}
                getResponse:
                  storeIn: indexesToBeValidated
            - if:
                condition: ${quickFilter} == 'Domestic'
                then:
                  - storeIn:
                      key: shipmentType
                      value: Shipment ID
                else:
                  - storeIn:
                      key: shipmentType
                      value: Receiving ID                  
            - loop:
                each: ${indexesToBeValidated}
                storeElement: index
                flow:                
                  - if:
                      condition: ${APP_PLATFORM} == 'android'
                      then:
                        - verifyIdentifier:
                            text:
                              - identifier: sc.mappings.wfsShippment.nthWFSShippingId
                                contains: ${shipmentType}
                      else:
                        - verifyIdentifier:
                            label:
                              - identifier: sc.mappings.wfsShippment.nthWFSShippingId
                                contains: ${shipmentType}
      - storeIn:
          key: validateWFSItem
          value: false

  ###########################################################################################
  # Description : Function to fetch shipment details data and store it from details page    #
  #               To be used for any search or filter validations as required               #
  # --------------------------------------------------------------------------------------- #
  # Pre-requisite : Should be in wfs shipment details page of a shipment                    #
  ###########################################################################################
  - name: sc.functions.wfsShippment.wfsShipmentDetails.fetchwfsShipmentData
    flow:
      - verifyIdentifier:
          present:
            - identifier: sc.mappings.wfsShippment.wfsShipmentDetails.header
      - getString:
          identifier: sc.mappings.wfsShipment.shipmentDetails.shipmentIdValue
          attribute: ${identifierTextAttribute}
          storeIn: wfsShipmentID
      - getString:
          identifier: sc.mappings.wfsShipment.shipmentDetails.inboundOrderIdValue
          attribute: ${identifierTextAttribute}
          storeIn: orderID
      - getString:
          identifier: sc.mappings.wfsShipment.shipmentDetails.shipToValue
          attribute: ${identifierTextAttribute}
          storeIn: shipTo
      - log: WFS shipment id - ${wfsShipmentID} / WFS Inbounrd order Id - ${orderId} / WFS ship to - ${shipTo}


  ###########################################################################################
  # Description : Common function to select search and validate if the page is navigated to #
  #               shipment search view and search for Shopment or Inbound Order             #
  # ---------------------------------------- Params --------------------------------------- #
  # [tab]   ${tab}                              - Shipment/InboundOrderId                   #
  # [mandatory]   ${searchValue}                                                            #
  ###########################################################################################
  - name: sc.functions.wfsShipment.searchForShipmentOrInboutOrderId
    flow:
      - if:
          identifier:
            present:
              - identifier: sc.mappings.wfsShippment.searchWfsShipment.header
          then:
            - log: "Search page already loaded"
          else:
            - click:
                identifier: sc.mappings.wfsShippment.searchIcon
            - verifyIdentifier:
                present:
                  - identifier: sc.mappings.wfsShippment.searchWfsShipment.header
                  - identifier: sc.mappings.wfsShippment.searchWfsShipment.shipmentIdTab
                  - identifier: sc.mappings.wfsShippment.searchWfsShipment.inboundOrderIdTab
                  - identifier: sc.mappings.wfsShippment.searchWfsShipment.searhInput
      - if:
          condition: ${tab} == 'Shipment'
          then:
            - click:
                identifier: sc.mappings.wfsShippment.searchWfsShipment.shipmentIdTab
          else:
            - click:
                identifier: sc.mappings.wfsShippment.searchWfsShipment.inboundOrderIdTab
      - sleep:
          duration: 2000
      - executeFunction:
          name: sc.functions.utils.searchInput
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.searchWfsShipment.searhInput
            - name: value
              string: ${searchValue}


  ###########################################################################################
  # Description : Function to select search and validate if the page is navigated to        #
  #               shipment search view                                                      #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]   ${wfsShipmentId}                                                          #
  ###########################################################################################
  - name: sc.functions.wfsShipment.searchForShipment
    flow:
      - executeFunction:
          name: sc.functions.wfsShipment.searchForShipmentOrInboutOrderId
          params:
            - name: tab
              string: Shipment
            - name: searchValue
              string: ${wfsShipmentId}


  ###########################################################################################
  # Description : Function to select search and validate if the page is navigated to        #
  #               shipment search view                                                      #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]   ${orderId}                                                                #
  ###########################################################################################
  - name: sc.functions.wfsShipment.searchForInboundOrderId
    flow:
      - executeFunction:
          name: sc.functions.wfsShipment.searchForShipmentOrInboutOrderId
          params:
            - name: tab
              string: InboundOrderId
            - name: searchValue
              string: ${orderId}

  ###########################################################################################
  # Description : Function to validate no results displayed when shipment id is incorrect   #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]   ${searchType}                 - Shipment/Order                            #
  ###########################################################################################
  - name: sc.functions.wfsShipment.search.noResultsDisplayed
    flow:
      - executeFunction:
          name: sc.functions.resetFailedString
      - log: "WFS Shipments: No results title"
      - executeFunction:
          name: sc.functions.validateText.equals
          params:
            - name: identifier
              string: sc.mappings.inbox.noResultTitle
            - name: expectedValue
              string: There were no results
            - name: identifierName
              string: Error Title
      - log: "WFS Shipments: No results text"      
      - if:
          condition: ${searchType} == 'shipment'
          then:
            - executeFunction:
                name: sc.functions.validateText.equals
                params:
                  - name: identifier
                    string: sc.mappings.inbox.noResultText
                  - name: expectedValue
                    string: No shipment ID matches for "${wfsShipmentId}"
                  - name: identifierName
                    string: Error description
      - if:
          condition: ${searchType} == 'order'
          then:
            - executeFunction:
                name: sc.functions.validateText.equals
                params:
                  - name: identifier
                    string: sc.mappings.inbox.noResultText
                  - name: expectedValue
                    string: No inbound order ID matches for "${orderId}"
                  - name: identifierName
                    string: Error description
      - executeFunction:
          name: sc.functions.validatedFailedString


  ###########################################################################################
  # Description : Function to validate shipment search results is returned                  #
  # ---------------------------------------- Params --------------------------------------- #
  # [mandatory]   ${wfsShipmentId}                                                          #
  ###########################################################################################
  - name: sc.functions.wfsShipment.search.shipmentReturned
    flow:
      - storeIn:
          key: index
          value: 1
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: sc.mappings.wfsShippment.nthWFSShippingCard
      - executeFunction:
          name: sc.functions.resetFailedString
      - log: "WFS Shipments: Shipment ID"
      - executeFunction:
          name: sc.functions.validateText.equals
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingId
            - name: expectedValue
              string: "Shipment ID: ${wfsShipmentId}"
            - name: identifierName
              string: Shipment Id
      - log: "WFS Shipments: Date"
      - executeFunction:
          name: sc.functions.checkIdentifier.isNotEmpty
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingId
            - name: identifierName
              string: Date
      - log: "WFS Shipments: Shipped units"
      - executeFunction:
          name: sc.functions.checkIdentifier.isNotEmpty
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingDate
            - name: identifierName
              string: Shipped Units    
      - log: "WFS Shipments: Shipped to"
      - executeFunction:
          name: sc.functions.checkIdentifier.isNotEmpty
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingTo
            - name: identifierName
              string: Shipped To
      - log: "WFS Shipments: Carrier"
      - executeFunction:
          name: sc.functions.checkIdentifier.isNotEmpty
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingCarrier
            - name: identifierName
              string: Carrier      
      - log: "WFS Shipments: Status"
      - executeFunction:
          name: sc.functions.checkIdentifier.isNotEmpty
          params:
            - name: identifier
              string: sc.mappings.wfsShippment.nthWFSShippingStatus
            - name: identifierName
              string: Status
      - executeFunction:
          name: sc.functions.validatedFailedString