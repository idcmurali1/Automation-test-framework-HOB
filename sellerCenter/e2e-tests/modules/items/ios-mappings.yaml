ios:

  - name: sc.mappings.items.filter
    identifier: //XCUIElementTypeButton[contains(@name,"sort and filter")]

  - name: sc.mappings.items.search
    identifier: //XCUIElementTypeButton[@name="search"] | //XCUIElementTypeNavigationBar[@name="Items navigationBar"]/XCUIElementTypeButton[2]

  # Items Navbar Icons
  - name: sc.mappings.itemsView.navBar.title
    identifier: //XCUIElementTypeNavigationBar//XCUIElementTypeStaticText[@name]
    
  - name: sc.mappings.itemsView.navBar.search
    identifier: //XCUIElementTypeNavigationBar/XCUIElementTypeButton[@name='SellerBarButton_search']

  - name: sc.mappings.itemsView.navBar.filter
    identifier: //XCUIElementTypeNavigationBar/XCUIElementTypeButton[contains(@name,'Filter')]

  - name: sc.mappings.items.searchBar
    identifier: TextFieldStackView.textField

  - name: sc.mappings.items.quickFilterSection
    identifier: SCItemsViewController.quickFilterView

  - name: sc.mappings.items.quickFilters
    identifier: //XCUIElementTypeStaticText[contains(@name,"${quickFilter}")]

  - name: sc.mappings.items.firstItemCard
    identifier: //XCUIElementTypeTable[@name="SellerItemsViewController.tableView"]/XCUIElementTypeCell[1] | //XCUIElementTypeTable[@name="SellerSearchTableView<SellerItemViewModel>.tableView"]/XCUIElementTypeCell[1]

  - name: sc.mappings.item.nthItemCardSKU
    identifier: //XCUIElementTypeTable[@name="SellerSearchTableView<SellerItemViewModel>.tableView"]/XCUIElementTypeCell[contains(@name, "${itemSKU}")]

  - name: sc.mappings.items.firstItemCardOrNoResult
    identifier: //XCUIElementTypeStaticText[@name="SellerErrorView.titleLabel"] | //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]

  - name: sc.mappings.items.selectedQuickFilter
    identifier: //XCUIElementTypeCell[contains(@name,"${quickFilter}")]/XCUIElementTypeOther/XCUIElementTypeOther[2]

  - name: sc.mappings.items.itemCard
    identifier: (//XCUIElementTypeStaticText[@name="LDTag.label"])[${index}]

  - name: sc.mappings.items.specificItemCardStatus
    identifier: (//XCUIElementTypeStaticText[@name="LDTag.label" and (contains(@label, "${quickFilterType}"))])[${index}]

  - name: sc.mappings.items.moreOptions
    identifier: SellerBarButton_more options

  # Item search
  - name: sc.mappings.items.searchField
    identifier: TextFieldStackView.textField

  - name: sc.mappings.items.searchFieldIcon
    identifier: SellerSearchViewController<SellerReturnsRefundsListCoordinator>.searchIconButton

  - name: sc.mappings.items.searchCancel
    identifier: //XCUIElementTypeButton[@name="Cancel"]

  - name: sc.mappings.items.searchType
    identifier: //XCUIElementTypeCollectionView[@name="SellerPillsBarView.collectionView"]//XCUIElementTypeButton[contains(@name, "${searchType}")]

  # Item details page
  - name: sc.mappings.items.itemDetails.header
    identifier: Item details

  - name: sc.mappings.items.itemDetails.itemTitle
    identifier: SellerDetailsImageWithTitleView.titleLabel

  - name: sc.mappings.items.itemDetails.itemId
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="Item ID"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.items.itemDetails.sku
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="SKU"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.items.itemDetails.upc
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="UPC"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.items.itemDetails.gtin
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="GTIN"]/following-sibling::XCUIElementTypeButton

  - name: sc.mappings.items.itemDetails.editInventory
    identifier: //XCUIElementTypeButton[@name="Edit Inventory"]

  # Item filters
  - name: sc.mappings.items.filters.minPrice
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @value="0"]

  - name: sc.mappings.items.filters.maxPrice
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @value="200"]

  - name: sc.mappings.items.filters.inventory
    identifier: //XCUIElementTypeOther[@name="Inventory"]/following-sibling::*//XCUIElementTypeStaticText[@name="${inventoryType}"]

  - name: sc.mappings.items.filters.fulfillments
    identifier: //XCUIElementTypeOther[@name="Fulfillment type"]/following-sibling::*//XCUIElementTypeStaticText[@name="${fulfillmentType}"]

  - name: sc.mappings.items.filters.viewResults
    identifier: SellerFilterViewController.applyButton

  - name: sc.mappings.items.filters.resetButton
    identifier: Reset

  - name: sc.mappings.items.filters.keyBoardDoneButton
    identifier: Done
  
  - name: sc.mappings.items.itemDetails.status
    identifier: //XCUIElementTypeStaticText[@name="LDTag.label" and contains(@label,"${quickFilter}")]

  - name: sc.mappings.items.itemDetails.inventoryAvailable
    identifier: //XCUIElementTypeStaticText[@name="SCItemsSettingsView.settingValueVariableLabel" and @label="Available"]/following-sibling::XCUIElementTypeStaticText[@name="SCItemsSettingsView.settingValueLabel"]

  # Item price edit
  - name: sc.mappings.items.itemDetails.editPrice.link
    identifier: Edit Price

  - name: sc.mappings.items.itemDetails.editPrice.pageTitle
    identifier: //XCUIElementTypeNavigationBar[@name="Edit selling price"]

  - name: sc.mappings.items.itemDetails.editPrice.sellingPrice
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField"]

  - name: sc.mappings.items.itemDetails.editPrice.priceAlertImage
    identifier: (//XCUIElementTypeImage[@name="LDAlert.iconView"])[2]

  - name: sc.mappings.items.itemDetails.editPrice.priceAlertMessage
    identifier: //XCUIElementTypeStaticText[@name="LDAlert.messageLabel" and @label="Big price change detected. Confirm price."]

  - name: sc.mappings.items.itemDetails.editPrice.confirmButton
    identifier: //XCUIElementTypeButton[@name="SCItemPriceUpdateViewController.updateButton"]

  - name: sc.mappings.items.itemDetails.editPrice.close
    identifier: //XCUIElementTypeButton[@name="Close"]

  # Item inventory
  - name: sc.mappings.items.inventory.title
    identifier: Edit inventory

  - name: sc.mappings.items.inventory.anyFulfillmentEdit
    identifier: //XCUIElementTypeStaticText[@name="SCItemInventoryEditView.fulfillmentTitleLabel" and contains(@value, "${fulfillmentCenterName}")]/following-sibling::XCUIElementTypeImage[@name="SCItemInventoryEditView.pencilIcon"]

  - name: sc.mappings.items.inventory.firstFulfillmentEdit
    identifier: SCItemInventoryEditView.pencilIcon

  - name: sc.mappings.items.inventory.addInventory
    identifier: SCInventoryCountUpdateViewController.plusIcon
  
  - name: sc.mappings.items.inventory.removeInventory
    identifier: SCInventoryCountUpdateViewController.minusIcon

  - name: sc.mappings.items.inventory.inventoryCountToBeAdded
    identifier: SCInventoryCountUpdateViewController.textFieldWithDefaultAccessoryView

  - name: sc.mappings.items.inventory.updateInventory
    identifier: SCItemInventoryUpdateView.saveAndUpdateButton

  - name: sc.mappings.items.inventory.updateInventorySuccessMessage
    identifier: //XCUIElementTypeStaticText[@name="LDAlert.messageLabel" and @value="Your inventory update was saved. The new quantity will appear on Walmart.com within an hour."]

  - name: sc.mappings.items.inventory.edit.firstFulfillmentCenter
    identifier: //XCUIElementTypeCell[1]/XCUIElementTypeStaticText[@index="9"]

  - name: sc.mappings.items.inventory.edit.firstOnHandValue
    identifier: (//XCUIElementTypeTextField[@name="SCItemInventoryCountEditView.countTextfield"])[1]

  - name: sc.mappings.items.inventory.specifcFulfillmentOnHandValue
    identifier: //XCUIElementTypeStaticText[@name="${fulfillmentCenterName}"]/parent::XCUIElementTypeCell/XCUIElementTypeTextField[@name="SCItemInventoryCountEditView.countTextfield"]

  - name: sc.mappings.items.inventory.options
    identifier: //XCUIElementTypeNavigationBar[@name="Items navigationBar"]/XCUIElementTypeButton[2]

  - name: sc.mappings.items.inventory.addFulfillmentCenter
    identifier: SCInventoryMoreActionsViewController.addWFSLabel

  - name: sc.mappings.items.inventory.addFulfillmentCenter.header
    identifier: //XCUIElementTypeStaticText[@name="Fulfillment centers"]

  - name: sc.mappings.items.inventory.addFulfillmentCenter.nextButton
    identifier: SCAddFulfillmentCenterViewController.nextButton

  - name: sc.mappings.items.inventory.addFulfillmentCenter.centerName
    identifier: //XCUIElementTypePicker[@name="SCAddFulfillmentCenterViewController.selectionView"]//XCUIElementTypePickerWheel

  - name: sc.mappings.items.inventory.fulfillmentCenterName
    identifier: //XCUIElementTypeStaticText[@name="${fulfillmentCenterName}"]

  - name: sc.mappings.items.inventory.backNavigation
    identifier: //XCUIElementTypeNavigationBar[@name="Items navigationBar"]/XCUIElementTypeButton[1]

  - name: sc.mappings.items.inventory.firstFulfillmentCenter
    identifier: //XCUIElementTypePickerWheel[@index="0"]
  
  - name: sc.mappings.items.inventory.newFulfillmentCenter
    identifier: //XCUIElementTypePickerWheel[@value="${fulfillmentCenterName}"]

  - name: sc.mappings.items.inventory.fcAlreadySelectedMessage
    identifier: //XCUIElementTypeStaticText[@name="LDSnackbar.label" and @label="This fulfillment center is already selected."]

  - name: sc.mappings.items.inventory.editFulfillment.saveChanges.closeButton
    identifier: //XCUIElementTypeNavigationBar[@name="Save changes?"]/XCUIElementTypeButton

  # Items View Facets
  - name: sc.mappings.itemsView.facets
    identifier: //*[@name="SellerOrdersViewController.quickFilterView"] | //*[@name='SCItemsViewController.quickFilterView'] | //*[@name='SellerReturnsRefundsListViewController.quickFilterView'] | //XCUIElementTypeOther[@name="SellerItemsViewController.quickFilterView"]

  - name: sc.mappings.itemsView.facet
    identifier: //*[contains(@name,'quickFilterView')]//XCUIElementTypeStaticText[contains(@name,'${facetName}')]

  - name: sc.mappings.itemsView.facetSelected
    identifier: //*[contains(@name,'quickFilterView')]//XCUIElementTypeStaticText[contains(@name,'${facetName}')]

  # Add items (ISBM)
  - name: sc.mappings.items.isbm.link
    identifier: //XCUIElementTypeButton[@name="Add item"]

  - name: sc.mappings.items.isbm.title
    identifier: //XCUIElementTypeStaticText[@name="Add item"]

  - name: sc.mappings.items.isbm.search
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField"]

  - name: sc.mappings.items.isbm.firstCard
    identifier: //XCUIElementTypeTable[@name="SellerSearchTableView<ItemSetupSearchDetailsViewModel>.tableView"]/XCUIElementTypeCell[1]

  - name: sc.mappings.items.isbm.addItemButton
    identifier: //XCUIElementTypeButton[@name="Add item"]

  - name: sc.mappings.items.isbm.itemImage
    identifier: SellerDetailsImageWithTitleView.imageView

  - name: sc.mappings.items.isbm.itemCondition.dropdown
    identifier: //XCUIElementTypeButton[@name="LDSelect.trailingView"]

  - name: sc.mappings.items.isbm.itemCondition.select
    identifier: //XCUIElementTypeCell[@name="New"]

  - name: sc.mappings.items.isbm.SKU
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="SKU"]

  - name: sc.mappings.items.isbm.sellingPrice
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="Selling price"]

  - name: sc.mappings.items.isbm.shippingWeight
    identifier: //XCUIElementTypeTextField[@name="TextFieldStackView.textField" and @label="Shipping weight (lbs)"]

  - name: sc.mappings.items.isbm.submit
    identifier: //XCUIElementTypeButton[@name="Submit"]

  - name: sc.mappings.items.isbm.verifyAddition
    identifier: 

  # ---------------------------------------------- Catalog Locators ----------------------------------------------
  # Catalog List Items (Card Content)
  - name: sc.mappings.catalogListView.listItemsSection
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]

  - name: sc.mappings.catalogListView.listItems
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell

  - name: sc.mappings.catalogListView.listItems.itemNameWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="SellerLineItemView.titleValueLabel"]

  - name: sc.mappings.catalogListView.listItems.skuTitleWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="SellerLineItemView.titleValueLabel"]

  - name: sc.mappings.catalogListView.listItems.skuValueWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="SellerLineItemView.titleValueLabel"]

  - name: sc.mappings.catalogListView.listItems.priceTitleWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="SellerLineItemView.topInfoLegandLabel"]

  - name: sc.mappings.catalogListView.listItems.priceValueWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="SellerLineItemView.topInfoValueLabel"]

  - name: sc.mappings.catalogListView.listItems.tagWithIndex
    identifier: //XCUIElementTypeTable[@name="SCItemsViewController.tableView"]/XCUIElementTypeCell[${index}]//*[@name="LDTag.label"]

  - name: sc.mappings.catalog.itemDetails.price.sellingPriceValue
    identifier: //XCUIElementTypeStaticText[@name="SellerDetailsAttributeLineItemView.titleLabel" and @label="Selling price"]/following-sibling::XCUIElementTypeStaticText

  - name: sc.mappings.catalog.itemDetails.price.sellingPriceEdit
    identifier: (//XCUIElementTypeStaticText[@name="Edit"])[1]

  - name: sc.mappings.catalog.itemDetails.price.sellingPrice.edit.newPrice
    identifier: TextFieldStackView.textField

  - name: sc.mappings.catalog.itemDetails.price.sellingPrice.edit.updatePrice
    identifier: SCItemPriceUpdateViewController.updateButton

  - name: sc.mappings.catalog.itemDetails.price.updatePrice.confirmButton
    identifier: //XCUIElementTypeButton[@name="SCItemPriceUpdateViewController.updateButton"]

  - name: sc.mappings.catalog.itemDetails.snackbarText
    identifier: (//XCUIElementTypeOther[@name="LDAlert.messageLabelContainer"])[3]/XCUIElementTypeStaticText[@name="LDAlert.messageLabel"]