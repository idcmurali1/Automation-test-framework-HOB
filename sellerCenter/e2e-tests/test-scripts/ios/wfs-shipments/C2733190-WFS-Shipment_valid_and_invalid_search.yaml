general:
  platform: ios
  tags: sc-e2e, sc-staging-feature-build, C2733190

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - storeIn:
          key: identifierTextAttribute
          value: label
      - storeIn:
          key: APP_PLATFORM
          value: ios

  - name: Main
    flow:
      - log: Start Main

      # Login
      - executeFunction:
          name: sc.functions.accounts.login
          params:
            - name: email
              string: sc.partner1.email
            - name: password
              string: sc.partner1.password

      # navigation to catalog view from the home menu
      - executeFunction:
          name: sc.functions.navigation.toTab
          params:
            - name: tab
              string: sc.tab.wfsShipments.name

      # validate the catalog list page opens and validate the page contents
      - executeFunction:
          name: sc.functions.catalog.validateItemListPageDisplays
          params:
            - name: tabName
              string: WFS shipments

      # - executeFunction:
      #     name: sc.functions.wfsShipment.selectFirstWFSShipmentItem
    
      # - executeFunction:
      #     name: sc.functions.wfsShippment.wfsShipmentDetails.fetchwfsShipmentData

      # - goBack: true

      - executeFunction:
          name: sc.functions.wfsShipment.searchForShipment
          params:
            - name: wfsShipmentId
              string: '123'

      - executeFunction:
          name: sc.functions.wfsShipment.search.noResultsDisplayed
          params:
            - name: searchType
              string: 'Shipment'
            - name: wfsShipmentId
              string: '123'

      # - executeFunction:
      #     name: sc.functions.wfsShipment.searchForShipment
      #     params:
      #       - name: wfsShipmentId
      #         string: ${wfsShipmentID}

      # - executeFunction:
      #     name: sc.functions.wfsShipment.search.shipmentReturned
      #     params:
      #       - name: wfsShipmentId
      #         string: ${wfsShipmentID}

      - executeFunction:
          name: sc.functions.wfsShipment.searchForInboundOrderId
          params:
            - name: orderId
              string: '123'

      - executeFunction:
          name: sc.functions.wfsShipment.search.noResultsDisplayed
          params:
            - name: searchType
              string: 'Order'
            - name: wfsShipmentId
              string: '123'

      # - executeFunction:
      #     name: sc.functions.wfsShipment.searchForInboundOrderId
      #     params:
      #       - name: orderId
      #         string: ${orderID}

      # - executeFunction:
      #     name: sc.functions.wfsShipment.search.shipmentReturned
      #     params:
      #       - name: wfsShipmentId
      #         string: ${wfsShipmentID}

      - storeIn:
          key: testStatus
          value: passed
