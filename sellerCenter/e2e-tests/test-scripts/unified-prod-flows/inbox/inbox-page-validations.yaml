general:
  tags: p1-sc-prod-e2e, sc-prod-feature-build

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

  - name: Main
    flow:
      - log: Start Main

      # Login
      - executeFunction:
          name: sc.functions.accounts.login
          params:
            - name: email
              string: sc.partner1.email
            - name: password
              string: sc.partner1.password
      
      - executeFunction:
          name: sc.functions.navigation.toTab
          params:
            - name: tab
              string: Inbox

      - executeFunction:
          name: sc.functions.inbox.verifyMessageListDisplay

      - executeFunction:
          name: sc.functions.global.search
          params:
            - name: searchValue
              string: Preetham Bhaskara

      - executeFunction:
          name: sc.functions.inbox.verifySearchResult
          params:
            - name: searchTitle
              string: true
            - name: searchValue
              string: Preetham Bhaskara

      - executeFunction:
          name: sc.functions.inbox.selectnthMessage
          params:
            - name: index
              string: 2

      - executeFunction:
          name: sc.functions.inbox.flagUnglagMessage

      - executeFunction:
          name: sc.functions.inbox.flagUnglagMessage

      - executeFunction:
          name: sc.functions.navigation.navigateBackToListPage

      - if:
          condition: ${GLASS_ENV} == 'teflon'
          then:
            - storeIn:
                key: searchValue
                value: 100000675653339
            - storeIn:
                key: poNumber
                value: 109005245819775
          else:
            - storeIn:
                key: searchValue
                value: 200011961974355
            - storeIn:
                key: poNumber
                value: 108919463435754

      - executeFunction:
          name: sc.functions.global.search
          params:
            - name: searchValue
              string: ${searchValue}

      - executeFunction:
          name: sc.functions.inbox.verifySearchResult
          params:
            - name: searchOrder
              string: true
            - name: searchValue
              string: ${searchValue}

      - executeFunction:
          name: sc.functions.inbox.filterSelection
          params:
            - name: messageStatus
              string: Unread
            - name: verifyFilterData
              string: true

      - executeFunction:
          name: sc.functions.inbox.filterSelection
          params:
            - name: messageStatus
              string: Read
            - name: verifyFilterData
              string: true

      - executeFunction:
          name: sc.functions.inbox.filterSelection
          params:
            - name: messageType
              string: Flagged
            - name: verifyFilterData
              string: true

      - executeFunction:
          name: sc.functions.inbox.filterSelection
          params:
            - name: messageType
              string: Spam
            - name: verifyFilterData
              string: true

      - executeFunction:
          name: sc.functions.inbox.filterSelection
          params:
            - name: messageType
              string: Response needed
            - name: verifyFilterData
              string: true

      - executeFunction:
          name: sc.functions.inbox.composeMessage
          params:
            - name: poNumber
              string: ${poNumber}
            - name: messageBody
              string: 'Message for testing'
            - name: sendMessage
              string: true

      - storeIn:
          key: testStatus
          value: passed