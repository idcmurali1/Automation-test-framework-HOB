#-------------------------------------------------------------------------------------------------------------------
# Registered User : 1P S2H + In-store Pickup Payment Type : CC
# Scenario covered:
# Navigate onboarding to home, clear cart through astro 
# Checking and selecting Store in HP
# Navigate to sign in page and signin
# Search a Product via deeplink and add from PDP
# Navigate to cart and validate product details and estimate total in cart
# Proceed to Checkout
# Validate fulfillment type in review order page, mobile number, add CVV
# Place the order and Validate Order Confirmation page
# oder cancellation
#-------------------------------------------------------------------------------------------------------------------
general:
  platform: ios
  tags: flow-044, ca_authpoc,test_run_ios, dailyRun, frenchRun, fr_ca, group-5, E2E-iOS-English, E2E-iOS-French
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  #flow-044    Registered User : 1P S2H + In-store Pickup Payment Type : CC  (Flow:A2C Search, Slot BAS)

  - name: Main
    flow:

      - log: Start Main

      # Get TimeStamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      #temporary#
      - executeFunction:
          name: ca.test.functions.utils.avoidTestPopup

      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.global.onboarding.navigateiosOnboardingToHomeparamZip
          params:
            - name: ZIP_CODE
              string: ca.test.data.flow044.zipCode
      
      # Verifying home screen
      - executeFunction:
          name: ca.test.functions.home.headerElements.validateIosHomePage

      # verify homescreen bottom ribbon
      - executeFunction:    
          name: ca.test.functions.home.livingDesign.validateIosBottomNavigation
      
      # Creating account using astro
      - executeFunction:
          name: ca.test.functions.apis.createAccount 
 
      # Navigate to sign in page
      - executeFunction:
          name: ca.test.functions.home.signIn

      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ${emailId}
            - name: password
              string: ${password}

      - executeFunction:
          name: ca.test.functions.utils.terminateApp

      - executeFunction:
          name: ca.test.functions.utils.relaunchApp

      # Checking and selecting Store
      - executeFunction:
          name: ca.test.functions.home.storeSelect
          params:
            - name: Zip_Code
              string: ca.test.data.flow044.zipCode
            - name: storeName
              string: ca.test.data.flow044.storeAddress

      # Selecting address at home page
      - executeFunction:
          name: ca.test.functions.home.changeLocationLink
          params:
            - name: address
              string: ca.test.data.flow044.addressZipCode

      # Product Search using sku
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:           
            - name: product
              string: ca.test.data.flow044.product_P1_sku  

      # Navigating to PDP from SRP
      - executeFunction:
          name: ca.test.functions.productSearch.srpToPdpPage
          params:
            - name: productName
              string: ca.test.data.flow044.product_P1_Name
  
      # Add to cart
      - executeFunction:
          name: ca.test.functions.PDPpage.addToCart
          params:
            - name: quantity
              string: ca.test.data.flow044.product_P1_Quantity
              
      # close
      - executeFunction:
          name: ca.test.functions.PDPpage.closePDPpage

      # clear search box
      - executeFunction:
          name: ca.test.functions.productSearch.clearSearch

      # Product Search using sku
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:           
            - name: product
              string: ca.test.data.flow044.product_P2_sku

      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCart
          params:
            - name: productName
              string: ca.test.data.flow044.product_P2_Name
            - name: quantity
              string: ca.test.data.flow044.product_P2_Quantity

      # Asserting cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantityIos
           params:
            - name: cartQuantity
              string: ca.test.data.flow044.cartQuantity
      
      # Asserting cart total
      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: ca.test.data.flow044.cartSubTotal

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Navigate to cart
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCartIos

      # navigate to reserve time page
      - executeFunction:
          name: ca.test.functions.cart.reserveTimePage
      
      # Reserve time page validation
      - executeFunction:
          name: ca.test.functions.reserveTimePageValidation

      # navigating and changing store
      - executeFunction:
          name: ca.test.functions.reserveTime.changeStore
          params:
            - name: Zip_Code
              string: ca.test.data.flow044.addressZipCode
            - name: storeName
              string: ca.test.data.flow044.storeAddress
            - name: storeDisplayed
              string: ca.test.data.flow044.storeAddressDisplay

      - executeFunction: 
          name: ca.test.functions.bookASlot.reserveTimePage.standardSlotSelection

      # Clicking book a slot button
      - executeFunction:
          name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton

      # Cart fulfillment verification
      - executeFunction:
          name: ca.test.functions.cart.pickup.verifyCardIos
      
#       - executeFunction:
#           name: ca.test.functions.cart.verifyProductDetails
#           params:
#             - name: productName
#               string: ca.test.data.flow044.product_P1_Name
#             - name: productPrice
#               string: ca.test.data.flow044.product_P1.itemPrice
#             - name: productQty
#               string: ca.test.data.flow044.product_P1_Quantity

      # Selecting pickup or shipping
      - executeFunction:
          name: ca.test.functions.cart.selectShippingOptionsIos      

      # Verifying address and changing if needed
      - executeFunction:
          name: ca.test.functions.cart.fulfillmentAddressIos
          params:
            - name: addressFirstLine
              string: ca.test.data.flow044.shippingAddressFirstLine

      # Cart fulfillment verification
      - executeFunction:
          name: ca.test.functions.cart.deliveryS2H.verifyCard  

      - executeFunction:
          name: ca.test.functions.cart.verifyProductDetails
          params:
            - name: productName
              string: ca.test.data.flow044.product_P2_Name
            - name: productPrice
              string: ca.test.data.flow044.product_P2.itemPrice
            - name: productQty
              string: ca.test.data.flow044.product_P2_minQty

      # # Verify cart subTotal
      # - executeFunction:
      #     name: ca.test.functions.cart.cartSubTotal
      #     params: 
      #       - name: subTotal
      #         string: ca.test.data.flow044.cartValue

      # # Removing $ from slot price
      # - executeNode:
      #     file: ca/test/helpers/sanitizePriceIos.js
      #     args:
      #       - value: ${slotPrice}
      #     getResponse:
      #       storeIn: clearPrice
      # - log: ${clearPrice}

      # # Verify cart grocery pickup 
      # - executeFunction:
      #     name: ca.test.functions.cart.groceryPickup
      #     params:
      #       - name: groceryFee
      #         string: ${clearPrice}  

      # # Tax calculation
      # - executeFunction:
      #     name: ca.test.functions.cart.taxCalculation
      #     params:
      #       - name: subTotal
      #         string: ca.test.data.flow044.cartValue
      #       - name: slotPrice
      #         string: ${clearPrice}
      #       - name: tax
      #         string: ca.test.data.flow044.hstPercentage     

      # # Verify cart Taxes
      # - executeFunction:
      #     name: ca.test.functions.cart.cartTaxes
      #     params: 
      #       - name: taxes
      #         string: ${tax_values} 

      # # Verify cart HST
      # - executeFunction:
      #     name: ca.test.functions.cart.hstTaxAssertion
      #     params:
      #       - name: hst_percentage
      #         string: ca.test.data.flow044.hstPercentage
      #       - name: hst_tax_value
      #         string: ${tax_values}

      # - executeFunction:
      #     name: ca.test.functions.cart.estimatedTotalCalculation
      #     params:
      #       - name: tax
      #         string: ${tax_values}
      #       - name: subTotal
      #         string: ca.test.data.flow044.cartValue
      #       - name: slotPrice
      #         string: ${clearPrice}

      # # Verify cart estimated total
      # - executeFunction:
      #     name: ca.test.functions.cart.cartEstimatedTotal
      #     params: 
      #       - name: estimate_total
      #         string: ${estimate_total}

      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOutIos
    
      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkOut.validateCheckOutOrderCard
          params:
            - name: fulfillmentType
              string: ca.test.data.flow044.fulfillmentType

      - executeFunction:
          name: ca.test.functions.checkOut.assertingStoreAddress
          params:
            - name: fulfillmentType
              string: ca.test.data.flow044.fulfillmentType
            - name: storeName
              string: ca.test.data.flow044.storeAddressDisplay
            - name: storeAddress
              string: ca.test.data.flow044.storeFullAddress

      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkOut.validateCheckOutOrderCard
          params:
            - name: fulfillmentType
              string: ca.test.data.flow044.fulfillmentTypeShipping

      - executeFunction:
          name: ca.test.functions.checkOut.assertingDeliveryAddress
          params:
            - name: fulfillmentType
              string: ca.test.data.flow044.fulfillmentTypeShipping
            - name: addressFirstLine
              string: ca.test.data.flow044.shippingAddressFull

      # Validating payment card
      - executeFunction:
          name: ca.test.functions.checkOut.paymentOptionsIos

      # Add Card Cvv
      - executeFunction:
          name: ca.test.functions.checkOut.payment.addCvvIos
          params:
            - name: CVV
              string: ca.test.data.checkout.Cvv_1
      
      # Adding mobile number
      - executeFunction:
          name: ca.test.functions.checkout.phoneNumber.enterContactNumber
      
      #Promo Code Check
      - executeFunction:
          name: ca.test.functions.checkOut.promoCodeAvailabilityCheck

      # # Checkout page sub total assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.subTotalValidation
      #     params:
      #       - name: subTotal
      #         string: ca.test.data.flow044.subtotal_ios

      # # Verify checkout walmart pickup assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.validateGroceryPickupFees
      #     params:
      #       - name: grocery_pickup
      #         string: ${clearPrice} 

      # # Checkout page tax assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.taxesAssertion
      #     params:
      #       - name: total_tax
      #         string: ${tax_values} 

      # # Checkout page hst assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.hstAssertion
      #     params:
      #       - name: hst_percentage
      #         string: ca.test.data.search.hstPercentage
      #       - name: hst_tax_value
      #         string: ${tax_values} 

      # - executeFunction:
      #     name: ca.test.functions.cart.estimatedTotalCalculation
      #     params:
      #       - name: tax
      #         string: ${tax_values}
      #       - name: subTotal
      #         string: ca.test.data.flow044.subtotal_ios
      #       - name: slotPrice
      #         string: ${clearPrice}         

      # # Checkout page estimate total assertion
      # - executeFunction:  
      #     name: ca.test.functions.checkOut.estimateTotalAssertion
      #     params:
      #       - name: estimate_total
      #         string: ${estimate_total}

      # Checkout
      - executeFunction:
          name: ca.test.functions.checkOut.PlacingOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *         

      # Order Confirmation screen validation
      - executeFunction:
          name: ca.test.functions.checkOut.orderConfirmationValidationIos

      # # Checkout page tax assertion
      # - executeFunction:
      #     name: ca.test.functions.orderConfirmation.orderPriceValidation
      #     params:
      #       - name: orderPrice
      #         string: ${estimate_total} 

      # # Order ID Assertion From Order Confirmation
      # - executeFunction:
      #     name: ca.test.functions.checkOut.orderConformation.orderIdExtraction

      # - executeNode:
      #     file: ca/test/helpers/extractingOrderId.js
      #     args:
      #       - value: ${orderId}
      #       - value: "1"
      #     getResponse:
      #       storeIn: orderId_1
      # - log: ${orderId_1}

      # - executeNode:
      #     file: ca/test/helpers/extractingOrderId.js
      #     args:
      #       - value: ${orderId}
      #       - value: "2"
      #     getResponse:
      #       storeIn: orderId_2
      # - log: ${orderId_2} 

      # # Cancelling Order
      # - executeFunction:
      #     name: ca.test.functions.oms.orderCancellation 
      #     params:
      #       - name: orderNo
      #         string: orderId_1

      # # Cancelling Order
      # - executeFunction:
      #     name: ca.test.functions.oms.orderCancellation 
      #     params:
      #       - name: orderNo
      #         string: orderId_2        

      # #Continue Shopping
      # - executeFunction:
      #     name: ca.test.functions.orderConfirmation.continueShopping

      # # navigate to account page
      # - executeFunction:
      #     name: ca.test.functions.home.navigateHomeToAccountPage

      # # Go to purchase page
      # - executeFunction:
      #     name: ca.test.functions.accountPage.purchaseHistoryButtonIos

      # # Purchase history page to view Details
      # - executeFunction:
      #     name: ca.test.functions.purchaseHistory.viewDetailsButtonIos

      # # Cancelling Order
      # - executeFunction:
      #     name: ca.test.functions.purchaseHistory.orderCancellation
                  
      - storeIn:
          key: testStatus
          value: passed
  
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps       