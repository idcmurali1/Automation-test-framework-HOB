#-------------------------------------------------------------------------------------------------------------------
# Associate User - Place a Express Pickup order Payment Type - CC
# Scenario covered:
# Navigate onboarding to home
# clear cart through astro 
# Navigate to sign in page and signin
# Checking and selecting Store in HP
# Search a Product and add through srp
# Navigate to cart and validate product details and estimate total in cart
# Proceed to Checkout
# Reserve a Exptress slot after checkout
# Validate fulfillment type in review order page, mobile number, GO pickup fee and estimate total
# Place the order and Validate Order Confirmation page
# oder cancellation through account page
#-------------------------------------------------------------------------------------------------------------------
general:
  platform: ios
  tags: flow-033, exp_go, exp_go_fr, GO/MX-Express-Slot-English-iOS-Flow, GO/MX-Express-Slot-French-iOS-Flow
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: Main
    flow:

      - log: Start Main

      # Get TimeStamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp
          
      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.global.onboarding.navigateiosOnboardingToHome

      # Astro - Clear Cart
      - executeFunction:
          name: ca.functions.utils.astro.clearCart
          params:
            - name: custEmail
              string: ca.test.data.flow033.emailios
            - name: password
              string: ca.test.data.flow033.passwordios 

       # Navigate to sign in page
      - executeFunction:
          name: ca.test.functions.home.signIn
      
      # Sign In to the account
      - executeFunction:
          name: ca.test.functions.global.authentication.signInAccountIos
          params:
            - name: email
              string: ca.test.data.flow033.emailios
            - name: password
              string: ca.test.data.flow033.passwordios

      # Validating home page customer greeting
      - executeFunction:
          name: ca.test.functions.home.verifyUserNameHomePage
          params:
            - name: usergreeting
              string: ca.test.data.flow033.customerName

      - executeFunction:
          name: ca.test.functions.utils.terminateApp

      - executeFunction:
          name: ca.test.functions.utils.relaunchApp           

      # Checking and selecting Store
      - executeFunction:
          name: ca.test.functions.home.storeSelect
          params:
            - name: Zip_Code
              string: ca.test.data.flow001.zipCode
            - name: storeName
              string: ca.test.data.flow001.storeName               

      # Product Search 
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProductIos
          params:           
            - name: product
              string: ca.test.data.flow033.product_P1_sku

      # SRP Page Validation
      - executeFunction:
          name: ca.test.functions.productSearch.srpPageValidaion            

      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCart
          params:
            - name: productName
              string: ca.test.data.flow033.product_P1_Name
            - name: quantity
              string: ca.test.data.flow033.product_P1_Quantity
              
      #clear search box
      - executeFunction:
          name: ca.test.functions.productSearch.clearSearch
          
      # Product Search 
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProductIos
          params:           
            - name: product
              string: ca.test.data.flow033.product_P2_sku

      # SRP Page Validation
      - executeFunction:
          name: ca.test.functions.productSearch.srpPageValidaion            

      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCart
          params:
            - name: productName
              string: ca.test.data.flow033.product_P2_Name
            - name: quantity
              string: ca.test.data.flow033.product_P2_Quantity

      # Asserting cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantityIos
           params:
            - name: cartQuantity
              string: ca.test.data.flow033.cartQuantity
      
      # Asserting cart total
      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: ca.test.data.flow033.subtotal

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *          

      # Navigate to cart
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCartIos

      # Book a Express slot
      - executeFunction:
          name: ca.test.functions.cart.ExpressSlotIos          
      
      # Cart fulfillment verification
      - executeFunction:
          name: ca.test.functions.cart.pickup.verifyCardIos     

      # Cart product details validation   
      - executeFunction:
          name: ca.test.functions.cart.verifyProductTitle
          params:
            - name: productName
              string: ca.test.data.flow033.itemIos_1
      
      # Verify cart subTotal
      - executeFunction:
          name: ca.test.functions.cart.cartSubTotal
          params: 
            - name: subTotal
              string: ca.test.data.flow033.subtotalWithoutSavings

      # Verify cart grocery pickup fee
      - executeFunction:
          name: ca.test.functions.cart.validateGroceryPickupFees
          params: 
            - name: grocery_pickup
              string: ca.test.data.flow033.groceryPickupFee       

      # Verify associate discount
      - executeFunction:
          name: ca.test.functions.cart.associateDiscount 
          params:
            - name: associate_discount        
              string: ca.test.data.flow033.associatediscount              

      # Verify cart Taxes
      - executeFunction:
          name: ca.test.functions.cart.cartTaxes
          params: 
            - name: taxes
              string: ca.test.data.flow033.Taxes

      # Verify cart estimated total
      - executeFunction:
          name: ca.test.functions.cart.cartEstimatedTotal
          params: 
            - name: estimate_total
              string: ca.test.data.flow033Ios.estimatedTotal    

      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOutIos
      
      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkOut.validateCheckOutOrderCartIos
          params:
            - name: fulfillment
              string: ca.test.data.flowios.fullfillmentType1

     # Validating payment card
      - executeFunction:
          name: ca.test.functions.checkOut.paymentOptionsIos  
      
      # Validating mobile number
      - executeFunction:
          name: ca.test.functions.checkOut.assertPhoneNumberIsDisplayed 

      #Promo Code Check
      - executeFunction:
          name: ca.test.functions.checkOut.promoCodeAvailabilityCheck              

      # Checkout page sub total assertion
      - executeFunction:
          name: ca.test.functions.checkOut.subTotalValidation
          params:
            - name: subTotal
              string: ca.test.data.flow033.subtotalWithoutSavings      

      # Verify checkout grocery pickup fee
      - executeFunction:
          name: ca.test.functions.checkOut.validateGroceryPickupFees
          params: 
            - name: grocery_pickup
              string: ca.test.data.flow033.groceryPickupFee                      

      # Checkout page tax assertion
      - executeFunction:
          name: ca.test.functions.checkOut.taxesAssertion
          params:
            - name: total_tax
              string: ca.test.data.flow033.Taxes                      

      # Verify associate discount
      - executeFunction:
          name: ca.test.functions.checkout.associateDiscount
          params:
            - name: associate_discount        
              string: ca.test.data.flow033.associatediscount

      # Checkout page estimate total assertion
      - executeFunction:  
          name: ca.test.functions.checkOut.estimateTotalAssertion
          params:
            - name: estimate_total
              string: ca.test.data.flow033Ios.estimatedTotal   

      # Order placement 
      - executeFunction:
          name: ca.test.functions.checkOut.PlacingOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *          

      # Order Confirmation screen validation
      - executeFunction:
          name: ca.test.functions.checkOut.orderConfirmationValidationIos  

      # Continue Shopping
      - executeFunction:
          name: ca.test.functions.checkOut.continueShopping 

      # # Navigate to account page
      # - executeFunction:
      #     name: ca.test.functions.home.navigateHomeToAccountPage
    
      # # Go to purchase page
      # - executeFunction:
      #     name: ca.test.functions.accountPage.purchaseHistoryButtonIos

      # # Purchase history page to view Details
      # - executeFunction:
      #     name: ca.test.functions.purchaseHistory.viewDetailsButtonIos

      # # Order cancellation
      # - executeFunction:
      #     name: ca.test.functions.purchaseHistory.orderCancellation             

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps