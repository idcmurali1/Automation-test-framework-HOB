#-----------------------------------------------------------------------------------------------------------------------------------
# Onboarding to app and Sign In as registered user 
# Verify if Search functionality is enabled in home and browse tab(SRP)
# Search with L1 Categories items and validate the product
# Search with product name and Check for Type Ahead functionality
# Search badges product and Validate Price Badges on SRP
# Search for Promotional items and Validate Promotional badges on SRP
# Search an item which qualifies for item level Price promotion and make sure that badges are displayed correctly(AR,MD etc)
# Search for a multi variant sku and validate if colors or options are displayed in SRP
# For the above scenario, click on choose options which should open list of variants and add items to cart and verify sizes shown in cart.
#---------------------------------------------------------------------------------------------------------------------------------------
general:
  platform: ios
  tags: function-005
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: false
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #    

     # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.global.onboarding.navigateiosOnboardingToHome
     
    # SignIn
      - executeFunction:
          name: ca.test.functions.home.navigateHomeToSignInIos

      # Login us registered user
      - executeFunction:
          name: ca.test.functions.global.authentication.signInAccountIos
          params:
            - name: email
              string: ca.test.data.flow005_fn.emailios
            - name: password
              string: ca.test.data.flow005_fn.passwordios
      - executeFunction:
          name: ca.test.functions.home.verifyUserNameInTopleft
      
      - executeFunction:
          name: ca.test.functions.global.authentication.storeSelect
          params:
            - name: Zip_Code
              string: ca.test.data.onboarding.zipcode
            - name: storeName
              string: ca.test.data.orleansStoreName
      
      # Remove items from cart
      - executeFunction:
          name: ca.test.functions.cart.verifyItemInCart          
              
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Verify if Search functionality is enabled in home and browse tab(SRP)
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.function.home.searchFunctionalityValidation
          catch:
            flow:
              - failTest: true
  
  - name: Search with L1 Categories items and validate the product
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProductIos
                params:
                  - name: product
                    string: ca.test.data.func005Product1
            - executeFunction:
                name: ca.test.functions.productSearch.validatingSRPPage
            - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch     
          catch:
            flow:
              - failTest: true
              - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch 
  
  - name: Search with product name and Check for Type Ahead functionality
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.validatingTypeAheadFunctionality
                params:
                  - name: product
                    string: ca.test.data.func005Product2
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch 
          catch:
            flow:
              - failTest: true
              - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch 
 
  - name: Search badges product and Validate Price Badges on SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProductIos
                params:
                  - name: product
                    string: ca.test.data.func005Product2
            - executeFunction:
                name: ca.test.functions.productSearch.validatingPriceBadges
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch       
          catch:
            flow:
              - failTest: true
              - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch 
  
  - name: Search for Promotional items and Validate Promotional badges on SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProductIos
                params:
                  - name: product
                    string: ca.test.data.func005Product3
            - executeFunction:
                name: ca.test.functions.productSearch.Pdp.validatingPromotionalBadge
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch     
          catch:
            flow:
              - failTest: true
              - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch 

  - name: Search an item which qualifies for item level Price promotion and make sure that badges are displayed correctly(AR,MD etc)
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProductIos
                params:
                  - name: product
                    string: ca.test.data.func005Product4
            - executeFunction:
                name: ca.test.functions.productSearch.validatingPromotionalBadgeAR$MD
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch     
          catch:
            flow:
              - failTest: true
              - executeFunction:
                  name: ca.test.functions.productSearch.clearSearch 
                  
  - name: Search for a multi variant sku and validate if colors or options are displayed in SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProductIos
                params:
                  - name: product
                    string: ca.test.data.func005Product5
            - executeFunction:
                name: ca.test.functions.productSearch.validatingMultiVariantProduct      
          catch:
            flow:
              - failTest: true
  
  - name: For the above scenario, click on choose options which should open list of variants and add items to cart and verify sizes shown in cart.
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.navigateToOptions
                params:
                  - name: productName
                    string: ca.test.data.func005Product6
            
            - executeFunction:
                name: ca.test.functions.pdp.extractingColorAndSize
            
            # Add to cart
            - executeFunction:
                name: ca.test.functions.PDPpage.addToCart

            # close
            - executeFunction:
                name: ca.test.functions.PDPpage.closePDPpage
            
            # navigate to cart
            - executeFunction:
                name: ca.test.functions.global.navigation.goToCartIos

            # verify size in cart
            - executeFunction:
               name: ca.test.functions.cart.sizeMultiVariant
          catch:
            flow:
              - failTest: true
      - storeIn:
          key: testStatus
          value: passed
  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps         