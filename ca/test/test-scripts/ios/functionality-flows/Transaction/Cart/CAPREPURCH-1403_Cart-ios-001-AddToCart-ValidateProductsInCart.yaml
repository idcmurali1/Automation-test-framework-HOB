general:
  platform: ios
  tags: cart-001-ios, ca-function-run, cart_ios
  testCaseId: cart-001-ios
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #  

  - name: Add GO, GM(1P and 3P), MX, and Freight to cart and validate all product are present in cart.
    flow:
            - log:
                message: Add GO, GM(1P and 3P), MX, and Freight to cart and validate all product are present in cart.
                color: CYAN_BOLD_BRIGHT

            # Navigate onboarding to home
            - executeFunction:
                name: ca.test.functions.global.onboarding.navigateiosOnboardingToHome
            - log:
                message: navigated from onboarding to home
                color: YELLOW

            # Selecting store in home page
            - executeFunction:
               name: ca.test.functions.global.authentication.storeSelect
               params:
                - name: Zip_Code
                  string: ca.test.data.onboarding.zipcodeON
                - name: storeName
                  string: ca.test.search.storeNameON
            - log:
               message: Updated the store to K1C1T1!
               color: YELLOW 

          # Product Search
            # Add product to cart - GO   
          # Product Search
            - executeFunction:
                name: ca.functions.searchPage.searchItemArray
                params:
                  - name: items
                    string: ca.test.data.cart001.goItemArray
                  - name: quantity
                    string: ca.test.data.product_1_qty
                  - name: checkNonPromotionBadges
                    string: true    
            - storeIn:
                key: go_item
                value: ${productTitle}

            - storeIn:
                key: go_item_price
                value: ${productCost }

          #clear search box
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch
            - log:
               message: search box cleared!
               color: YELLOW 

          # Add product to cart - MX
          # Product Search

            - executeFunction:
                  name: ca.functions.searchPage.searchItemArray
                  params:
                    - name: items
                      string: ca.test.data.cart001.mxItemArray
                    - name: quantity
                      string: ca.test.data.product_1_qty
                    - name: checkNonPromotionBadges
                      string: true    
            - log:
               message: searched a MX product!
               color: YELLOW 

            - storeIn:
                key: mx_item
                value: ${productTitle}

            - storeIn:
                key: mx_item_price
                value: ${productCost}

          #clear search box
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch
            - log:
               message: search box cleared!
               color: YELLOW 

          # Add product to cart - GM - 1P
          # Product Search
            - executeFunction:
                    name: ca.functions.searchPage.searchItemArray
                    params:
                      - name: items
                        string: ca.test.data.cart001.1pGmItemArray
                      - name: quantity
                        string: ca.test.data.product_1_qty
                      - name: checkNonPromotionBadges
                        string: true   
            - log:
               message: searched a GM-1P product!
               color: YELLOW 

            - storeIn:
                key: 1p_item
                value: ${productTitle}

            - storeIn:
                key: 1p_item_price
                value: ${productCost}

          #clear search box
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch
            - log:
               message: cleared the search box!
               color: YELLOW 

            - executeFunction:
                  name: ca.functions.searchPage.searchItemArray
                  params:
                    - name: items
                      string: ca.test.data.cart001.3pGmItemArray
                    - name: quantity
                      string: ca.test.data.product_1_qty
                    - name: checkNonPromotionBadges
                      string: true     
            - log:
               message: searched a GM-3P product to cart!
               color: YELLOW 

            - storeIn:
                key: 3p_item
                value: ${productTitle}

            - storeIn:
                key: 3p_item_price
                value: ${productCost}

            - log:
               message: added a GM-3P product to cart!
               color: YELLOW 

          #clear search box
            - executeFunction:
                name: ca.test.functions.productSearch.clearSearch
            - log:
               message: search box cleared!
               color: YELLOW 

          # Add product to cart - FRIEGHT
          # Product Search
            - executeFunction:
                name: ca.functions.searchPage.searchItemArray
                params:
                  - name: items
                    string: ca.test.data.cart001.freightItemArray
                  - name: quantity
                    string: ca.test.data.product_1_qty
                  - name: checkNonPromotionBadges
                    string: true

            - log:
               message: searched a Freight product!
               color: YELLOW 

            - storeIn:
                key: fr_item
                value: ${productTitle}

            - storeIn:
                key: fr_item_price
                value: ${productCost}

            # Validate cart quantity
            - executeFunction:
                name: ca.test.functions.cart.assertCartQuantity
                params:
                  - name: cartQuantity
                    string: ca.test.data.cart001.cartQuantity
            - log:
               message: cart Quantity verified!
               color: YELLOW 

            # Asserting cart total
            - executeFunction:
                name: ca.test.functions.cart.assertCartTotal
                params:
                  - name: subTotal
                    string: ${totalPrice}
            - log:
               message: cart subtotal verified!
               color: YELLOW 
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
            - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          # navigate to cart
            - executeFunction:
                name: ca.test.functions.global.navigation.goToCartIos
            - log:
               message: Naviagted to cart!
               color: YELLOW

          # Cart product details validation
            - executeFunction:
                name: ca.test.functions.cart.ProductDetailsValidation
                params:
                  - name: Product_Name
                    string: ${go_item}
                  - name: productPrice
                    string: ${go_item_price}
                  - name: productQty
                    string: ca.test.data.cart001.product_Quantity
            - log:
               message: GO product validated in cart!
               color: YELLOW 

          # Cart product details validation
            - executeFunction:
                name: ca.test.functions.cart.ProductDetailsValidation
                params:
                  - name: Product_Name
                    string: ${mx_item}
                  - name: productPrice
                    string: ${mx_item_price}
                  - name: productQty
                    string: ca.test.data.cart001.product_Quantity
            - log:
               message: MX product validated in cart!
               color: YELLOW 

            - executeFunction:
                name: ca.test.functions.cart.ProductDetailsValidation
                params:
                  - name: Product_Name
                    string: ${3p_item}
                  - name: productPrice
                    string: ${3p_item_price}
                  - name: productQty
                    string: ca.test.data.cart001.product_Quantity
            - log:
               message: GM-3P product validated in cart!
               color: YELLOW 

            - executeFunction:
                name: ca.test.functions.cart.ProductDetailsValidation
                params:
                  - name: Product_Name
                    string: ${1p_item}
                  - name: productPrice
                    string: ${1p_item_price}
                  - name: productQty
                    string: ca.test.data.cart001.product_Quantity
            - log:
               message: GM-1P product validated in cart!
               color: YELLOW 
               
            - executeFunction:
                name: ca.test.functions.cart.ProductDetailsValidation
                params:
                  - name: Product_Name
                    string: ${fr_item}
                  - name: productPrice
                    string: ${fr_item_price}
                  - name: productQty
                    string: ca.test.data.cart001.product_Quantity
            - log:
               message: Freight product validated in cart!
               color: YELLOW 

          # Proceed to Checkout
            - executeFunction:
                name: ca.test.functions.cart.checkout.proceedToCheckOutIos    
            - log:
               message: Navigate to checkout page!
               color: YELLOW 

          # Singed in as a registered user in Checkout page
            - executeFunction:
                name: ca.test.functions.global.authentication.signInAccountIos
                params:
                  - name: email
                    string: ca.test.data.cart001.emailios
                  - name: password
                    string: ca.test.data.cart001.passwordios
            - log:
               message: Singed in as a registered user in Checkout page!
               color: YELLOW 

            # Book a delivery slot
            - executeFunction:
                name: ca.test.functions.cart.deliverySlotIosfromSlotPage
            - log:
                message: Booked a delivery slot!
                color: YELLOW 

            #validation of fulfillmentType in checkout page
            - executeFunction:
                name: ca.test.functions.checkOut.validateCheckOutOrderCard
                params:
                  - name: fulfillmentType
                    string: ca.test.data.cart001.fulfillmentType
            - log:
               message: fulfillmentType verified in Checkout page!
               color: YELLOW 

            #validation of Delivery Address in checkout page
            - executeFunction:
                name: ca.test.functions.checkOut.assertingDeliveryAddress
                params:
                  - name: fulfillmentType
                    string: ca.test.data.cart001.fulfillmentType
                  - name: addressFirstLine
                    string: ca.test.data.cart001.deliveryAddress
            - log:
               message: deliveryAddress verified in checkout page!
               color: YELLOW 

            # go back to cart from checkout page
            - executeFunction:
                name: ca.test.functions.global.navigation.goBackToCart
            - log:
               message: go back to cart from checkout page!
               color: YELLOW 

#----------------------------------------------------------------------------------------------------
            - storeIn:
                key: testStatus
                value: passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - log:
          message: cart-001-ios
          color: GREEN_BOLD
      - executeFunction:
          name: ca.test.functions.utils.afterSteps 

      - executeFunction:
          name:  ca.test.functions.cart.removeCartItems
      - log:
          message: Cart cleared!
          color: YELLOW