# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
# Flow: 007
# User : Registered User
# Order Type: GM 
# Fulfillment: WMTPICKUP
# Payment Type : 4GC
# Validation: Handling fee
# Additional validation: French char are shown - in checkout page, Pdp validation for multivariant, Validating store for pickup
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

general:
  platform: ios
  tags: flow-007, ca_authpoc, group-1
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
  
  - name: Main
    flow:
      - log: Start Main

      # Get TimeStamp
      - getTimestamp:
          asDate: true
          storeIn: timestamp

      #temporary#
      - executeFunction:
          name: ca.test.functions.utils.avoidTestPopup

      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.global.onboarding.navigateiosOnboardingToHome
          params:
            - name: ZIP_CODE
              string: ca.test.data.flow007.onboardingZipcodeo
     
     # Astro - Clear Cart
      - executeFunction:
          name: ca.functions.utils.astro.clearCart
          params:
            - name: custEmail
              string: ca.test.data.flow007.ios.email_id
            - name: password
              string: ca.test.data.flow007.ios.password
 
      # Navigate to sign in page
      - executeFunction:
          name: ca.test.functions.home.signIn  

      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.data.flow007.ios.email_id
            - name: password
              string: ca.test.data.flow007.ios.password

      - executeFunction:
          name: ca.test.functions.utils.terminateApp

      - executeFunction:
          name: ca.test.functions.utils.relaunchApp

      # Checking and selecting Store
      - executeFunction:
          name: ca.test.functions.home.storeSelect
          params:
            - name: Zip_Code
              string: ca.test.data.flow007.onboardingZipcode
            - name: storeName
              string: ca.test.data.flow007.storeName

       # Selecting address at home page
      - executeFunction:
          name: ca.test.functions.home.changeLocationLink
          params:
            - name: address
              string: ca.test.data.flow007.zipCodeAddress

      # Product Search
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:            
            - name: product
              string: ca.test.data.flow007.product_p1_sku

      # Navigating to PDP from SRP
      - executeFunction:
          name: ca.test.functions.productSearch.srpToPdpPage
          params:
            - name: productName
              string: ca.test.data.flow007.product_p1_name

      # PDP page header container validation
      - executeFunction:
          name: ca.test.functions.pdp.productHeaderContainer
      
      - executeFunction:
          name: ca.test.functions.pdp.validateProductVariantCarousel
          params:
            - name: variant_count
              string: ca.test.data.flow007.product_P1_variants

      # Validating product pdp filfullment details
      - executeFunction:
          name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandise
          params:
            - name: storeName
              string: ca.test.data.flow007.storeNamePDP
            - name: addressFirstLine
              string: ca.test.data.flow007.shippingAddressFirstLine

      # Add to cart
      - executeFunction:
          name: ca.test.functions.PDPpage.addToCart
          params:
            - name: quantity
              string: ca.test.android.data.flow007.product_p1_first_variant_qty

      - executeFunction:
          name: ca.test.functions.pdp.chooseProductVariant
          params:
            - name: variant
              string: ca.test.data.flow007.variant.second

      # Add to cart
      - executeFunction:
          name: ca.test.functions.PDPpage.addToCart
          params:
            - name: quantity
              string: ca.test.android.data.flow007.product_p1_first_variant_qty

      # close
      - executeFunction:
          name: ca.test.functions.PDPpage.closePDPpage

      # Validate cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantity
           params:
            - name: cartQuantity
              string: ca.test.data.flow007.cartQuantity

      # Asserting cart total
      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: ca.test.data.flow007.assertCartTotal

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
     
      # navigate to cart
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCartIos
      
     #Selecting Pickup Instead
      - executeFunction:
          name: ca.test.functions.cart.selectPickupOptionsIos

      # Selecting store
      - executeFunction:
          name: ca.test.functions.cart.validatingStoreForPickUp
          params:
            - name: storeAddress
              string: ca.test.data.flow007.cartStoreDisplay
            - name: Zip_Code
              string: ca.test.data.flow007.onboardingZipcode
            - name: storeName
              string: ca.test.data.flow007.storeName
                    
      # Cart product details validation
      - executeFunction:
          name: ca.test.functions.cart.verifyProductDetails
          params:
            - name: productName
              string: ca.test.data.flow007.product_p1_first_variant_name
            - name: productPrice
              string: ca.test.data.flow007.product_p1_first_variant_price
            - name: productQty
              string: ca.test.android.data.flow007.product_p1_first_variant_qty

      # Cart product details validation
      - executeFunction:
          name: ca.test.functions.cart.verifyProductDetails
          params:
            - name: productName
              string: ca.test.data.flow007.product_p1_second_variant_name
            - name: productPrice
              string: ca.test.data.flow007.product_p1_second_variant_price
            - name: productQty
              string: ca.test.android.data.flow007.product_p1_first_variant_qty
      
      # Verify cart subTotal
      - executeFunction:
          name: ca.test.functions.cart.cartSubTotal
          params: 
            - name: subTotal
              string: ca.test.data.flow007.assertCartTotal
              
     # Pickup fee assertion
      - executeFunction:
          name: ca.test.functions.cart.validateWalmartPickupFees
          params:
            - name: walmart_pickup
              string: ca.test.data.flow007.walmartShippingValue

      # Verify cart handling fee
      - executeFunction:
          name: ca.test.functions.cart.cartHandlingFee
          params: 
            - name: handling_fee
              string: ca.test.data.flow007.handlingFee

      # Verify cart Taxes
      - executeFunction:
          name: ca.test.functions.cart.cartTaxes
          params: 
            - name: taxes
              string: ca.test.data.flow007.totalTax

    # Verify cart HST
      - executeFunction:
          name: ca.test.functions.cart.hstTaxAssertion
          params: 
            - name: hst_percentage
              string: ca.test.data.flow007.hstTaxPercentageAssertion
            - name: hst_tax_value
              string: ca.test.data.flow007.hstTaxAmountAssertion
      
    # Verify cart estimated total
      - executeFunction:
          name: ca.test.functions.cart.cartEstimatedTotal
          params: 
            - name: estimate_total
              string: ca.test.data.flow007.cart.estimatedTotal

      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOutIos

      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkOut.validateCheckOutOrderCard
          params:
            - name: fulfillmentType
              string: ca.test.data.flow007.fullfillmentType

      # - executeFunction:
      #     name: ca.test.functions.checkOut.assertingStoreAddress
      #     params:
      #       - name: fulfillmentType
      #         string: ca.test.data.flow044.fulfillmentType
      #       - name: storeName
      #         string: ca.test.data.flow044.storeAddressDisplay
      #       - name: storeAddress
      #         string: ca.test.data.flow044.storeFullAddress

      - executeFunction:
          name:  ca.test.functions.astroUrl.createGiftCard
          params:
            - name: giftCardAmount
              string: ca.test.data.flow007.gca001

      - storeIn:
          key: GCN001
          value: ${giftCardNumber}
      
      - storeIn:
          key: GCP001
          value: ${giftCardPin}

      - executeFunction:
          name:  ca.test.functions.astroUrl.createGiftCard
          params:
            - name: giftCardAmount
              string: ca.test.data.flow007.gca002

      - storeIn:
          key: GCN002
          value: ${giftCardNumber}
      
      - storeIn:
          key: GCP002
          value: ${giftCardPin}

      - executeFunction:
          name:  ca.test.functions.astroUrl.createGiftCard
          params:
            - name: giftCardAmount
              string: ca.test.data.flow007.gca003

      - storeIn:
          key: GCN003
          value: ${giftCardNumber}
      
      - storeIn:
          key: GCP003
          value: ${giftCardPin}

      - executeFunction:
          name:  ca.test.functions.astroUrl.createGiftCard
          params:
            - name: giftCardAmount
              string: ca.test.data.flow007.gca004

      - storeIn:
          key: GCN004
          value: ${giftCardNumber}
      
      - storeIn:
          key: GCP004
          value: ${giftCardPin}

      # Navigating edit payment page
      - executeFunction:
          name: ca.test.functions.checkOut.editPayment
      
      - executeFunction:
          name: ca.test.functions.checkOut.paymentOptions.editPayments.removeGiftCard

      - executeFunction:
          name: ca.test.functions.checkOut.editPayment.addNewGiftCard
          params:
            - name: giftCardNumber
              string: ${GCN001}
            - name: giftCardPin
              string: ${GCP001}
      
      - executeFunction:
          name: ca.test.functions.checkOut.paymentMethod.addNewPaymentMethod

      - executeFunction:
          name: ca.test.functions.checkOut.editPayment.addNewGiftCard
          params:
            - name: giftCardNumber
              string: ${GCN002}
            - name: giftCardPin
              string: ${GCP002}
      
      - executeFunction:
          name: ca.test.functions.checkOut.paymentMethod.addNewPaymentMethod

      - executeFunction:
          name: ca.test.functions.checkOut.editPayment.addNewGiftCard
          params:
            - name: giftCardNumber
              string: ${GCN003}
            - name: giftCardPin
              string: ${GCP003}
      
      - executeFunction:
          name: ca.test.functions.checkOut.paymentMethod.addNewPaymentMethod

      - executeFunction:
          name: ca.test.functions.checkOut.editPayment.addNewGiftCard
          params:
            - name: giftCardNumber
              string: ${GCN004}
            - name: giftCardPin
              string: ${GCP004}

      - executeFunction:
          name: ca.test.functions.checkOut.paymentMethod.countinueButton

      # # # Mobile number validation
      # # - executeFunction:
      # #     name: ca.test.functions.checkOut.mobileContactValidationIos

      # # Validating mobile number
      # - executeFunction:
      #     name: ca.test.functions.checkOut.assertPhoneNumberIsDisplayed

      # # #Promo Code Check
      # # - executeFunction:
      # #     name: ca.test.functions.checkOut.promoCodeAvailabilityCheck

      # Adding mobile number
      - executeFunction:
          name: ca.test.functions.checkout.phoneNumber.enterContactNumber

    # Checkout page sub total assertion
      - executeFunction:
          name: ca.test.functions.checkOut.subTotalValidation
          params:
            - name: subTotal
              string: ca.test.data.flow007.assertCartTotal

   # Pickup fee assertion
      - executeFunction:
          name: ca.test.functions.checkOut.validateWalmartPickupFees
          params:
            - name: walmart_pickup
              string: ca.test.data.flow007.walmartShippingValue 

      # Verify checkout handling fee
      - executeFunction:
          name: ca.test.functions.checkOut.HandlingFee
          params: 
            - name: handling_fee
              string: ca.test.data.flow007.handlingFee

      # Checkout page tax assertion
      - executeFunction:
          name: ca.test.functions.checkOut.taxesAssertion
          params:
            - name: total_tax
              string: ca.test.data.flow007.totalTax
              
      # Checkout page hst assertion
      - executeFunction:
          name: ca.test.functions.checkOut.hstAssertion
          params:
            - name: hst_percentage
              string: ca.test.data.flow007.ios.hstPercentage
            - name: hst_tax_value
              string: ca.test.data.flow007.hstTaxAmountAssertion
 
      # Checkout page estimate total assertion
      - executeFunction:  
          name: ca.test.functions.checkOut.estimateTotalAssertion
          params:
            - name: estimate_total
              string: ca.test.data.flow007.cart.estimatedTotal
            
      # Checkout
      - executeFunction:
          name: ca.test.functions.checkOut.PlacingOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *          

      # Order Confirmation screen validation
      - executeFunction:
          name: ca.test.functions.checkOut.orderConfirmationValidationIos  
         
      - storeIn:
          key: testStatus
          value: passed
  
  - name: After
    after: true
    flow:
      - log:
          message: flow-007
          color: GREEN_BOLD
      - executeFunction:
          name: ca.test.functions.utils.afterSteps     