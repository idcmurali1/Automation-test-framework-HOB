general:
  platform: android
  tags: function-005 #ca-function-run
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: false
    flow:
      - executeFunction:
          name: ca.test.functions.global.onboarding.navigateOnboardingToHome.paramZip
          params:
            - name: ZIP_CODE
              string: ca.test.data.orleansZipCode

      - executeFunction:
          name: ca.test.functions.home.signIn

      - executeFunction:
          name: ca.test.functions.global.authentication.signInAccount
          params:
            - name: email
              string: ca.test.data.function005.emailId
            - name: password
              string: ca.test.data.function005.password

      - executeFunction:
          name: ca.test.functions.home.selectStore
          params:
            - name: Zip_Code
              string: ca.test.data.orleansZipCode
            - name: storeName
              string: ca.test.data.orleansStoreName

      # Clear cart
      - executeFunction:
          name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Verify if Search functionality is enabled in home and browse tab(SRP)
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.function.home.searchFunctionalityValidation
          catch:
            flow:
              - failTest: true
      
  - name: Search with L1 Categories items and validate the product
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: ca.test.data.l1Category

            - executeFunction:
                name: ca.test.functions.productSearch.validatingSRPPage

          catch:
            flow:
              - failTest: true

  - name: Search with product name and Check for Type Ahead functionality
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.validatingTypeAheadFunctionality
                params:
                  - name: product
                    string: ca.test.data.GMl1Category
          catch:
            flow:
              - failTest: true

  - name: Search badges product and Validate Price Badges on SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: ca.test.data.GMl1Category

            - executeFunction:
                name: ca.test.functions.productSearch.validatingPriceBadges
          catch:
            flow:
              - failTest: true

  - name: Search for Promotional items and Validate Promotional badges on SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: 6HVHTS7D2L8K #ca.test.data.GOl2Category

            - executeFunction:
                name: ca.test.functions.productSearch.validatingPromotionalBadge
          catch:
            flow:
              - failTest: true

  - name: Search an item which qualifies for item level Price promotion and make sure that badges are displayed correctly(AR,MD etc)
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: 6HVHTS7D2L8K #ca.test.data.GOl2Category

            - executeFunction:
                name: ca.test.functions.productSearch.validatingPromotionalBadgeAR$MD
          catch:
            flow:
              - failTest: true

  - name: Search for a multi variant sku and validate if colors or options are displayed in SRP
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: ca.test.data.GMl2Category

            - executeFunction:
                name: ca.test.functions.productSearch.validatingMultiVariantProduct
          catch:
            flow:
              - failTest: true

  - name: For the above scenario, click on choose options which should open list of variants and add items to cart and verify sizes shown in cart.
    flow:
      - try:
          flow:
            - executeFunction:
                name: ca.test.functions.productSearch.searchAProduct
                params:
                  - name: product
                    string: 6000198333517 #ca.test.data.sku1

            - executeFunction:
                name: ca.test.functions.productSearch.navigateToOptions
                params:
                  - name: productName
                    string: "Pampers Baby Dry Diapers, Super Econo Pack, Size 1-6, 210-104 Count" ##ca.test.data.sku1_name
            
            - executeFunction:
                name: ca.test.functions.pdp.extractingSize

            # Add to cart
            - executeFunction:
                name: ca.test.functions.PDPpage.addToCartPriceExtraction
                params:
                  - name: quantity
                    string: ca.test.data.sku1_qty

            # close
            - executeFunction:
                name: ca.test.functions.PDPpage.closePDPpage

            # navigate to cart
            - executeFunction:
                name: ca.test.functions.global.navigation.goToCart

#            - executeFunction:
#                name: ca.test.functions.cart.validatingSize

          catch:
            flow:
              - failTest: true

  # After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps