#------------------------------------------------------------------------------
##Items can be removed, increase/decrease, making quantity zero in cart page.
# Scenarios covered:
# Add a GM product to cart
# Go to cart, Increase and decrease qty
# remove item from cart, by making qty as zero
#------------------------------------------------------------------------------
general:
  platform: Android
  tags: cart-007, ca-function-run
  testCaseId: cart-007
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Items can be removed, increase/decrease, making quantity zero in cart page.
    flow:
      - log:
          message: Items can be removed, increase/decrease, making quantity zero in cart page.
          color: GREEN_BOLD

      - log:
          message: Onboarding to app using postal code.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: ca.test.data.orleansZipCode

      - log:
          message: Navigating to Sign In to account from home page.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.home.signIn

      - log:
          message: Putting user credentials.
          color: GREEN_BOLD

      #Signing in to account
      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.data.cart007.emailId
            - name: password
              string: ca.test.data.functional.password

      #Checking for item and removing it
      - executeFunction:
          name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem

      - log:
          message: Searching for a GM product with product name.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.functions.searchPage.searchItemArray
          params:
            - name: items
              string: ca.test.data.cart007.gmItemArray
            - name: quantity
              string: ca.test.data.cart007.productQty
            - name: checkNonPromotionBadges
              string: true  

      # - executeFunction:
      #     name: ca.test.functions.productSearch.searchAProduct
      #     params:
      #       - name: product
      #         string: ca.test.data.cart07.GM_Item

      # - executeFunction:
      #     name: ca.test.functions.productSearch.extractingFirstProductName

      - storeIn:
          key: gm_1p_item
          value: ${productName}

      # - log: ${gm_1p_item}

      # - executeFunction:
      #     name: ca.test.functions.productSearch.addToCartCostExtractionSRP
      #     params:
      #       - name: quantity
      #         string: ca.test.data.cart007.productQty

      - storeIn:
          key: gm_1p_item_price
          value: ${productCost}

      # - log: ${gm_1p_item_price}

      - executeFunction:
          name: ca.functions.searchPage.searchItemArray
          params:
            - name: items
              string: ca.test.data.cart007.mxItemArray
            - name: quantity
              string: ca.test.data.cart007.productQty
            - name: checkNonPromotionBadges
              string: true  

      # #Searching for MX Product
      # - executeFunction:
      #     name: ca.test.functions.productSearch.searchAProduct
      #     params:
      #       - name: product
      #         string: ca.test.data.cart007.searchProduct.goSku

      # - log:
      #     message: Extracting first product name from SRP.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.extractingFirstProductName

      # - log:
      #     message: Storing product name to a variable.
      #     color: GREEN_BOLD

      - storeIn:
          key: go_item
          value: ${productName}

      # - log:
      #     message: Adding product to cart and extracting product price.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.addToCartCostExtractionSRP
      #     params:
      #       - name: quantity
      #         string: ca.test.data.cart007.productQty

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - log:
          message: Navigating to cart.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.global.navigation.goToCart

      - log:
          message: Removing Item From Cart
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.removeItemFromCart
          params:
            - name: productName
              string: ${go_item}

      - log:
          message: Incrementing item Qty in cart
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.qtyIncrement
          params:
            - name: productName
              string: ${gm_1p_item}
            - name: quantity
              string: ca.test.data.cart007.productQty.increment

      - log:
          message: Decrementing item Qty in cart
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.qtyDecrement
          params:
            - name: productName
              string: ${gm_1p_item}
            - name: quantity
              string: ca.test.data.cart007.productQty.decrement

      - log:
          message: Decrementing item Qty To Zero in cart
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.qtyDecrement
          params:
            - name: productName
              string: ${gm_1p_item}
            - name: quantity
              string: ca.test.data.cart007.productQty.decrementZero

      - storeIn:
          key: testStatus
          value: Passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps