#------------------------------------------------------------------------------
##Validating the price summary of the cart for GO.
# Scenarios covered: 
# Add a GO product to cart as reg user
# Go to cart, validate price(subtotal, savings, total items, pickUp slot price, taxes and estimated total
#------------------------------------------------------------------------------
general:
  platform: Android
  tags: cart-008, ca-function-run
  testCaseId: cart-008
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #  

  - name: Validating the price summary of the cart for GO.
    flow:
      - log:
          message: Validating the price summary of the cart for GO.
          color: GREEN_BOLD

      - log:
          message: Onboarding to app using postal code.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: ca.test.data.orleansZipCode

      - log:
          message: Navigating to Sign In to account from home page.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.home.signIn

      - log:
          message: Putting user credentials.
          color: GREEN_BOLD

      #Signing in to account
      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.data.cart008.emailId
            - name: password
              string: ca.test.data.functional.password

      #Checking for item and removing it
      - executeFunction:
          name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem

      - log:
          message: Selecting store at home page.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.home.selectStore
          params:
            - name: Zip_Code
              string: ca.test.data.orleansZipCode
            - name: storeName
              string: ca.test.data.orleansStoreName

      - log:
          message: Searching for a GO product with product name.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.functions.searchPage.searchItemArray
          params:
            - name: items
              string: ca.test.data.cart008.goItemArray1
            - name: quantity
              string: ca.test.data.cart008.productQty.vegetable
            - name: checkNonPromotionBadges
              string: true 

      # - executeFunction:
      #     name: ca.test.functions.productSearch.searchAProduct
      #     params:
      #       - name: product
      #         string: ca.test.data.cart008.searchProduct.categoryVeg

      # - log:
      #     message: Extracting first product name from SRP.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.extractingFirstProductName

      - log:
          message: Storing product name to a variable.
          color: GREEN_BOLD

      - storeIn:
          key: go_item
          value: ${productTitle}

      # - log:
      #     message: Adding product to cart and extracting product price.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.addToCartCostExtractionSRP
      #     params:
      #       - name: quantity
      #         string: ca.test.data.cart008.productQty.vegetable

      - executeFunction:
          name: ca.functions.searchPage.searchItemArray
          params:
            - name: items
              string: ca.test.data.cart008.goItemArray2
            - name: quantity
              string: ca.test.data.cart008.productQty.fruits
            - name: checkNonPromotionBadges
              string: true 

      # #Searching for another GO Product
      # - executeFunction:
      #     name: ca.test.functions.productSearch.searchAProduct
      #     params:
      #       - name: product
      #         string: ca.test.data.flow008.searchProduct.categoryFruits

      # - log:
      #     message: Extracting first product name from SRP.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.extractingFirstProductName

      - log:
          message: Storing product name to a variable.
          color: GREEN_BOLD

      - storeIn:
          key: go_item
          value: ${productTitle}

      # - log:
      #     message: Adding product to cart and extracting product price.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.addToCartCostExtractionSRP
      #     params:
      #       - name: quantity
      #         string: ca.test.data.cart008.productQty.fruits

      - executeFunction:
          name: ca.functions.searchPage.searchItemArray
          params:
            - name: items
              string: ca.test.data.cart008.mxItemArray
            - name: quantity
              string: ca.test.data.flow008.productQty.meat
            - name: checkNonPromotionBadges
              string: true

      # #Searching for MX Product
      # - executeFunction:
      #     name: ca.test.functions.productSearch.searchAProduct
      #     params:
      #       - name: product
      #         string: ca.test.data.cart008.searchProduct.meat

      # - log:
      #     message: Extracting first product name from SRP.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.extractingFirstProductName

      - log:
          message: Storing product name to a variable.
          color: GREEN_BOLD

      - storeIn:
          key: go_item
          value: ${productTitle}

      # - log:
      #     message: Adding product to cart and extracting product price.
      #     color: GREEN_BOLD

      # - executeFunction:
      #     name: ca.test.functions.productSearch.addToCartCostExtractionSRP
      #     params:
      #       - name: quantity
      #         string: ca.test.data.flow008.productQty.meat

      - log:
          message: Asserting cart quantity.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.assertCartQuantity
          params:
            - name: cartQuantity
              string: ca.test.data.cart008.cartQty

      - log:
          message: Asserting cart total.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: ${totalPrice}

      # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
      # # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - log:
          message: Navigating to cart.
          color: GREEN_BOLD

      - executeFunction:
          name: ca.test.functions.global.navigation.goToCart

      # Clicking on reserve time button
      - executeFunction:
          name: ca.test.functions.cart.reserveTimePage

      # Validating reserve time page
      - executeFunction:
          name: ca.test.functions.reserveTimePageValidation

      # clicking navigate to deliver from store page
      - executeFunction:
          name: ca.test.functions.reserveTime.deliverFromStore

      # Reserving a slot
      - executeFunction:
          name: ca.test.functions.bookASlot.reserveTimePage.reserveStandardSlot

      # Clicking on book a slot button
      - executeFunction:
          name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton

      # Asserting cart subTotal
      - executeFunction:
          name: ca.test.functions.cart.subTotalAssertion
          params:
            - name: subTotal
              string: ${totalPrice}

      - log:
          message: Subtotal Validated
          color: YELLOW

      - executeFunction:
          name: ca.test.functions.cart.groceryDelivery
          params:
            - name: groceryFee
              string: ${slotPrice}

      - executeFunction:
         name: ca.test.functions.cartPage.validateMoneyBox
         params:
           - name: checkForHstTax
             string: true
           
  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps