#-------------------------------------------------------------------------------------------------------------------
# Flow: 002
# User: Guest user
# Order Type: GM order with Multi Sku, cartSubTotal < Handling threshold & Shipping Threshold
# Fulfillment: S2H
# Payment Type: CC AMEX
# Experience: A2C Search
# Validation: Cart- Qty, Shipping Fee, Handling Fee, SubTotal, tax, estimate total, Fullfillment, Delivery address,
#
# Remark:
#-------------------------------------------------------------------------------------------------------------------

general:
  platform: android
  tags: flow-002, E2E-Android-English, E2E-Android-French, ca_authpoc, fr_ca
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:

      - log: Start Main

      # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: ca.test.data.flow002.zipCode

      # Verifying home screen
      - executeFunction:
          name: ca.test.functions.home.headerElements.validateHomePage

      # Verifying home screen bottom ribbon
      - executeFunction:
          name: ca.test.functions.home.livingDesign.validateBottomNavigation

      # Creating account using astro
      - executeFunction:
          name: ca.test.functions.astro.createAccount
          params:
            - name: payLoad
              string: ca.test.data.flow002.astroRequestBody

      # Selecting store at home
      - executeFunction:
          name: ca.test.functions.home.GICPhase2.selectStore
          params:
            - name: Zip_Code
              string: ca.test.data.flow002.zipCode
            - name: storeName
              string: ca.test.data.flow002.storeName

      # Search and add item to cart
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.data.flow002.product_p1_sku

      # SRP product tile validation
      - executeFunction:
          name: ca.test.functions.srp.productTileVerification
          params:
            - name: productName
              string: ca.test.data.flow002.product_p1_name
      
      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCart
          params:
            - name: productName
              string: ca.test.data.flow002.product_p1_name
            - name: quantity
              string: ca.test.data.flow002.product_p1_qty

      # Search and add item to cart
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.data.flow002.product_p2_sku

      # SRP product tile validation
      - executeFunction:
          name: ca.test.functions.srp.productTileVerification
          params:
            - name: productName
              string: ca.test.data.flow002.product_p2_name
      
      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCart
          params:
            - name: productName
              string: ca.test.data.flow002.product_p2_name
            - name: quantity
              string: ca.test.data.flow002.product_p2_qty

      # Validate cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantity
           params:
            - name: cartQuantity
              string: ca.test.data.flow002.cartQuantity
      
      # Asserting cart total
      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: ca.test.data.flow002.cartSubTotal

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # navigate to cart
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCart

      # Selecting ship instead
      - executeFunction:
          name: ca.test.functions.cart.selectShippingOptions

      # Clicking on add address button on cart page
      - executeFunction:
          name: ca.test.functions.cart.addDeliveryAddress

      # Login to account
      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.data.flow002.email
            - name: password
              string: ca.test.data.flow002.password

      # Verifying address and changing if needed
      - executeFunction:
          name: ca.test.functions.cart.fulfillmentAddress
          params:
            - name: addressFirstLine
              string: ca.test.data.flow002.homeAddress

      # Cart fulfillment verification
      - executeFunction:
          name: ca.test.functions.cart.deliveryS2H.verifyCard

      - executeFunction:
          name: ca.test.functions.cart.verifyProductDetails
          params:
            - name: productName
              string: ca.test.data.flow002.product_p1_name
            - name: productPrice
              string: ca.test.data.flow002.product_p1_price
            - name: productQty
              string: ca.test.data.flow002.product_p1_qty

      - executeFunction:
          name: ca.test.functions.cart.verifyProductDetails
          params:
            - name: productName
              string: ca.test.data.flow002.product_p2_name
            - name: productPrice
              string: ca.test.data.flow002.product_p2_price
            - name: productQty
              string: ca.test.data.flow002.product_p2_qty

      # Verify cart subTotal
      - executeFunction:
          name: ca.test.functions.cart.subTotalAssertion
          params:
            - name: subTotal
              string: ca.test.data.flow002.cartSubTotal

      # Walmart shipping charges
      - executeFunction:
          name: ca.test.functions.cart.walmartShipping
          params:
            - name: walmartShipping
              string: ca.test.data.flow002.walmartShipping

      # Handling fee
      - executeFunction:
          name: ca.test.functions.cart.handlingFee
          params:
            - name: handlingFee
              string: ca.test.data.flow002.handlingFee

      # Verify cart taxes
      - executeFunction:
          name: ca.test.functions.cart.totalTaxAssertion
          params:
            - name: total_tax
              string: ca.test.data.flow002.totalTaxAmount

      # Asserting hst tax
      - executeFunction:
          name: ca.test.functions.cart.hstTaxAssertion
          params:
            - name: hst_percentage
              string: ca.test.data.flow002.hstTaxPercentageAssertion
            - name: hst_tax_value
              string: ca.test.data.flow002.hstTaxAmountAssertion

      # Verify Estimate Total
      - executeFunction:
          name: ca.test.functions.cart.estimatedTotal
          params:
            - name: estimate_total
              string: ca.test.data.flow002.estimatedTotal

      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOut

      # Validating order card in check out page
      - executeFunction:
          name: ca.test.functions.checkout.validatingFulfillmentCard
          params:
            - name: fulfillmentType
              string: ca.test.data.flow002.fulfillmentType

      # Asserting delivery address
      - executeFunction:
          name: ca.test.functions.checkOut.assertingDeliveryAddress
          params:
            - name: fulfillmentType
              string: ca.test.data.flow002.fulfillmentType
            - name: addressFirstLine
              string: ca.test.data.flow002.deliveryAddress

      # CheckOut page payment option validation
      - executeFunction:
          name: ca.test.functions.checkOut.paymentOptions

      # Navigating edit payment page
      - executeFunction:
          name: ca.test.functions.checkOut.editPayment

      # Adding card details in wallet page
      - executeFunction:
          name: ca.test.functions.checkout.addCardDetailsAndAddress
          params:
            - name: number
              string: ca.test.data.flow002.checkout.wallet.addCard.amexCard.number
            - name: expiration
              string: ca.test.data.flow002.checkout.amexCard.wallet.addCard.expiration
            - name: cvv
              string: ca.test.data.flow002.checkout.amexCard.wallet.addCard.cvv
            - name: fName
              string: ca.test.data.flow002.checkout.wallet.addCard.cardHolderFirstName
            - name: lName
              string: ca.test.data.flow002.checkout.wallet.addCard.cardHolderLastName
            - name: mobileNumber
              string: ca.test.data.flow002.mobileNumber
            - name: streetAddress
              string: ca.test.data.flow002.checkout.wallet.streetAddress
            - name: city
              string: ca.test.data.flow002.checkout.wallet.addCard.address.city
            - name: state
              string: ca.test.data.flow002.checkout.wallet.addCard.address.province
            - name: zipcode
              string: ca.test.data.flow002.checkout.wallet.addCard.address.postalCode
            - name: cardLast4digits
              string: ca.test.data.flow002.checkout.wallet.cardLastDigits

      # Entering Mobile number
      - executeFunction:
          name: ca.test.functions.checkOut.mobileContact.enterMobileNumber
          params:
            - name: phoneNumber
              string: ca.test.data.flow002.mobileNumber

      # Validation mobile number card
      - executeFunction:
          name: ca.test.functions.checkOut.mobileContactValidation

      # Validate Promo Code
      - executeFunction:
          name: ca.test.functions.checkOut.promoCodeValidation

      # Checkout page sub total assertion
      - executeFunction:
          name: ca.test.functions.checkOut.subTotalValidation
          params:
            - name: subTotal
              string: ca.test.data.flow002.cartSubTotal
      
      # Walmart shipping fee
      - executeFunction:
          name: ca.test.functions.checkOut.walmartMinShippingFee
          params:
            - name: walmartMinFee
              string: ca.test.data.flow002.walmartShipping

      # Handling fee
      - executeFunction:
          name: ca.test.functions.checkOut.HandlingFee
          params:
            - name: handlingFee
              string: ca.test.data.flow002.handlingFee

      # Checkout page tax assertion
      - executeFunction:
          name: ca.test.functions.checkOut.taxesAssertion
          params:
            - name: tax_Name
              string: ca.test.data.flow002.checkOut.hstTax
            - name: tax_value
              string: ca.test.data.flow002.hstTaxAmountAssertion

      # Checkout page tax assertion
      - executeFunction:
          name: ca.test.functions.checkOut.totalTaxesAssertion
          params:
            - name: total_tax
              string: ca.test.data.flow002.totalTaxAmount

      # Checkout page estimate total assertion
      - executeFunction:  
          name: ca.test.functions.checkOut.estimateTotalAssertion
          params:
            - name: estimate_total
              string: ca.test.data.flow002.estimatedTotal

      # Placing Order
      - executeFunction:
          name: ca.test.functions.checkOut.PlacingOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      - storeIn:
          key: testStatus
          value: passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - log:
          message: flow-002
          color: GREEN_BOLD
      - executeFunction:
          name: ca.test.functions.utils.afterSteps