#-------------------------------------------------------------------------------------------------------------------
# Flow: 075
# User: Registered User
# Order Type: Charity and Digital items
# Fulfillment: S2H
# Payment Type: CC
# Experience: A2C search
# Validation: AD Needs to be validated
#
# Remark: Associate discount is not shown in cart page
#-------------------------------------------------------------------------------------------------------------------

general:
  platform: android
  tags: flow-075, prodSanity, testrun, PRODSANITY
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: Main
    flow:
      - log: Start Main

      # Get TimeStamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: ca.test.android.data.flow075.onboardingZipCode
      
      # Verifying home screen
      - executeFunction:
          name: ca.test.functions.home.headerElements.validateHomePage

      # Verifying home screen bottom ribbon
      - executeFunction:
          name: ca.test.functions.home.livingDesign.validateBottomNavigation
      
      # Home to Sign In
      - executeFunction:
          name: ca.test.functions.home.signIn

      # Sign In to account
      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.android.data.flow075.email
            - name: password
              string: ca.test.android.data.flow075.password

      # Store selection in home page
      - executeFunction:
          name: ca.test.functions.home.GICPhase2.selectStore
          params:
            - name: Zip_Code
              string: ca.test.android.data.flow075.onboardingZipCode
            - name: storeName
              string: ca.test.android.data.flow075.storeName

      # Updating location in home page
      - executeFunction:
          name: ca.test.functions.home.changeLocationLink
          params:
            - name: pinCode
              string: ca.test.android.data.dlow075.deliveryZipCode

      # Clear cart
      - executeFunction:
          name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem

      # Searching an item
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.android.data.flow075.product_1_sku

      # Product SRP to PDP page
      - executeFunction:
          name: ca.test.functions.productSearch.srpToPdpPage
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
      
      # Pdp product header
      - executeFunction:
          name: ca.test.functions.pdp.productHeaderContainer
      
      # Pdp product fulfillment details
      - executeFunction:
          name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandise
          params:
            - name: storeName
              string: ca.test.android.data.flow075.pdp.storeName
            - name: addressFirstLine
              string: ca.test.android.data.flow075.pdp.deliveryAddress
      - scroll:
          direction: up

      # Getting fulfillment date from pdp
      - executeFunction:
          name: ca.test.function.pdp.extractingFulfillmentDate
      
      # Initializing variable with shipping info of product
      - storeIn:
          key: product_1_shipping
          value: ${shipping}

      # Initializing variable with pickup info of product
      - storeIn:
          key: product_1_pickup
          value: ${pickup}

      # Extracting seller info
      - executeFunction:
          name: ca.test.functions.pdp.extractingFulfilledByDetails
      
      # Removing unwanted text from seller info
      - executeFunction:
          name: ca.test.functions.utils.sanitizeSellerInfoFromPDP
          params:
            - name: sellerDetails
              string: ${sellerInfo}

      # Storing seller info in a variable
      - storeIn:
          key: product_1_seller
          value: ${sanitizedSellerInfo}

      # Storing fulfillment by info in a variable
      - storeIn:
          key: product_1_fulfillment
          value: ${fulfillmentInfo}

      # Pdp product more details page validation 
      - executeFunction:
          name: ca.test.functions.PDPpage.validatingProductDetailsCard
      
      # Adding product to cart
      - executeFunction:
          name: ca.test.functions.pdp.pdpAddToCart

      # Searching an item
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.android.data.flow075.product_2_sku

      # Product SRP to PDP page
      - executeFunction:
          name: ca.test.functions.productSearch.srpToPdpPage
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name

      # Pdp product header validation
      - executeFunction:
          name: ca.test.functions.pdp.productHeaderContainer
      
      # Pdp product header fulfillment details validation
      - executeFunction:
          name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandise
          params:
            - name: storeName
              string: ca.test.android.data.flow075.pdp.storeName
            - name: addressFirstLine
              string: ca.test.android.data.flow075.pdp.deliveryAddress

      - scroll: 
          direction: up
      
      # Getting fulfillment date from pdp
      - executeFunction:
          name: ca.test.function.pdp.extractingFulfillmentDate
      
      # Initializing variable with shipping info of product
      - storeIn:
          key: product_2_shipping
          value: ${shipping}

      # Initializing variable with pickup info of product
      - storeIn:
          key: product_2_pickup
          value: ${pickup}

      # ca.test.functions.pdp.extractingFulfilledByDetails
      - executeFunction:
          name: ca.test.functions.pdp.extractingFulfilledByDetails
      
      # Storing seller info in a variable
      - storeIn:
          key: product_2_seller
          value: ${sellerInfo}

      # Storing fulfillment by info in a variable
      - storeIn:
          key: product_2_fulfillment
          value: ${fulfillmentInfo}

      # Pdp product more details validation
      - executeFunction:
          name: ca.test.functions.PDPpage.validatingProductDetailsCard

      # Product more details page
      - executeFunction:
          name: ca.test.functions.pdp.MoreDetails

      # Validating more details pages 
      - executeFunction:
          name: ca.test.functions.pdp.moreDetailsPageValidation
      
      # Verfying product is Digital
      - executeFunction:
          name: ca.test.functions.pdp.validatingProductType
          params:
            - name: productType
              string: Charity
    
      # Asserting cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantity
           params:
            - name: cartQuantity
              string: ca.test.android.data.flow075.cartQuantityAssertion

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # navigate to cart
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCart
      
      # Selecting ship instead
      - executeFunction:
          name: ca.test.functions.cart.selectShippingOptions

      # Cart product details validation
      - executeFunction:
          name: ca.test.functions.cart.verifyProductTitle
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: quantity
              string: ca.test.android.data.flow075.product_2_Qty

      # Asserting seller info in cart page for product 2
      - executeFunction:
          name: ca.test.functions.cart.assertingSellerinfoInCart
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: productSeller
              string: ${product_2_seller}

      # Asserting fulfillment time in cart page for product 2
      - executeFunction:
          name: ca.test.functions.cart.assertingDeliveryTime
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: productEED
              string: ${product_2_shipping}

      # Cart product details validation
      - executeFunction:
          name: ca.test.functions.cart.verifyProductTitle
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: quantity
              string: ca.test.android.data.flow075.product_1_Qty

      # Asserting cart seller info in cart for product 1
      - executeFunction:
          name: ca.test.functions.cart.assertingSellerinfoInCart
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: productSeller
              string: ${product_1_seller}

      # Asserting fulfillment time in cart page for product 1
      - executeFunction:
          name: ca.test.functions.cart.assertingDeliveryTime
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: productEED
              string: ${product_1_shipping}
      
      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOut

      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkout.validatingFulfillmentCard
          params:
            - name: fulfillmentType
              string: ca.test.android.data.flow075.checkout.deliveryFulfillment

      # Asserting fulfillment time in checkout page for product 1
      - executeFunction:
          name: ca.test.functions.checkout.shippingEEDAssertion
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: checkOutProductEED
              string: ${product_1_shipping}

      # Asserting fulfillment time in checkout page for product 2
      - executeFunction:
          name: ca.test.functions.checkout.shippingEEDAssertion
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: checkOutProductEED
              string: ${product_2_shipping}
      
      # Navigating back to checkout from cart page
      - executeFunction:
          name: ca.test.functions.checkout.navigateToCart
      
      # Selecting pickup instead
      - executeFunction:
          name: ca.test.functions.cart.selectPickupOptions

      # Asserting cart seller info in cart for product 1
      - executeFunction:
          name: ca.test.functions.cart.assertingSellerinfoInCart
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: productSeller
              string: ${product_1_seller}

      # Asserting fulfillment time in cart page for product 1
      - executeFunction:
          name: ca.test.functions.cart.assertingDeliveryTime
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: productEED
              string: ${product_1_pickup}

       # Asserting cart seller info in cart for product 2
      - executeFunction:
          name: ca.test.functions.cart.assertingSellerinfoInCart
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: productSeller
              string: ${product_2_seller}

      # Asserting fulfillment time in cart page for product 2
      - executeFunction:
          name: ca.test.functions.cart.assertingDeliveryTime
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: productEED
              string: ${product_2_pickup}

      # Proceed to Checkout
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOut

      # CheckOut page order review validation
      - executeFunction:
          name: ca.test.functions.checkout.validatingFulfillmentCard
          params:
            - name: fulfillmentType
              string: ca.test.android.data.flow075.checkout.pickupFulfillmentType

      #Asserting fulfillment time in checkout page for product 1
      - executeFunction:
          name: ca.test.functions.checkout.shippingEEDAssertion
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_1_name
            - name: checkOutProductEED
              string: ${product_1_pickup}

      #  Asserting fulfillment time in checkout page for product 2
      - executeFunction:
          name: ca.test.functions.checkout.shippingEEDAssertion
          params:
            - name: productName
              string: ca.test.android.data.flow075.product_2_name
            - name: checkOutProductEED
              string: ${product_2_pickup}

      # status
      - storeIn:
          key: testStatus
          value: passed

  # After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps