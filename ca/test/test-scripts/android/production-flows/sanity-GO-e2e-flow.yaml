#-------------------------------------------------------------------------------------------------------------------
# Flow:
# User:
# Order Type:
# Fulfillment:
# Payment Type:
# Experience:
# Validation:
#
# Remark:
#-------------------------------------------------------------------------------------------------------------------

general:
  platform: android
  tags: sanityGo, prodSanity, PRODSANITY
  inherit:
    filesRunAll:
      - ca-errors-helpers.yaml

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: Execute before steps

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

  - name: Main
    flow:
      - log: Start Main

      # Get TimeStamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      # Navigate onboarding to home
      - executeFunction:
          name: ca.test.functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: ca.test.data.sanityGo.storeZipCode

      # Verifying home screen
      - executeFunction:
          name: ca.test.functions.home.headerElements.validateHomePage

      # Verifying home screen bottom ribbon
      - executeFunction:
          name: ca.test.functions.home.livingDesign.validateBottomNavigation

      # Home to Sign In
      - executeFunction:
          name: ca.test.functions.home.signIn

      # Sign In to account
      - executeFunction:
          name: ca.test.functions.loginPage.userLogin
          params:
            - name: email
              string: ca.test.data.sanityGo.email
            - name: password
              string: ca.test.data.sanityGo.password

      # Validating home page customer greeting
      - executeFunction:
          name: ca.test.functions.home.verifyUserNameHomePage
          params:
            - name: usergreeting
              string: ca.test.data.sanityGo.customerName
    
      # Selecting store in home page
      - executeFunction:
          name: ca.test.functions.home.selectStore
          params:
            - name: Zip_Code
              string: ca.test.data.sanityGo.storeZipCode
            - name: storeName
              string: ca.test.data.sanityGo.storeName

      - executeFunction:
          name: ca.test.functions.home.changeLocationLink
          params:
            - name: pinCode
              string: ca.test.data.sanityGo.deliveryZipCode

      # Remove item from cart
      - executeFunction:
         name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem
      
      # Search a product
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: Banana #ca.test.data.sanityGo.searchCategoryWise
      
      - executeFunction:
          name: ca.test.functions.productSearch.extractingFirstProductName
      
      - storeIn:
          key: GO_product_1
          value: ${productName}

      # Product SRP to PDP page
      - executeFunction:
          name: ca.test.functions.productSearch.prod.srpToPdpPage
          params:
            - name: productName
              string: ${GO_product_1}

      - executeFunction:
          name: ca.test.functions.PDPpage.validatingProductHeaderTileGrocery

      - executeFunction:
          name: ca.test.functions.PDPpage.validatingFulfillmentDetailsGrocery
          params:
            - name: storeName
              string: ca.test.data.sanityGo.pdp.storeName
            - name: addressFirstLine
              string: ca.test.data.sanityGo.deliveryAddress

      - executeFunction:
          name: ca.test.functions.PDPpage.validatingProductDetailsCard

      # Add to cart
      - executeFunction:
          name: ca.test.functions.PDPpage.addToCartPriceExtraction
          params:
            - name: quantity
              string: ca.test.data.sanityGo.product_1_Qty

      - executeFunction:
          name: ca.test.functions.PDPpage.closePDPpage

      # # Product tile verification
      # - executeFunction:
      #     name: ca.test.functions.srpPage.productTileVerificationGrocery

      # Search a product
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.data.sanityGo.product_2_Name

      - executeFunction:
          name: ca.test.functions.productSearch.extractingFirstProductName
      
      - storeIn:
          key: GO_product_2
          value: ${productName}

      # Validating SRP page
      - executeFunction:
          name: ca.test.functions.productSearch.srpPageValidation
      
      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCartCostExtractionSRP
          params:
            - name: quantity
              string: ca.test.data.sanityGo.product_2_Qty

      # # Product tile verification
      # - executeFunction:
      #     name: ca.test.functions.srpPage.productTileVerificationGrocery

      # Search a product
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.data.sanityGo.searchProduct-2

      - executeFunction:
          name: ca.test.functions.productSearch.extractingFirstProductName
      
      - storeIn:
          key: GO_product_3
          value: ${productName}

      # Validating SRP page and extracting product price
      - executeFunction:
          name: ca.test.functions.productSearch.srpPageValidation
      
      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCartCostExtractionSRP
          params:
            - name: quantity
              string: ca.test.data.sanityGo.product_3_Qty

      # # Product tile verification
      # - executeFunction:
      #     name: ca.test.functions.srpPage.productTileVerificationGrocery
      #     params:
      #       - name: offerProduct
      #         string: ca.test.data.sanityGo.product_3_offerProduct

      # Search a product
      - executeFunction:
          name: ca.test.functions.productSearch.searchAProduct
          params:
            - name: product
              string: ca.test.data.sanityGo.product_1_Sku
      
      - executeFunction:
          name: ca.test.functions.productSearch.extractingFirstProductName
      
      - storeIn:
          key: GO_product_4
          value: ${productName}

      # Validating SRP page and extracting product price
      - executeFunction:
          name: ca.test.functions.productSearch.srpPageValidation
      
      # Add to cart
      - executeFunction:
          name: ca.test.functions.productSearch.addToCartCostExtractionSRP
          params:
            - name: quantity
              string: ca.test.data.sanityGo.product_4_Qty

      # # Product tile verification
      # - executeFunction:
      #     name: ca.test.functions.srpPage.productTileVerificationGrocery
      #     params:
      #       - name: offerProduct
      #         string: ca.test.data.sanityGo.product_4_offerProduct

      # Asserting cart quantity
      - executeFunction:
           name: ca.test.functions.cart.assertCartQuantity
           params:
            - name: cartQuantity
              string: ca.test.data.sanityGo.cartQuantity

      # Asserting cart total
      - executeFunction:
          name: ca.test.functions.cart.assertCartTotal
          params:
            - name: subTotal
              string: $${totalPrice}

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # # navigate to cart
      # - executeFunction:
      #     name: ca.test.functions.global.navigation.goToCart

      # # navigate to reserve time page
      # - executeFunction:
      #     name: ca.test.functions.cart.reserveTimePage
      
      # # Reserve time page validation
      # - executeFunction:
      #     name: ca.test.functions.reserveTimePageValidation

      # - executeFunction:
      #     name: ca.test.functions.reserveTime.deliverFromStore

      # # Reserving a slot
      # - executeFunction:
      #     name: ca.test.functions.bookASlot.reserveTimePage.reserveStandardSlot

      # # Clicking on book a slot button
      # - executeFunction:
      #     name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton
          
      # # Cart fulfillment verification
      # - executeFunction:
      #     name: ca.test.functions.cart.scheduledDelivery.verifyCard

      # # Cart product details validation
      # - executeFunction:
      #     name: ca.test.functions.cart.verifyProductTitle
      #     params:
      #       - name: productName
      #         string: ${GO_product_1}
      #       - name: quantity
      #         string: ca.test.data.sanityGo.product_1_Qty

      # # Cart product details validation
      # - executeFunction:
      #     name: ca.test.functions.cart.verifyProductTitle
      #     params:
      #       - name: productName
      #         string: ${GO_product_2}
      #       - name: quantity
      #         string: ca.test.data.sanityGo.product_2_Qty

      # # Cart product details validation
      # - executeFunction:
      #     name: ca.test.functions.cart.verifyProductTitle
      #     params:
      #       - name: productName
      #         string: ${GO_product_3}
      #       - name: quantity
      #         string: ca.test.data.sanityGo.product_3_Qty

      # # Cart product details validation
      # - executeFunction:
      #     name: ca.test.functions.cart.verifyProductTitle
      #     params:
      #       - name: productName
      #         string: ${GO_product_4}
      #       - name: quantity
      #         string: ca.test.data.sanityGo.product_4_Name

      # # Asserting cart subTotal
      # - executeFunction:
      #     name: ca.test.functions.cart.subTotalAssertion
      #     params:
      #       - name: subTotal
      #         string: $${totalPrice}
      
      # # Asserting Grocery delivery charges in cart page
      # - executeFunction:
      #     name: ca.test.functions.cart.groceryDelivery
      #     params:
      #       - name: groceryFee
      #         string: ca.test.data.sanityGo.groceryFee

      # - executeNode:
      #     file: ca/test/helpers/sanitizePrice.js
      #     args:
      #       - value: ${slotPrice}
      #     getResponse:
      #       storeIn: clearPrice
      # - log: ${clearPrice}

      # - executeNode:
      #     file: ca/test/helpers/taxCalculation.js
      #     args:
      #       - value: 0
      #       - value: ${clearPrice}
      #       - value: 0.13
      #     getResponse:
      #       storeIn: tax_values
      # - log: ${tax_values}
      
      # # Asserting Walmart shipping fee
      # - executeFunction:
      #     name: ca.test.functions.cart.walmartShipping
      #     params:
      #       - name: walmartShipping
      #         string: ca.test.data.sanityGo.walmartShipping
      
      # # Asserting cart taxes
      # - executeFunction:
      #     name: ca.test.functions.cart.totalTaxAssertion
      #     params:
      #       - name: total_tax
      #         string: ${tax_values}

      # # Asserting hst tax
      # - executeFunction:
      #     name: ca.test.functions.cart.hstTaxAssertion
      #     params:
      #       - name: hst_percentage
      #         string: ca.test.data.sanityGo.hstPercentage
      #       - name: hst_tax_value
      #         string: ${tax_values}

      # - executeNode:
      #     file: ca/test/helpers/estimateTotalCalculation.js
      #     args:
      #       - value: ${tax_values}
      #       - value: ${totalPrice}
      #       - value: ${clearPrice}
      #     getResponse:
      #       storeIn: estimate_total
      # - log: ${estimate_total}

      # # Asserting cart estimate sub total
      # - executeFunction:
      #     name: ca.test.functions.cart.estimatedTotal
      #     params:
      #       - name: estimate_total
      #         string: ${estimate_total}

      # # Proceed to Checkout
      # - executeFunction:
      #     name: ca.test.functions.cart.proceedToCheckOut

      # # Validating order card in check out page
      # - executeFunction:
      #     name: ca.test.functions.checkout.validatingFulfillmentCard
      #     params:
      #       - name: fulfillmentType
      #         string: Delivery from store

      # # Asserting delivery address
      # - executeFunction:
      #     name: ca.test.functions.checkOut.assertingDeliveryAddress
      #     params:
      #       - name: fulfillmentType
      #         string: Delivery from store
      #       - name: addressFirstLine
      #         string: 3345 Innes Rd, MISSISSAUGA, ON L5N 2V6

      # # # Validating payment card
      # # - executeFunction:
      # #     name: ca.test.functions.checkOut.paymentOptions

      # # # Adding cvv
      # # - executeFunction:
      # #     name: ca.test.functions.checkOut.payment.addCVV
      # #     params:
      # #       - name: cvv
      # #         string: ca.test.data.sanityGo.cvvNumber
      
      # # Enter mobile number
      # - executeFunction:
      #     name: ca.test.functions.checkOut.mobileContact.enterMobileNumber
      #     params:
      #       - name: phoneNumber
      #         string: ca.test.data.sanityGo.mobileNumber
      
      # # Validating Mobile number card
      # - executeFunction:
      #     name: ca.test.functions.checkOut.mobileContactValidation

      # # Validate Promo Code
      # - executeFunction:
      #     name: ca.test.functions.checkOut.promoCodeValidation

      # # Checkout page sub total assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.subTotalValidation
      #     params: 
      #       - name: subTotal
      #         string: $${totalPrice}

      # - executeFunction:
      #     name: ca.test.functions.checkOut.groceryDeliveryFee
      #     params:
      #       - name: groceryDeliveryFee
      #         string: $${clearPrice}
    
      # # CheckOut page grocery pickup and walmart shipping fee
      # - executeFunction:
      #     name: ca.test.functions.checkOut.shippingCharges
      #     params:
      #       - name: shippingFee
      #         string: ca.test.data.sanityGo.walmartShipping
      
      # # HST Tax Assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.taxesAssertion
      #     params: 
      #       - name: tax_Name
      #         string: ca.test.data.sanityGo.checkOut.hstTax
      #       - name: tax_value
      #         string: $${tax_values}

      # # Checkout page tax assertion
      # - executeFunction:
      #     name: ca.test.functions.checkOut.totalTaxesAssertion
      #     params:
      #       - name: total_tax
      #         string: $${tax_values}

      # # Checkout page estimate total assertion
      # - executeFunction:  
      #     name: ca.test.functions.checkOut.estimateTotalAssertion
      #     params:
      #       - name: estimate_total
      #         string: ${estimate_total}
          
      # status
      - storeIn:
          key: testStatus
          value: passed

  #After Scenarios
  - name: After
    after: true
    flow:
      - executeFunction:
          name: ca.test.functions.utils.afterSteps
