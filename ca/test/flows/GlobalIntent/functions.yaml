functions:

  # Store selection from Global Intent
  - name: ca.test.functions.globalIntent.storeSelection

    flow:
      - executeFunction:
          name: ca.test.functions.globalIntent.isGlobalIntentHeaderDisplayed
      - if:
          condition: ${returnedIsDisplayed} == false
          then:
            - executeFunction:
                name: ca.test.functions.utils.relaunchApp
            - executeFunction:
                name: ca.test.functions.homePage.shopButton
      - executeFunction:
          name: ca.test.functions.globalIntent.expandGlobalIntent
      - executeFunction:
          name: ca.test.functions.globalIntent.validateOnboardingScreen
      - executeFunction:
          name: ca.test.functions.globalIntent.onboardingScreen.tapGotIt
      - executeFunction:
          name: ca.test.functions.globalIntent.selectPickupIntent
      - executeFunction:
          name: ca.test.functions.globalIntent.valdiatePickupIntentHotCard
          params:
            - name: storeName
              string: ca.test.data.gic.defaultStoreName
            - name: storeAddress
              string: ca.test.data.gic.defaultStoreAddress
      - executeFunction:
          name: ca.test.functions.globalIntent.selectDeliveryIntent
      - executeFunction:
          name: ca.test.functions.globalIntent.guestUser.validateDeliveryHotCard
          params:
            - name: defaultAddress
              string: ca.test.data.gic.defaultAddress
      - executeFunction:
          name: ca.test.functions.gobalIntent.deliveryIntent.guestUserAddAddress
      - sleep:
          duration: 10000
      # - executeFunction:
      #     name: ca.test.functions.globalIntent.collapseGlobalIntent


  - name: ca.test.functions.globalIntent.refreshCCM
    flow:
      - executeFunction:
          name: ca.test.functions.globalIntent.isGlobalIntentHeaderDisplayed
      - if:
          condition: ${returnedIsDisplayed} == false
          then:
            - executeFunction:
                name: ca.test.functions.utils.relaunchApp
            - executeFunction:
                name: ca.test.functions.homePage.shopButton


  # ----------------------------------------------------------------------------------------------------------------
 
  # Description: This function is used to update store and delivery address
  # params: ${updateStore}    [Optional]    Set to true to update store
  #         ${updateAddress}  [Optional]    Set to true to update address
  #         ${storeName}      [Optional]    Enter store name 
  #         ${storeAddress}   [Optional]    Enter store address
  #         ${postalCode}     [Optional]    Enter postal code address
  #         ${userAddress}    [Optional]    Enter delivery address
  - name: ca.test.functions.globalIntent.updateStore$DeliveryAddress
    flow:
      - executeFunction:
          name: ca.test.functions.globalIntent.isGlobalIntentHeaderDisplayed
      - if:
          condition: "!${returnedIsDisplayed}"
          then:
            - executeFunction:
                name: ca.test.functions.utils.relaunchApp
            - executeFunction:
                name: ca.test.functions.homePage.shopButton
      - executeFunction:
          name: ca.test.functions.globalIntent.expandGlobalIntent
      - if:
          condition: ${updateStore} 
          then:
            - executeFunction:
                name: ca.test.functions.globalIntent.selectPickupIntent
            - executeFunction:
                name: ca.test.functions.globalIntent.isRequiredStoreDisplayed
                params:
                  - name: storeName
                    string: ${storeName}
            - if:
                condition: ${returnedIsDisplayed}
                then:
                  - log:
                      message: "Required store is present."
                      color: CYAN_BOLD
                else:
                  - executeFunction:
                      name: ca.test.functions.globalIntent.tapStoreSelectionChevron
                  - executeFunction:
                      name: ca.test.functions.globalIntent.storeSelection.isPageDisplay
                  - executeFunction:
                      name: ca.test.functions.globalIntent.storeSelection.enterPostalCode
                      params:
                        - name: postalCode
                          string: ${postalCode}
                  - executeFunction:
                      name: ca.test.functions.globalIntent.storeSelection.tapStoreRadioBtn
                      params: 
                        - name: storeName
                          string: ${storeName}
                  - executeFunction:
                      name: ca.test.functions.globalIntent.storeSelection.tapSaveButton
                  - executeFunction:
                      name: ca.test.functions.globalIntent.valdiatePickupIntentHotCard
                      params:
                          - name: storeName
                            string: ${storeName}
                          - name: storeAddress
                            string: ${storeAddress}
      - if:
          condition: ${updateAddress}
          then:
            - executeFunction:
                name: ca.test.functions.globalIntent.selectDeliveryIntent
            - executeFunction:
                name: ca.test.functions.globalIntent.isRequiredAddressDisplayed
                params:
                  - name: userAddress
                    string: ${userAddress}
            - if:
                condition: ${returnedIsDisplayed}
                then:
                  - log:
                      message: "Required address is already present."
                      color: CYAN_BOLD
                else:
                  - executeFunction:
                      name: ca.test.functions.globalIntent.tapAddressSelectionChevron
                  - executeFunction:
                      name: ca.test.functions.globalIntent.isAddressSelectionPageDisplay
                  - executeFunction:
                      name: ca.test.functions.globalIntent.addressSelection.tapAddressRadioBtn
                      params:
                        - name: addressLine
                          string: ${addressLine}
                  - executeFunction:
                      name: ca.test.functions.globalIntent.addressSelection.tapSaveButton
      - executeFunction: 
          name: ca.test.functions.globalIntent.collapseGlobalIntent
      - log:
          message: "End Function: globalIntent.updateStoreAndDeliveryAddress"
          color: BLUE      

  # ----------------------------------------------------------------------------------------------------------------
