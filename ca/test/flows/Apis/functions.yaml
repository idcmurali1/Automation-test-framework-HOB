functions:
  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This api will create user account in staging environment
  # Param:        ${firstName}          [Optional] First name of user       <- Default ["Walmart"]
  #               ${lastName}           [Optional] Last name of user        <- Default ["Glass"]
  #               ${emailId}            [Optional] Email Id of user         <- Default ["testapp_${timestamp}@test.com"]
  #               ${password}           [Optional] password of user         <- Default ["Astro123$"]
  #               ${addressFirstLine}   [Optional] User address first line  <- Default ["3345 Innes Rd"]
  #               ${city}               [Optional] User city                <- Default ["Orleans"]
  #               ${country}            [Optional] User country             <- Default ["CA"]
  #               ${postalCode}         [Optional] User postal code         <- Default ["K1C1T1"]
  #               ${state}              [Optional] User state               <- Default ["ON"]
  #               ${paymentMethod}      [Optional] User payment method      <- Default ["VISA"]  <-   Allowed Value ["VISA", "AMEX", "MASTERCARD"]
  - name: ca.test.functions.apis.createAccount
    flow:
      - log: 
          message: Create Account
          color: BLUE
      - getTimestamp:
          asDate: false
          storeIn: timestamp
      - if:
          condition: ${firstName} != null
          then:
            - storeIn:
                key: firstName
                value: ${firstName}
          else:
            - storeIn:
                key: firstName
                value: Walmart
      - if:
          condition: ${lastName} != null
          then:
            - storeIn:
                key: lastName
                value: ${lastName}
          else:
            - storeIn:
                key: lastName
                value: Glass
      - if:
          condition: ${emailId} != null
          then:
            - storeIn:
                key: emailId
                value: ${emailId}
          else:
            - storeIn:
                key: emailId
                value: testapp_${timestamp}@test.com
      - if:
          condition: ${password} != null
          then:
            - storeIn:
                key: password
                value: ${password}
          else:
            - storeIn:
                key: password
                value: "Astro123$"
      - if:
          condition: ${addressFirstLine} != null
          then:
            - storeIn:
                key: addressFirstLine
                value: ${addressFirstLine}
          else:
            - storeIn:
                key: addressFirstLine
                value: "3400 Innes Rd"
      - if:
          condition: ${city} != null
          then:
            - storeIn:
                key: city
                value: ${city}
          else:
            - storeIn:
                key: city
                value: "Orleans"
      - if:
          condition: ${country} != null
          then:
            - storeIn:
                key: country
                value: ${country}
          else:
            - storeIn:
                key: country
                value: "ON"
      - if:
          condition: ${postalCode} != null
          then:
            - storeIn:
                key: postalCode
                value: ${postalCode}
          else:
            - storeIn:
                key: postalCode
                value: "K1C1T1"
      - if:
          condition: ${state} != null
          then:
            - storeIn:
                key: state
                value: ${state}
          else:
            - storeIn:
                key: state
                value: "ON"
      - if:
          condition: ${paymentMethod} != null
          then:
            - storeIn:
                key: paymentMethod
                value: ${paymentMethod}
          else:
            - storeIn:
                key: paymentMethod
                value: "VISA"
      - callAPI:
          url: http://astro.walmart.com/api/v2/teflon/customer
          requestMethod: POST
          wait: 5000
          header:
            - key: Content-Type
              value: application/json
            - key: market
              value: ca
          readTimeout: 30000 
          requestBody: '{"firstName": "Walmart","lastName": "Glass-App","emailAddress": "${emailId}","phoneNumber": "9876543210","paymentMethods": ["${paymentMethod}"],"postalAddress": {"address": "${addressFirstLine}","city": "${city}","country": "${country}","postalCode": "${postalCode}","state": "${state}"},"password": "${password}"}'
          verifyResponseCode: 200
          verifyResponseBodyContains:
            - '"astroStatus":"SUCCESS"'
          retriesOnFail: 5
          retryDelay: 2000
      - log: 
          message: Account created successfully
          color: GREEN_BOLD
      - sleep:
          duration: 2000

  # ----------------------------------------------------------------------------------------------------------------

  # Description:  This api will add product to cart in staging environment
  # Param:        ${emailId}            [Mandatory] Email id for add to cart
  #               ${password}           [Mandatory] Account password        <- Default ["Astro123$"]
  #               ${storeId}            [Optional]  Nearby Store            <- Default ["5540"]     <- Allowed value ["5540", "5538"] 
  #               ${province}           [Optional] province                 <- Default ["ON"]       <- Allowed value ["ON", "AB"] 
  #               ${s1}                 [Mandatory] Product sku
  #               ${q1}                 [Optional]  S1 Quantity             <- Default ["1"]
  #               ${s2}                 [Optional]  Product sku             <- Default ["Orleans"]
  #               ${q2}                 [Optional]  S2 Quantity             <- Default ["1"]
  #               ${s3}                 [Optional]  Product sku             <- Default ["CA"]
  #               ${q3}                 [Optional]  S3 Quantity             <- Default ["1"]
  - name: ca.test.functions.apis.addToCart
    flow:
      - log: 
          message: Product add to cart started.
          color: GREEN_BOLD
      - if: 
          condition: ${q1} != null
          then:
            - storeIn:
                key: q1
                value: ${q1}
          else: 
            - storeIn:
                key: q1
                value: "1"
      - if: 
          condition: ${q2} != null
          then:
            - storeIn:
                key: q2
                value: ${q2}
          else: 
            - storeIn:
                key: q2
                value: "1"
      - if: 
          condition: ${q3} != null
          then:
            - storeIn:
                key: q3
                value: ${q3}
          else: 
            - storeIn:
                key: q3
                value: "1"
      - if: 
          condition: ${s2} != null
          then:
            - storeIn:
                key: s2
                value: ${s2}
      - if: 
          condition: ${s3} != null
          then:
            - storeIn:
                key: s3
                value: ${s3}
      - if: 
          condition: ${storeId} != null
          then:
            - storeIn:
                key: storeId
                value: ${storeId}
          else: 
            - storeIn:
                key: storeId
                value: "5540"
      - if: 
          condition: ${province} != null
          then:
            - storeIn:
                key: province
                value: ${province}
          else: 
            - storeIn:
                key: province
                value: "ON"                
      - if:
          condition: ${s2} == null && ${s3} == null
          then:
            - storeIn:
                key: items
                value: '{"customerEmailAddress": "${emailId}", "password": "${password}", "storeId": 5538, "fulfillmentGroups": [{"orderType": "${orderType}", "items": [{"offerId": "${s1}", "skuId": "${s1}", "quantity": ${q1}}]}]}'
            - log: ${items}
      - if:
          condition: ${s2} != null && ${s3} == null
          then:
            - storeIn:
                key: items
                value: '{"customerEmailAddress": "${emailId}", "password": "${password}", "province": "${province}", "fulfillmentGroups": [{"orderType": "${orderType}", "items": [{"offerId": "${s1}", "skuId": "${s1}", "quantity": ${q1}}, {"offerId": "${s2}", "skuId": "${s2}", "quantity": ${q2}}]}]}'
      - if:
          condition: ${s2} != null && ${s3} != null
          then:
            - storeIn:
                key: items
                value: '{"customerEmailAddress": "${emailId}", "password": "${password}", "province": "${province}", "fulfillmentGroups": [{"orderType": "${ordertype}", "items": [{"offerId": ${s1}, "skuId": ${s1}, "quantity": ${q1}}, {"offerId": ${s2}, "skuId": ${s2}, "quantity": ${q2}}, {"offerId": ${s3}, "skuId": ${s3}, "quantity": ${q3}}]}]}'
      - callAPI:
          url: http://astro.walmart.com/api/v2/teflon/item/transactability
          header:
            - key: market
              value: ca
            - key: Content-Type
              value: application/json
            - key: Cookie
              value: DYN_USER_ID=a659e6e3-6756-4c26-acdc-214cb68d8a43 
          readTimeout: 60000
          requestMethod: POST
          requestBody: ${items}
          wait: 2500
          retriesOnFail: 1
          retryDelay: 5000
          getValue:
            - key: astroStatus
              storeIn: status
            - key: astroDetails.cartDetails.cart.price_summary.fulfillment_cost[0].sub_total
              storeIn: sub_total
            - key: astroDetails.cartDetails.cart.price_summary.fulfillment_cost[0].discount
              storeIn: discount
            - key: astroDetails.cartDetails.cart.price_summary.fulfillment_cost[0].sub_total_after_discount
              storeIn: sub_total_after_discount
            - key: astroDetails.cartDetails.cart.price_summary.fulfillment_cost[0].seller_info[0].seller_charge
              storeIn: shipping_charges
            - key: astroDetails.cartDetails.cart.price_summary.cart_discounts.order_discount
              storeIn: cart_discount
            - key: astroDetails.cartDetails.cart.price_summary.cart_discounts.associate_discount
              storeIn: assoicate_discount
            - key: astroDetails.cartDetails.cart.price_summary.cart_discounts.total_discount
              storeIn: total_discount
            - key: astroDetails.cartDetails.cart.price_summary.cart_discounts.coupon_discount
              storeIn: coupon_discount
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.total_tax
              storeIn: total_tax  
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.total_env_fee
              storeIn: env_fee
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.handling_fee
              storeIn: handling_fee
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.total_duty_fee
              storeIn: total_duty_fee
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.tax_info[0].tax_amount
              storeIn: tax_amount
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.tax_info[0].tax_rate
              storeIn: tax_rate
            - key: astroDetails.cartDetails.cart.price_summary.tax_and_fees.tax_info[0].tax_name[0].value
              storeIn: tax_name
      - log:  
          message: Product added to cart
          color: GREEN_BOLD
      - log:  
          message: "Astro status: ${status}"
          color: GREEN_BOLD
      - log: 
          message: "SubTotal: ${sub_total}"
          color: GREEN_BOLD
      - log: 
          message: "Discount: ${discount}"
          color: GREEN_BOLD
      - log: 
          message: "SubTotal after discount: ${sub_total_after_discount}" 
          color: GREEN_BOLD
      - log: 
          message: "Shipping charges: ${shipping_charges}"
          color: GREEN_BOLD
      - log: 
          message: "Cart discount: ${cart_discount}"
          color: GREEN_BOLD
      - log: 
          message: "Associate discount: ${assoicate_discount}"
          color: GREEN_BOLD
      - log: 
          message: "Total discount: ${total_discount}" 
          color: GREEN_BOLD
      - log: 
          message: "Coupon discount: ${coupon_discount}"
          color: GREEN_BOLD
      - log: 
          message: "Total tax: ${total_tax}"
          color: GREEN_BOLD
      - log: 
          message: "Env. fee: ${env_fee}" 
          color: GREEN_BOLD
      - log: 
          message: "Handling fee: ${handling_fee}"
          color: GREEN_BOLD
      - log: 
          message: "Total duty fee: ${total_duty_fee}"
          color: GREEN_BOLD
      - log: 
          message: "Tax amount: ${tax_amount}"
          color: GREEN_BOLD
      - log: 
          message: "Tax rate: ${tax_rate}"
          color: GREEN_BOLD
      - log: 
          message: "Tax rate: ${tax_name}"
          color: GREEN_BOLD