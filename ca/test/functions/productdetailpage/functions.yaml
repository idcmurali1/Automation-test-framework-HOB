functions:
  - name: ca.test.functions.productdetailpage.searchOpenPDPAndAddToCart
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${Item}
          pressEnter: true
          # sleep:
          #   duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.threeWaysToOrder
          then:
            - click:
                identifier: ca.test.mapping.srp.threeWaysToOrderGotItButton
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.threeWaysToOrder
          then:
            - click:
                identifier: ca.test.mapping.srp.threeWaysToOrderGotItButton    
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.selectproduct
          then:
            - click:
                identifier: ca.test.mapping.srp.selectproduct
      - verifyIdentifier:
          
          present:

            - identifier: ca.test.mapping.pdp.itemname

      - scroll:

          direction: down

          untilIdentifier: ca.test.mapping.pdp.productdetails   

      - click:

          identifier: ca.test.mapping.pdp.moredetails    

      - scroll:

          direction: down

          untilIdentifier: ca.test.mapping.pdp.moredetails.specification
            
      - goBack: true    
      
      - click:

          identifier: ca.test.mapping.pdp.addtocart
      
      - click:  

          identifier: ca.test.mapping.pdp.close
  # Opening PDP page of product
  - name: ca.test.functions.pdp.srpToPdp
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.srp.productTile
      - click:
          identifier: ca.test.mapping.srp.productTile
      - sleep:
          duration: 15000

  # Validating PDP page based on product category and if the product is 3P 
  # function will store the seller name to assert seller name in cart.
  - name: ca.test.functions.pdp.productDetailsValidation
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.sheetToolBar
            #- identifier: ca.test.mappings.pdp.shareButton
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mappings.global.closeIcon
            - identifier: ca.test.mappings.pdp.carouselButtons
            - identifier: ca.test.mappings.pdp.itemEntryImage
      - if:
          condition: ${productType} == 'GM' || ${productType} == 'Charity' || ${productType} == 'Digital'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.brandLink
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreDetails
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreDetails
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.storeSelector
                  # - identifier: ca.test.mappings.pdp.deliveryEta
                  - identifier: ca.test.mappings.pdp.soldAndShipped
                  - identifier: ca.test.mappings.pdp.addToCart
                  - identifier: ca.test.mappings.pdp.productDescription
                  - identifier: ca.test.mappings.pdp.productDetailsHeader
                  - identifier: ca.test.mappings.pdp.addToCartPrice
            - if:
                identifier:
                  text:
                    - identifier: ca.test.mappings.pdp.soldAndShipped
                      contains: Walmart
                then:
                  - log: Item is 1p
                else:
                  - log: Item is 3P
                  - getString:
                      identifier: ca.test.mappings.pdp.soldAndShipped
                      attribute: text
                      storeIn: sellerName
  
  # Product more details button click
  - name: ca.test.functions.pdp.MoreDetails
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreDetails
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreDetails
      - click:
          identifier: ca.test.mappings.pdp.moreDetails

  # Product page more details page validation
  - name: ca.test.functions.pdp.moreDetailsPageValidation
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.moreDetails.productDescription
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreDetails.specifications
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreDetails.specifications
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.pdp.moreDetails.specifications  
  
  # PDP Product Type validation Charity Or Digital || from more details page to pdp
  - name: ca.test.functions.pdp.validatingProductType
    flow:
      - if:
          condition: ${productType} == 'Charity' || ${productType} == 'Digital'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.productionDesc.productType
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.productionDesc.productType
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.productionDesc.productType
                then:
                  - log: 
                      message: Product is a ${productType} item.
                      color: GREEN_BOLD
                  - goBack: true
                  - click:
                      identifier: ca.test.mappings.pdp.addToCart
                  - click:
                      identifier: ca.test.mappings.global.closeIcon
                else:
                  - failTest:
                      message: Product is not a ${productType} item.

  # From more details page to PDP and add to cart
  - name: ca.test.functions.pdp.pdpAddToCart
    platform: android
    flow:
      - log:
          message: Adding product to cart from PDP page
          color: GREEN_BOLD
      - goBack: true
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.addToCart
      - click:
          identifier: ca.test.mappings.pdp.addToCart
      - click:
          identifier: ca.test.mappings.global.closeIcon

  # Validating Product header in PDP
  - name: ca.test.functions.pdp.productHeaderContainer
    platform: android
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: ca.test.mappings.pdp.sheetToolBar
            #- identifier: ca.test.mappings.pdp.shareButton
            # Share button is not present in staging PDP page
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mappings.global.closeIcon
            - identifier: ca.test.mappings.pdp.carouselButtons
            - identifier: ca.test.mappings.pdp.itemEntryImage
            #- identifier: ca.test.mappings.pdp.brandLink
  
  - name: ca.test.functions.pdp.multiVariantProductValidation
    platform: android
    flow:
      - if:
          identifier:
            timeout: 5000          
            notPresent:
              - identifier: ca.test.mappings.pdp.multiVariantProductCarousel
            
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.multiVariantProductCarousel
                position: center
      - numberOfChildElements:
          identifier: ca.test.mappings.pdp.multiVariant
          storeIn: noOfVariants
          filterBy: ca.test.mappings.pdp.multiVariant.list
      - log:
          message: "no of variants ${noOfVariants}"
      - if:
          condition: ${noOfVariants} == ${variantCount}
          then:
            - log:
                message: Product is multiVariant
                color: GREEN_BOLD
          else:
            - failTest:
                message: Multi-Variant validation failed

  # Validating product fulfillment details in PDP $ multi offer validation
  - name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandise
    platform: android
    flow:
      - sleep:
          duration: 10000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.returnPolicyButton
          then:
            - scroll:
                direction: down
                # position: center
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped
                scrollLimit: 1
                timeout: 3000
      - if:
          condition: ${productType} == 'Digital'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.digitalItems.fulfillmentLabel
                  - identifier: ca.test.mappings.pdp.soldAndShipped
                  - identifier: ca.test.mappings.pdp.returnPolicyButton
                notPresent:
                  - identifier: ca.test.mappings.pdp.storeSelector
                  - identifier: ca.test.mappings.pdp.deliveryEta
            - log:
                message: "Digital items fulfillment details present."
                color: GREEN_BOLD
          else:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.pdp.storeSelector
                    contains: ${storeName}
                  - identifier: ca.test.mappings.pdp.deliveryEta
                    contains: ${addressFirstLine}
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.returnPolicyButton
            - if:
                identifier:
                  text:
                    - identifier: ca.test.mappings.pdp.soldAndShipped
                      contains: Walmart
                then:
                  - storeIn:
                      key: offerType
                      value: 1P
                  - log:
                      message: Item is ${offerType}
                      color: GREEN_BOLD
                else:
                  - storeIn:
                      key: offerType
                      value: 3P
                  - log:
                      message: Item is ${offerType}
                      color: GREEN_BOLD
                  - getString:
                      identifier: ca.test.mappings.pdp.soldAndShipped
                      attribute: text
                      storeIn: sellerName
                  - log:
                      message: "Product seller name: ${sellerName}"
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.multiVariantProductCarousel
                then:
                  - log:
                      message: Product is multi Offer
                      color: GREEN_BOLD
                else:
                  - log: Product is not multi offer
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.productReturnMoreDetails
            - click:
                identifier: ca.test.mappings.pdp.productReturnMoreDetails
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 10000
                      present:
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.title
                catch:
                  flow:
                    - click:
                        identifier: ca.test.mappings.error.retryButton
            - sleep:
                duration: 10000
            - if:
                condition: ${offerType} == '1P'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.title
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnWithinText
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnTimeLine
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description.learnMoreAboutReturnsLink
                  - getString:
                      identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
                      attribute: text
                      storeIn: returnPolicy
                  - log:
                      message: ${returnPolicy}
                      color: GREEN_BOLD
                  - goBack: true
            - if:
                condition: ${offerType} == '3P'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.title
                       # - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnTimeLine
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.3pItemReturnPolicyLink #ca.test.mappings.pdp.returnPolicy.moreDetails.description.thirdPartyReturnPolicyLink
                  - getString:
                      identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
                      attribute: text
                      storeIn: returnPolicy
                  - log:
                      message: ${returnPolicy}
                      color: GREEN_BOLD
                  - goBack: true

  - name: ca.test.functions.PDPpage.validatingProductDetailsCard
    flow:
      - try:
          flow:
            - sleep:
                duration: 10000
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.productPage.productDetailsText
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.productPage.productDetailsText
                      position: center
                      scrollLimit: 4
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.productDescription
                  - identifier: ca.test.mappings.pdp.productDetailsHeader
                  - identifier: ca.test.mappings.pdp.moreDetails
          catch:
            flow:
              - if:
                  identifier:
                    notPresent:
                      - identifier: ca.test.mappings.pdp.moreDetails
                  then:
                    - scroll:
                        direction: down
                        untilIdentifier: ca.test.mappings.pdp.moreDetails
                        position: center
                        scrollLimit: 4
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.pdp.moreDetails             

  - name: ca.test.functions.PDPpage.addToCart
    flow:
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.global.addToCart
      - click:
          identifier: ca.test.mappings.global.addToCart
          wait: 1000
      - if:
          condition: ${quantity} > 1
          then:
            - loop:
                begin: 1
                end: ${quantity}
                mode: increment
                flow:
                  - verifyIdentifier:
                      timeout: 10000
                      notPresent:
                        - identifier: ca.test.mappings.pdp.addToCartButton.spinner
                  - click:
                      identifier: ca.test.mappings.home.carouselIncreaseQuantity

  - name: ca.test.functions.PDPpage.closePDPpage
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.global.closeIcon
      - click:
          identifier: ca.test.mappings.global.closeIcon

# Validating PDP page based on product category
  - name: ca.test.functions.pdp.productDetailsValidationIos
    platform: ios
    flow:
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          timeout: 10000 
          present:
            # - identifier: ca.test.mappings.pdp.shareButton - Locator issue 
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mapping.pdp.close 
      - if:
          condition: ${productType} == 'GM' || ${productType} == 'GO' || ${productType} == 'Charity' || ${productType} == 'Digital'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.brandLink
                then:
                  - scroll:
                      direction: up
                      untilIdentifier: ca.test.mappings.pdp.brandLink
                      scrollLimit: 1
            - verifyIdentifier:
                timeout: 5000 
                present:
                  - identifier: ca.test.mappings.pdp.brandLink   
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.soldAndShipped
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped        
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.storeSelector
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.storeSelector
          else:      
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.storeSelector
      - verifyIdentifier:
          timeout: 5000
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
            - identifier: ca.test.mappings.pdp.soldAndShipped
            - identifier: ca.test.mappings.pdp.addToCartPrice
      - if:
          identifier:
            label:
              - identifier: ca.test.mappings.pdp.soldAndShipped
                contains: Walmart
          then:
            - log: Item is 1p
          else:
            - log: Item is 3P
            - getString:
                identifier: ca.test.mappings.pdp.soldAndShipped
                attribute: label
                storeIn: sellerName        

# Validating PDP page based on product category
  - name: ca.test.functions.pdp.moreDetails.productDetailsValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: //XCUIElementTypeStaticText[@value="Product details"]
          then:
            - scroll:
                direction: down
                untilIdentifier: //XCUIElementTypeStaticText[@value="Product details"]
                timeout: 30000
      - verifyIdentifier:
          present:
            - identifier: //XCUIElementTypeStaticText[@value="Product details"]
            - identifier: WebViewDescriptionView.webView
            - identifier: More details
      - click:
          identifier: More details
      - verifyIdentifier:
          timeout : 5000
          present:
            - identifier: TitleView_productTitle
            - identifier: ProductDetailViewController.tableView
      - if:
          identifier:
            notPresent:
              - identifier: CollapsibleSectionView_productDescriptionTitle_Specifications
          then:
            - scroll:
                direction: down
                untilIdentifier: CollapsibleSectionView_productDescriptionTitle_Specifications
                timeout: 25000
      - verifyIdentifier:
          present:
            - identifier: CollapsibleSectionView_productDescriptionTitle_Specifications
      - if:
          condition: ${productType} == 'Digital'
          then:
            - verifyIdentifier:
                label:
                  - identifier: (//XCUIElementTypeStaticText[@label="Digital Download"]/following-sibling::XCUIElementTypeStaticText[@name="IDMLAttributeView_productAttributesValue"])[1]
                    contains: "Yes"
      - if:
          condition: ${productType} == 'Charity'
          then:
            - verifyIdentifier:
                present:
                  - identifier: //XCUIElementTypeStaticText[@label="Charity Item"]
                  - identifier: //XCUIElementTypeStaticText[@label="Digital Download"]
                label:
                  - identifier: (//XCUIElementTypeStaticText[@label="Digital Download"]/following-sibling::XCUIElementTypeStaticText[@name="IDMLAttributeView_productAttributesValue"])[1]
                    contains: "Yes"
                  - identifier: (//XCUIElementTypeStaticText[@label="Charity Item"]/following-sibling::XCUIElementTypeStaticText[@name="IDMLAttributeView_productAttributesValue"])[1]
                    contains: "Yes"

# Product more details page
  - name: ca.test.functions.pdp.MoreDetails
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 2
          mode: increment
          flow:
            - try:
                flow:
                  - if: 
                      identifier:
                        notPresent:
                          - identifier: ca.test.mapping.pdp.moredetails
                      then:
                        - scroll: 
                            direction: down
                            position: center
                            untilIdentifier: ca.test.mapping.pdp.moredetails
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mapping.pdp.moredetails    
                catch:
                  flow:
                    - click:
                        identifier: ca.test.mapping.pdp.close
                    - click:
                        identifier: ca.test.mappings.srpPage.productTileListView
            - click:
                identifier: ca.test.mapping.pdp.moredetails
            - break: true
                    

# PDP Product Type validation Charity Or Digital || from more details page to pdp
  - name: ca.test.functions.pdp.validatingProductTypeIos
    platform: ios
    flow:
      - if:
          condition: ${productType} == 'Charity' || ${productType} == 'Digital' ${productType} == 'GM'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.productionDesc.productType
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.productionDesc.productType
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.productionDesc.productType
                then:
                  - log: Product is a ${productType} item.
                  - goBack: true
                  - sleep:
                      duration: 5000
                  - click:
                      identifier: ca.test.mappings.cart.productQuantityStepper   
                  - click:
                      identifier: ca.test.mapping.pdp.close
                      wait: 5000
                else:
                  - log: Product is not a ${productType} item.
                  - failTest:
                     message: true 

# From more details page to PDP and add to cart - ios
  - name: ca.test.functions.pdp.pdpAddToCart
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.close
  
  # PDP Validation for Multivariant product
  - name: ca.test.functions.pdp.pdpValidaionMultivariant 
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            #- identifier: ca.test.mappings.pdp.shareButton
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mapping.pdp.close 
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.storeSelector
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.storeSelector 
                scrollLimit: 2

            - verifyIdentifier:
                present:
                   - identifier: ca.test.mappings.pdp.category
                  #  - identifier: ca.test.mappings.pdp.variant1
                  #  - identifier: ca.test.mappings.pdp.variant2 
                  # #  - identifier: ca.test.mappings.pdp.variant3
                   - identifier: ca.test.mappings.pdp.storeSelector
                   - identifier: ca.test.mappings.pdp.deliveryEta
                   - identifier: ca.test.mappings.pdp.soldAndShipped
                   - identifier: ca.test.mapping.pdp.addtocart
                   - identifier: ca.test.mappings.pdp.addToCartPrice
      
 # From more details page to PDP and add to cart - ios
  - name: ca.test.functions.pdp.pdpAddToCart  
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.close

 # From PDP to preorder - ios    

  - name: ca.test.functions.pdp.pdppreorder 
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.preorder 
      - click:
          identifier: ca.test.mapping.pdp.preorder 
      - click:
          identifier: ca.test.mapping.pdp.close
      - sleep:
          duration: 10000

  # PDP Validation
  - name: ca.test.functions.pdp.pdpValidaion
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.shareButton
            - identifier: ca.test.mapping.pdp.itemname
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mapping.pdp.close
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.soldAndShipped
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped

            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.storeSelector
                  # - identifier: ca.test.mappings.pdp.deliveryEta
                  - identifier: ca.test.mappings.pdp.soldAndShipped
                  - identifier: ca.test.mapping.pdp.addtocart
                  - identifier: ca.test.mappings.pdp.addToCartPrice

  # Add to cart from PDP
  - name: ca.test.functions.pdp.addToCart
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.addtocart
      - sleep:
          duration: 6000

  - name: ca.test.functions.PDPpage.validatingFulfillmentDetails
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.soldAndShipped
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.storeSelector
              contains: ${storeName}
      - log:
          message: Store Name validation is Successful - ${storeName}
          color: RED_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.deliveryShipping
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.deliveryShipping
              contains: ${addressFirstLine}
      - log:
          message: Address validation is Successful - ${addressFirstLine}
          color: RED_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.soldBySeller
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.soldBySeller
              contains: ${soldby}
      - log:
          message: Seller validation is Successful - ${soldby}
          color: RED_BOLD    
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.returnFulfillment
          then:
            - getString:
                identifier: ca.test.mappings.pdp.returnFulfillment
                attribute: label
                storeIn: returnPolicy
            - log:
                message: Return Policy - $returnPolicy
                color: RED_BOLD

  - name: ca.test.functions.PDPpage.closePDPpage
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 5000
          present:
            - identifier: ca.test.mapping.pdp.close
      - click:
          identifier: ca.test.mapping.pdp.close   

  - name: ca.test.functions.PDPpage.validatingProductHeaderTileGrocery
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.shareItemLink
            - identifier: ca.test.mappings.pdp.productUnitPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mappings.pdp.carouselButtons
            - identifier: ca.test.mappings.pdp.itemEntryImage
            - identifier: ca.test.mappings.pdp.itemRating
  
  - name: ca.test.functions.PDPpage.validatingFulfillmentDetailsGrocery
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.pdp.soldAndShipped
          position: center
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.pdp.storeSelector
              contains: ${storeName}
            - identifier: ca.test.mappings.cart.scheduledDelivery.deliveryAddress
              contains: ${addressFirstLine}
      - if:
          condition: multiOffer == ${productType}
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.secondaryBuyBoxContainer
                then:
                  - log:
                      message: Product is multi Offer
                      color: GREEN_BOLD
                else:
                  - log: Product is not multi offer

  - name: ca.test.functions.pdppage.selectingMultiVariant
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.multiVariant
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.multiVariant
                position: center
      - loop:
          begin: 1
          end: 5
          mode: increment
          storeIndex: i
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.multiVariantContainer
                then:
                  - click:
                      identifier: ca.test.mappings.pdp.multiVariantContainer
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.pdp.multiVariantProductOOS
                      then:
                        - break: true
                        - log:
                            message: Selected $i Variant
                            color: GREEN_BOLD
                        - break: true
                else:
                  - log: Product is not multiVariant
                  - break: true

  # More Details page to PDP page and add to cart.
  - name: ca.test.functions.pdp.addToCartFromPdpOrFromMoreDetailsPage
    platform: android
    flow:
      - if:
          identifier:
            present:
            - identifier: ca.test.mappings.pdp.sheetToolBar
          then:
            - goBack: true
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.pdp.addToCart
      - click:
          identifier: ca.test.mappings.pdp.addToCart
      - click:
          identifier: ca.test.mappings.global.closeIcon

  # Add to cart from PDP
  - name: ca.test.functions.pdp.addedItemIncrement
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.itemIncrement
      - click:
          identifier: ca.test.mappings.pdp.itemIncrement
      - sleep:
          duration: 6000

  - name: ca.test.functions.srp.increaseQty 
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.itemIncrement
      - click:
          identifier: ca.test.mappings.srp.itemIncrement
      - sleep:
          duration: 6000        

# # Validating PDP page based on product category
#   - name: ca.test.functions.pdp.productDetailsValidationIosPreorder
#     platform: ios
#     flow:
#       - sleep:
#           duration: 20000
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.pdp.shareButton
#             - identifier: ca.test.mappings.pdp.itemName
#             - identifier: ca.test.mappings.pdp.itemPrice
#             - identifier: ca.test.mappings.pdp.zoomButton
#             - identifier: ca.test.mapping.pdp.close      
#       - if:
#           condition: ${productType} == 'Preorder'
#           then:
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.test.mappings.pdp.brandLink              
#       - if:
#           identifier:
#             notPresent:
#               - identifier: ca.test.mappings.pdp.soldAndShipped
#           then:
#             - scroll:
#                 direction: down
#                 position: center
#                 untilIdentifier: ca.test.mappings.pdp.soldAndShipped
#       - verifyIdentifier:
#           timeout: 60000
#           present:
#             - identifier: ca.test.mappings.pdp.storeSelector
#             - identifier: ca.test.mappings.pdp.deliveryEta
#             - identifier: ca.test.mappings.pdp.soldAndShipped
#             - identifier: ca.test.mapping.pdp.preorder 
#             - identifier: ca.test.mappings.pdp.addToCartPrice
#       - if:
#           identifier:
#             label:
#               - identifier: ca.test.mappings.pdp.soldAndShipped
#                 contains: Walmart
#           then:
#             - log: Item is 1p
#           else:
#             - log: Item is 3P
#             - getString:
#                 identifier: ca.test.mappings.pdp.soldAndShipped
#                 attribute: label
#                 storeIn: sellerName
#       - sleep:
#           duration: 5000             

  # Opening PDP page of product
  - name: ca.test.functions.pdp.srpToPdpios
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.productName #ca.test.mapping.srp.productTile
      - click:
          identifier: ca.test.mappings.srp.productName #ca.test.mapping.srp.productTile
      - sleep:
          duration: 15000

  - name: ca.test.functions.PDPpage.validatingFulfillmentDetailswfs
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.soldAndShipped
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.soldAndShipped
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.storeSelector
              contains: ${storeName}
      - log:
          message: Store Name validation is Successful - ${storeName}
          color: RED_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.deliveryShipping
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.deliveryShipping
              contains: ${addressFirstLine}
      - log:
          message: Address validation is Successful - ${addressFirstLine}
          color: RED_BOLD 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.fulfilled
      - getString: 
          identifier: ca.test.mappings.pdp.fulfilled
          attribute: label
          storeIn: fulfilledby         
      - log:
          message: Seller validation is Successful - ${fulfilledby}
          color: RED_BOLD     
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.returnFulfillment
          then:
            - getString:
                identifier: ca.test.mappings.pdp.returnFulfillment
                attribute: label
                storeIn: returnPolicy
            - log:
                message: Return Policy - $returnPolicy
                color: RED_BOLD

  - name: ca.test.functions.pdp.extractingFulfilledByDetails
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.sellerAndShippingInfo
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.sellerAndShippingInfo
                position: center
                scrollLimit: 2
      - getString:
          identifier: ca.test.mappings.pdp.sellerAndShippingInfo
          attribute: text
          storeIn: sellerInfo
      - log:
          message: ${sellerInfo}
          color: GREEN_BOLD
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.fulfilledBy
          then:
            - getString:
                identifier: ca.test.mappings.pdp.fulfilledBy
                attribute: text
                storeIn: fulfillmentInfo
      - log:
          message: ${fulfillmentInfo}
          color: GREEN_BOLD
          
  - name: ca.test.functions.pdp.guestUserProductAddToFavourites
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mapping.pdp.itemname
      - click:
          identifier: ca.test.mappings.srpPage.addProductToFavourites
      - verifyIdentifier:
          timeout: 20000
          notPresent:
            - identifier: ca.test.mappings.srpPage.addProductToFavourites

  - name: ca.test.functions.pdp.addToFavourites
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.productName
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.favourite.removeFromFav
          then:
            - click:
                identifier: ca.test.mappings.favourite.removeFromFav
      - click:
          identifier: ca.test.mappings.pdpPage.addProductToFavourites

# validate the address in PDP
  - name: ca.test.functions.pdp.addressValidationIos
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.shippingAddress
          then:
            - sleep:
                duration: 1000
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.deliveryFromStore.address
          else:
            - sleep:
                duration: 1000
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.shippingAddress
                scrollLimit: 1
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.deliveryFromStore.address

  # Validating Product header in PDP
  - name: ca.test.functions.pdp.productHeaderContainer
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.itemName
          then:
            - sleep: 
                duration: 1000
      - verifyIdentifier:
          present:
            # - identifier: ca.test.mappings.pdp.brandLink
            # - identifier: ca.test.mappings.pdp.shareButton
            - identifier: ca.test.mapping.pdp.close
            - identifier: ca.test.mappings.pdp.itemName
            - identifier: ca.test.mappings.pdp.itemPrice
            - identifier: ca.test.mappings.pdp.zoomButton
            - identifier: ca.test.mappings.pdp.carouselButtons
            - identifier: ca.test.mappings.pdp.heartIcon

 # Validating product fulfillment details in PDP $ multi offer validation
  - name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandise
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.returnPolicyButton
          then:
            - sleep:
                duration: 2000
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.returnPolicyButton
                scrollLimit: 3
          else:
            - break: true
      - if:
          condition: ${productType} == 'Digital' || ${productType} == 'Charity'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.digitalItems.fulfillmentLabel
                notPresent:
                  - identifier: ca.test.mappings.pdp.fullfillment.storeDetails
                  - identifier: ca.test.mappings.cart.shipping.address
                  - identifier: ca.test.mappings.pdp.fulfillmentDetails.deliveryFromStore
            - log:
                message: "Digital items fulfillment label present."
                color: GREEN_BOLD
          else:
            - if:
                identifier:
                  label:
                    - identifier: ca.test.mappings.pdp.fullfillment.storeDetails
                      contains: not available
                then:
                  - failTest:
                      message: Pickup EED not present.
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.pdp.fullfillment.storeDetails
                    contains: ${storeName}   
                  - identifier: ca.test.mappings.cart.shipping.address
                    contains: ${addressFirstLine}
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.fulfillmentDetails.deliveryFromStore
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: ca.test.mappings.pdp.fulfillmentDetails.deliveryFromStore
                          contains: ${deliveryFromStore}
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.returnPolicyButton
      - if:
          identifier:
            label:
              - identifier: ca.test.mappings.pdp.soldAndShipped
                contains: Walmart
          then:
            - log: 
                message: Item is 1p
                color: GREEN_BOLD
          else:
            - log: 
                message: Item is 3P
                color: GREEN_BOLD
            - getString:
                identifier: ca.test.mappings.pdp.soldAndShipped
                attribute: value
                storeIn: sellerName
            - log: 
                message: "Product seller name: ${sellerName}"
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.secondaryBuyBoxContainer
          then:
            - log:
                message: Product is multi Offer
                color: GREEN_BOLD
          else:
            - log: Product is not multi offer
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails
          then:
            - click:
                identifier: ca.test.mappings.pdp.returnPolicy.moreDetails
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.returnPolicy.moreDetails
            - click:
                identifier: ca.test.mappings.pdp.returnPolicy.moreDetails
                wait: 2000
      - executeFunction:
          name: ca.test.functions.utils.tryAgainWhenThereIsErrorIos     
      - log: ${productType}
      - if:
          condition: ${productType} != 'Digital'
          then:
            - if:
                condition: ${productType} != '3P'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnWithinText
                        - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnTimeLine
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.title
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
      - getString:
          identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
          attribute: label
          storeIn: returnPolicy
      - log:
          message: ${returnPolicy}
          color: GREEN_BOLD
      - goBack: true
          
# validate the label in PDP page
  - name: ca.test.functions.pdp.labelValidation
    platform: ios
    flow:
        - if:
            identifier:
              present:
                - identifier: ca.test.mappings.pdp.label_1
            then:
              - sleep:
                 duration: 3000
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.pdp.label_1
                    - identifier: ca.test.mappings.pdp.label

  - name: ca.test.functions.pdp.SellerInfoValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.seller
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.seller
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.seller
      - if:
          # condition: ${seller_name} == "Walmart"
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.seller
          then:
            - verifyIdentifier:
               present:
                 - identifier: ca.test.mappings.pdp.returndays


# validate the seller name and return info in PDP page
  - name:  ca.test.functions.pdp.SellerReturnValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.seller
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.seller
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.seller
            - identifier: ca.test.mappings.pdp.returndays

# validate the weight info in PDP page
  - name:  ca.test.functions.pdp.weightValidation
    platform: ios
    flow:
        - if:
            identifier: 
                present:
                  - identifier: ca.test.mappings.pdp.finalCost
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.pdp.finalCost
        - scroll:
            direction: down
            untilIdentifier: ca.test.mappings.pdp.moreDetails
        - click:
            identifier: ca.test.mappings.pdp.moreDetails
        # - if:
        #     identifier:
        #       notPresent:
        #         - identifier: ca.test.mappings.pdp.moreDetails
        #     then:
        #       - scroll:
        #           direction: down
        #           untilIdentifier: ca.test.mappings.pdp.moreDetails
        #       - verifyIdentifier:
        #           present:
        #             - identifier: ca.test.mappings.pdp.moreDetails
        #       - click:
        #           identifier: ca.test.mappings.pdp.moreDetails
        #       - sleep:
        #           duration: 1000
        - if:
            identifier:
              notPresent:
                - identifier: ca.test.mappings.pdp.weightWord
            then:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.pdp.Ingredients
              - verifyIdentifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.weightWord

  - name: ca.test.functions.pdp.itemWeightValidation
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.finalCostByWeight

  - name: ca.test.functions.pdp.shippingandEDD1
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.delivery_eta
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.returnFulfillment
                position: center
            - getString: 
                identifier: ca.test.mappings.pdp.delivery_eta
                attribute: label
                storeIn: deliveryDetails
      - log:
          message: ${deliveryDetails}
          color: RED_BOLD

  - name: ca.test.functions.PDPpage.validatingSoldBySwfs
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.sold
      - getString: 
          identifier: ca.test.mappings.pdp.sold
          attribute: label
          storeIn: soldBy     
      - log:
          message: Seller validation is Successful - ${soldBy}
          color: RED_BOLD     

  # - name: ca.test.functions.PDPpage.validatingShippedBySwfs
  #   platform: ios
  #   flow:
  #     - verifyIdentifier:
  #         present:
  #           - identifier: ca.test.mappings.pdp.sold
  #     - getString: 
  #         identifier: ca.test.mappings.pdp.sold
  #         attribute: label
  #         storeIn: shippedBy     
  #     - log:
  #         message: Seller validation is Successful - ${shippedBy}
  #         color: RED_BOLD              

#validate Min qty in PDP page
  - name: ca.test.functions.pdp.minPDPValidation
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.addtocart
      - sleep:
          duration: 1000
      - if:
            identifier:
              notPresent:
                - identifier: ca.test.mappings.pdp.minQtyBtn
            then:
              # - scroll:
              #     direction: down
              #     untilIdentifier: ca.test.mappings.pdp.minQtyBtn
              - sleep:
                  duration: 1000
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.pdp.minQtyBtn

#validate Max qty in PDP page
  - name: ca.test.functions.pdp.maxPDPValidation
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.addtocart
      - click:
          identifier: ca.test.mapping.pdp.addtocart
      - executeFunction:
          name: ca.test.functions.pdp.incQtyUntilMaxAppear
      # - sleep:
      #     duration: 1000
      # - verifyIdentifier:
      #     present:
      #       - identifier: ca.test.mappings.pdp.maxQtyBtn

# increase product qty until max appear
  - name: ca.test.functions.pdp.incQtyUntilMaxAppear
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 10
          mode: increment
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.maxQtyBtn
                then:
                  - click:
                      identifier: ca.test.mappings.cart.productIncrement
                    
# change shipping address from PDP
  - name: ca.test.functions.pdp.addressChangePDP
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.shippingAddress
          then:
            - sleep:
                duration: 1000
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.deliveryFromStore.address
            - click:
                identifier: ca.test.mappings.cart.deliveryFromStore.address
            - click:
                identifier: ca.test.mappings.cart.deliveryFromStore.address
            - click:
                identifier: ca.test.mappings.pdp.firstAddress
            - click:
                identifier: ca.data.mappings.cart.selectAddress.continue
              
# validate the multiple seller
  - name: ca.test.functions.pdp.validateMultipleSeller
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreSellersOption
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreSellersOption
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.compareAllSellers
            - click:
                identifier: ca.test.mappings.pdp.compareAllSellers
            - sleep:
                duration: 500
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.moreSellerHeading
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.back
                then:
                  - click:
                      identifier: ca.test.mappings.pdp.back
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreSellersOption
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.compareAllSellers
            - click:
                identifier: ca.test.mappings.pdp.compareAllSellers
            - sleep:
                duration: 500
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.moreSellerHeading
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.back
                then:
                  - click:
                      identifier: ca.test.mappings.pdp.back
                else:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.global.closeIcon
                  - click:
                      identifier: ca.test.mappings.global.closeIcon

  - name: ca.test.function.pdp.extractingFulfillmentDate
    platform: android
    flow:
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.deliveryEta #ca.test.mappings.pdp.storeSelector
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.deliveryEta #ca.test.mappings.pdp.storeSelector
                      # position: center
                      scrollLimit: 4
                # else:
                #   - scroll:
                #       direction: down
          catch:
            flow:
              - scroll:
                  direction: up
                  untilIdentifier: ca.test.mappings.pdp.deliveryEta #ca.test.mappings.pdp.storeSelector
                  # position: center
                  scrollLimit: 4
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
            - identifier: ca.test.mappings.pdp.deliveryEta
      - log:
          message: Extracting delivery ETA for product ${productName}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.deliveryEta
          attribute: text
          storeIn: productDeliveryETA
      - executeNode:
          file: ca/test/helpers/extractingFulfillmentDatePDP.js
          args:
            - value: Shipping
            - value: ${productDeliveryETA}
          getResponse:
            storeIn: shipping
      - log: 
          message: ${shipping}
          color: GREEN_BOLD
      - log:
          message: Extracting pickup ETA for product ${productName}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.storeSelector
          attribute: text
          storeIn: productPickupETA
      - executeNode:
          file: ca/test/helpers/extractingFulfillmentDatePDP.js
          args:
            - value: Pickup
            - value: ${productPickupETA}
          getResponse:
            storeIn: pickup
      - log: 
          message: ${pickup}
          color: GREEN_BOLD

  - name: ca.test.function.pdp.extractingFulfillmentDateIos
    platform: ios
    flow:
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.deliveryEta
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.deliveryEta
                      position: center
          catch:
            flow:
              - scroll:
                  direction: up
                  untilIdentifier: ca.test.mappings.pdp.deliveryEta
                  position: center
      - sleep:
          duration: 1000
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.storeSelector
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.storeSelector
                      position: center
          catch:
            flow:
              - scroll:
                  direction: up
                  untilIdentifier: ca.test.mappings.pdp.storeSelector
                  position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
            - identifier: ca.test.mappings.pdp.deliveryEta
      - log:
          message: Extracting delivery ETA for product ${productName}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.deliveryEta
          attribute: label
          storeIn: productDeliveryETA
      - executeNode:
          file: ca/test/helpers/extractingFulfillmentDatePDP.js
          args:
            - value: Shipping
            - value: ${productDeliveryETA}
          getResponse:
            storeIn: shipping
      - log: 
          message: ${shipping}
          color: GREEN_BOLD
      - log:
          message: Extracting pickup ETA for product ${productName}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.storeSelector
          attribute: label
          storeIn: productPickupETA
      - executeNode:
          file: ca/test/helpers/extractingFulfillmentDatePDP.js
          args:
            - value: Pickup
            - value: ${productPickupETA}
          getResponse:
            storeIn: pickup
      - log: 
          message: ${pickup}
          color: GREEN_BOLD        
      
  - name: ca.test.functions.pdp.extractingsellerInfo
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.sold
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.sold
                position: center
      - getString:
          identifier: ca.test.mappings.pdp.sold
          storeIn: sellerInfo
          attribute: label
      
  - name: ca.test.functions.cart.assertingFulfillmentForWFSItem
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfilled
      - getString:
          identifier: ca.test.mappings.cart.fulfilled
          storeIn: fulfilledBy
          attribute: label

  - name: ca.test.functions.pdp.changeAddressButton
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
      - sleep:
          duration: 10000
      - click:
          identifier: ca.test.mappings.cart.delivery.cardTitleShipping
          coordinates: 50%, 95% #228, 932
  
  - name: ca.test.functions.pdp.changeStoreButton
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
      - click:
          identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
          coordinates: 75%,50%
  
  - name: ca.test.functions.pdp.changeStore.selectStore
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.global.sheetTitle
            - identifier: ca.test.mappings.global.locationSearchTextBox
            - identifier: ca.test.mappings.selectStore.useLocationLink
      - log:
          message: Store selection page opened.
          color: GREEN_BOLD
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.walmart.ecommerceapp.qa:id/parentPanel
                then:
                  - click:
                      identifier: ca.test.mappings.acceptAlertBox
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true
# untilIdentifier: ca.test.mappings.pdp.seller
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.test.mappings.pdp.seller
#                   - identifier: ca.test.mappings.pdp.shippingAddress
# Product more details page
  - name: ca.test.functions.pdp.MoreDetailsIos.AgeRestricted 
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.recommendedAgeHeading
              contains: Recommended Age
      - log:
          message: Age recomendation is displayed
          color: RED_BOLD

# Product Ingredient
  - name: ca.test.functions.pdp.MoreDetailsIos.Ingredient
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: //XCUIElementTypeStaticText[@name="Ingredients"]
              contains: Ingredients
      - log:
          message: Product Ingredients are Displayed
          color: RED_BOLD

# validate the Shipping and EDD Validation
  - name: ca.test.functions.pdp.ShippingEDDValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.shippingAddress
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.shippingAddress
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.shippingAddress
  
  - name: ca.test.functions.pdp.productHeaderTileValidation
    platform: android
    flow:
      - storeIn:
          key: headerContains
          value: "0"
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.itemname
            - identifier: ca.test.mapping.pdp.close
            - identifier: ca.test.mappings.pdp.shareItemLink
            - identifier: ca.test.mappings.pdp.productPrice
            - identifier: ca.test.mappings.pdp.productFavouriteButton
            - identifier: ca.test.mappings.pdp.productZoomButton
            - identifier: ca.test.mappings.pdp.itemEntryImage
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.productRating
              - identifier: ca.test.mappings.pdp.productStar
              - identifier: ca.test.mappings.pdp.productReviewCount
          then:
            - log:
                message: "Product have rating."
                color: GREEN_BOLD
          else:
            - log:
                message: "Product have no rating."
                color: GREEN_BOLD
      - if:
          condition: ${headerContains} == 'perUnitPrice'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.productUnitPrice
                  - identifier: ca.test.mappings.pdp.brandLink
      - if:
          condition: ${headerContains} == 'variableWeight'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.productUnitPrice
                  - identifier: ca.test.mappings.pdp.variableWeight
      - if:
          condition: ${headerContains} == 'ageRestriction'
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.ageRestrictionBadge
      - scroll:
          direction: left
          withinIdentifier: ca.test.mappings.pdp.productImageCarousel
          scrollLimit: 2

  - name: ca.test.functions.pdp.P1SellerDetailsValidation
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.productFulfillmentDetails
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.productFulfillmentDetails
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.sellerAndShippingInfo
            - identifier: ca.test.mappings.pdp.productReturnDetail
            - identifier: ca.test.mappings.pdp.productReturnMoreDetails
      - click:
          identifier: ca.test.mappings.pdp.productReturnMoreDetails
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.pdpProduct.returnsMoreDetailsPage
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.pdp.productReturnPolicy
              contains: ${sellerName}
      - getString:
          identifier: ca.test.mappings.pdp.productReturnPolicy
          attribute: text
          storeIn: returnPolicy
      - log:
          message: ${returnPolicy}
          color: GREEN_BOLD
      
  - name: ca.test.functions.pdp.P3SellerDetailsValidation
    platform: android
    flow:
      # - if:
      #     identifier:
      #       present:
      #         - identifier: ca.test.mappings.pdp.productFulfillmentDetails
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: ca.test.mappings.pdp.productFulfillmentDetails
      #           position: center
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.pdp.productFulfillmentDetails
          position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.sellerAndShippingInfo
            - identifier: ca.test.mappings.pdp.productReturnDetail
            - identifier: ca.test.mappings.pdp.productReturnMoreDetails
      - click:
          identifier: ca.test.mappings.pdp.productReturnMoreDetails
      - verifyIdentifier:
          timeout: 20000
          text:
            - identifier: ca.test.mappings.pdpProduct.returnsMoreDetailsPage
              contains: ${sellerName}
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.pdp.productReturnPolicy
              contains: "Third Party Sellers"
      - getString:
          identifier: ca.test.mappings.pdp.productReturnPolicy
          attribute: text
          storeIn: returnPolicy
      - log:
          message: ${returnPolicy}
          color: GREEN_BOLD
# Product more details page
  - name: ca.test.functions.pdp.CompareSellers
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreselleroption
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreselleroption
      - click:
          identifier: ca.test.mappings.pdp.comparesellersButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.multipleSelleer.optionFour
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.multipleSelleer.optionFour

            - verifyIdentifier:
                present:
                   - identifier: ca.test.mappings.multipleSeller.type0
                   - identifier: ca.test.mappings.multipleSeller.type1
                   - identifier: ca.test.mappings.multipleSeller.type2
                   - identifier: ca.test.mappings.multipleSeller.type3
                   - identifier: ca.test.mappings.multipleSeller.type4
      - log:
          message: Multiple offers are displayed
          color: RED_BOLD            

  # Add to cart from offers
  - name: ca.test.functions.pdp.Selectoffer.addtoCart
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.increment1
      - click:
          identifier: ca.test.mappings.pdp.increment1
      - click:
          identifier: ca.test.mappings.global.closeIcon
      - sleep:
          duration: 6000

  - name: ca.test.functions.pdp.Returnpolicy
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.returndays
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.returndays
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.returndays
      - log:
          message: Product is having return policy
          color: RED_BOLD

  - name: ca.test.functions.pdp.moreDetails.pageValidation
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: //android.widget.TextView[@text='Product details'] #ca.walmart.ecommerceapp.qa:id/product_description_title
            - identifier: ca.test.mappings.pdp.moreDetails.productDescription
            - identifier: ca.walmart.ecommerceapp.qa:id/product_description_disclaimer
            - identifier: ca.walmart.ecommerceapp.qa:id/product_description_disclaimer_button
            - identifier: ca.walmart.ecommerceapp.qa:id/short_description
      - click:
          identifier: ca.walmart.ecommerceapp.qa:id/product_description_disclaimer_button
      - verifyIdentifier:
          present:
            - identifier: ca.walmart.ecommerceapp.qa:id/product_legal_disclaimer_title
            - identifier: ca.walmart.ecommerceapp.qa:id/product_legal_disclaimer_description
      - getString:
          identifier: ca.walmart.ecommerceapp.qa:id/product_legal_disclaimer_description
          attribute: text
          storeIn: legalDisclaimer
      - log:
          message: ${legalDisclaimer}
          color: GREEN_BOLD
      - goBack: true
      - getString:
          identifier: ca.walmart.ecommerceapp.qa:id/short_description
          attribute: text
          storeIn: shortDiscription
      - log:
          message: ${shortDiscription}
          color: GREEN_BOLD
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreDetails.specifications
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreDetails.specifications
                position: center
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.pdp.moreDetails.specifications  
      - if:
          condition: ${productType} == 'Grocery'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.moreDetails.ingredients
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.moreDetails.ingredients
                      position: center
            - verifyIdentifier:
                present: 
                  - identifier: ca.test.mappings.pdp.moreDetails.ingredientsContainer
            - getString:
                identifier: ca.test.mappings.pdp.moreDetails.ingredientText
                attribute: text
                storeIn: ingredients
            - log:
                message: ${ingredients}
                color: GREEN_BOLD
  
  - name: ca.test.functions.PDPpage.ValidatingQtyAddToCart
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.pdp.itemEntryImage
      - if:
          condition: ${Quantity} == 'MinQty'
          then:
            - log:
                message: Validating Minimum Quantity is displalyed in item quantity count box.
                color: GREEN_BOLD
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.global.addToCartText
                    contains: "Min"
            - log:
                message: Minimum quantity is showing in PDP for ${productName}
                color: GREEN_BOLD
      - if:
          condition: ${Quantity} == 'MaxQty'
          then:
            - log:
                message: Validating Maximum Quantity is displalyed in item quantity count box.
                color: GREEN_BOLD
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.global.addToCartText
                    contains: "Max"
            - log:
                message: Maximum quantity is showing in PDP for ${productName}
                color: GREEN_BOLD              
      
  - name: ca.test.functions.pdp.validatingMultiVariantProduct
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
          then:
            - log: 
                message: "Scrolling to carousel view."
                color: GREEN_BOLD
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
      - log: 
          message: "Checking for number of carousel."
          color: GREEN_BOLD
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.carouselContainer
          then:
            - numberOfChildElements:
                identifier: ca.test.mappings.pdp.carouselContainer
                filterBy: ca.test.mappings.pdp.carousel
                storeIn: variantCount
            - log: 
                message: "Number of carousel found: ${variantCount}"
                color: GREEN_BOLD
            - arithmetic:
                expression: ${variantCount} + 1
                storeIn: variantCounter
            - loop:
                begin: 1
                end: ${variantCounter}
                mode: increment
                storeIndex: i
                flow:
                  - log:
                      message: "Validating ${i} carousel"
                      color: GREEN_BOLD
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.pdp.multiVariantCarousel
                  - getString:
                      identifier: ca.test.mappings.pdp.carouselName
                      attribute: text
                      storeIn: carouselName
                  - log: 
                      message: "${i} Carousel title: ${carouselName}"
                      color: GREEN_BOLD
            - log: 
                message: Multivariant product validation Sucessful
                color: GREEN_BOLD
          else:
            - log: No multi variant carousel present

  - name: ca.test.functions.pdp.validatingAgeRestrictedProduct
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.pdp.itemEntryImage
            - identifier: ca.test.mappings.pdp.ageRestrictionBadge
      - getString:
          identifier: ca.test.mappings.pdp.ageRestrictionBadge
          attribute: text
          storeIn: ageRestrictionItem
      - log: 
          message: Age restricted item badge ${ageRestrictionItem}
          color: GREEN_BOLD
  
  - name: ca.test.functions.pdp.moreSellerOptions.validatingSellerInfo
    platform: android
    flow:
      - sleep:
          duration: 10000
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.pdp.moreSellerPage.title
      - numberOfChildElements:
          identifier: ca.test.mappings.pdp.moreSellerPage.sellerContainer
          storeIn: numberOfSeller
          filterBy: ca.test.mappings.pdp.moreSellerPage.sellerDetailsBox
      - log:
          message: "Number of seller: ${numberOfSeller}"
          color: GREEN_BOLD
      - arithmetic:
          expression: ${numberOfSeller} + 1
          storeIn: sellerCount
      - loop:
          begin: 1
          end: ${sellerCount}
          mode: increment
          storeIndex: i
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
                then:
                  - log: 
                      message: "Scrolling to next seller."
                      color: GREEN_BOLD
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
                      position: center
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerTile
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerPrice
                  - identifier: ca.test.mappings.pdp.moreSeller.oneTimePurchaseText
                  - identifier: ca.test.mappings.pdp.moreSeller.shippingCharges
                  - identifier: ca.test.mappings.pdp.moreSeller.shippingEDD
                  - identifier: ca.test.mappings.pdp.moreSeller.filledBy
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerReturnPolicy
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerReturnPolicyButton
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
            - getString:
                identifier: ca.test.mappings.pdp.moreSeller.filledBy
                attribute: text
                storeIn: filledBy
            - getString:
                identifier: ca.test.mappings.pdp.moreSeller.shippingEDD
                attribute: text
                storeIn: shippingEDD
            - getString:
                identifier: ca.test.mappings.pdp.moreSeller.shippingCharges
                attribute: text
                storeIn: shippingCharges
            - log: 
                message: "Seller ${i}: ${filledBy}"
                color: GREEN_BOLD
            - log:
                message: "Shipping EDD for ${i} seller: ${shippingEDD}"
                color: GREEN_BOLD
            - log:
                message: "Shipping charges for ${i} seller: ${shippingCharges}"
                color: GREEN_BOLD

  - name: ca.test.functions.pdp.navigateToMoreSeller
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreSellerOptionsButton
          then:
            - log:
                message: Scrolling to more seller options button
                color: GREEN_BOLD
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreSellerOptionsButton
                timeout: 3000
                # position: center
      - log:
          message: Clicking on more seller options button.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.pdp.moreSellerOptionsButton
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.pdp.moreSellerOptionsButton

  - name: ca.test.functions.pdp.moreSellerOptions.addToCartSpecificSeller
    platform: android
    flow:
      - log:
          message: Adding product ${sellerName}
          color: GREEN_BOLD
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
                position: center
      - click:
          identifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
      - log:
          message: Product added to cart
          color: GREEN_BOLD


  - name: ca.test.functions.pdp.navigateToMoreSeller
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.moreSellerOptionsButton
                then:
                  - log:
                      message: Scrolling to more seller options button
                      color: GREEN_BOLD
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.moreSellerOptionsButton
                      position: center
                  - sleep:
                      duration: 2000
          catch:
              flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.pdp.moreSellerOptionsButton
                      then:
                        - scroll:
                            direction: up
                            untilIdentifier: ca.test.mappings.pdp.moreSellerOptionsButton
                            scrollLimit: 1
                        - sleep:
                            duration: 2000
      - log:
          message: Clicking on more seller options button.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.pdp.moreSellerOptionsButton
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.pdp.moreSellerOptionsButton     


  - name: ca.test.functions.pdp.moreSellerOptions.validatingSellerInfo
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.pdp.moreSellerPage.title
      - numberOfChildElements:
          identifier: ca.test.mappings.pdp.moreSellerPage.sellerContainer
          storeIn: numberOfSeller
          filterBy: ca.test.mappings.pdp.moreSellerPage.sellerDetailsBox
      - log:
          message: "Number of seller: ${numberOfSeller}"
          color: GREEN_BOLD
      - arithmetic:
          expression: ${numberOfSeller} + 1
          storeIn: sellerCount
      - loop:
          begin: 1
          end: ${sellerCount}
          mode: increment
          storeIndex: x
          flow:
            - arithmetic:
                expression: ${x}
                storeIn: i
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
                then:
                  - log:
                      message: "Scrolling to next seller."
                      color: GREEN_BOLD
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
                      position: center
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerTile
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerPrice
                 # - identifier: ca.test.mappings.pdp.moreSeller.oneTimePurchaseText
                 # - identifier: ca.test.mappings.pdp.moreSeller.shippingCharges
                  - identifier: ca.test.mappings.pdp.moreSeller.shippingEDD
                  - identifier: ca.test.mappings.pdp.moreSeller.filledBy
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerReturnPolicy
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerReturnPolicyButton
                  - identifier: ca.test.mappings.pdp.moreSeller.sellerAddToCart
            - getString:
                identifier: ca.test.mappings.pdp.moreSeller.filledBy
                attribute: value
                storeIn: filledBy
            - getString:
                identifier: ca.test.mappings.pdp.moreSeller.shippingEDD
                attribute: label
                storeIn: shippingEDD
            # - getString:
            #     identifier: ca.test.mappings.pdp.moreSeller.shippingCharges
            #     attribute: label
            #     storeIn: shippingCharges
            - log:
                message: "Seller ${i}: ${filledBy}"
                color: GREEN_BOLD
            - log:
                message: "Shipping EDD for ${i} seller: ${shippingEDD}"
                color: GREEN_BOLD
            # - log:
            #     message: "Shipping charges for ${i} seller: ${shippingCharges}"
            #     color: GREEN_BOLD

  - name: ca.test.functions.pdp.moreSellerOptions.addToCartSpecificSeller
    platform: ios
    flow:
      - log:
          message: Adding product
          color: GREEN_BOLD
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
                position: center
      - click:
          identifier: ca.test.mappings.pdp.moreSellerOptions.addToCart
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.moreSellerOptions.validateAddedToCart
      - log:
          message: Product added to cart
          color: GREEN_BOLD

  - name: ca.test.functions.productDetailsPage.saleFinancing
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          text:
            - identifier: ca.test.mapping.pdp.itemname
              contains: ${productName}
      - log:
          message: ${productName} pdp is opened.
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.addToCartPrice
          attribute: text
          storeIn: productPrice
      - executeNode:
          file: ca/test/helpers/global/removeDollarFromPrice.js
          args:
            - value: ${productPrice}
          getResponse:
            storeIn: sanitizePrice
      - log: ${sanitizePrice}
      - if:
          condition: ${sanitizePrice} < 50
          then:
            - verifyIdentifier:
                notPresent:
                  - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
            - log:
                message: Financing details are not present in product details page.
                color: GREEN_BOLD
          else:
            - if:
                condition: ${sanitizePrice} > 50 && ${sanitizePrice} < 200
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: //android.widget.TextView[@text='4 biweekly payments of ${weeklyFinancing} with']
                      text:
                        - identifier: ca.walmart.ecommerceapp.qa:id/promo_desc
                          contains: 4 biweekly payments of ${weeklyFinancing} with
                      notPresent:
                        - identifier: //android.widget.TextView[@text='Finance Options']
                        - identifier: ca.walmart.ecommerceapp.qa:id/item_financing_view_compare_button
                        - identifier: ca.walmart.ecommerceapp.qa:id/item_financing_view_sales_image
                        - identifier: ca.walmart.ecommerceapp.qa:id/item_financing_view_klarna_image
                  - log:
                      message: Product price and financing Icon.
                      color: GREEN_BOLD
                else:
                  - if:
                      condition: ${sanitizePrice} > 200 && ${sanitizePrice} < 4000
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                            text:
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                                contains: ${monthlyFinancing} monthly*
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                                contains: ${weeklyFinancing} biweekly
                        - executeFunction:
                            name: ca.test.functions.productDetailsPage.financeComparingOptions
                        - log:
                            message: Product price and financing Icon.
                            color: GREEN_BOLD
                      else:
                        - if:
                            condition: ${sanitizePrice} > 4000
                            then:
                              - verifyIdentifier:
                                  present:
                                    - identifier: ca.test.mappings.pdp.salesFinancingIcon
                              - log:
                                  message: Product price and financing Icon.
                                  color: GREEN_BOLD

#      - verifyIdentifier:
#          present:
#            - identifier: ca.test.mappings.pdp.productPrice
#            - identifier: ca.test.mappings.pdp.salesFinancingIcon
#      - log:
#          message: Product price and financing Icon.
#          color: GREEN_BOLD
#      - verifyIdentifier:
#          text:
#            - identifier: ca.test.mappings.pdp.salesFinancingDescription
#              contains: ${monthlyInstallments}
#            - identifier: ca.test.mappings.pdp.salesFinancingDescription
#              contains: ${tenure}
#            - identifier: ca.test.mappings.pdp.salesFinancingDescription
#              contains: Learn how
#            - identifier: ca.test.mappings.pdp.salesFinancingT&C
#              contains: "*Excludes Quebec"
#            - identifier: ca.test.mappings.pdp.salesFinancingT&C
#              contains: "Terms & Conditions apply"
#      - log:
#          message: Text validation completed for sales financing.
#          color: GREEN_BOLD

  - name: ca.test.functions.productDetailsPage.saleFinancing
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.pdp.productName
      - log:
          message: ${productName} pdp is opened.
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.itemPrice
          attribute: label
          storeIn: productPrice
      - executeNode:
          file: ca/test/helpers/global/removeDollarFromPrice.js
          args:
            - value: ${productPrice}
          getResponse:
            storeIn: sanitizePrice
      - if:
          condition: ${sanitizePrice} < 50
          then:
            - verifyIdentifier:
                notPresent:
                  - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
            - log:
                message: Financing details are not present in product details page.
                color: GREEN_BOLD
          else:
            - if:
                condition: ${sanitizePrice} > 50 && ${sanitizePrice} < 200
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: //XCUIElementTypeStaticText[contains(@label,"biweekly payments of")]
                      label:
                        - identifier: //XCUIElementTypeStaticText[contains(@label,"biweekly payments of")]
                          contains: 4 biweekly payments of ${weeklyFinancing} with
                      notPresent:
                        - identifier: //XCUIElementTypeStaticText[@label="Finance Options"]
                        - identifier: //XCUIElementTypeButton[@name="FinancingOptionsView.compareFinancingOptionsButton"]
                        - identifier: //XCUIElementTypeStaticText[@name="FinancingOptionWalmartRewardsCardView.title"]
                        - identifier: //XCUIElementTypeImage[@name="FinancingOptionKlarnaView.imageView"]
                  - log:
                      message: Product price and financing Icon.
                      color: GREEN_BOLD
                else:
                  - if:
                      condition: ${sanitizePrice} > 200 && ${sanitizePrice} < 4000
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                            label:
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                                contains: ${monthlyFinancing} monthly*
                              - identifier: ca.test.mappings.productDetailsPage.salesFinancingText
                                contains: ${weeklyFinancing} biweekly
                        - executeFunction:
                            name: ca.test.functions.productDetailsPage.financeComparingOptions
                        - log:
                            message: Product price and financing Icon.
                            color: GREEN_BOLD
                      else:
                        - if:
                            condition: ${sanitizePrice} > 4000
                            then:
                              - verifyIdentifier:
                                  present:
                                    - identifier: ca.test.mappings.pdp.salesFinancingIcon
                              - log:
                                  message: Product price and financing Icon.
                                  color: GREEN_BOLD

  - name:  ca.test.functions.productDetailsPage.financeComparingOptions
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productDetailsPage.financingOptions.earnRewardsText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productDetailsPage.financingOptions.earnRewardsText
                timeout: 60000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.salesImage
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.salesHeader
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingLearnHowText
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.earnRewardsText
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingApplyNow
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productDetailsPage.financingOptions.financingApplyNow
                timeout: 60000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingExcludeText
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.finnancingTncLink
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.dontHaveRewardsText
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingApplyNow
          text:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingSalesBody
              contains: '*6 monthly instalments of $${monthlyFinancing} (set up fee applies)'
      - log:
          message: "Financing option for walmart mastercard validated."
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.productDetailsPage.financingOptions.financingKlarnaBody
          position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingKlarnaImage
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.klarnaPay
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.klarnaLearnHow
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.klarnaTnc
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.klarnaTncText
          text:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingKlarnaBody
              contains: 4 biweekly payments of $${weeklyFinancing}
      - log:
          message: "Financing option for klarna validated."
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingCompareButton
      - click:
          identifier: ca.test.mappings.productDetailsPage.financingOptions.financingCompareButton
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.financingCompareOptionText
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.salesPlanImage
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.klarnaPlanImage
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.monthlyInstallments
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.payBiweekly
            - identifier:  ca.test.mappings.productDetailsPage.financingOptions.compareOptionsRewardDollars
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.interest
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.fee
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.compareOptionsKlarnaTextHighlight
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.howDoesItWorkLink
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.walmartRewardsPlan
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.compareOptionsKlarnaPay
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.compareOptionsApplyNow
            - identifier: ca.test.mappings.productDetailsPage.financingOptions.applAtCheckout
      - click:
          identifier: Go back

  - name:  ca.test.functions.productDetailsPage.financeComparingOptions
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: PDPBNPLLabel.learnHowLabel
      - click:
          identifier: PDPBNPLLabel.learnHowLabel
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productDetailsPage.salesFinancing.walmartRewardsCard.icon
            - identifier: FinancingOptionWalmartRewardsCardView.title
            - identifier: FinancingOptionWalmartRewardsCardView.learnHow
            - identifier: //XCUIElementTypeStaticText[@label="Earn rewards while saving money"]
            - identifier: Excludes Quebec /
            - identifier: Terms and Conditions apply
            - identifier: //XCUIElementTypeStaticText[@label="Don’t have a Walmart Rewards Mastercard?"]
            - identifier: FinancingOptionWalmartRewardsCardView.applyNow
          label:
            - identifier: FinancingOptionWalmartRewardsCardView.installmentText
              contains: ${monthlyFinancing}
      - log:
          message: "Financing option for walmart mastercard validated."
      - verifyIdentifier:
          present:
            - identifier: FinancingOptionKlarnaView.imageView
            - identifier: FinancingOptionKlarnaView.caption
            - identifier: FinancingOptionKlarnaView.learnHow
            - identifier: Terms and Conditions /
            - identifier: Quebec Terms and Conditions apply
          label:
            - identifier: FinancingOptionKlarnaView.installmentText
              contains: ${weeklyFinancing}
      - log:
          message: "Financing option for klarna validated."
      - verifyIdentifier:
          present:
            - identifier: //XCUIElementTypeButton[@name="FinancingOptionsView.compareFinancingOptionsButton"]
      - click:
          identifier: //XCUIElementTypeButton[@name="FinancingOptionsView.compareFinancingOptionsButton"]
      - sleep:
         duration: 2000
      - verifyIdentifier:
          present:
            - identifier: Compare Financing Options
            - identifier: Walmart Rewards Installment plan
            - identifier: Klarna
      - click:
          identifier: Go back


  - name: ca.test.functions.productDetailsPage.saleFinancingLinks
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.salesFinancingDescription
      - log:
          message: Clicking on Learn More button on PDP page.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.pdp.salesFinancingDescription
          coordinates: 95%, 50%
      - log:
          message: Navigating to qa3 web page.
          color: GREEN_BOLD
      - sleep:
          duration: 10000
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.pdp.salesFinancingWebPageUrl
              contains: ${rewardsUrl}
      - log:
          message: Learn more button in PDP page successfully navigates to qa3 web page.
          color: GREEN_BOLD
      - log:
          message: Navigating back to app.
          color: GREEN_BOLD
      - goBack: true
      - sleep:
          duration: 5000
      - log:
          message: Clicking on terms and condition on PDP page.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.pdp.salesFinancingT&C
          coordinates: 80%, 50%
      - log:
          message: Navigating to qa3 web page.
          color: GREEN_BOLD
      - verifyIdentifier:
          timeout: 20000
          text:
            - identifier: ca.test.mappings.pdp.salesFinancingWebPageUrl
              contains: ${rewardsTerms}
      - log:
          message: Terms and Conditions button in PDP page successfully navigates to qa3 Installment Plan web page.
          color: GREEN_BOLD
      - log:
          message: Navigating back to app.
          color: GREEN_BOLD
      - goBack: true
      - sleep:
          duration: 5000
    
  - name: ca.test.functions.pdp.salesFinancing.validateNotPresent
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.pdp.productHeader
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.salesFinancing
          then:
            - log: 
                message: Sales Financing options not present for ${productType}
                color: GREEN_BOLD
          else:
            - failTest:
                message: Sales Financing options should not be present for ${productType} items.

  - name: ca.test.functions.pdp.multiVariantProductValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.multiVariantProductCarousel
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.multiVariantProductCarousel
                position: center
      - numberOfChildElements:
          identifier: ca.test.mappings.pdp.multiVariant.list
          storeIn: noOfVariants
      - if:
          condition: ${noOfVariants} == ${variantCount}
          then:
            - log:
                message: Product is multiVariant
                color: GREEN_BOLD
          else:
            - failTest:
                message: Multi-Variant validation failed   

  - name: ca.test.functions.pdppage.selectingMultiVariant
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.multiVariantProductCarousel
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.multiVariantProductCarousel
                position: center
      - loop:
          begin: 1
          end: 5
          mode: increment
          storeIndex: i
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.pdp.multiVariantContainer
                then:
                  - click:
                      identifier: ca.test.mappings.pdp.multiVariantContainer
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.pdp.multiVariantProductOOS
                      then:
                        - break: true
                        - log:
                            message: Selected $i Variant
                            color: GREEN_BOLD
                        - break: true
                else:
                  - log: Product is not multiVariant
                  - break: true
#-------------------------------------For Production--------------------------------------------------------

# Opening PDP page of product
  - name: ca.test.functions.pdp.srpToPdp
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.srp.productTileImage
      - click:
          identifier: ca.test.mapping.srp.productTileImage
      - sleep:
          duration: 10000
  
  - name: ca.test.functions.pdp.validateProductVariantCarousel
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.variantCarousel.productSize
          then:
            - scroll:
                direction: up
                position: center
                untilIdentifier: ca.test.mappings.pdp.variantCarousel.productSize
                scrollLimit: 1
      - numberOfChildElements:
          identifier: ca.test.mappings.pdp.variantCarousel.productSize
          storeIn: x
          filterBy: ca.test.mappings.pdp.variantCarousel.productSizeCount
      - if:
          condition: ${x} == ${variant_count}
          then:
            - log:
                message: "Product have ${x} variants"
                color: GREEN_BOLD
          else:
            - failTest: 
                message: "Product should have ${variant_count} but found ${x}"
                         
  - name: ca.test.functions.pdp.chooseProductVariant
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.variantCarousel.productSize
          then:
            - scroll:
                direction: up
                position: center
                untilIdentifier: ca.test.mappings.pdp.variantCarousel.productSize
                scrollLimit: 1
      - click:
          identifier: ca.test.mappings.pdp.variantCarousel.productSizeButton

  - name: ca.test.functions.PDPpage.addToCartSecondVariant
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.pdp.multiVariant.list.secondItem
      - sleep:
          duration: 10000
      - click:
          identifier: ca.test.mappings.global.addToCart
      - sleep:
          duration: 8000

# Validating product fulfillment details in PDP $ multi offer validation
  - name: ca.test.functions.pdp.primaryBuyBoxContainerMerchandiseGo
    platform: ios
    flow:
      - sleep:
          duration: 2000 #10000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.returnPolicyButton
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.pdp.returnPolicyButton
      - if:
          identifier:
            label:
              - identifier: ca.test.mappings.pdp.fullfillment.storeDetails
                contains: not available
          then:
            - failTest:
                message: Pickup EED not present.
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.pdp.fullfillment.storeDetails
              contains: ${storeName}   
            - identifier: ca.test.mappings.pdp.fulfillmentDetails.deliveryFromStore
              contains: ${deliveryFromStore} 
      # - if:
      #     identifier:
      #       present:
      #         - identifier: ca.test.mappings.pdp.fulfillmentDetails.deliveryFromStore
      #     then:
      #       - verifyIdentifier:
      #           label:
      #             - identifier:  ca.test.mappings.cart.shipping.address
      #               contains: ${addressFirstLine}
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.returnPolicyButton
      - if:
          identifier:
            label:
              - identifier: ca.test.mappings.pdp.soldAndShipped
                contains: Walmart
          then:
            - log: 
                message: Item is 1p
                color: GREEN_BOLD
          else:
            - log: 
                message: Item is 3P
                color: GREEN_BOLD
            - getString:
                identifier: ca.test.mappings.pdp.soldAndShipped
                attribute: value
                storeIn: sellerName
            - log: 
                message: "Product seller name: ${sellerName}"
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.secondaryBuyBoxContainer
          then:
            - log:
                message: Product is multi Offer
                color: GREEN_BOLD
          else:
            - log: Product is not multi offer
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails
      - click:
          identifier: ca.test.mappings.pdp.returnPolicy.moreDetails
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.title
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnWithinText
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.returnTimeLine
            - identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
      - getString:
          identifier: ca.test.mappings.pdp.returnPolicy.moreDetails.description
          attribute: label
          storeIn: returnPolicy
      - log:
          message: ${returnPolicy}
          color: GREEN_BOLD
      - goBack: true

  
  - name: ca.test.function.pdp.multisave.addFromMultisave
    platform: android
    flow: 
      - log: 
          message: Clicking View All Link from PDP page
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.search.multiSave.viewAll
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.product.multiSave.mixAndMatchForTwo 
            - identifier: ca.test.mappings.product.multiSave.mixAndMatch.moreSavingsForTwo
            - identifier: //android.view.ViewGroup[@content-desc="${productName}"]/android.widget.TextView
      - click:
          identifier: ca.test.mapping.pdp.mixAndMatch.ProductAddToCart1
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.product.multiSave.mixAndMatchForTwo 
            - identifier: ca.test.mappings.product.multiSave.mixAndMatch.oneItemAdded
      - click:
          identifier: ca.test.mapping.pdp.mixAndMatch.ProductAddToCart2
      - sleep: 
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.product.multiSave.mixAndMatch.msOfferApplied
            - identifier: ca.test.mappings.product.multiSave.mixAndMatch.continueAddingMore
      - sleep:
          duration: 5000
      - log:
          message: MultiSave Offer Applied Successfully!
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.global.closeIcon
      - goBack: true
  
  - name: ca.test.functions.pdp.multiSaveBannerValidation
    platform: ios
    flow:
      - log:
          message: Pdp multisave Banner validation started
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.pdp.multiSave.viewAll 
      - click:
          identifier: ca.test.mappings.pdp.multiSave.viewAll   
      - sleep:
         duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.title
            - identifier: ca.test.mappings.pdp.multiSave.itemsStack

  - name: ca.test.functions.pdp.addToCartFromMultiSaveBanner
    platform: ios
    flow:
      - log:
          message: Add to cart product from multisave banner
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.pdp.multiSave.viewAll 
      - click:
          identifier: ca.test.mappings.pdp.multiSave.addToCart  
      - sleep:
         duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.title
            - identifier: ca.test.mappings.pdp.multiSave.itemsStack          


  
  - name: ca.test.functions.pdp.multiSaveBannerValidation
    platform: ios
    flow:
      - log:
          message: Pdp multisave Banner validation started
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.pdp.multiSave.viewAll 
      - click:
          identifier: ca.test.mappings.pdp.multiSave.viewAll   
      - sleep:
         duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.title
            - identifier: ca.test.mappings.pdp.multiSave.itemsStack

  - name: ca.test.functions.pdp.addToCartFromMultiSaveBanner
    platform: ios
    flow:
      - log:
          message: Add to cart product from multisave banner
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.pdp.multiSave.viewAll 
      - click:
          identifier: ca.test.mappings.pdp.multiSave.addToCart  
      - sleep:
         duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.multiSave.title
            - identifier: ca.test.mappings.pdp.multiSave.itemsStack  

  - name: ca.test.functions.pdp.changeAddressButton
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.deliveryEta
            - identifier: ca.test.mappings.pdp.storeSelector
      - sleep:
          duration: 10000
      - click:
          identifier: ca.test.mappings.pdp.deliveryEta
          coordinates: 90%,95%
  
  - name: ca.test.functions.pdp.changeStoreButton
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
            - identifier: ca.test.mappings.pdp.deliveryEta
      - click:
          identifier: ca.test.mappings.pdp.storeSelector
          coordinates: 90%,95% 

  - name: ca.test.functions.pdp.changeStore.selectStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.storeSelector
      - log:
          message: Store selection page opened.
          color: GREEN_BOLD
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.home.zipCodeHome
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.global.errorBoxTitle
                then:
                  - click:
                      identifier: ca.test.mappings.error.retryButton
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true            
  - name: ca.test.functions.pdp.extractingFulfilledByDetails
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.sellerAndShippingInfo
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.sellerAndShippingInfo
                position: center
                scrollLimit: 2
      - getString:
          identifier: ca.test.mappings.pdp.sellerAndShippingInfo
          attribute: value
          storeIn: sellerInfo
      - log:
          message: ${sellerInfo}
          color: GREEN_BOLD
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.fulfilledBy
          then:
            - getString:
                identifier: ca.test.mappings.pdp.fulfilledBy
                attribute: value
                storeIn: fulfillmentInfo
      - log:
          message: ${fulfillmentInfo}
          color: GREEN_BOLD
  
