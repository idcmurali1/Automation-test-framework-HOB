functions:
  #add 4 items in cart
  - name: ca.test.functions.productSearch.searchGoItemsAndToCart_1
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_1}
          pressEnter: true
          sleep:
            duration: 3000
      - executeFunction:
          name: ca.test.functions.threeWaysToOrder
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_2}
          pressEnter: true
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_3}
          pressEnter: true
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_4}
          pressEnter: true
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
            

  # Three ways to ship popup window gotItClick
  - name: ca.test.functions.threeWaysToOrder
    platform: android
    flow:
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mapping.srp.threeWaysToOrder
                then:
                  - click:
                      identifier: ca.test.mapping.srp.threeWaysToOrderGotItButton


# Add muilt variant product based on price
  - name: ca.test.functions.srp.selectProductBasedOnPrice
    platform: android
    flow:
      - loop:
          each: "[\"5\", \"8\", \"15\"]"
          storeElement: cost
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.srp.productClickBasedOnPrice
                then:
                  - click:
                      identifier: ca.test.mappings.srp.productClickBasedOnPrice
                  - click:
                      identifier: ca.test.mappings.pdp.addToCart
                  - goBack: true
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.srp.productClickBasedOnPrice
                  - click:
                      identifier: ca.test.mappings.srp.productClickBasedOnPrice
                  - click:
                      identifier: ca.test.mappings.pdp.addToCart
                  - goBack: true

############################################################################ iOS  ###################################################################################

# Three ways to ship popup window gotItClick-ios
  - name: ca.test.functions.threeWaysToOrder
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.threeWaysToOrder
          then:
            - click:
                identifier: ca.test.mapping.srp.threeWaysToOrderGotItButton  

#add 3 items in cart-ios
  - name: ca.test.functions.productSearch.searchGoItemsAndToCart_1
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_1}
          pressEnter: true
      - sleep:
          duration: 3000
      - executeFunction:
          name: ca.test.functions.threeWaysToOrder
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
      # - click:
      #     identifier: ca.test.mappings.home.cleartext          
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_2}
          pressEnter: true
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${sku_3}
          pressEnter: true
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.productTile
          then:
            - click:
                identifier: ca.test.mapping.srp.AddToCart

  # Product srp to pdp page
  - name: ca.test.functions.productSearch.srpToPdpPage
    flow:
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: ca.test.mappings.srp.productSearch.addTocart
          # then:
          #   - scroll:
          #       direction: down
          #       untilIdentifier: ca.test.mappings.srp.productSearch.addTocart
          #       position: center
          #       scrollLimit: 4
          #       timeout: 15000
      - click:
          identifier: ca.test.mappings.srpPage.productTileListView

  # # Search for a product -ios
  # - name: ca.test.functions.productSearch.searchAProductIos
  #   platform: ios
  #   flow:
  #     - click:
  #         identifier: ca.test.mappings.home.searchBarSelected
  #     - enterText:
  #         identifier: ca.test.mappings.home.searchBarSelected
  #         string: ${product}
  #         clickFirst: true
  #         clearField: true
  #         pressEnter: true
  #     - sleep:
  #         duration: 3000
  #     - executeFunction:
  #         name: ca.test.functions.productSearch.threeWaysToOrder  


  - name: ca.test.functions.productSearch.clearSearch
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.home.searchBarSelected  
      - click:
          identifier: ca.test.mappings.home.ClearSymbol
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ""
          pressEnter: true
          # clickFirst: true
          # clearField: true


  # Three ways to ship popup window gotItClick -ios
  - name: ca.test.functions.productSearch.threeWaysToOrder
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.srp.threeWaysToOrder
          then:
            - click:
                identifier: ca.test.mapping.srp.threeWaysToOrderGotItButton

# SRP Page Validation - ios
# Locator issue for all commented mappings 
  - name: ca.test.functions.productSearch.srpPageValidaion
    platform: ios
    flow:
      - sleep:
          duration: 1000
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
            - identifier: ca.test.mappings.navBar.cartIcon
            - identifier: ca.test.mappings.srp.sortAndFilter
            # - identifier: ca.test.mappings.srp.priceRange
            # - identifier: ca.test.mappings.srp.primaryText
            - identifier: ca.test.mappings.srp.inStore
            # - identifier: ca.test.mappings.srp.productTile
            # - identifier: ca.test.mappings.srp.productTileImage 
            - identifier: ca.test.mappings.srp.AddToCart
            # - identifier: ca.test.mappings.srp.productPrice
            # - identifier: ca.test.mappings.srp.productTileBrand
            # - identifier: ca.test.mappings.srp.productName
            # - identifier: ca.test.mappings.srp.productRatingsStar
      # - if:
      #     condition: $(offerProduct)==Yes
      #     then:
      #       - verifyIdentifier:
      #         present:
      #            -identifier: ca.test.mappings.srp.productOffer
      #       - getString:
      #          identifier: ca.test.mappings.srp.productOffer
      #          attribute: content-desc
      #          storeIn: offerName            
      # - log: The product is having $(offerName)tag 

  # Add to cart from srp
  - name: ca.test.functions.srp.addToCartIos
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mapping.srp.AddToCart #ca.test.mappings.srp.addToCart 
      - click:
          identifier: ca.test.mapping.srp.AddToCart  #ca.test.mappings.srp.addToCart 

  # Srp Page Validation for Search and Browse 
  - name: ca.test.functions.productSearch.srpPageValidaionSearchAndBrowse
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
            - identifier: ca.test.mappings.navBar.cartIcon
            - identifier: ca.test.mappings.srp.sortAndFilter
            - identifier: ca.test.mappings.srp.priceRange
            # - identifier: ca.test.mappings.srp.primaryText
            - identifier: ca.test.mappings.srp.productTile
            - identifier: ca.test.mapping.srp.AddToCart #ca.test.mappings.srp.AddToCart
            # - identifier: ca.test.mappings.srp.productTileImage
            # - identifier: ca.test.mappings.srp.productPrice
            # - identifier: ca.test.mappings.srp.productTileBrand
            # - identifier: ca.test.mappings.srp.productName
            # - identifier: ca.test.mappings.srp.productRatingsStar             

  # Search and Browse 
  - name: ca.test.functions.productSearch.addToCartSearchAndBrowse
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.addToCartByProductName
          then:
            - scroll:
                direction: down 
                untilIdentifier: ca.test.mappings.srp.addToCartByProductName
      - click:
          identifier: ca.test.mappings.srp.addToCartByProductName   
       
  # SRP page validation for A2C Search
  - name: ca.test.functions.productSearch.srpPageValidation
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: ca.test.mappings.srp.searchBar
            - identifier: ca.test.mappings.srp.searchViewClear
            - identifier: ca.test.mappings.navBar.cartIcon
            # - identifier: ca.test.mapping.srp.sortAndFlter
            # - identifier: ca.test.mappngs.srp.priceRange

  - name: ca.test.functions.srp.productTileVerification
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.productTiles
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srp.productTiles
                scrollLimit: 10
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.productTiles
            - identifier: ca.test.mappings.srp.productTitleImages
            - identifier: ca.test.mappings.srp.productCost
            - identifier: ca.test.mappings.srp.productNames
            - identifier: ca.test.mappings.srp.brandName
            - identifier: ca.test.mappings.srp.productSearch.addTocart
      - if:
          condition: ${offerProduct} == Yes
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.srp.productOffer
                then:
                  - getString:
                      identifier: ca.test.mappings.srp.productOffer
                      attribute: content-desc
                      storeIn: offerName
                  - log: The product is having ${offerName} tag.
                else:
                  - log: "Error: The product promotional badge is not present in SRP page."
      - if:
          condition: ${preOrder} == Yes
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.productTile.preOrder
                then:
                  - getString:
                      identifier: ca.test.mappings.productTile.preOrder
                      attribute: text
                      storeIn: preOrder
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.productTile.preOrderStartDate
                      then:
                        - getString:
                            identifier: ca.test.mappings.productTile.preOrderStartDate
                            attribute: text
                            storeIn: shipDate
                        - log: The product is ${preOrder}, ${shipDate}
                      else:
                        - log: The product is not pre order
                else:
                  - log: The product is not pre order

  # Add Product By Name From SRP
  - name: ca.test.functions.productSearch.addToCartByName
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.addToCartByProductName
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srp.addToCartByProductName
      - click:
          identifier: ca.test.mappings.srp.addToCartByProductName

  - name: ca.test.functions.productSearch.productTileNameExtraction
    platform: android
    flow:
      - getString:
          identifier: ca.test.mappings.srp.productNameExtraction
          attribute: content-desc
          storeIn: extractedProductName
      - log: ${extractedProductName}


# # ---------------------------------- Production -----------------------
  - name: ca.test.functions.PDPpage.addToCartPriceExtraction
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.global.addToCart
      - click:
          identifier: ca.test.mappings.global.addToCart
      - sleep:
          duration: 10000
      - getString:
          identifier: ca.test.mappings.pdp.addToCartPrice
          attribute: text
          storeIn: productCost
      - sleep:
          duration: 6000
      - if:
          condition: ${quantity} > 1
          then:
            - loop:
                begin: 1
                end: ${quantity}
                mode: increment
                flow:
                  - verifyIdentifier:
                      timeout: 10000
                      present:
                        - identifier: ca.test.mappings.home.carouselIncreaseQuantity
                  - click:
                      identifier: ca.test.mappings.home.carouselIncreaseQuantity
      - executeNode:
          file: ca/test/helpers/sanitizePrice.js
          args:
            - value: ${productCost}
          getResponse:
            storeIn: productPrice
      - log: ${productPrice}
      - if:
          condition: ${totalPrice} != "null"
          then:
            - arithmetic:
                expression: ${totalPrice} + (${productPrice} * ${quantity})
                storeIn: totalPrice
          else:
            - arithmetic:
                expression: ${productPrice} * ${quantity}
                storeIn: totalPrice

  - name: ca.test.functions.srpPage.productTileVerificationGrocery
    platform: android
    flow:
      - log:
          message: Product ${productName} tile validation started
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srpPage.productTileListView
            - identifier: ca.test.mappings.srpPage.productImage
            - identifier: ca.test.mappings.srpPage.productPrice
            - identifier: ca.test.mappings.srpPage.productPerUnitPrice
            - identifier: ca.test.mappings.srpPage.productName
            - identifier: ca.test.mappings.srpPage.productRating
            - identifier: ca.test.mappings.srpPage.productTilePickUpText
            - identifier: ca.test.mappings.srpPage.productTileDeliveryText
            - identifier: ca.test.mappins.srpPage.productAddToCartButton
      - log:
          message: Product ${productName} tile validation successful
          color: GREEN_BOLD
      - if:
          condition: ${offerProduct} == Yes
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.srpPage.productOffer
                then:
                  - getString:
                      identifier: ca.test.mappings.srpPage.productOffer
                      attribute: content-desc
                      storeIn: offerName
                  - log: The product is having ${offerName} tag.
                else:
                  - log: "Error: The product promotional badge is not present in SRP page."

#----------------------------------------------------- For Production Env.--------------------------------------------------
  # Add to cart based on product name and also increase quantity
  - name: ca.test.functions.productSearch.addToCartCostExtractionSRP
    platform: android
    flow:
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: ca.test.mappings.srp.productSearch.prod.addTocart
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: ca.test.mappings.srp.productSearch.prod.addTocart
      #           scrollLimit: 10
      #           timeout: 10000
      - getString:
          identifier: ca.test.mappings.srp.productCost
          attribute: text
          storeIn: productValue
      - log: ${productValue}
      - executeNode:
          file: ca/test/helpers/global/extractingProductCost.js
          args:
            - value: ${productValue}
          getResponse:
            storeIn: productCost
      - log: ${productCost}
      - click:
          identifier: ca.test.mappings.srp.productSearch.prod.addTocart
      - if:
          condition: ${quantity} > 1
          then:
            - loop:
                begin: 1
                end: ${quantity}
                mode: increment
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.home.carouselIncreaseQuantity       
                      then: 
                        - click:
                            identifier: ca.test.mappings.home.carouselQuantityBarClick
                  - click:
                      identifier: ca.test.mappings.home.carouselIncreaseQuantity
      - log:
          message: Product added to cart
          color: GREEN_BOLD
      - executeNode:
          file: ca/test/helpers/sanitizePrice.js
          args:
            - value: ${productCost}
          getResponse:
            storeIn: productPrice
      - log: ${productPrice}
      - if:
          condition: ${totalPrice} != "null"
          then:
            - arithmetic:
                expression: ${totalPrice} + (${productPrice} * ${quantity})
                storeIn: totalPrice
          else:
            - arithmetic:
                expression: ${productPrice} * ${quantity}
                storeIn: totalPrice
      - log: ${totalPrice}

  - name: ca.test.functions.productSearch.extractingFirstProductName
    platform: android
    flow:
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.srp.productNameTitle
      - getString:
          identifier: ca.test.mapping.srp.productNameTitle
          attribute: text
          storeIn: productName
      - executeNode:
          file: ca/test/helpers/sanitizeProductName.js
          args:
            - value: ${productName}
          getResponse:
            storeIn: productName

    # Product srp to pdp page
  - name: ca.test.functions.productSearch.prod.srpToPdpPage
    platform: android
    flow:
      - try:
          flow:
            - if:
                identifier:
                  present:
                  - identifier: ca.test.mappings.srpPage.reorderPopupCloseButton
                then:
                  - click:
                      identifier: ca.test.mappings.srpPage.reorderPopupCloseButton   
          catch:
            flow:
              - log:
                  message: Reorder pop is not present
                  color: GREEN_BOLD_BRIGHT
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srpPage.productTileListView
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srpPage.productTileListView
                position: center
                timeout: 15000
                scrollLimit: 10
      - click:
          identifier: ca.test.mappings.srpPage.productTileListView
      - sleep:
          duration: 10000
  #----------------------------------------------------- For Production Env.--------------------------------------------------

  - name: ca.test.functions.srp.addingToFavourites
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srpPage.productName
            - identifier: ca.test.mappings.srpPage.productAddToFavourite
      - click:
          identifier: ca.test.mappings.srpPage.productAddToFavourite
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srpPage.removeProductFromFavourites
  
  # - name: ca.test.functions.srpPage.navigateToMyItems
  #   platform: android
  #   flow:
  #     - if:
  #         identifier: 
  #           notPresent:
  #             - identifier: ca.test.mappings.tabBar.MyItems
  #         then:
  #           - log:
  #               message: "--------------------My Items tab not visible scrolling up--------------------"
  #               color: GREEN_BOLD
  #           - scroll:
  #               direction: up
  #               untilIdentifier: ca.test.mappings.tabBar.MyItems
  #     - click:
  #         identifier: ca.test.mappings.tabBar.MyItems
  #     - verifyIdentifier:
  #         timeout: 10000
  #         present:
  #           - identifier: ca.test.mappings.myItems.reorderTab
  #           - identifier: ca.test.mappings.myItems.favouritesTab
  #     - log:
  #         message: "--------------------My Items Page Opened Sucessfully--------------------"
  #         color: GREEN_BOLD
  #     - if:
  #         condition: ${myItemsTab} == 'Reorder'
  #         then:
  #           - click:
  #               identifier: ca.test.mappings.myItems.reorderTab
  #           - verifyIdentifier:
  #               selected:
  #                 - identifier: ca.test.mappings.myItems.reorderTab
  #                   value: true
  #           - log:
  #               message: "--------------------Reorder page is opened--------------------"
  #     - if:
  #         condition: ${myItemsTab} == 'Favorites'
  #         then:
  #           - click:
  #               identifier: ca.test.mappings.myItems.favouritesTab
  #           - verifyIdentifier:
  #               selected:
  #                 - identifier: ca.test.mappings.myItems.favouritesTab
  #                   value: true
  #           - log:
  #               message: "--------------------Favourites page is opened--------------------"
  #               color: GREEN_BOLD

  - name: ca.test.functions.productSearch.validatingSRPPage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: (//androidx.recyclerview.widget.RecyclerView[@resource-id="ca.walmart.ecommerceapp.qa:id/carousel_recycler_view"])[1]
      - log: Filter Options present on SRP page
      # - verifyIdentifier:
      #     present:
      #       - identifier: (//androidx.recyclerview.widget.RecyclerView[@resource-id="ca.walmart.ecommerceapp.qa:id/carousel_recycler_view"])[2]
      # - log: Sub category options are avialable
      - verifyIdentifier:
          text:
            - identifier: //android.widget.TextView[contains(@text,"Results for")]
              contains: Results for "${product}"
      - log: Results text is shown in SRP page
      
  - name: ca.test.functions.productSearch.validatingTypeAheadFunctionality
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${product}
      - sleep:
          duration: 1000
      - verifyIdentifier:
          present:
            - identifier: (//android.widget.RelativeLayout/android.widget.TextView)[1]
      - log: Type ahead functionality.
      - getString:
          identifier: (//android.widget.RelativeLayout/android.widget.TextView)[1]
          storeIn: typeAhead
      - click:
          identifier: (//android.widget.RelativeLayout/android.widget.TextView)[1]
      - log: Product searched using type ahead functionality

  - name: ca.test.functions.productSearch.validatingPriceBadges
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.searchPage.badgeText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.searchPage.badgeText
      - getString:
          identifier: ca.test.mappings.searchPage.badgeText
          attribute: content-desc
          storeIn: badgesName
      - log: ${badgesName}
      - getString:
          identifier: ca.test.mappings.searchPage.productActualPrice
          attribute: text
          storeIn: productPrice
      - getString:
          identifier: ca.test.mappings.searchPage.productStrikeoutPrice
          attribute: text
          storeIn: strikedPrice
      - log: Discounted price = ${productPrice}
      - log: Striked out price = ${strikedPrice}

  - name: ca.test.functions.productSearch.validatingPromotionalBadge
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.searchPage.badgeText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.searchPage.badgeText
      - getString:
          identifier: ca.test.mappings.searchPage.badgeText
          attribute: content-desc
          storeIn: badgesName
      - log: ${badgesName}
  
  - name: ca.test.functions.productSearch.validatingPromotionalBadgeAR$MD
    platform: android
    flow:
      - loop:
          begin: 1
          end: 10
          mode: increment
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.searchPage.badgeText
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.searchPage.badgeText
            - getString:
                identifier: ca.test.mappings.searchPage.badgeText
                attribute: content-desc
                storeIn: badgesName
            - if:
                condition: ${badgesName} == 'Rollback' || ${badgesName} == 'Clearance'
                then:
                  - if:
                      condition: ${badgesName} == 'Rollback'
                      then:
                        - getString:
                            identifier: ca.test.mappings.searchPage.badgeText
                            attribute: content-desc
                            storeIn: badgesName
                        - log: ${badgesName}
                        - getString:
                            identifier: ca.test.mappings.searchPage.productActualPrice
                            attribute: text
                            storeIn: productPrice
                        - getString:
                            identifier: ca.test.mappings.searchPage.productStrikeoutPrice
                            attribute: text
                            storeIn: strikedPrice
                        - log: Advertised Retail(AR) product
                        - log: Discounted price = ${productPrice}
                        - log: Striked out price = ${strikedPrice}
                      else:
                        - getString:
                            identifier: ca.test.mappings.searchPage.badgeText
                            attribute: content-desc 
                            storeIn: badgesName
                        - log: ${badgesName}
                        - getString:
                            identifier: ca.test.mappings.searchPage.productActualPrice
                            attribute: text
                            storeIn: productPrice
                        - getString:
                            identifier: ca.test.mappings.searchPage.productStrikeoutPrice
                            attribute: text
                            storeIn: strikedPrice
                        - log: Clearance(MD) product
                        - log: Discounted price = ${productPrice}
                        - log: Striked out price = ${strikedPrice}
                  - break: true
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.searchPage.badgeText
                      position: center
  
  - name: ca.test.functions.productSearch.navigateToOptions
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.srp.multiVariantItem.OptionsButton
  
      - click:
          identifier: ca.test.mapping.srp.multiVariantItem.OptionsButton
      - verifyIdentifier:
          timeout: 10000
          notPresent:
            - identifier: ca.test.mapping.srp.multiVariantItem.OptionsButton

  - name: ca.test.functions.pdp.extractingColorAndSize
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: //android.widget.TextView[contains(@text,"${productName]}")]
      - if:
          identifier:
            notPresent:
              - identifier: (//android.widget.TextView[@resource-id="ca.walmart.ecommerceapp.qa:id/variant_carousel_title"])[2]
          then:
            - scroll:
                direction: down
                untilIdentifier: (//android.widget.TextView[@resource-id="ca.walmart.ecommerceapp.qa:id/variant_carousel_title"])[2]
                position: center
      - getString:
          identifier: (//android.widget.TextView[@resource-id="ca.walmart.ecommerceapp.qa:id/variant_carousel_title"])[1]
          attribute: text
          storeIn: productColor
      - getString:
          identifier: (//android.widget.TextView[@resource-id="ca.walmart.ecommerceapp.qa:id/variant_carousel_title"])[2]
          attribute: text
          storeIn: productSize
        

  - name: ca.test.functions.productSearch.validatingSRPPage
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productSearch.sortFilter
      - log: Filter Options present on SRP page
      # - verifyIdentifier:
      #     present:
      #       - identifier: (//androidx.recyclerview.widget.RecyclerView[@resource-id="ca.walmart.ecommerceapp.qa:id/carousel_recycler_view"])[2]
      # - log: Sub category options are avialable
      - verifyIdentifier:
           value: 
            - identifier: ca.test.mappings.productSearch.resultsFor
              contains: Results for "${product}"
      - log: Results text is shown in SRP page

  - name: ca.test.functions.productSearch.validatingTypeAheadFunctionality
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - enterText:
          identifier: ca.test.mappings.home.searchBarSelected
          string: ${product}
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.productSearch.typeAheadFunc
      - log: Type ahead functionality.
      - getString:
          identifier: ca.test.mappings.productSearch.typeAheadFunc
          attribute: value
          storeIn: typeAhead
      - click:
          identifier: ca.test.mappings.productSearch.typeAheadFunc
      - log: Product searched using type ahead functionality

  - name: ca.test.functions.productSearch.validatingPriceBadges
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productSearch.clearance 
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productSearch.clearance 
      - getString:
          identifier: ca.test.mappings.productSearch.clearance 
          attribute: label
          storeIn: badgesName
      - log: ${badgesName}
      # - getString:
      #     identifier: //XCUIElementTypeButton[contains(@label,"$399.99")]
      #     attribute: label
      #     storeIn: productPrice
      # - executeNode:
      #     file: ca/test/helpers/sanitizePriceIos.js
      #     args:
      #       - value: productPrice     
      #     getResponse:
      #       storeIn: clearPrice
      # - log: ${clearPrice} 
      # - getString:
      #     identifier: //XCUIElementTypeButton[contains(@label,"Clearance")]
      #     attribute: label
      #     storeIn: strikedPrice
      # - log: Discounted price = ${productPrice}
      # - log: Striked out price = ${clearPrice}

  - name: ca.test.functions.productSearch.navigateToOptions
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.productSearch.optionsButton
          then:
              - click:
                  identifier: ca.test.mappings.productSearch.optionsButton
            
  - name: ca.test.functions.pdp.extractingColorAndSize
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productSearch.extractingColor
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productSearch.multiVariantTile
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productSearch.multiVariantTile
                position: center    
      - getString:
          identifier: ca.test.mappings.productSearch.multiVariantTile
          attribute: value
          storeIn: productColor
      - log: ${productColor}
      - getString:
          identifier: ca.test.mappings.productSearch.multiVariantTile1
          attribute: value
          storeIn: productSize
      - log: ${productSize}

  # - name: ca.test.functions.PDPpage.addToCart
  #   platform: ios
  #   flow:
  #     - verifyIdentifier:
  #         timeout: 10000
  #         present:
  #           - identifier: ca.test.mapping.pdp.addtocart
  #     - click:
  #         identifier: ca.test.mapping.pdp.addtocart  

  - name: ca.test.functions.productSearch.Pdp.validatingPromotionalBadge
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productSearch.promtionalBadges #//XCUIElementTypeStaticText[@name="GlassBadge.label"]
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productSearch.promtionalBadges #//XCUIElementTypeStaticText[@name="GlassBadge.label"]
      - getString:
          identifier: ca.test.mappings.productSearch.promtionalBadges #//XCUIElementTypeStaticText[@name="GlassBadge.label"]
          attribute: label
          storeIn: badgesName
      - log: ${badgesName}

  - name: ca.test.functions.productSearch.validatingPromotionalBadgeAR$MD
    platform: ios
    flow:
      # - loop:
      #     begin: 1
      #     end: 10
      #     mode: increment
          # flow:
            - sleep:
                duration: 1000
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.productSearch.promtionalBadgesARMD
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.productSearch.promtionalBadgesARMD
            - getString:
                identifier: ca.test.mappings.productSearch.promtionalBadgesARMD
                attribute: label
                storeIn: badgesName
            - log: ${badgesName}
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.productSearch.promtionalBadgesARMD 
                then:
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.productSearch.rollback
                      then:
                        - getString:
                            identifier: ca.test.mappings.productSearch.rollback 
                            attribute: label
                            storeIn: badgesName
                        - log: ${badgesName}
                        - getString:
                            identifier: ca.test.mappings.productSearch.rollback
                            attribute: label
                            storeIn: productPrice
                        - getString:
                            identifier: ca.test.mappings.productSearch.rollback
                            attribute: label
                            storeIn: strikedPrice
                        # - log: Advertised Retail(AR) product
                        # - log: Discounted price = ${productPrice}
                        # - log: Striked out price = ${strikedPrice}
                      else:
                        - getString:
                            identifier: ca.test.mappings.productSearch.clearance 
                            attribute: label
                            storeIn: badgesName
                        - log: ${badgesName}
                        - getString:
                            identifier: ca.test.mappings.productSearch.clearance 
                            attribute: label
                            storeIn: productPrice
                        # - getString:
                        #     identifier: //XCUIElementTypeButton[contains(@label,"Rollback")]
                        #     attribute: label
                        #     storeIn: strikedPrice
                        # - log: Clearance(MD) product
                        # - log: Discounted price = ${productPrice}
                        # - log: Striked out price = ${strikedPrice}
                  - break: true
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.productSearch.promtionalBadgesARMD
                      position: center     

  - name: ca.test.functions.productSearch.validatingMultiVariantProduct
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.productSearch.options
          then: 
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.productSearch.options
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.productSearch.options
            - identifier: ca.test.mappings.productSearch.colours
      - log: Multivariant product colors or options validation Sucessful                    
      
  - name: ca.test.functions.productSearch.basedOnPromotionalBadge
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.product.promotionalBadge
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srp.product.promotionalBadge
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.product.firstPromotionalBadge
  
  - name: ca.test.functions.productSearch.nameExtractionBasedOnPromotionalBadge
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.product.firstPromotionalBadge
      - getString:
          identifier: ca.test.mappings.srp.productnameBasedOnBadge
          attribute: content-desc
          storeIn: itemName

  - name: ca.test.functions.productSearch.pdp.validatingPromotionalDetails
    platform: android
    flow:
      - verifyIdentifier:
          text:
            - identifier: ca.test.mapping.pdp.itemname
              contains: ${productName}
            # - identifier: ca.test.mappings.pdp.promotionalBadges
            #   contains: ${promotionalBadge}
      - getString:
          identifier: ca.test.mappings.pdp.promotionalBadges
          attribute: text
          storeIn: badgeName
      - log:
          message: Badge Name in PDP page is ${badgeName}
          color: GREEN_BOLD
      # - if:
      #    identifier: 
      #      present: 
      #        - identifier: ca.test.mappings.pdp.promotionalBadges 
      #    then:
      #      - loop:
      #           begin: 1
      #           end: 3
      #           storeIndex: i
      #           mode: increment
      #           flow:
      #             - getString:
      #                 identifier: (//android.widget.TextView[@resource-id="ca.walmart.ecommerceapp.qa:id/text"])[${i}]
      #                 attribute: text
      #                 storeIn: promotionalBadge
      #             - log: 
      #                 message: Print ${i} Promotional Badge
      #                 color: GREEN_BOLD
      #             - log: 
      #                 message: Promotional Badges are ${promotionalBadge}
      #                 color: GREEN_BOLD
      #    else:
      #      - getString:
      #          identifier: ca.test.mappings.pdp.promotionalBadges
      #          attribute: text
      #          storeIn: promotionalBadge
      #      - log:
      #          message: Badges on PDP page are ${promotionalBadge}
      #          color: GREEN_BOLD
      - verifyIdentifier:
          text: 
            - identifier: ca.test.mappings.pdp.promotionalBadges
              contains: ${badgeName}
      - getString:
          identifier: ca.test.mappings.pdp.productCurrentPrice
          attribute: text
          storeIn: currentPrice
      - log:
          message: Current Price of the product is ${currentPrice}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.productOldPrice
          attribute: text
          storeIn: wasPrice
      - log:
          message: Old Price of the product is ${wasPrice}.
          color: GREEN_BOLD

  # - name: ca.test.functions.srp.filterOptions
  #   platform: android
  #   flow:
  #     - verifyIdentifier:
  #         present:
  #           - identifier: ca.test.mappings.home.searchBarSelected
  #     - if:
  #         identifier:
  #           present:
  #             - identifier: ca.test.mappings.srp.sortAndFilterCarousel
  #         then:
  #           - scroll:
  #               direction: left
  #               untilIdentifier: ca.test.mappings.srp.sortAndFilterCarousel
  #               position: center
  #               withinIdentifier: ca.test.mappings.srp.sortAndFilterCarouselContainer
  #     - click:
  #         identifier: ca.test.mappings.srp.sortAndFilterCarousel

  # - name: ca.test.functions.srp.sortAndFilterOption
  #   platform: android
  #   flow:
  #     - verifyIdentifier:
  #         present:
  #           - identifier: ca.test.mappings.srp.sortAndFilterText

  - name: ca.test.function.productSearch.validatingSearchResultForMisspelledSearch
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.srp.searchResult.doYouMeanText
          then:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mapings.srp.searchResult.resultsForText
                    contains: Results for "${productName}"
          else:
            - getString:
                identifier: ca.test.mapings.srp.searchResult.showingResultText
                attribute: text
                storeIn: showingResult
            - log: 
                message: ${showingResult}
                color: GREEN_BOLD
            - if:
                identifier:
                  text:
                    - identifier: ca.test.mapings.srp.searchResult.showingResultText
                      contains: ${productName}
                then:
                  - log:
                      message: Displaying result for "${productName}"
                      color: GREEN_BOLD
                else:
                  - log:
                      message: Showing wrong suggestion
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mapings.srp.searchResult.searchInsteadText
                    contains: "Search instead for"
                  - identifier: ca.test.mapings.srp.searchResult.searchInsteadLink
                    contains: ${product}
                  - identifier: ca.test.mapings.srp.searchResult.resultsForText
                    contains: Results for "${productName}"
      - log:
          message: Misspelled term in srp search assertion Sucessful
          color: GREEN_BOLD

  - name: ca.test.functions.srp.sortAndFilterOption
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.sortAndFilterText

  - name: ca.test.function.productSearch.validatingSearchResultForMisspelledSearchIos
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.srp.searchResult.doYouMeanText
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.srp.searchResult.resultsForText
                    contains: Results for "${productName}"
          else:
            - getString:
                identifier: ca.test.mapings.srp.searchResult.showingResultText
                attribute: label
                storeIn: showingResult
            - log: 
                message: ${showingResult}
                color: GREEN_BOLD
            - if:
                identifier:
                  label:
                    - identifier: ca.test.mapings.srp.searchResult.showingResultText
                      contains: ${productName}
                then:
                  - log:
                      message: Displaying result for "${productName}"
                      color: GREEN_BOLD
                else:
                  - log:
                      message: Showing wrong suggestion
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mapings.srp.searchResult.searchInsteadText
                    contains: "Search instead for"
                  - identifier: ca.test.mapings.srp.searchResult.searchInsteadLink
                    contains: ${product}
                  - identifier: ca.test.mappings.srp.searchResult.resultsForText
                    contains: Results for "${productName}"
      - log:
          message: Misspelled term in srp search assertion Sucessful
          color: GREEN_BOLD   
            
  - name: ca.test.function.productSearch.validatingSearchResultForMisspelledSearchIosRandom
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.searchBarSelected
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.srp.searchResult.resultsForText
              contains: Results for "${productName}"
      - log:
          message: Misspelled term in srp search assertion Sucessful
          color: GREEN_BOLD   
          

  - name: ca.test.functions.productSearch.basedOnSaveBadge
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.multiSaveBadge
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srp.multiSaveBadge
                position: center
                scrollLimit: 10
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.multiSaveBadge

  - name: ca.test.functions.productSearch.nameExtractionBasedOnMultiSavePromotionalBadge
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.multiSaveBadge
      - getString:
          identifier: ca.test.mappings.srp.productNameBasedOnMultiSaveBadge
          attribute: content-desc
          storeIn: itemName

  - name: ca.test.functions.productSearch.pdp.validatingMultiSaveBadge
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.itemEntryImage
            - identifier: ca.test.mappings.pdp.promotionalBadgesFlag
      - log:
          message: Multi Save Badge is present in PDP page
          color: GREEN_BOLD
      - getString:
          identifier: //android.widget.TextView[@text="${badgeText}"] #ca.test.mappings.pdp.promotionalBadges
          attribute: content-desc
          storeIn: badgeText
      - log:
          message: Product offering ${badgeText}
          color: GREEN_BOLD

  - name: ca.test.functions.productSearch.extractingFirstProductName
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mapping.srp.productNameTitle #ca.test.mapping.srp.productTile
          timeout: 10000
      - getString:
          identifier: ca.test.mapping.srp.productNameTitle #ca.test.mapping.srp.productTile
          attribute: label
          storeIn: productName 
      - executeNode:
          file: ca/test/helpers/sanitizeProductName.js
          args:
            - value: ${productName}
          getResponse:
            storeIn: productTitle        

      # Product srp to pdp page
  - name: ca.test.functions.productSearch.prod.srpToPdpPage
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srpPage.productTileListView
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srpPage.productTileListView
                position: center
      - click:
          identifier: ca.test.mappings.srpPage.productTileListView
                      

  - name: ca.test.functions.productSearch.validatingMultiVariantProduct
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.walmart.ecommerceapp.qa:id/product_tile_variant_swatches
          then: 
            - scroll:
                direction: down
                untilIdentifier: ca.walmart.ecommerceapp.qa:id/product_tile_variant_swatches
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.walmart.ecommerceapp.qa:id/product_tile_variant_swatches
            - identifier: ca.walmart.ecommerceapp.qa:id/product_tile_primary_optional_cta
      - log: Multivariant product colors or options validation Sucessful

  - name: ca.test.functions.productSearch.clickAddToCart
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.pdp.addToCart
      - sleep:
          duration: 4000

  - name: ca.test.functions.pdp.extractingSize
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.pdp.digitalItems.productName
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.productSizeVariant 
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.productSizeVariant 
                position: center
      - getString:
          identifier: ca.test.mappings.pdp.productSizeVariant 
          attribute: text
          storeIn: productSize
      - log:
          message: Product Size - ${productSize}
          color: GREEN_BOLD

  - name: ca.test.functions.srpPage.multiSaveBannerValidation
    platform: android
    flow:
      - log:
          message: Multisave Banner validation started
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.search.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.search.multiSave.viewAll

  - name: ca.test.functions.productSearch.multiSave.addFromMultiSave
    platform: android
    flow:
      - log:
          message: Clicking View All Button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.search.multiSave.viewAll
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.product.multiSave.title
      - if:
          condition: ${multiSaveItemAdded} == true
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatch.oneItemAdded
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatchForTwo
            - executeFunction:
                name: ca.test.functions.productSearch.addToCart
            - verifyIdentifier:
                timeout: 20000
                present:
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatch.msOfferApplied
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatch.continueAddingMore
            - click:
                identifier: ca.test.mappings.global.closeIcon
      - if:
          condition: ${multiSaveItemAdded} == false
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatch.moreSavingsForTwo
                  - identifier: ca.test.mappings.product.multiSave.mixAndMatchForTwo

  - name: ca.test.functions.srpPage.multiSaveBannerValidation
    platform: ios
    flow:
      - log:
          message: Multisave Banner validation started
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.search.multiSave.multiSaveBanner
            - identifier: ca.test.mappings.search.multiSave.viewAll 
      - click:
          identifier: ca.test.mappings.search.multiSave.viewAll   
      - sleep:
         duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.search.multiSave.title
            - identifier: ca.test.mappings.search.multiSave.itemsStack
      - click:
          identifier: ca.test.mappings.global.closeIcon    

  - name: ca.test.functions.productSearch.recentSearches
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.home.searchBarSelected
      - verifyIdentifier:
          timeout: 5000
          present:
            - identifier: ca.test.mappings.productSearch.recentSearch1
            - identifier: ca.test.mappings.productSearch.recentSearch2

  - name: ca.test.functions.productSearch.basedOnPromotionalBadge
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.srp.product.promotionalBadge
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.srp.product.promotionalBadge
                position: center
                scrollLimit: 15
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.product.firstPromotionalBadge 

  - name: ca.test.functions.productSearch.nameExtractionBasedOnPromotionalBadge
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.product.firstPromotionalBadge
      - getString:
          identifier: ca.test.mappings.srp.productnameBasedOnBadge
          attribute: label
          storeIn: itemName                       

  - name: ca.test.functions.productSearch.pdp.validatingPromotionalDetails
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            # - identifier: ca.test.mapping.pdp.itemname
            #   contains: ${product_name}
            - identifier: ca.test.mappings.pdp.promotionalBadges
              contains: ${promotionalBadge}
      - getString:
          identifier: ca.test.mappings.pdp.productCurrentPrice
          attribute: label
          storeIn: currentPrice
      - log:
          message: Current Price of the product is ${currentPrice}
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.productOldPrice
          attribute: label
          storeIn: wasPrice
      - log:
          message: Old Price of the product is ${wasPrice}.
          color: GREEN_BOLD    

  - name: ca.test.functions.searchPage.favouritesIcon
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.searchPage.favouritesProdutName
      - click:
          identifier: ca.test.mappings.searchPage.favouritesButton

  - name: ca.test.functions.productSearch.basedOnSaveBadge
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.search.multiSave.viewAll 
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.search.multiSave.viewAll 
                position: center
                scrollLimit: 10
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.search.multiSave.viewAll                                                            

  - name: ca.test.functions.productSearch.nameExtractionBasedOnMultiSavePromotionalBadge
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.search.multiSave.multiSaveBanner
      - getString:
          identifier: ca.test.mappings.srp.productnameBasedOnBadge
          attribute: label
          storeIn: itemName
          
  - name: ca.test.functions.dynamicProductAddition  
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.home.addToCart
          then:
            - click:
                identifier: ca.test.mapping.home.addToCart
          else:
            - scroll:
                direction: down
                scrollLimit: 1
            - sleep:
                duration: 5000
            - click:
                identifier: ca.test.mapping.home.addToCart
                    
  - name: ca.test.functions.dynamicProductAdditionUpto 
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - getString:
          identifier: ca.test.mappings.cart.subTotal
          attribute: value
          storeIn: subtotal
      - executeNode:
          file: ca/test/helpers/global/removeDollarFromPrice.js
          args:
            - value: ${subtotal}
          getResponse:
            storeIn: fin_subtotal
      - log:
          message: currect cart value is $ ${fin_subtotal}
          color: GREEN_BOLD

  - name: ca.test.functions.dynamicProduct
    platform: ios
    flow:
      - executeFunction:
          name: ca.test.functions.dynamicProductAddition
      - sleep:
          duration: 500
      - loop:
          begin: 1
          end: 10
          mode: increment
          flow:
            - executeFunction:
                name: ca.test.functions.dynamicProductAdditionUpto
            - if:
                condition: ${fin_subtotal} <= 35
                then:
                    - executeFunction:
                        name: ca.test.functions.dynamicProductAddition
                else:
                  - break: true
      - if:
          condition: ${fin_subtotal} > 35
          then:
            - log:
                message: Subtotal is greater than 35$!
                color: GREEN_BOLD

  - name: ca.test.functions.productSearch.pdp.validatingMultiSaveBadge
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.pdp.itemEntryImage
            - identifier: ca.test.mappings.pdp.promotionalBadgesFlag
      - log:
          message: Multi Save Badge is present in PDP page
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.pdp.multiSave.multiSaveBanner
          attribute: label
          storeIn: badgeText
      - log:
          message: Product offering ${badgeText}
          color: GREEN_BOLD              

  - name: ca.test.functions.productSearch.addToCartCostExtractionSRP
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.productCost
      - getString:
          identifier: ca.test.mappings.srp.productCost
          attribute: value
          storeIn: productValue
      - executeNode:
          file: ca/test/helpers/global/extractingProductCost.js
          args:
            - value: ${productValue}
          getResponse:
            storeIn: productCost
