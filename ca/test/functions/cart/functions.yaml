functions:
  # Cart page to CheckOut
  - name: ca.test.functions.cart.proceedToCheckOut
    platform: android
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - verifyIdentifier:
          timeout: 15000
          notPresent:
            - identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.missingAnythingPopup
          then:
            - click:
                identifier: ca.test.mappings.cart.missingAnythingContiune

  # GM product choosing pickup Instead 
  - name: ca.test.functions.cart.proceedToPickupInstead
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.proceedToPickupInstead
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mapping.cart.proceedToPickupInstead
            - click: 
                identifier: ca.test.mapping.cart.proceedToPickupInstead    
          else:         
            - click:
                identifier: ca.test.mapping.cart.proceedToPickupInstead
  
  # GM product choosing ship Instead
  - name: ca.test.functions.cart.proceedToShipInstead
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.proceedToShipInstead
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mapping.cart.proceedToShipInstead
            - click: 
                identifier: ca.test.mapping.cart.proceedToShipInstead    
          else:         
            - click:
                identifier: ca.test.mapping.cart.proceedToShipInstead              

  # Change store in reserve page
  - name: ca.test.functions.reserveTime.changeStore
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.reserveTime.changeLocation
          then:
            - getString:
                identifier: ca.test.mappings.reserveTime.pickupStoreAddress
                attribute: text
                storeIn: store_Name
            - if:
                condition: ${store_Name} != ${storeDisplayed}
                then:
                  - click:
                      identifier: ca.test.mappings.reserveTime.changeLocation
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: ca.test.mappings.title
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.reserveTime.changeLocation.enterPincode
                  - enterText:
                      identifier: ca.test.mappings.reserveTime.changeLocation.enterPincode
                      string: ${Zip_Code}
                      pressEnter: true
                  - click:
                      identifier: ca.test.mappings.reserveTime.selectStore
                  - click:
                      identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
                  - verifyIdentifier:
                      timeout: 10000
                      present:
                        - identifier: ca.test.mappings.reserveTime.curbsidePickup
                        - identifier: ca.test.mappings.reserveTime.deliveryFromStore
      - log:
          message: ${storeName} Store Selector
          color: GREEN_BOLD

  # Change store in reserve page
  - name: ca.test.functions.reserveTime.changeStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.changeLocation
      - if:
          identifier:
            label:
              - identifier: ca.test.mappings.reserveTime.pickupStoreName
                contains: ${storeDisplayed}
          then:
            - log:
                message: ${storeName} Store Selector
                color: GREEN_BOLD
          else:
            - click:
                identifier: ca.test.mappings.reserveTime.changeLocation
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: ca.test.mappings.storeSelectionPage.title
            - enterText:
                  identifier: ca.test.mappings.home.zipCodeHome
                  clearField: true
                  string: ${Zip_Code}
                  pressEnter: true
            - verifyIdentifier:
                timeout: 20000
                present:
                  - identifier: StoreListViewController.tableView
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mapping.storeSelectionPage.storeName
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mapping.storeSelectionPage.storeName
                      scrollLimit: 5
            - click:
                identifier: ca.test.mapping.storeSelectionPage.storeName
            - click:
                identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
            - loop:
                begin: 0
                end: 5
                mode: increment
                flow:
                  - sleep:
                      duration: 5000
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.global.errorBoxTitle
                      then:
                        - click:
                            identifier: ca.test.mappings.error.retryButton
                      else:
                        - break: true
            - verifyIdentifier:
                timeout: 20000
                present:
                  - identifier: ca.test.mappings.reserveTime.curbsidePickup
                  - identifier: ca.test.mappings.reserveTime.deliveryFromStore
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.reserveTime.pickupStoreName
                    contains: ${storeDisplayed}

  # ScheduledPickUp GO and Mixed Card in cart
  - name: ca.test.functions.cart.scheduledPickup.verifyCard
    platform: android
    flow:
      - sleep:
          duration: 3000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.pickup.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.pickup.cardTitle
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.pickup.cardTitle
            - identifier: ca.test.mappings.cart.selectedSlotDetails
            - identifier: ca.test.mappings.cart.reserveTime.changeButton

  # Checking for items in cart and if present executing item removing function
  - name: ca.test.functions.productSearch.checkItemsInCartAndRemovingThem
    platform: android
    flow:
      - sleep:
          duration: 15000
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cartItemCount
      - getString:
          identifier: ca.test.mappings.cartItemCount
          extractNumbers: true
          storeIn: cartItemsCount
      - log: 
          message: "Items in cart: $cartItemsCount"
          color: GREEN_BOLD
      - if:
          condition: "(${cartItemsCount} > 0)"
          then:
            - executeFunction:
                name: ca.test.functions.productSearch.removeItemFromCart
            - verifyIdentifier:
                timeout: 60000
                present:
                  - identifier: ca.test.mappings.startShopping
            - sleep:
                duration: 5000
            - click:
                identifier: ca.test.mappings.startShopping
            - log:
                message: Items successful removed from cart
                color: GREEN_BOLD
            - executeFunction:
                name: ca.test.functions.utils.personalizedExperiencePopUp

  # Remove Item from Cart
  - name: ca.test.functions.productSearch.removeItemFromCart
    platform: android
    flow:
      - executeFunction:
          name: ca.test.functions.global.navigation.goToCart
      - loop:
          begin: 0
          end: ${cartItemsCount}
          mode: increment
          flow:
            - sleep:
                duration: 7000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cartItemRemove
                then:
                  - click:
                      identifier: ca.test.mappings.cartItemRemove
                else:
                  - break: true
      - executeFunction:
          name: ca.test.functions.cart.checkUnavailableItemsAndRemovingThem

  # function to count product add to cart for assertion
  - name: ca.test.functions.cart.quantityCount
    platform: android
    flow:
      - if:
          condition: ${cartQuantity} == null
          then:
            - arithmetic:
                expression: "1"
                storeIn: cartQuantity
          else:
            - arithmetic:
                expression: ${cartQuantity} + 1
                storeIn: cartQuantity

  # cart value assertion
  - name: ca.test.functions.cart.assertCartTotal
    platform: android
    flow:
      - log: 
          message: "Cart Sub Total Assertion Started"
          color: GREEN_BOLD
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cartSummarySubTotal
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cartSummarySubTotal
              contains: ${subTotal}
      - getString:
         identifier: ca.test.mappings.cartSummarySubTotal
         storeIn: taxableTotal
      - log: 
          message: "Cart SubTotal Assertion Succesful" 
          color: GREEN_BOLD

  # Cart Quantity assert
  - name: ca.test.functions.cart.assertCartQuantity
    platform: android
    flow:
      - log: 
          message: "Cart Assertion Started"
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.navBar.cartIcon
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cartItemCount
              equals: ${cartQuantity}
      - log: 
          message: "Cart Assertion Succesful" 
          color: GREEN_BOLD

  # # Cart Quantity assert
  # - name: ca.test.functions.cart.assertCartQuantity
    # platform: ios
    # flow:
    #   - log: 
    #       message: "Cart Assertion Started"
    #       color: GREEN_BOLD
    #   - verifyIdentifier:
    #       present:
    #         - identifier: ca.test.mappings.navBar.cartIcon
    #   - verifyIdentifier:
    #       label:
    #         - identifier: ca.test.mappings.cartItemCount
    #           equals: ${cartQuantity}
    #   - log: 
    #       message: "Cart Assertion Succesful" 
    #       color: GREEN_BOLD

  # GM S2H in cart
  - name: ca.test.functions.cart.deliveryS2H.verifyCard
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.changeButton
          then:
            - scroll:     
                direction: down
                untilIdentifier: ca.test.mappings.cart.delivery.changeButton    
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.changeButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
          then:
            - scroll:
                direction: down #up
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitleShipping
                position: center
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
      - log:
          message: "--------------------Delivery S2H Verify Card--------------------"
          color: GREEN_BOLD

    # Pickup card validation
  - name: ca.test.functions.cart.pickup.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mappings.cart.delivery.changeButton

  # Shipping card validation when Pickup items are also present in cart
  - name: ca.test.functions.cart.shippingwithPickup.verifyCard
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitle
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitle
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mapping.cart.proceedToPickupInstead

  # Product title verification
  - name: ca.test.functions.cart.varifyProductTitle
    platform: android
    flow:
      - log:
          message: "Product title validation ${productName} started"
          color: RED_BOLD
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTitle
            - identifier: ca.test.mappings.cart.costPerPcs
            - identifier: ca.test.mappings.cart.productTotalPrice
            - identifier: ca.test.mappings.cart.productRemoveButton
            - identifier: ca.test.mappings.cart.productSaveForLater
            - identifier: ca.test.mappings.cart.productQuantityStepper
      - log:
          message: "Product title validation ${productName} succesful"
          color: RED_BOLD

  # Cart subtotal assertion
  - name: ca.test.functions.cart.cartSubtotal
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.estimatedTotal
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.estimatedTotal
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotalText
            - identifier: ca.test.mappings.cart.subTotal.walmartShippingText
            - identifier: ca.test.mappings.cart.subTotal.taxesText
            - identifier: ca.test.mappings.cart.estimatedTotalText
            - identifier: ca.test.mappings.cart.bottomRibbon.estimatedTotal
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotalValue
              contains: ${subTotal}
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.walmartShippingValue
              contains: ${walmartShipping}
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.taxesValue
              contains: ${taxes}
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.estimatedTotalValue
              contains: ${subTotal}

  # Navigate to reserve time page
  - name: ca.test.functions.cart.reserveTimePage
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.goFullfilmentOption
            timeout: 10000
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.goFullfilmentOptions
                scrollLimit: 4
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.reserveTime.changeButton
          then:
            - click:
                identifier: ca.test.mappings.cart.reserveTime.changeButton
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.reserveTime.reserveATime
          then:
            - click:
                identifier: ca.test.mappings.cart.reserveTime.reserveATime
      - sleep:
          duration: 10000
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.reserveTime.curbsidePickup
            - identifier: ca.test.mappings.reserveTime.deliveryFromStore
      - log:
          message: Reserve page open sucessful
          color: GREEN_BOLD
        
  # Validating Reserve Time Page
  - name: ca.test.functions.reserveTimePageValidation
    platform: android
    flow:
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.reserveTime.title
                        - identifier: ca.test.mappings.pdp.sheetToolBar
                        - identifier: ca.test.mappings.reserveTime.curbsidePickup
                        - identifier: ca.test.mappings.reserveTime.deliveryFromStore
                        - identifier: ca.test.mappings.global.closeIcon
                        - identifier: ca.test.mappings.reserveTime.pickupStoreName
                        - identifier: ca.test.mappings.reserveTime.pickupStoreAddress
                        - identifier: ca.test.mappings.reserveTime.changeLocation
                        - identifier: ca.test.mappings.reserveTime.bookslotDayCarousel
                        - identifier: ca.test.mappings.reserveTime.bookslotTimingRecyclerView
                  - log:
                      message: Reserve page validation Sucessful
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - if:
                        identifier:
                          present:
                             - identifier: ca.test.mappings.global.errorBoxTitle
                        then:
                          - click:
                              identifier: ca.test.mappings.reserveTime.alertBoxLaterButton
                        else:
                          - failTest:
                              message: "--------------------Reserve Page Failed to Open--------------------"

  # Validating Reserve Time Page
  - name: ca.test.functions.reserveTimePageValidation
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.reserveTime.title
                        - identifier: ca.test.mappings.reserveTime.curbsidePickup
                        - identifier: ca.test.mappings.reserveTime.deliveryFromStore
                        - identifier: ca.test.mappings.global.closeIcon
                        - identifier: ca.test.mappings.reserveTime.pickupStoreName
                        - identifier: ca.test.mappings.reserveTime.changeLocation
                        - identifier: ca.test.mappings.reserveTime.bookslotDayCarousel
                        - identifier: ca.test.mappings.reserveTime.bookslotTimingRecyclerView
                  - log:
                      message: Reserve page validation Sucessful
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - if:
                        identifier:
                          present:
                             - identifier: ca.test.mappings.global.errorBoxTitle
                        then:
                          - click:
                              identifier: ca.test.mappings.reserveTime.alertBoxLaterButton
                        else:
                          - failTest:
                              message: "--------------------Reserve Page Failed to Open--------------------"

  # Scheduleddelivery GO and Mixed Card in cart
  - name: ca.test.functions.cart.scheduledDelivery.verifyCard
    platform: android
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.delivery.cardTitle
            - identifier: ca.test.mappings.cart.selectedSlotDetails
            - identifier: ca.test.mappings.cart.reserveTime.changeButton

  - name: ca.test.functions.cart.groceryDelivery
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryDeliveryFeeText
      - if:
          condition: ${slotPrice} == '$0' || ${slotPrice} == '0 $'
          then:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.groceryDeliveryFeeValue
                    contains: ca.test.data.freeSlotText
          else:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.groceryDeliveryFeeValue
                    contains: ${groceryFee}

  - name: ca.test.functions.cart.otherFee
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
            - identifier: ca.test.mappings.cart.feeText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.feeText
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.feeText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.feeValue
              contains: ${additionalFee}

  - name: ca.test.function.cart.goBackToCart
    platform: android
    flow:
      - click:
          identifier: ca.test.checkOut.backButton
      - sleep:
          duration: 2000
      - click:
          identifier: ca.test.mappings.checkout.leaveAnywayButton
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.cartPage

  - name: ca.test.functions.cart.moneyBoxDriverTip
    platform: android
    flow:
      - executeFunction:
          name: ca.test.function.cart.goBackToCart
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.checkout.driverTip.driverTipMoneyBox 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.driverTip
      
  - name: ca.test.functions.cart.DriverTipFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.feeText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.feeValue
              contains: ${additionalFee}

  - name: ca.test.functions.checkout.DriverTip.zeroTip
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.checkout.driverTip.container
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.checkout.driverTip.container
                scrollLimit: 2
                timeout: 12000
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.checkout.driverTip.titleText
            - identifier: ca.test.mappings.checkout.driverTip.tipAmount
            - identifier: ca.test.mappings.checkout.driverTip.tipIbutton
            - identifier: ca.test.mappings.checkout.driverTip.tipDisclaimer
      - if:
          identifier:
            value:
              - identifier: ca.test.mappings.checkout.driverTip.tipAmount
                contains: $0.00
          then:
            - log:
                message: "Zero driver tip selected."
                color: GREEN_BOLD
            - break: true
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.checkout.driverTip.customTip
                then:
                  - click:
                      identifier: ca.test.mappings.checkout.driverTip.tipContainer 
                  - click:
                      identifier: ca.test.mappings.checkout.driverTip.customTip
                      wait: 5000
            - click:
                identifier: ca.test.mappings.checkout.driverTip.customTip
            - enterText:
                identifier: ca.test.mappings.checkout.driverTip.customTip
                string: 0.0
            - click:
                identifier: ca.test.mapping.checkout.keyboard
            - sleep:
                duration: 10000
      - verifyIdentifier:
          value:
            - identifier: ca.test.mappings.checkout.driverTip.tipAmount
              contains: 0

  - name: ca.test.functions.cart.gstTaxAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.gstTaxesText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.gstTaxesText
              contains: ${gst_percentage}
            - identifier: ca.test.mappings.cart.subTotal.gstTaxesValue
              contains: ${gst_tax_value}
      - log: 
          message: "--------------------Cart Page GST Tax Assertion Successful--------------------"
          color: GREEN_BOLD

# validate CRF/ENV fees in cart
  - name: ca.test.functions.cart.validateCrfEnvFeesandroid
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.CRFfee
            - identifier: ca.test.mappings.cart.EcoHandlingfee
            - identifier: ca.test.mappings.cart.BevDepositfee
  # validate CRF fees in cart
  - name: ca.test.functions.cart.validateCrfFees
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.CRFfee
  # validate eco handling fees in cart
  - name: ca.test.functions.cart.validateEcoHandlingFees
    platform: android
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.ecoHandlingfee
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.ecoHandlingValue
              contains: ${eco_fee} 
      - log: "Cart Page eco handling fee Assertion Sucessful"

  # validate Bev fees in cart
  - name: ca.test.functions.cart.validateBevFees
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.BevDepositfee

  - name: ca.test.functions.cart.clickTheCartAfterAPICall
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.homePage.cartNotEmpty
          then:
            - click:
                identifier: ca.test.mappings.homePage.cartNotEmpty
            - sleep:
                duration: 10000
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: ca.test.mappings.cart.startShopping

  - name: ca.test.functions.cart.proceedToCheckOutIos
    platform: ios
    flow:
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 5000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.missingAnythingPopUp
          then:
            - click:
                identifier: ca.test.mappings.cart.missingAnythingContinueButton 
      - verifyIdentifier:
          timeout: 60000
          present:
            - identifier: ca.test.mappings.checkOutPage.reviewOrderText

  # New proceed to checkout functions
  - name: ca.test.functions.cart.proceedToCheckOut
    platform: ios
    flow:
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 500
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.missingAnythingPopUp
          then:
            - click:
                identifier: ca.test.mappings.cart.missingAnythingContinueButton 
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: ca.test.mappings.checkOutPage.reviewOrderText

  - name: ca.test.functions.cart.proceedToPickupInsteadIos  
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.proceedToPickupInstead
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mapping.cart.proceedToPickupInstead
                scrollLimit: 4
            - click: 
                identifier: ca.test.mapping.cart.proceedToPickupInstead    
          else:         
            - click:
                identifier: ca.test.mapping.cart.proceedToPickupInstead
          
  
  - name: ca.test.functions.cart.proceedToShipInsteadIos
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.cart.proceedToShipInstead
          then:
            - click: 
                identifier: ca.test.mapping.cart.proceedToShipInstead   
          else:         
            - click:
                identifier: ca.test.mapping.cart.proceedToPickupInstead  

  # GM S2H in cart ios
  - name: ca.test.functions.cart.deliveryS2H.verifyCard
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.shipping.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.shipping.cardTitle
                scrollLimit: 4
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.shipping.cardTitle
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            # - identifier: ca.test.mappings.cart.delivery.changeButton
  
  # GM S2H in cart ios
  - name: ca.test.functions.cart.mixeddeliveryS2H.verifyCard
    platform: ios
    flow:
      - log: 
          message: "Product name validation ${productName} started"
          color: GREEN_BOLD
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productTitle
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productQuantityStepper
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.productTitle
                        - identifier: ca.test.mappings.cart.costPerPcs
                        - identifier: ca.test.mappings.cart.productTotalPrice
                        - identifier: ca.test.mappings.cart.productRemoveButton
                        - identifier: ca.test.mappings.cart.productSaveForLater
                        - identifier: ca.test.mappings.cart.productQuantityStepper
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.productQuantity
                          contains: ${quantity}
                  - log: 
                      message: "Product name validation ${productName} successful"
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productQuantityStepper

#-----------------------Cart Sub Total Assertion Functions----------------------------------------
  - name: ca.test.functions.cart.subTotalAssertion
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotal.taxesText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotal.taxesText
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotalText
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.subTotalValueWithDiscount
          then:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.subTotalValueWithDiscount
                    contains: ${subTotal}    
            - log: 
                message: Discount value is visible
                color: PURPLE_BOLD_BRIGHT
          else: 
           - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.subTotalValue
                    contains: ${subTotal}           
      - log: 
          message: "--------------------Cart Page SubTotal Assertion Successful--------------------"
          color: GREEN_BOLD
  
  # Product title verification
  - name: ca.test.functions.cart.verifyProductTitle
    platform: ios
    flow:
      - log: 
          message: "Product title validation ${productName} started"
          color: GREEN_BOLD
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle
                scrollLimit: 1 #4
                timeout: 20000
      # - scroll:
      #     direction: up
      #     scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTitle
          #  - identifier: ca.test.mappings.cart.costPerPcs
            - identifier: ca.test.mappings.cart.productTotalPrice
            - identifier: ca.test.mappings.cart.productRemoveButton
            - identifier: ca.test.mappings.cart.productSaveForLater
            - identifier: ca.test.mappings.cart.productQuantityStepper
      - log: 
          message: "Product title validation ${productName} successful"
          color: GREEN_BOLD
               
 
  #**************************************************************************             
  
  # for free shipping and below 35$ cart value
  - name: ca.test.functions.cart.walmartShipping
    platform: android
    flow:
      - scroll:
          direction: down
          timeout: 3000
      - if:
          condition: ${walmartShipping} == 'FREE' || ${walmartShipping} == 'GRATUIT' # ${walmartShipping} == 'FREE' #
          then:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.subTotal.walmartShippingText
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.subTotal.walmartShippingValue
                    equals: ${walmartShipping}
          else:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.subTotal.walmartShippingLessThanThresholdText
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.subTotal.walmartShippingLessThanThresholdValue
                    contains: ${walmartShipping}
      - log: 
          message: "--------------------Cart Page Walmart Shipping Successful--------------------"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.totalTaxAssertion
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotal.taxesText
          then:  
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotal.taxesText
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.taxesText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.taxesValue
              contains: ${total_tax}
      - log: 
          message: "--------------------Cart Page Total Tax Assertion Successful--------------------"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.hstTaxAssertion
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotal.hstTaxesText
          then:  
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotal.hstTaxesText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.hstTaxesText
              contains: ${hst_percentage}
            - identifier: ca.test.mappings.cart.subTotal.hstTaxesValue
              contains: ${hst_tax_value}
      - log: 
          message: "--------------------Cart Page HST Tax Assertion Successful--------------------"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.estimatedTotal
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.estimatedTotalText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.estimatedTotalValue
              contains: ${estimate_total}
      - log: 
          message: "--------------------Cart Page Estimate Total Assertion Successful--------------------"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.groceryPickUp
    platform: android
    flow:
      - if:
          condition: ${slotPrice} == 'null' || ${slotPrice} == '$0'
          then:
            - storeIn:
                key: slotPrice
                value: FREE
      - if:
          condition: ${slotPrice} == '0 $'
          then:
            - storeIn:
                key: slotPrice
                value: GRATUIT
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.groceryPickUpFeeText
          then:
            - executeFunction:
                name: ca.test.functions.utils.scrollToView
                params:
                  - name: scrollContainer
                    string: ca.test.mappings.cart.productRecyclerView 
                  - name: untilIdentifier
                    string: ca.test.mappings.cart.groceryPickUpFeeText
                  - name: searchDirection
                    string: down
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryPickUpFeeText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.groceryPickUpFeeValue
              contains: ${slotPrice}

  - name: ca.test.functions.cart.groceryPickUp
    platform: ios
    flow:
      - if:
          condition: ${slotPrice} == null || ${slotPrice} == '$0'
          then:
            - storeIn:
                key: slotPrice
                value: FREE
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryPickupFeeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.groceryPickUpFeeValue
              contains: ${slotPrice}
#-------------------------------------------------------------------------------------------------

  - name: ca.test.functions.cart.fulfillmentAddress
    platform: android
    flow:
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfillmentMethod
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.shippingAddressFirstLine
          then:
            - click:
                identifier: ca.test.mappings.cart.fulfillmentMethod
            - sleep:
                duration: 8000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.home.addressChangeTitle
                then:
                  - click:
                      identifier: ca.test.mapping.cart.shippingAddressFirstLine
                  - click:
                      identifier: ca.test.mappings.home.addressChange.saveAddressButton
                  - break: true
                  - sleep:
                      duration: 3000 

  - name: ca.test.functions.cart.selectShippingOptions
    platform: android
    flow:
      - scroll:
          direction: up
          scrollLimit: 1
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
                      then:
                        - scroll:
                            direction: up
                            position: center
                            untilIdentifier: ca.test.mappings.cart.delivery.cardTitleShipping
                        - log:
                            message: "--------------------Scrolling To Cart Fulfillment Card--------------------"
                            color: GREEN_BOLD
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
                  - break: true
                catch:
                  flow:
                    - scroll:
                            direction: down
                            position: center
                            untilIdentifier: ca.test.mappings.cart.delivery.cardTitleShipping
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.shipInsteadButton
                then:
                  - click: 
                      identifier: ca.test.mappings.cart.shipInsteadButton
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.pickUpButton
                then:
                  - break: true
      # - verifyIdentifier:
      #     present:
      #       - identifier: ca.test.mappings.cart.pickUpButton                       

######################################################################### IOS ##########################################################################
 
   # Pickup in cart ios
  - name: ca.test.functions.cart.pickUp.GOverifyCardIos
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.pickUp.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.pickUp.cardTitle
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.pickUp.cardTitle
            - identifier: ca.test.mappings.cart.pickUp.fullfilmentTime
            - identifier: ca.test.mappings.cart.pickUp.changeButton
            - identifier: ca.test.mappings.cart.pickUp.storeName     

#Remove cart items in ios
  - name: ca.test.functions.cart.verifyItemInCart 
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.homepage.emptycart
          then:
            - sleep:
                duration: 10000
            - executeFunction:
                name: ca.test.functions.cart.removeCartItems

  - name: ca.test.functions.cart.removeCartItems
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.homePage.cartNotEmpty
          then:
            - click:
                identifier: ca.test.mappings.homePage.cartNotEmpty
      - sleep: 
          duration: 8000
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - loop:
          begin: 0
          end: 999
          mode: increment
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.homepage.emptycart_prod
                then:
                  - click:
                      identifier: ca.test.mappings.cart.remove.productRemoveButton
                else:
                  - verifyIdentifier:
                     timeout: 15000
                     present: 
                       - identifier: ca.test.mappings.homepage.emptycart_prod # ca.test.mappings.cart.emptyStateViewTitle #
                  - break: true     
      - click:
          identifier: ca.test.mappings.cart.startShopping
   
  # Select pick up instead option
  - name: ca.test.functions.cart.selectPickupOptions
    platform: android
    flow:
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - sleep:
                duration: 7000
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.fullfilmentTypeSwitchCard
                then:
                  - log:
                      message: Scrolling to cart fulfillment card
                      color: GREEN_BOLD
                  - scroll:
                      direction: up
                      position: center
                      untilIdentifier: ca.test.mappings.cart.fullfilmentTypeSwitchCard
                      scrollLimit: 2
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.pickUpButton
                then:
                  - click: 
                      identifier: ca.test.mappings.cart.pickUpButton
                  - log:
                      message: Selecting pick up instead
                      color: GREEN_BOLD
                else:
                  - log:
                      message: Pick up Instead already selected
                      color: GREEN_BOLD
            - if:
                identifier:
                  timeout: 5000
                  present:
                    - identifier: ca.test.mappings.cart.shipInsteadButton
                then:
                  - log:
                      message: Fulfillment type pickup instead selected
                      color: GREEN_BOLD
                  - break: true


  # Validating store in cart page, changing if required
  - name: ca.test.functions.cart.validatingStoreForPickUp
    platform: android
    flow:
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfillmentMethod
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.pickUpAddress
                then:
                  - click:
                      identifier: ca.test.mappings.cart.fulfillmentMethod
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.global.locationSearchTextBox
                  - enterText:
                      identifier: ca.test.mappings.global.locationSearchTextBox
                      string: ${storeZipCode}
                      pressEnter: true
                  - sleep:
                      duration: 5000
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.selectStore.storeName
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.selectStore.storeName
                  - click:
                      identifier: ca.test.mappings.selectStore.storeName
                  - click:
                      identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
                  - loop:
                      begin: 1
                      end: 4
                      mode: increment
                      flow:
                        - try:
                            flow:
                              - verifyIdentifier:
                                  timeout: 15000
                                  present:
                                    - identifier: ca.test.mappings.cart.fulfillmentMethod
                              - break: true
                            catch:
                              flow:
                                - if:
                                    identifier:
                                      present:
                                        - identifier: ca.test.mappings.global.errorBoxTitle
                                    then:
                                      - click: 
                                          identifier: ca.test.mappings.global.button2
                                    else:
                                      - failTest: true
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: ca.test.mappings.cart.pickUpAddress
          catch:  
            flow:
              - getString:
                  identifier: ca.test.mappings.cart.pickup.address
                  attribute: text
                  storeIn: storeText
              - if:
                  condition: ${storeAddress} == ${storeText}
                  then:
                    - log:
                        message: "Store Assertion Successful in cart page."
                        color: GREEN_BOLD
                  else:
                    - click:
                        identifier: ca.test.mappings.cart.pickup.address
                    - verifyIdentifier:
                        present:
                          - identifier: ca.test.mappings.global.locationSearchTextBox
                    - enterText:
                        identifier: ca.test.mappings.global.locationSearchTextBox
                        string: ${storeZipCode}
                        pressEnter: true
                    - sleep:
                        duration: 5000
                    - if:
                        identifier:
                          notPresent:
                            - identifier: ca.test.mappings.selectStore.storeName
                        then:
                          - scroll:
                              direction: down
                              untilIdentifier: ca.test.mappings.selectStore.storeName
                    - click:
                        identifier: ca.test.mappings.selectStore.storeName
                    - click:
                        identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
                    - loop:
                        begin: 1
                        end: 4
                        mode: increment
                        flow:
                          - try:
                              flow:
                                - verifyIdentifier:
                                    timeout: 15000
                                    present:
                                      - identifier: ca.test.mappings.cart.fulfillmentMethod
                                - break: true
                              catch:
                                flow:
                                  - if:
                                      identifier:
                                        present:
                                          - identifier: ca.test.mappings.global.errorBoxTitle
                                      then:
                                        - click: 
                                            identifier: ca.test.mappings.global.button2
                                      else:
                                        - failTest: true                    

  # GM PFS in cart
  - name: ca.test.functions.cart.deliveryPFS.verifyCard
    platform: android
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.pickup.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.pickup.cardTitle
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.pickup.cardTitle
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mappings.cart.delivery.changeButton

  # Pickup card validation
  - name: ca.test.functions.cart.pickup.verifyPickupCardIos
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 50000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.pickUp.cardTitle
            - identifier: ca.test.mappings.cart.pickUp.fullfilmentTime
            - identifier: ca.test.mappings.cart.pickUp.shipInsteadButton
            - identifier: ca.test.mappings.cart.pickUp.storeName     
 


  - name: ca.test.functions.cart.selectShippingOptionsIos
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitle
          then:
            - scroll:
                direction: up 
                position: center             
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitle
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.cart.proceedToShipInstead 
          then:
            - click:
                 identifier: ca.test.mapping.cart.proceedToShipInstead 
          else:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.switchtoShippingButton
                then:
                  - click:
                      identifier: ca.test.mappings.cart.switchtoShippingButton

      # - verifyIdentifier:
      #     timeout: 10000
      #     present:
      #       - identifier: ca.test.mapping.cart.proceedToPickupInstead

  # Product title verification
  - name: ca.test.functions.cart.verifyProductDetails
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productQuantityStepper
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productQuantityStepper
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTitle
            - identifier: ca.test.mappings.cart.costPerPcs
            - identifier: ca.test.mappings.cart.productTotalPrice
            - identifier: ca.test.mappings.cart.productRemoveButton
            - identifier: ca.test.mappings.cart.productSaveForLater
            - identifier: ca.test.mappings.cart.productQuantityStepper
            - identifier: ca.test.mappings.cart.productQuantityStepper.productQuantityIncrement
            - identifier: ca.test.mappings.cart.productQuantityStepper.productQuantityDecrement
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.productTotalPrice.price
              contains: "${productPrice}"
            - identifier: ca.test.mappings.cart.productQuantity
              contains: "${productQty}"
      - log:
          message: Price & Quantity validation is successfull for ${productName}.
          color: GREEN_BOLD
      - if:
          identifier:
            text:
              - identifier: ca.test.mappings.cart.productTotalPrice.youSave
                contains: You save
          then:
            - verifyIdentifier:
                text:
                  - identifier: ca.test.mappings.cart.productTotalPrice.productWasPrice
                    contains: ${strikeOutPrice}
                  - identifier: ca.test.mappings.cart.productTotalPrice.productSavedPrice
                    contains: ${savePrice}
      - log:
          message: "Product title validation ${productName} successful"
          color: GREEN_BOLD

# Product title verification
  - name: ca.test.functions.cart.ProductDetailsValidation
    platform: ios
    flow:
      - scroll:
          direction: down
          scrollLimit: 1
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.ProductName
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.ProductName
                scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.ProductName
            - identifier: ca.test.mappings.cart.removeButtonSFL
            - identifier: ca.test.mappings.cart.saveForLaterButton
            - identifier: ca.test.mappings.cart.productQuantityStepper
            - identifier: ca.test.mappings.cart.costPerPcsios
      - if:
          condition: ${dependencies.general.language} == 'en'
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.ProductPrice
                    contains: "$${productPrice}"
                  - identifier: ca.test.mappings.cart.ProductQty
                    contains: "${productQty}"
          else: 
              - if:
                  condition: ${dependencies.general.language} == 'fr'
                  then:
                    - verifyIdentifier:
                        label:
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                            contains: "${productPrice}$"
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productQty
                            contains: "${productQty}"

# Product title verification
  - name: ca.test.functions.cart.verifyProductDetails
    platform: ios
    flow:
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.verifyProductTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.verifyProductTitle
                scrollLimit: 1 #2
      - scroll:
          direction: up
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.verifyProductTitle
            - identifier: ca.test.mappings.cart.verifyProductTitle.RemoveButton
            - identifier: ca.test.mappings.cart.verifyProductTitle.SaveForLater
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityStepper
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityIncrement
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityDecrement
      - if:
          condition: ${dependencies.general.language} == 'en'
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                    contains: "Cost: ${productPrice}"
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productQty
                    contains: "Qty ${productQty}"
          else: 
              - if:
                  condition: ${dependencies.general.language} == 'fr'
                  then:
                    - verifyIdentifier:
                        label:
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                            contains: "Coût : ${productPrice}"
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productQty
                            contains: "Qté ${productQty}"

# Product title verification
  - name: ca.test.functions.cart.verifyProductDetails.withStrikOutPrice
    platform: ios
    flow:
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.verifyProductTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.verifyProductTitle
                scrollLimit: 2
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.verifyProductTitle
            - identifier: ca.test.mappings.cart.verifyProductTitle.RemoveButton
            - identifier: ca.test.mappings.cart.verifyProductTitle.SaveForLater
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityStepper
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityIncrement
            - identifier: ca.test.mappings.cart.verifyProductTitle.productQuantityDecrement
      - if:
          condition: ${dependencies.general.language} == 'en'
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                    contains: "Cost: ${productPrice}"
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productQty
                    contains: "Qty ${productQty}"
          else: 
              - if:
                  condition: ${dependencies.general.language} == 'fr'
                  then:
                    - verifyIdentifier:
                        label:
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                            contains: "Coût : ${productPrice}"
                          - identifier: ca.test.mappings.cart.verifyProductTitle.productQty
                            contains: "Qté ${productQty}"
      - if:
          condition: ${strikeOutPrice} != null
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                    contains: ca.test.data.previousPrice
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                    contains: ${strikeOutPrice}
                  - identifier: ca.test.mappings.cart.verifyProductTitle.productTotalPrice
                    contains: ca.test.data.savedPrice 
      - log: 
          message: "Product title validation ${productName} successful"
          color: GREEN_BOLD

# Subtotal Assertion 
  - name: ca.test.functions.cart.cartSubTotal
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.estimatedTotal
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.estimatedTotal
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.estimatedTotal
                scrollLimit: 4
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotalText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotalValue
              contains: ${subTotal}   
      - log:
          message: "Cart Page Subtotal Assertion Sucessful"
          color: GREEN_BOLD

# Taxes Assertion 
  - name: ca.test.functions.cart.cartTaxes
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.taxesText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.taxesValue
              contains: ${taxes}  
      - log:
          message: "Cart Page Total Tax Assertion Sucessful"
          color: GREEN_BOLD

  # New cart total tax function 
  - name: ca.test.functions.cart.totalTaxAssertion
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.taxesText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.taxesValue
              contains: ${taxes}  
      - log: 
          message: "Cart Page Total Tax Assertion Sucessful"
          color: GREEN_BOLD

# Walmart Shipping Assertion    
  - name: ca.test.functions.cart.cartWalmartShipping
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.walmartDeliveryText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.walmartDeliveryValue
              contains: ${walmartShipping} 
      - log:
          message: "Cart Page Walmart Delivery Fee Assertion Sucessful"
          color: GREEN_BOLD

 # HST Tax Assertion
  - name: ca.test.functions.cart.hstTaxAssertion
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.cartHstText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.cartHstText
              contains: ${hst_percentage}
            - identifier: ca.test.mappings.cart.subTotal.cartHst
              contains: ${hst_tax_value}
      - log:
          message: "Cart Page HST Tax Assertion Successful"
          color: GREEN_BOLD

# Estimated Total Assertion
  - name: ca.test.functions.cart.cartEstimatedTotal
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.estimatedTotalText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.estimatedTotal
              contains: ${estimate_total} 
      - log:
          message: "Cart Page Estimated Total Assertion Sucessful"
          color: GREEN_BOLD

# Associate Discount
  - name: ca.test.functions.cart.associateDiscount
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.associateDiscountText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.associateDiscountValue
              contains: ${associate_discount} 
      - log: 
          message: "Cart Page Associate Discount Assertion Sucessful"
          color: GREEN_BOLD

# validate CRF fees in cart
  - name: ca.test.functions.cart.validateCrfFees
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.CRF
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.crfValue
              contains: ${crf_fee} 
      - log: "Cart Page crf fee Assertion Sucessful"        


  # validate eco handling fees in cart
  - name: ca.test.functions.cart.validateEcoHandlingFees
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.ecoHandlingText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.ecoHandlingValue
              contains: ${eco_fee} 
      - log: "Cart Page eco handling fee Assertion Sucessful" 

 # validate Bev fees in cart
  - name: ca.test.functions.cart.validateBevFees
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.BevDeposit                           
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.BevDepositValue
              contains: ${bev_fee} 
      - log: "Cart Page Bev fee Assertion Sucessful"  

   # validate handling fees in cart
  - name: ca.test.functions.cart.cartHandlingFee
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.handlingFee                         
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.handlingFeeValue
              contains: ${handling_fee} 
      - log: 
          message: "Cart Page handling fee Assertion Sucessful" 
          color: GREEN_BOLD

  # validate gst in cart
  - name: ca.test.functions.cart.gstTaxAssertion
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.gst                         
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.gst
              contains: ${gst_percentage}
            - identifier: ca.test.mappings.cart.gstValue
              contains: ${tax_gst} 
      - log:
          message: "Cart Page gst Assertion Sucessful"
          color: GREEN_BOLD

  # validate grocery pickup fees in cart
  - name: ca.test.functions.cart.validateGroceryPickupFees
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.groceryPickupText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.groceryPickupValue
              contains: ${grocery_pickup} 
      - log: "Cart Page groceryPickup fee Assertion Sucessful"    

  # validate walmart pickup fees in cart
  - name: ca.test.functions.cart.validateWalmartPickupFees
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.walmartPickupText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.walmartPickupValue
              contains: ${walmart_pickup} 
      - log: 
          message: "Cart Page Walmart Pickup fee Assertion Sucessful"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.sellerPickup
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.seller2PickupText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.seller2PickupValue
              contains: ${seller_pickup} 
      - log: "Cart Page seller Pickup Assertion Sucessful"    

  - name: ca.test.functions.cart.hdePickup
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.hDEPickupText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.hDEPickupValue
              contains: ${hde_pickup} 
      - log: "Cart Page HDE Pickup Assertion Sucessful" 

  # validate grocery delivery fees in cart
  - name: ca.test.functions.cart.validateGroceryDeliveryFees
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: ca.test.mappings.cart.groceryDeliveryText
      - if:
          condition: ${clearPrice} == '$0'
          then:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.groceryDeliveryValue 
                    contains: ca.test.data.freeSlotText
          else:
            - verifyIdentifier:
                label:
                  - identifier: ca.test.mappings.cart.groceryDeliveryValue
                    contains: ${grocery_delivery} 
            - log: "Cart Page grocery delivery fee Assertion Sucessful"    
                      

  # Selecting pickup or shipping       
  - name: ca.test.functions.cart.selectPickupOptionsIos
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitle
          then:
            - scroll:
                direction: up 
                position: center             
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitle
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.cart.proceedToPickupInstead 
          then:
            - click:
                 identifier: ca.test.mapping.cart.proceedToPickupInstead

      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mapping.cart.proceedToShipInstead                

  # Pickup card validation
  - name: ca.test.functions.cart.pickup.verifyCardIos
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.cardTitle.Pickup
            - identifier: ca.test.mappings.cart.pickup.fullfilmentTime
            #- identifier: ca.test.mappings.cart.pickup.changeStore  

# handling add address popup issue:
  - name: ca.test.functions.handleAddAddressPopup
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.deliverySlotPage.AddaddressBtn
          then:
            - click:
                identifier: ca.test.mappings.deliverySlotPage.AddaddressBtn
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mapping.cart.shippingAddressFirstLine
                then:    
                  - click:
                      identifier: ca.test.mapping.cart.shippingAddressFirstLine
                      wait: 6000
                  - click:
                      identifier: ca.test.mappings.global.onboarding.continue

  # Book a slot for delivery from store
  - name: ca.test.functions.cart.deliverySlotIos
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.reserveTime.title
          then:
            - click:
                identifier: ca.test.mappings.cart.reserveTime.title
          else:
            - click:
                identifier: ca.test.mappings.cart.reserveTime.title     
      - click:
          identifier: ca.test.mappings.deliveryTab
          wait: 5000 
      # Work arond for add address popup issue    
      - executeFunction:
          name: ca.test.functions.handleAddAddressPopup 
      - executeFunction:
          name: ca.test.functions.cart.bookADeliverySlot   
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: ca.test.mappings.cart.deliverySlot
          then:
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
          else:
            - click:
                identifier: ca.test.mappings.cart.deliveryDateChange  
            - sleep:
                duration: 5000          
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice 
      - click:
          identifier: ca.test.mappings.reserveButton
      - sleep:
          duration: 5000          

# Validation of book a slot for delivery from store 
  - name: ca.test.functions.cart.bookADeliverySlot
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
            - identifier: ca.test.mappings.deliveryTab
            - identifier: ca.test.mappings.reserveSlotHeader
            - identifier: ca.test.mappings.reserveTime.bookslotDayCarousel

# Delivery from store
  - name: ca.test.functions.cart.deliveryFromStore.verifyCard
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - sleep:
                duration: 5000
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
                then:
                  - scroll:
                      direction: up
                      untilIdentifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: ca.test.mappings.cart.cartPage
                  - identifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
                  - identifier: ca.test.mappings.cart.deliveryFromStore.fullfilmentTime
                  - identifier: ca.test.mappings.cart.deliveryFromStore.changeButton
                  - identifier: ca.test.mappings.cart.deliveryFromStore.storeName 

# Book a slot for delivery from store
  - name: ca.test.functions.cart.ExpressSlotIos 
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
          else:
            - click:
                identifier: ca.test.mappings.cart.pickUp.changeButton
      - sleep:
          duration: 3000 
      # Validation of book a slot for delivery from store          
      - executeFunction:
          name: ca.test.functions.cart.timeValidationIos     
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTimePickupExpress          
      - click:
          identifier: ca.test.mappings.reserveTimePickupExpress
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton    
      - sleep:
          duration: 5000

  - name: ca.test.functions.cart.addItemsToOtherOrdersButton
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.purchaseHistory.viewDetails.amendOrderTime
      - click:
          identifier: ca.test.mappings.cart.addItemsToOtherOrderButton
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.purchaseHistory.viewDetails.amendOrderTime

  - name: ca.test.functions.cart.itemAmendSuccessfulMessage
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 50000
          present:
            - identifier: ca.test.mappings.global.alertText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.global.alertText
              contains: ${alertMessage}

  - name: ca.test.functions.cart.navigateToOrderViewDetailsPage
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.purchaseHistory.viewDetailsButton
      - click:
          identifier: ca.test.mappings.purchaseHistory.viewDetailsButton

  # Book a slot page verification
  - name: ca.test.functions.cart.timeValidationIos
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
            - identifier: ca.test.mappings.pickUpTab
            - identifier: ca.test.mappings.deliveryTab
            # - identifier: ca.test.mappings.reserveSlotHeader
            - identifier: ca.test.mappings.reserveTime.bookslotDayCarousel                   
                               
  # Book a slot for delivery from store
  - name: ca.test.functions.cart.instaCartdeliverySlotIos
    platform: ios
    flow:
      - executeFunction:
          name: ca.test.functions.handleAddAddressPopup
      - try: 
          flow:         
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.changeStoreInCart
                then:
                  - click:
                      identifier: ca.test.mappings.changeStoreInCart
                else:
                  - click:
                      identifier: ca.test.mappings.cart.pickUp.changeButton
            - sleep:
                duration: 3000      
            - click:
                identifier: ca.test.mappings.deliveryTab 
            - loop:
                begin: 3
                end: 15
                mode: increment
                storeIndex: i
                flow:
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.reserveInstaCart 
                      then: 
                        - click:
                            identifier: ca.test.mappings.reserveInstaCart 
                        - if:
                            identifier:
                              present:
                                - identifier: ca.test.mappings.reserveTime.deliveryFromStore.instaCartContainer
                            then:
                              - getString: 
                                  identifier: ca.test.mappings.reserveInstaCart
                                  attribute: label
                                  storeIn: slotPrice
                              - click:
                                  identifier: ca.test.mappings.reserveButton
                              - break: true
                              - log: "Insta cart slot not avaible"            
                      else: 
                        - break: true 
                        - failTest: true   
            - verifyIdentifier: 
                timeout: 15000
                notPresent: 
                  - identifier: ca.test.mappings.cart.reserveTime.title
          catch:
            flow: 
              - if:
                  identifier: 
                    present: 
                      - identifier: ca.test.mappings.global.errorBoxTitle
                  then:
                    - click:
                        identifier: ca.test.mappings.acceptAlertBox
                    - log: "Insta cart slot throwing error proceeding with normal slot"   
                    - loop:
                        begin: 3
                        end: 10
                        mode: increment
                        storeIndex: i
                        flow:
                          - click:
                              identifier: ca.test.mappings.reserveInstaCart 
                          - if:
                              identifier:
                                notPresent:
                                  - identifier: ca.test.mappings.reserveTime.deliveryFromStore.instaCartContainer
                              then:
                                - getString: 
                                    identifier: ca.test.mappings.reserveInstaCart 
                                    attribute: label
                                    storeIn: slotPrice
                                - click:
                                    identifier: ca.test.mappings.reserveButton
                                - break: true             
                  else:
                    - failTest: true

  - name: ca.test.functions.cart.proceedToPickupInsteadIosmixed
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.proceedToPickupInstead
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mapping.cart.proceedToPickupInstead
            - click: 
                identifier: ca.test.mapping.cart.proceedToPickupInstead    
          else:         
            - click:
                identifier: ca.test.mapping.cart.proceedToPickupInstead

  - name: ca.test.functions.cart.clickTheCartAfterAPICall
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.homePage.cartNotEmpty
          then:
            - click:
                identifier: ca.test.mappings.homePage.cartNotEmpty
            - sleep:
                duration: 10000
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: ca.test.mappings.cart.startShopping
            - click:
                identifier: ca.test.mappings.cart.startShopping


  # Verifying product tile in cart page
  - name: ca.test.functions.cart.verifyProductTitle
    platform: android
    flow:
      - log: 
          message: "Product name validation ${productName} started"
          color: GREEN_BOLD
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productTitle
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productTitle
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.productTitle
                        - identifier: ca.test.mappings.cart.costPerPcs
                        - identifier: ca.test.mappings.cart.productTotalPrice
                        - identifier: ca.test.mappings.cart.productRemoveButton
                        - identifier: ca.test.mappings.cart.productSaveForLater
                        - identifier: ca.test.mappings.cart.productQuantityStepper
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.productQuantity
                          contains: ${quantity}
                  - if:
                      condition: ${multiVariant} == 'Yes'
                      then:
                        - verifyIdentifier:
                            present: 
                              - identifier: ca.test.mappings.cart.productMultiVariant
                        - verifyIdentifier:
                            text:
                              - identifier: ca.test.mappings.cart.productMultiVariant
                                contains: ${carouselName}
                  - log: 
                      message: "Product name validation ${productName} successful"
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productQuantityStepper

  # Cart Quantity assert
  - name: ca.test.functions.cart.assertCartQuantityIos
    platform: ios
    flow:
      - log:
          message: "Cart Assertion Started"
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.icon #ca.test.mappings.search.cartIcon
      - sleep:
          duration: 2000
      - verifyIdentifier:
          label:
            - identifier: ca.test.mapping.cartBadge
              contains: ${cartQuantity}
      - log:
          message: "Cart Assertion Succesful"
          color: GREEN_BOLD

  # New iOS Cart Quantity assert
  - name: ca.test.functions.cart.assertCartQuantity
    platform: ios
    flow:
      - log:
          message: "Cart Assertion Started"
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.icon
      - verifyIdentifier:
          timeout: 3000
          label:
            - identifier: ca.test.mapping.cartBadge
              contains: ${cartQuantity}
      - log:
          message: "Cart Assertion Succesful"
          color: GREEN_BOLD

  #Click the cart
  - name: ca.test.functions.cart.clickTheCartIcon
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.cart.icon
      - sleep:
          duration: 10000

    # Pickup card validation
  - name: ca.test.functions.cart.pickup.verifyFullfilment
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mappings.cart.delivery.pickup.shipInstead
#            - identifier: ca.test.mapping.cart.delivery.store

  - name: ca.test.functions.cart.hstTaxAssertion5%
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.cartHstText5%
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.cartHstText5%
              contains: ${hst_percentage}
            - identifier: ca.test.mappings.cart.subTotal.cartHst5%
              contains: ${hst_tax_value}
      - log: "Cart Page HST Tax Assertion Successful"

  # Cart Click
  - name: ca.test.functions.cart.clickTheCart
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.search.cartIcon
      - click:
          identifier: ca.test.mappings.search.cartIcon
      - sleep:
          duration: 9000
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.page.cartHeader

  # Shipping card validation
  - name: ca.test.functions.cart.shipping.verifyCard
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.shippingCardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.delivery.shippingCardTitle
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.delivery.shippingCardTitle
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mapping.cart.proceedToPickupInstead

  - name: ca.test.functions.cart.associateDiscountAssertion
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.functions.cart.associateDiscount
      - verifyIdentifier:
          label:
            - identifier: ca.test.functions.cart.associateDiscountValue
              contains: ${associateDiscount}
      - log: 
          message: "Cart Page Associate Discount Assertion Sucessful"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.cartEcoHanldingFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.ecoHandlingText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.ecoHandlingValue
              contains: ${ecoHandling}
      - log: "Cart Page Eco Handling Fee Assertion Sucessful"

  - name: ca.test.functions.cart.cartCRFFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.CRFText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.CRFValue
              contains: ${crfHandling}
      - log: "Cart Page CRF Fee Assertion Sucessful"

  - name: ca.test.functions.cart.cartBevDepFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.BevText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.BevValue
              contains: ${bevHandling}
      - log: "Cart Page Bev. Deposit Fee Assertion Sucessful"

  - name: ca.test.functions.cart.WalmartPickUpCharge
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.WalmartPickupChargeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.WalmartPickupCharge
              contains: ${WalmartPickupCharge}
      - log: 
          message: "Cart Page Walmart PickUp Charge Total Assertion Successful"
          color: GREEN_BOLD

  # GM product choosing pickup Instead
  - name: ca.test.functions.cart.proceedToPickupInstead.ios
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.proceedToPickupInstead
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.cart.delivery.pickupCardTitle
                then:
                  - break: true
          else:
            - scroll:
               direction: up
               untilIdentifier: ca.test.mapping.cart.proceedToPickupInstead
            - click:
               identifier: ca.test.mapping.cart.proceedToPickupInstead          

  # validate CRF/ENV fees in cart
  - name: ca.test.functions.cart.validateCrfEnvFees
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.CRF
            - identifier: ca.test.mappings.cart.EcoHandling
            - identifier: ca.test.mappings.cart.BevDeposit

  # Change Store Click
  - name : ca.test.functions.cart.pickup.changeStoreClick
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
          else:
            - click:
                identifier: ca.test.mappings.cart.pickUp.changeButton
      - verifyIdentifier:
          timeout: 60000
          present:
            - identifier: ca.test.mappings.pickUpTab

  - name: ca.test.functions.cart.babyHeavenShipping
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.babyHaven.shippingFeeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.babyHaven.shippingFee
              contains: ${shippingFee}
      - log: "Cart Page Babyheaven Shipping Fee Assertion Successful"

  # Book a slot for delivery from store
  - name: ca.test.functions.deliveryFromStoreInstacartExpress
    platform: ios
    flow:
      - executeFunction:
          name: ca.test.functions.handleAddAddressPopup
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.changeStore
            - click:
                identifier: ca.test.mappings.cart.changeStore
            - sleep:
                duration: 3000
            - click:
                identifier: ca.test.mappings.deliveryTab
            - loop:
                begin: 1
                end: 3
                mode: increment
                storeIndex: i
                flow:
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.cart.deliverySlotInstaExpress
                      then:
                        - click:
                            identifier: ca.test.mappings.cart.deliverySlotInstaExpress
                        - if:
                            identifier:
                              present:
                                - identifier: ca.test.mappings.reserveTime.deliveryFromStore.instaCartContainer
                            then:
                              - getString:
                                  identifier: ca.test.mappings.cart.deliverySlotInstaExpress
                                  attribute: label
                                  storeIn: slotPrice
                              - click:
                                  identifier: ca.test.mappings.reserveButton
                              - break: true
                              - log: "Insta cart express slot not avaible"
                      else:
                        - break: true
                        - failTest: true
            - verifyIdentifier:
                timeout: 15000
                notPresent:
                  - identifier: ca.test.mappings.cart.reserveTime.title
          catch:
            flow:
              - log:
                  message: No Insta Express Slot available
                  color: RED_BOLD
              - failTest: true

  - name: ca.test.functions.cart.gstTaxAssertionMixed
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.cartgstText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subTotal.cartgstTextMixed
              contains: ${gst_percentage}
            - identifier: ca.test.mappings.cart.subTotal.cartgstMixed
              contains: ${gst_tax_value}
      - log: "Cart Page GST Tax Assertion Successful"

  - name: ca.test.functions.cart.groceryDelivery
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryFreeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.groceryFee
              contains: ${groceryFee}
      - log: "Cart Page Grocery Fee Total Assertion Successful"

  - name: ca.test.functions.cart.babyHavenPickup
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.babyHavenPickup
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.babyHavenPickupFee
              contains: ${babyHaven_Pickup}
      - log: "Cart Page Baby Haven Pickup Assertion Successful"    

  # Hde Shipping Assertion
  - name: ca.test.functions.cart.hdeShipping
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.hdeShipping
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.hdeShippingValue
              contains: ${hde_Shipping} 
      - log: "Cart Page hde_Shipping Assertion Sucessful"      

  # Express slot assertion
  - name: ca.test.functions.cart.assetingExpressSlot
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.fulfillmentBannerInfo
            - identifier: ca.test.mappings.cart.expressSlotBanner

  - name: ca.test.functions.cart.selectedSlotAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.selectedSlotDetails
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.selectedSlotDetails
              equals: ${selected_slot_cart}

  - name: ca.test.functions.cart.subTotalAssertionWithSaving
    platform: android
    flow:
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: ca.test.mappings.cart.estimatedTotalText
      #     then:
      #       - scroll:
      #           direction: down
      #           position: center
      #           untilIdentifier: ca.test.mappings.cart.estimatedTotalText
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotalText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotalText
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotalText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotalValue
              contains: ${subTotal} 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotalSavingsText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotalSavingsValue
              contains: ${savings}
      # - verifyIdentifier:
      #     text:
      #       - identifier: ca.test.mappings.cart.subTotalAfterSavingsValue
      #       - contains: ${priceAfterSavings}
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotalAfterSavingsValue
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotalAfterSavingsValue
      - verifyPresent:
            identifier: ca.test.mappings.cart.subTotalAfterSavingsValue
      - log: 
          message: "Cart Page SubTotal Assertion Successful"
          color: GREEN_BOLD

  - name: ca.test.functions.cartXo.subTotalAssertionWithSaving
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.estimatedTotal
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.estimatedTotal
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subtotal.oldSubTotal
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subtotal.oldSubTotal
              contains: ${oldSubTotal}
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subtotal.savingsText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subtotal.savingsValue
              contains: ${savings}
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subtotal.newSubTotal
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.subtotal.newSubTotal
              contains: ${newSubTotal}
      - log: 
          message: "Cart Page SubTotal Assertion Successful"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.3PShippingChargeAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.3PShippingText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.3PShippingValue
              contains: ${storeShippingCharge}
  
  - name: ca.test.functions.cart.productCardExpansion
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.cart.productTileExpansion
          position: center    
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.productTileExpansion
          then:
            - click:
                identifier: ca.test.mappings.cart.productTileExpansion
      - scroll:
          direction: up
          untilIdentifier: ca.test.mappings.cart.fulfillmentTopSection.fulfillmentTypeText

  - name: ca.test.functions.cart.handlingFee
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.subTotal.handlingFeeValues
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.subTotal.handlingFeeValues
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.handlingFeeValues
              contains: ${handlingFee}

  # Delivery from store
  - name: ca.test.functions.cart.scheduledPickup.verifyCard
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.deliveryFromStore.cardTitle
            - identifier: ca.test.mappings.cart.deliveryFromStore.fullfilmentTime
            - identifier: ca.test.mappings.cart.deliveryFromStore.changeButton
            - identifier: ca.test.mappings.cart.deliveryFromStore.storeName

  - name: ca.test.functions.cart.groceryDeliveryFeeCalculation
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.groceryFee
          then:
            - getString:
                identifier: ca.test.mappings.cart.groceryFee
                attribute: label
                storeIn: groceryPrice
      - executeNode:
          file: ca/test/helpers/sanitizePrice.js
          args:
            - value: ${groceryPrice}
          getResponse:
            storeIn: slotPrice

  # Shipping card validation when Pickup items are also present in cart
  - name: ca.test.functions.cart.shippingwithPickup.verifyCard
    platform: ios
    flow:
        - log:
            message: need update!
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: ca.test.mappings.cart.delivery.shippingCardTitle
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: ca.test.mappings.cart.delivery.shippingCardTitle
      # - verifyIdentifier:
      #     timeout: 2000
      #     present:
      #       - identifier: ca.test.mappings.cart.delivery.shippingCardTitle
      #       - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
      #       - identifier: ca.test.mapping.cart.proceedToPickupInstead

  - name: ca.test.functions.cart.groceryPickup
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryPickupFeeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.groceryPickupFee
              contains: ${groceryFee}
      - log: "Cart Page Grocery Fee Total Assertion Successful"

  - name: ca.test.functions.cart.addDeliveryAddress
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.addDeliveryAddressText
      - click:
          identifier: ca.test.mappings.cart.addDeliveryAddressText
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.cart.addDeliveryAddressText

  - name: ca.test.functions.cart.qstTaxAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.qstTaxText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.qstTaxText
              contains: ${qstPercentage}
            - identifier: ca.test.mappings.cart.qstTaxValue
              contains: ${qstValue}

  - name: ca.test.functions.cart.subTotal.walmartShipping
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.subTotal.walmartShippingText
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.subTotal.walmartShippingFeeValue
              contains: ${walmartShippingFee}

  # Shipping card validation
  - name: ca.test.functions.cart.shipping.verifyCard.ios
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
          then:
            - click:
                identifier: ca.test.mapping.cart.proceedToShipInstead
            - sleep:
                duration: 10000
          else:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.delivery.shippingCardTitle
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.delivery.shippingCardTitle
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mapping.cart.proceedToPickupInstead

  - name: ca.test.functions.cart.scheduledPickup.verifyCard.ios
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.cartPage
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
            - identifier: ca.test.mappings.cart.deliveryFromStore.fullfilmentTime
            - identifier: ca.test.mappings.cart.deliveryFromStore.changeButton
            - identifier: ca.test.mappings.cart.deliveryFromStore.storeName
   
  - name: ca.test.functions.cart.checkout.proceedToCheckOutIos
    platform: ios
    flow:
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 500
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.missingAnythingPopUp
          then:
            - click:
                identifier: ca.test.mappings.cart.missingAnythingContinueButton

  - name: ca.test.functions.cart.fulfillmentAddressIos
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfillmentMethod
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.shippingAddressFirstLine
          then:
            - click:
                identifier: ca.test.mappings.cart.fulfillmentMethod
            - sleep:
                duration: 8000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.home.addressChangeTitle
                then:
                  - click:
                      identifier: ca.test.mapping.cart.shippingAddressFirstLine  
                  - click:
                      identifier: ca.test.mappings.home.addressChange.saveAddressButton
                  - sleep:
                      duration: 5000     
                  # - goBack: true
                  - sleep:
                      duration: 5000 

  - name: ca.test.functions.cart.ONEnvHandlingFee
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.ONEnvText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.ONEnvValue
              contains: ${ON_Env}
      - log: "Cart Page ON Env Handling Fee Assertion Sucessful" 

  # Add to cart from my items
  - name: ca.test.cart.functions.myItems.addToCart
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.myItems.addToCartAllItems 
      - click:
          identifier: ca.test.mappings.myItems.addToCartAllItems  
      - log:
          message: "Product added to cart from favourites."
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.favourites.addedPopUp 
  
  - name: ca.test.functions.cart.taxCalculation
    flow:
      - log:
          message: "Tax calculation started"
          color: GREEN_BOLD
      - executeNode:
          file: ca/test/helpers/taxCalculation.js
          args:
            - value: ${subTotal}
            - value: ${slotPrice}
            - value: ${tax}
          getResponse:
            storeIn: tax_values
      - log:
          message: "Calculated tax: ${tax_values}"
          color: GREEN_BOLD
  
  - name: ca.test.functions.cart.estimatedTotalCalculation
    flow:
      - if:
          condition: ${slotPrice} == 'FREE' || ${slotPrice} == 'GRATUIT'
          then:
            - storeIn:
                key: slotPrice
                value: 0
      - if: 
          condition: ${bagFee} == null
          then:
            - storeIn:
                key: bagFee
                value: "0"
      - log:
          message: "Estimated total calculation started"
          color: GREEN_BOLD
      - executeNode:
          file: ca/test/helpers/estimateTotalCalculation.js
          args:
            - value: ${tax}
            - value: ${subTotal}
            - value: ${slotPrice}
            - value: ${bagFee}
            - value: ${cartQuantity}
            - value: ${driverTip}
            - value: ${assoicateDiscount}
          getResponse:
            storeIn: estimate_total
      - log:
          message: "Calculated estimated total: ${estimate_total}"
          color: GREEN_BOLD
  
  - name: ca.test.functions.cart.validatingGuestUserPromotedToLogin
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.signInToSeePickupTimesText
            - identifier: ca.test.mapping.seeTimes.signIn
            - identifier: ca.test.mappings.reserveTime.curbsidePickup
            - identifier: ca.test.mappings.reserveTime.deliveryFromStore
            - identifier: ca.test.mappings.reservePage.storeInformationCard

  - name: ca.test.functions.cart.changeAddressButton
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
      - click:
          identifier: ca.test.mappings.cart.changeDeliveryAddressButton
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.addressChangeTitle

  - name: ca.test.function.cart.deliveryFromStore.changeAddressButton
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.reserveTime.changeLocation
          then:
            - click:
                identifier: ca.test.mappings.reserveTime.changeLocation

  - name: ca.test.function.cart.deliveryFromStore.addNewAddress
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.account.deliveryAddress.addAddress
          then:
            - click:
                identifier: ca.test.mappings.account.deliveryAddress.addAddress
            - verifyIdentifier:
                timeout: 25000
                notPresent:
                  - identifier: ca.test.mappings.account.deliveryAddress.addAddress

  - name: ca.test.functions.cart.assertingSellerinfoInCart
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cartPage.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cartPage.productTitle
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cartPage.productSellerInfo
      - log:
          message: ${productName} is ${productSeller}
          color: GREEN_BOLD

  - name: ca.test.functions.cart.assertingDeliveryTime
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cartPage.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cartPage.productTitle
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.productEED
              contains: $productEED
      - log: 
          message: Asserting delivery time info in cart for ${productName} and is expected by ${productEED}
          color: GREEN_BOLD 

  # Book a slot for delivery from store
  - name: ca.test.functions.cart.seeTimesdeliverySlot
    platform: ios
    flow:                  
      # Validation of book a slot for delivery from store 
      - executeFunction:
          name: ca.test.functions.cart.bookADeliverySlot  
      - sleep:
          duration: 3000        
      - click:
          identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice 
      - click:
          identifier: ca.test.mappings.reserveButton
      - sleep:
          duration: 5000            
                
#Select address from devilvery from store
  - name: ca.test.functions.selectFirstAddress
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.cart.shippingAddressFirstLine
          then:
            - click:
                identifier: ca.test.mapping.cart.shippingAddressFirstLine
            - click:
                identifier: ca.test.mappings.global.onboarding.continue

# #Select address from devilvery from store
#   - name: ca.test.functions.SelectdeliveryAddress
#     platform: ios
#     flow:
#       - if:
#           identifier:
#             present:
#               - identifier: ca.test.mappings.changeStoreInCart
#           then:
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#           else:
#             - scroll:
#                 direction: up
#                 untilIdentifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - sleep:
#           duration: 1000
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.deliveryTab
#       - click:
#           identifier: ca.test.mappings.deliveryTab
#       - sleep:
#           duration: 1000
#       - if:
#           identifier:
#             notPresent:
#               - identifier: ca.data.mappings.cart.deliveryFromStore.change
#           then:
#             - sleep:
#                 duration: 500
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.data.mappings.cart.deliveryFromStore.change
#             - click:
#                 identifier: ca.data.mappings.cart.deliveryFromStore.change
#           else:
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - verifyIdentifier:
#           present:
#             - identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - click:
#           identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - click:
#           identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - sleep:
#           duration: 1000

  - name: ca.test.functions.cart.deliveryAddressAssertion
    platform: android
    flow:
      - if: 
          identifier:
            present:
              - identifier: ca.test.mappings.deliveryFromStore.addAddressButton
          then:
            - click:
                identifier: ca.test.mappings.deliveryFromStore.addAddressButton
            - executeFunction:
                name: ca.test.functions.escape-route.addressSelector.popUp
                params:
                  - name: userNameInAddress
                    string: ca.test.data.addressFirstName
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.curbsidePickup
            - identifier: ca.test.mappings.reserveTime.deliveryFromStore
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.reserveTime.pickupStoreAddress
              equals: ${deliveryAddress}


# #Select address from devilvery from store
#   - name: ca.test.functions.SelectdeliveryAddress
#     platform: ios
#     flow:
#       - if:
#           identifier:
#             present:
#               - identifier: ca.test.mappings.changeStoreInCart
#           then:
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#           else:
#             - scroll:
#                 direction: up
#                 untilIdentifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - sleep:
#           duration: 1000
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.deliveryTab
#       - click:
#           identifier: ca.test.mappings.deliveryTab
#       - sleep:
#           duration: 1000
#       - if:
#           identifier:
#             notPresent:
#               - identifier: ca.data.mappings.cart.deliveryFromStore.change
#           then:
#             - sleep:
#                 duration: 500
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.data.mappings.cart.deliveryFromStore.change
#             - click:
#                 identifier: ca.data.mappings.cart.deliveryFromStore.change
#           else:
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - verifyIdentifier:
#           present:
#             - identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - click:
#           identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - click:
#           identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - sleep:
#           duration: 1000

  - name: ca.test.functions.cart.deliveryAddressAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.curbsidePickup
            - identifier: ca.test.mappings.reserveTime.deliveryFromStore
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.reserveTime.pickupStoreAddress
              equals: ${deliveryAddress}

# #Select address from devilvery from store
#   - name: ca.test.functions.SelectdeliveryAddress
#     platform: ios
#     flow:
#       - if:
#           identifier:
#             present:
#               - identifier: ca.test.mappings.changeStoreInCart
#           then:
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#           else:
#             - scroll:
#                 direction: up
#                 untilIdentifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - sleep:
#           duration: 1000
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.deliveryTab
#       - click:
#           identifier: ca.test.mappings.deliveryTab
#       - sleep:
#           duration: 1000
#       - if:
#           identifier:
#             notPresent:
#               - identifier: ca.data.mappings.cart.deliveryFromStore.change
#           then:
#             - sleep:
#                 duration: 500
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.data.mappings.cart.deliveryFromStore.change
#             - click:
#                 identifier: ca.data.mappings.cart.deliveryFromStore.change
#           else:
#             - verifyIdentifier:
#                 present:
#                   - identifier: ca.test.mappings.changeStoreInCart
#             - click:
#                 identifier: ca.test.mappings.changeStoreInCart
#       - verifyIdentifier:
#           present:
#             - identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - click:
#           identifier: ca.data.mappings.cart.secondDeliveryAddress
#       - verifyIdentifier:
#           present:
#             - identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - click:
#           identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
#       - sleep:
#           duration: 10000
  
  - name: ca.test.function.cart.storeAssertionForPickup
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.reserveTime.pickupStoreName
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.storeNameForPickUp
          then:
            - click: 
                identifier: ca.test.mappings.reserveTime.changeLocation
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.global.locationSearchTextBox
            - enterText:
                identifier: ca.test.mappings.global.locationSearchTextBox
                string: ${storeZipCode}
                pressEnter: true
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.selectStore.storeName
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.selectStore.storeName
            - click:
                identifier: ca.test.mappings.selectStore.storeName
            - click:
                identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - executeNode:
          file: ca/test/helpers/TextFormatting.js
          args:
            - value: ${storeName}
            - value: 'toUpperCase'
          getResponse:
            storeIn: storeName
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.cart.storeNameForPickUp

  - name: ca.test.functions.global.validatingSignInPage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.signIn.walmartLogo
            - identifier: ca.test.mappings.signPage.title
            - identifier: ca.test.mappings.cart.signIn.emailTextbox
            - identifier: ca.test.mappings.cart.signIn.passwordTextbox
            - identifier: ca.test.mappings.global.authentication.signInButton
            - identifier: ca.test.mappings.signIn.createAnAccount
            - identifier: ca.test.mappings.signIn.forgotPassword
      - log:
          message: Sign In page opened.

  - name: ca.test.functions.cart.checkout.popUp
    platform: ios
    flow:
      - sleep:
         duration: 500
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.missingAnythingPopUp
          then:
            - click:
                identifier: ca.test.mappings.cart.missingAnythingContinueButton             
  
  - name: ca.test.functions.cart.assertingDeliveryTime
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.arrivesBy1
              contains: $product1
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.arrivesBy2
              contains: $product2        
  
  - name: ca.test.functions.cart.assertingSellerinfoInCart
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.sold
              contains: $sold_1           
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.sellerAndShipping
              contains: $sellerandshipping  

  - name: ca.test.functions.cart.assertingSellerinfoInCartFulfilled
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.fulfilled
              contains: $fulfilledByCart

  - name: ca.test.functions.cart.sizeMultiVariant
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle1
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle1
                position: center
      - getString:
          identifier: ca.test.mappings.cart.sizeMultiVariant
          attribute: label
          storeIn: size
      - log: ${size}     

  - name: ca.test.functions.cart.assertingSellerinfoInCartPickUp
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.sold1
              contains: $sold_1  
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.sellerAndShipping1 
              contains: $sellerandshipping

  - name: ca.test.functions.cart.assertingDeliveryTimePickUp
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.arrivesBy3
              contains: $product1
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.arrivesBy4
              contains: $product2              

  - name: ca.test.functions.cart.assertingSellerinfoInCartFulfilledPickUp
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.fulfilled1
              contains: $fulfilledByCart 

# validate the SC
  - name: ca.test.functions.cart.validateSCgrp
    platform: ios
    flow:
      - if: 
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.SCgrpTiltle
          then:
            - sleep:
                duration: 1000
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.SCgrpTiltle
                  - identifier: ca.test.mappings.cart.itemSCqty
          else:
            - sleep:
                duration: 1000
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.SCgrpTiltle
                  - identifier: ca.test.mappings.cart.itemSCqty
# validate the FC
  - name: ca.test.functions.cart.validateFCgrp
    platform: ios
    flow:
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: ca.test.mappings.cart.delivery.cardTitle
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: ca.test.mappings.cart.delivery.cardTitle
      #     else:
      #       - scroll:
      #           direction: up
      #           untilIdentifier: ca.test.mappings.cart.delivery.cardTitle 
      - if: 
          identifier:
            notPresent:
              - identifier:  ca.test.mappings.cart.itemFCqty
          then:
            - sleep:
                duration: 1000
            - scroll:
                direction: up
                position: center
                untilIdentifier:  ca.test.mappings.cart.itemFCqty
            - verifyIdentifier:
                present:
                  - identifier:  ca.test.mappings.cart.itemFCqty
          else:
            - scroll:
                direction: down
                position: center
                untilIdentifier:  ca.test.mappings.cart.itemFCqty
            - if: 
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.itemFCqty
                then:
                  - scroll:
                      direction: up 
                      position: center
                      untilIdentifier: ca.test.mappings.cart.itemFCqty
            # - failTest: false            
            - verifyIdentifier:
                present:
                  - identifier:  ca.test.mappings.cart.itemFCqty

#Move TO Save for later
  - name: ca.test.functions.cart.saveForLater
    platform: ios
    flow:
      - if: 
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productSaveForLater
          then:
            - scroll:
                direction: down
                position: center
                untilIdentifier: ca.test.mappings.cart.productSaveForLater
                scrollLimit: 4
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.productSaveForLater
            - click:
                identifier: ca.test.mappings.cart.productSaveForLater
          else:
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.productSaveForLater
            - click:
                identifier: ca.test.mappings.cart.productSaveForLater
      - sleep:
          duration: 1000

#Move TO cart from SFL
  - name: ca.test.functions.cart.moveToCartFromSFL
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.saveForLaterHeading
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.saveForLaterHeading
      - if: 
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productMoveToCartFromSFL
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productMoveToCartFromSFL
                scrollLimit: 4
      - click:
          identifier: ca.test.mappings.cart.productMoveToCartFromSFL
      - sleep:
          duration: 1000

  # Verifying product tile in cart page
  - name: ca.test.functions.cart.verifyProductTitleWithPrice
    platform: android
    flow:
      - log: 
          message: "Product name validation ${productName} started"
          color: GREEN_BOLD
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productTitle
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productTitle
                        # - executeFunction:
                        #     name: ca.test.functions.utils.scrollToView
                        #     params:
                        #       - name: scrollContainer
                        #         string: ca.test.mappings.cart.fulfillmentMethod
                        #       - name: untilIdentifier
                        #         string: ca.test.mappings.cart.productTotalPrice
                        #       - name: searchDirection
                        #         string: down
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.productTitle
                        - identifier: ca.test.mappings.cart.costPerPcs
                        - identifier: ca.test.mappings.cart.productTotalPrice
                        - identifier: ca.test.mappings.cart.productRemoveButton
                        - identifier: ca.test.mappings.cart.productSaveForLater
                        - identifier: ca.test.mappings.cart.productQuantityStepper
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.productQuantity
                          contains: ${quantity}
                  - verifyIdentifier:
                      text:
                      - identifier: ca.test.mappings.cart.productTotalPrice
                        contains: ${productPrice}
                  - log: 
                      message: "Product name validation ${productName} successful"
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productQuantityStepper
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTitle
  
  - name: ca.test.functions.cart.validatingProductGrouping
    platform: android
    flow:
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productGrouping
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productGrouping
                            position: center
                  - verifyPresent:
                      identifier: ca.test.mappings.cart.productGrouping
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productGrouping
                        position: center
      - verifyPresent:
          identifier: ca.test.mappings.cart.productGrouping
  
# remove GO from cart
  
  - name: ca.test.functions.cart.removeGO
    platform: ios
    flow:
             - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.grocceryHeading
                then:
                  - click:
                      identifier: ca.test.mappings.cart.productRemove
                  - sleep:
                      duration: 500

# increase qty - cart
  - name: ca.test.functions.cart.increaseQtyCart
    platform: ios
    flow:
      # - loop:
      #     begin: 1
      #     end: ${count}
      #     mode: increment
      #     flow:
              - if:
                  identifier:
                    present:
                      - identifier: ca.test.mappings.cart.increase
                  then:
                    - click:
                        identifier: ca.test.mappings.cart.increase
                  else:
                    - scroll:
                        direction: down
                        untilIdentifier: ca.test.mappings.cart.increase
                        scrollLimit: 4
                    - click:
                        identifier: ca.test.mappings.cart.increase

  # Moving item to save for later from cart.
  - name: ca.test.functions.cart.moveToSaveForLater
    platform: android
    flow:
      - loop: 
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.moveToSaveForLater
                      then:
                        - log:
                            message: Scrolling down to find the product.
                            color: GREEN_BOLD
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.moveToSaveForLater
                            position: center
                  - verifyPresent:
                      identifier: ca.test.mappings.cart.productTitle
                  - click:
                      identifier: ca.test.mappings.cart.moveToSaveForLater
                  - break: true
                catch:
                  flow:
                    - log:
                        message: Scrolling up to find the product.
                        color: GREEN_BOLD
                    - scroll:
                        direction: up
                        position: center
                        untilIdentifier: ca.test.mappings.cart.moveToSaveForLater

  # Moving item from save for later to cart.
  - name: ca.test.functions.cart.moveSFLProductToCart
    platform: android
    flow:
      - loop: 
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.moveSFLToCart
                      then:
                        - log:
                            message: Scrolling down to find the product.
                            color: GREEN_BOLD
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.moveSFLToCart
                            position: center
                  - verifyPresent:
                      identifier: ca.test.mappings.cart.productTitle
                  - click:
                      identifier: ca.test.mappings.cart.moveSFLToCart
                  - break: true
                catch:
                  flow:
                    - log:
                        message: Scrolling up to find the product.
                        color: GREEN_BOLD
                    - scroll:
                        direction: up
                        position: center
                        untilIdentifier: ca.test.mappings.cart.moveSFLToCart
  
  - name: ca.test.functions.cart.pickupStoreAssertion
    platform: android
    flow: 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.pickup.address
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.pickup.address
              contains: ${storeName}
  
  - name: ca.test.functions.cart.changePickupStore
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.pickup.address
      - click:
          identifier: ca.test.mappings.cart.pickup.address
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.walmart.ecommerceapp.qa:id/parentPanel
                then:
                  - click:
                      identifier: ca.test.mappings.acceptAlertBox
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true
      - verifyIdentifier:
          timeout: 5000
          notPresent:
            - identifier: ca.test.mappings.global.sheetTitle
            - identifier: ca.test.mappings.global.locationSearchTextBox
      - log:
          message: "Store Selection Sucessful"
          color: GREEN_BOLD

  - name: ca.test.functions.cart.assertingStoreSelectedInCartAtHP
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
      - click:
          identifier: ca.test.mappings.cart.navigateBackToHome
      - executeFunction:
          name: ca.test.functions.global.navigation.goToShopTab
      - executeFunction:
          name: ca.test.functions.home.storeSelectionAssertion

  - name: ca.test.functions.cart.assertingDeliveryAddressInCartAtHP
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.delivery.cardTitleShipping
      - click:
          identifier: ca.test.mappings.cart.navigateBackToHome
      - executeFunction:
          name: ca.test.functions.global.navigation.goToShopTab
      - executeFunction:
          name: ca.test.functions.home.deliveryAddressAssertion
      
  - name: ca.test.function.seeTimes.reserveTimePage.changeStore
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.changeLocation
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation
      - log:
          message: Store selection page opened.
          color: GREEN_BOLD
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.walmart.ecommerceapp.qa:id/parentPanel
                then:
                  - click:
                      identifier: ca.test.mappings.acceptAlertBox
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true
      - log:
          message: "Store Selection Sucessful"
          color: GREEN_BOLD
  
  - name: ca.test.function.cart.reservePage.selectedStoreAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.pickupStoreName
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.reserveTime.pickupStoreName
              contains: ${storeName}

  # - name: ca.test.function.cart.deliveryFromStore.changeAddressButton
  #   platform: ios
  #   flow:
  #     - if:
  #         identifier:
  #           present:
  #             - identifier: ca.test.mappings.location.link
  #         then:
  #           - click:
  #               identifier: ca.test.mappings.location.link  
  #           - sleep:
  #              duration: 5000

  - name: ca.test.function.cart.deliveryFromStore.changeAddressButton
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: GlobalIntentCenter.BannerCollapsedChevron
          then:
            - click:
                identifier: GlobalIntentCenter.BannerCollapsedChevron  
            - sleep:
               duration: 5000
      - click:
         identifier: //XCUIElementTypeButton[@name="Delivery.  . , 2 of 2"]
      - click:
         identifier: //XCUIElementTypeButton[@name="HoTLocationsItemDetailsView.titleLabel"]
      - sleep:
         duration: 5000  

  - name: ca.test.function.cart.deliveryFromStore.addNewAddress
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.deliveryFromStore.addNewAddress
          then:
            - click:
                identifier: ca.test.mappings.cart.deliveryFromStore.addNewAddress     

  - name: ca.test.functions.cart.groupingGo
    platform: ios
    flow: 
      - sleep:
          duration: 5000
      - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.goItems
                  - identifier: ca.test.mappings.cart.itemsNumber

  - name: ca.test.functions.cart.eddValidationGM
    platform: ios
    flow:
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.collapseButtonEDD
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.collapseButtonEDD
                      scrollLimit: 4
                  - click:
                      identifier: ca.test.mappings.collapseButton
          catch:
            flow:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.collapseButtonEDD
                  scrollLimit: 2
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.arrivesBy2
            - identifier: ca.test.mappings.cart.arrivesBy1 
      - getString:
          identifier: ca.test.mappings.cart.arrivesBy2
          attribute: label
          storeIn: EDD1
      - log: ${EDD1}   
      - getString:
          identifier: ca.test.mappings.cart.arrivesBy1
          attribute: label
          storeIn: EDD2
      - log: ${EDD2}                      

# decrease qty - cart
  - name: ca.test.functions.cart.decreaseQtyCart
    platform: ios
    flow:
      # - loop:
      #     begin: 1
      #     end: ${count}
      #     mode: increment
      #     flow:
              - if:
                  identifier:
                    present:
                      - identifier: ca.test.mappings.cart.decrease
                  then:
                    - click:
                        identifier: ca.test.mappings.cart.decrease
                  else:
                    - scroll:
                        direction: down
                        untilIdentifier: ca.test.mappings.cart.decrease
                        scrollLimit: 4
                    - click:
                        identifier: ca.test.mappings.cart.decrease

# Empty cart validation
  - name: ca.test.functions.cart.emptyCartValidation
    platform: ios
    flow:
        - if:
            identifier:
              present:
                - identifier: ca.test.mappings.cart.cartEmpty
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.cartEmpty
                    - identifier: ca.test.mappings.cart.startShopping
            else:
              - sleep:
                  duration: 2500
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.homepage.emptycart
                    - identifier: ca.test.mappings.cart.startShopping

# total items validation
  - name: ca.test.functions.cart.totalItemsValidation
    platform: ios
    flow:
        - if:
            identifier:
              present: 
                - identifier: ca.test.mappings.cart.totalGroceryItems
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.totalGroceryItems
            else:
              - sleep:
                  duration: 500
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.totalGroceryItems

#validate the total number of GM items in cart
  - name: ca.test.functions.cart.totalGMItemsValidation
    platform: ios
    flow:
        - if:
            identifier:
              present: 
                - identifier: ca.test.mappings.cart.totalGMitems
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.totalGMitems
            else:
              - sleep:
                  duration: 1000
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.totalGMitems

# GM EDD based validation
  - name: ca.test.functions.cart.GM_EDDValidation
    platform: ios
    flow:
        - if:
            identifier:
              notPresent:
                - identifier: ca.test.cart.shippingHeading
            then:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.cart.shippingHeading
                  scrollLimit: 4
            else:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.cart.shippingHeading
        - if:
            identifier:
              present: 
                - identifier: ca.test.mappings.collapseButton
            then:
              - click:
                  identifier: ca.test.mappings.collapseButton
        - if:
            identifier:
              present: 
                - identifier: ca.test.mappings.cart.EDD_1
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.EDD_1
            else:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.cart.EDD_1
                  scrollLimit: 4
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.EDD_1
        - if:
            identifier:
              present: 
                - identifier: ca.test.mappings.cart.EDD_2
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.EDD_2
            else:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.cart.EDD_2
                  scrollLimit: 4
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.EDD_2               

# validate multisave discount
  - name: ca.test.functions.cart.discountValidation
    platform: ios
    flow:
        - if:
            identifier:
              notPresent:
                - identifier: ca.test.mappings.productSearch.extractingColor
            then:
              # - scroll:
              #     direction: down
              #     untilIdentifier: ca.test.mappings.productSearch.extractingColor
              - sleep:
                  duration: 10000
              - verifyIdentifier:
                  present:
                    - identifier:  ca.test.mappings.productSearch.extractingColor 
            else:
              - verifyIdentifier:
                  present:
                    - identifier:  ca.test.mappings.productSearch.extractingColor 

  - name: ca.test.functions.cart.validatingProductFromSeller
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srpPage.productTileListView
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.sellerName
              contains: ${filledBy}
      - log:
          message: Seller name in cart page above product title matches with PDP page.
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.cart.sellerFeeText
          attribute: text
          storeIn: storeName
      - executeNode:
          file: ca/test/helpers/comparingTwoValues.js
          args:
            - value: ${filledBy} shipping
            - value: ${storeName}
          getResponse:
            storeIn: boolean
      - if:
          condition: ${boolean} == "Yes"
          then:
            - log: 
                message: Seller information matches with PDP and cart
                color: GREEN_BOLD
          else:
            - log: 
                message: Seller information doesn't matches with
      - getString:
          identifier: ca.test.mappings.cart.sellerFeeValue
          attribute: text
          storeIn: shippingFee
      - executeNode:
          file: ca/test/helpers/comparingTwoValues.js
          args:
            - value: ${shippingCharges}
            - value: ${shippingFee}
          getResponse:
            storeIn: boolean
      - if:
          condition: ${boolean} == "Yes"
          then:
            - log: 
                message: Shipping fee of seller matches with PDP page.
                color: GREEN_BOLD
          else:
            - log: 
                message: Shipping fee doesn't matches with PDP page.

# Validate Rollback old and new price
  - name: ca.test.functions.cart.rollbackPriceValidation
    platform: ios
    flow:
        - if:
            identifier:
              notPresent:
                - identifier: ca.test.mappings.srpPage.productTitle
            then:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.srpPage.productTitle
                  scrollLimit: 4
            else:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.srpPage.productTitle
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.favourites.productPrice

# Validate the address message validation
  - name: ca.test.functions.cart.validateAddressMessage
    platform: ios
    flow:
        - if:
            identifier:
              present:
                - identifier: ca.test.mappings.cart.addressMessage
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.addressMessage
            else:
              - sleep:
                  duration: 1000
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.addressMessage

# validate the shipping info in cart
  - name: ca.test.functions.cart.validateShippingInformation
    platform: ios
    flow:
        - if:
            identifier:
              present:
                - identifier: ca.test.mappings.cart.shippingHeading
            then:
              - scroll:
                  direction: up
                  untilIdentifier: ca.test.mappings.cart.shippingHeading
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.shippingHeading
                    - identifier: ca.test.mappings.cart.shippingDate
                    - identifier: ca.test.mappings.cart.postalCode
            else:
              - scroll:
                  direction: up
                  untilIdentifier: ca.test.mappings.cart.shippingHeading
                  scrollLimit: 4
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.shippingHeading
                    - identifier: ca.test.mappings.cart.shippingDate
                    - identifier: ca.test.mappings.cart.postalCode
# Validate salesfinancing links in cart
  - name: ca.test.functions.cart.validateSFlinks  
    platform: ios
    flow:
        - scroll:
            direction: down
            untilIdentifier: ca.test.mapings.cart.affirmView #ca.test.mappings.cart.learnHowlink
            scrollLimit: 4
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.learnHowlink
              - identifier: ca.test.mappings.cart.tclink
        - click:
            identifier: ca.test.mappings.cart.learnHowlink
            #coordinates: 60%, 50%
        # used earlier:
        # - executeFunction:
        #     name: ca.test.functions.global.navigation.goToDeepLink
        #     params:
        #       - name: deepLinkUrl
        #         string: https://www.walmartrewards.ca/
        - sleep:
            duration: 1000
        # - verifyIdentifier:
        #     present:
        #       - identifier: ca.test.mappings.cart.learnHowUrl
        #       - identifier: ca.test.mappings.cart.url.done
        - click:
            # identifier: ca.test.mappings.sf.back # ca.test.mappings.cart.url.done # 
            coordinates: 5%, 5%
        - sleep:
            duration: 500           
        - click:
            identifier: ca.test.mappings.cart.tclink
            # coordinates: 80%, 50%
        # used earlier:
        # - executeFunction:
        #     name: ca.test.functions.global.navigation.goToDeepLink
        #     params:
        #       - name: deepLinkUrl
        #         string: https://www.walmart.ca/cp/shop/installment-plan/6000204340202
        - sleep:
            duration: 1000
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.tcurl.heading
        - click:
            # identifier: ca.test.mappings.sf.back # ca.test.mappings.cart.url.done # 
            coordinates: 5%, 5%
        # - goBack: true
#ref       
      # - executeAppiumScript:
      #     method: "mobile: tap"
      #     params:
      #       - key: elementId
      #         value: ${uidBlackPopupButton}
      #       - key: x
      #         value: "2"
      #       - key: y
      #         value: "2"
        # - executeAppiumScript:
        #     method: "mobile: tap"
        #     params:
        #       - key: elementId
        #         value: ca.test.mappings.cart.learnHowlink
        #       - key: x
        #         value: 60%
        #       - key: y
        #         value: 50%
#REF:
        # - executeFunction:
        #     name: ca.test.functions.global.navigation.goToDeepLink
        #     params:
        #       - name: deepLinkUrl
        #         string: https://www-qa3.walmart.ca/en/ip/6000145830334

# Validate salesfinancing links in PDP
  - name: ca.test.functions.PDP.SFlinkValidation 
    platform: ios
    flow:
        - sleep:
            duration: 500
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.learnHowlink
              - identifier: ca.test.mappings.cart.tclink
        - click:
            identifier: ca.test.mappings.cart.learnHowlink
        - sleep:
            duration: 1000
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.learnHowUrl
              - identifier: ca.test.mappings.cart.url.done
        - click:
            identifier: ca.test.mappings.cart.url.done # ca.test.mappings.sf.back #
            coordinates: 5%, 5%
        # - goBack: true
        - sleep:
            duration: 500           
        - click:
            identifier: ca.test.mappings.cart.tclink
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.PDP.continueToWebsite.Heading
        - click:
            identifier: ca.test.mappings.PDP.continueToWebsite.button
        - sleep:
            duration: 1000
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.tcurl.heading
        - goBack: true
        - click:
            coordinates: 5%, 5%

#validate the price of the product in cart:
  - name: ca.test.functions.cart.validateProductPrice 
    platform: ios
    flow: 
        - executeFunction:
            name: ca.test.functions.cart.verifyProductTitle
        - verifyIdentifier:
            present:
              - identifier: ca.test.mappings.cart.priceOfProduct1

# # pickup instead
#   - name: ca.test.functions.cart.proceedToPickupInsteadClick
#     platform: ios
#     flow:
#       - if:
#           identifier:
#             present:
#               - identifier: ca.test.mapping.cart.proceedToPickupInstead
#           then:
#             - click:
#                identifier: ca.test.mapping.cart.proceedToPickupInstead 
#           else:
#             - scroll:
#                direction: up
#                untilIdentifier: ca.test.mapping.cart.proceedToPickupInstead 
#             - if:
#                 identifier:
#                   present:
#                     - identifier: ca.test.mapping.cart.proceedToPickupInstead 
#                 then:
#                   - click:
#                       identifier: ca.test.mapping.cart.proceedToPickupInstead 
#                 else:
#                   - if:   
#                       identifier:
#                         present:
#                           - identifier: ca.test.mappings.cart.delivery.pickup.shipInstead
#                       then:
#                         - break: true
#                       # else:
#                       #   - click:
#                       #       identifier: ca.test.mapping.cart.proceedToPickupInstead

# Product title verification
  - name: ca.test.functions.cart.verifyProductSku
    platform: ios
    flow:
      - log: "Validation started for ${sku_id}"
      - if:
          identifier: 
            present:
              - identifier: ca.test.mappings.collapseButton
          then:
            - click:
                identifier: ca.test.mappings.collapseButton
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productSkuId
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productSkuId
      - log: "Validation started for ${sku_id} successful" 

  - name: ca.test.functions.cart.validatingSaleFinance
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.salesFinancingT&C
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.salesFinancingT&C
                position: center
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.salesFinancingIcon
      - log:
          message: Financing Icon present in cart page.
          color: GREEN_BOLD
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.salesFinancingDescription
              contains: ${monthlyInstallments}
            - identifier: ca.test.mappings.cart.salesFinancingDescription
              contains: ${tenure}
            - identifier: ca.test.mappings.cart.salesFinancingDescription
              contains: Learn how
            - identifier: ca.test.mappings.cart.salesFinancingT&C
              contains: "*Excludes Quebec"
            - identifier: ca.test.mappings.cart.salesFinancingT&C
              contains: "Terms & Conditions apply"
      - log:
          message: Text validation completed for sales financing.
          color: GREEN_BOLD

  - name: ca.test.functions.cartPage.saleFinancingLinks
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.salesFinancingDescription
      - log:
          message: Clicking on Learn More button on PDP page.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.cart.salesFinancingDescription
          coordinates: 95%, 50%
      - log:
          message: Navigating to qa3 web page.
          color: GREEN_BOLD
      - sleep:
          duration: 10000
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.pdp.salesFinancingWebPageUrl
              contains: ${rewardsUrl}
      - log:
          message: Learn more button in PDP page successfully navigates to qa3 web page.
          color: GREEN_BOLD
      - log:
          message: Navigating back to app.
          color: GREEN_BOLD
      - goBack: true
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.pdp.salesFinancingT&C
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.pdp.salesFinancingT&C
                position: center
                scrollLimit: 3
      - log:
          message: Clicking on terms and condition on PDP page.
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.cart.salesFinancingT&C
          coordinates: 80%, 50%
      - log:
          message: Navigating to qa3 web page.
          color: GREEN_BOLD
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.global.navigateToChrome
          then:
            - click:
                identifier: ca.test.mappings.global.navigateToChrome  
      - verifyIdentifier:
          timeout: 20000
          text:
            - identifier: ca.test.mappings.pdp.salesFinancingWebPageUrl
              contains: ${rewardsTerms}
      - log:
          message: Terms and Conditions button in PDP page successfully navigates to qa3 Installment Plan web page.
          color: GREEN_BOLD
      - log:
          message: Navigating back to app.
          color: GREEN_BOLD
      - goBack: true
      - sleep:
          duration: 5000

  - name: ca.test.functions.cart.validatingSalesFinancingOptionNotPresentInCart
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.estimatedTotalText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.estimatedTotalText
                position: center
      - sleep:
          duration: 5000
      - verifyIdentifier:
          notPresent:
            - identifier: ca.test.mappings.cart.salesFinancingDescription
            - identifier: ca.test.mappings.cart.salesFinancingIcon
      - log:
          message: Sells Financing options not present in cart page while GO product is added.
          color: GREEN_BOLD

#  # Amend order  
#   - name: ca.test.functions.cart.amendOrder  
#     platform: ios
#     flow:
#       - if:
#           identifier: 
#             present:
#               - identifier: //XCUIElementTypeStaticText[@name="Start a new order"]
#           then:
#             - click:
#                 identifier: //XCUIElementTypeStaticText[@name="Start a new order"]
#             - executeFunction:
#                 name: ca.test.functions.bookASlot.GOreserveTimeIos     
#           else:
#             - executeFunction:
#                 name: ca.test.functions.cart.runCartGoPickup
            
  # - name: ca.test.functions.cart.runCartGoPickup
  #   platform: ios
  #   flow:
  #      # Verify cart subTotal
  #     - executeFunction:
  #         name: ca.test.functions.cart.cartSubTotal
  #         params: 
  #           - name: subTotal
  #             string: ca.test.data.flow031.ios.subtotal

  #     # Verify cart Taxes
  #     - executeFunction:
  #         name: ca.test.functions.cart.cartTaxes
  #         params: 
  #           - name: taxes
  #             string: ca.test.data.flow031.ios.Taxes

  #   # Verify cart HST
  #     - executeFunction:
  #         name: ca.test.functions.cart.hstTaxAssertion
  #         params: 
  #           - name: hst_percentage
  #             string: ca.test.data.flow031.ios.hstPercentage
  #           - name: hst_tax_value
  #             string: ca.test.data.flow031.ios.hst
      
  #     # Verify cart estimated total
  #     - executeFunction:
  #         name: ca.test.functions.cart.cartEstimatedTotal
  #         params: 
  #           - name: estimate_total
  #             string: ca.test.data.flow031.ios.estimatedTotal
        
  #     # Proceed to Checkout
  #     - executeFunction:
  #         name: ca.test.functions.cart.checkout.proceedToCheckOutIos

  # Verifying product tile in cart page
  - name: ca.test.functions.cart.verifyProductTitleWithPrice
    platform: ios
    flow:
      - log: 
          message: "Product name validation ${productName} started"
          color: GREEN_BOLD
      - if:
          identifier:
              present:
                - identifier: ca.test.mappings.cart.productTileCollapsetitle
          then:
            - click:
                identifier: ca.test.mappings.cart.productTileCollapsetitle
      - loop:
          begin: 1
          end: 3
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productTitle
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productTitle
                            scrollLimit: 4
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mappings.cart.productTitle
                        - identifier: ca.test.mappings.cart.costPerPcs
                        - identifier: ca.test.mappings.cart.productTotalPrice
                        - identifier: ca.test.mappings.cart.productRemoveButton
                        - identifier: ca.test.mappings.cart.productSaveForLater
                        - identifier: ca.test.mappings.cart.productQuantityStepper
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.productQuantity
                          contains: ${quantity}
                  - verifyIdentifier:
                      text:
                      - identifier: ca.test.mappings.cart.productTotalPrice
                        contains: ${productPrice}
                  - log: 
                      message: "Product name validation ${productName} successful"
                      color: GREEN_BOLD
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productQuantityStepper
                        scrollLimit: 4
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTitle

# validate - SF not there
  - name: ca.test.functions.cart.verifySFPresence
    platform: ios
    flow:
        - sleep:
            duration: 1000
        - if:
            identifier:
              present:
                - identifier: ca.test.mappings.cart.learnHowlink #ca.test.mappings.pdp.price
            then:
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.SFdateandPrice
                    - identifier: ca.test.mappings.cart.tcText
            else:
              - scroll:
                  direction: down
                  untilIdentifier: ca.test.mappings.cart.learnHowlink #ca.test.mappings.pdp.price
              - verifyIdentifier:
                  present:
                    - identifier: ca.test.mappings.cart.SFdateandPrice
                    - identifier: ca.test.mappings.cart.tcText

# validate - SF not there
  - name: ca.test.functions.cart.verifySFnotPresent
    platform: ios
    flow:
        - sleep:
            duration: 2000
        - scroll:
            direction: down
            untilIdentifier:  ca.test.mappings.cart.subTotal.taxesText
            scrollLimit: 4
        - if:
            identifier:
              notPresent:
                - identifier: ca.test.mapings.cart.affirmView
            then:
              - verifyIdentifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.SFdateandPrice
                    - identifier: ca.test.mappings.cart.tcText

# #unable to add to cart issue
#   - name: ca.test.functions.cart.unableToMoveToCartIssue
#     platform: ios
#     flow:
#       - loop:
#           begin: 0
#           end: 10
#           mode: increment
#           flow:
#             - if:
#                 identifier:
#                   present:
#                     - identifier: ca.test.mappings.cart.gotIt # ca.test.mappings.cart.unableToMoveToCartHead
#                 then:
#                   - click:
#                       identifier: ca.test.mappings.cart.gotIt

# change shipping address from cart
  - name: ca.test.functions.cart.changeShippingAddress
    platform: ios
    flow:
        - scroll:
            direction: up
            position: center
            untilIdentifier: ca.test.cart.shippingHeading
        - click:
            identifier: ca.test.mapping.cart.shippingAddress
        - sleep:
            duration: 1000
        - click:
            identifier: ca.test.mappings.addressLocation.addressOne
        - click:
            identifier: ca.test.mappings.saveButtonAddress
        - sleep:
            duration: 500

  - name: ca.test.functions.cart.eddValidationGM
    platform: android
    flow:
      - try:
         flow:
           - if:
              identifier:
                present:
                  - identifier: ca.test.mappings.cart.productTileExpansionGM
              then:
                - click:
                    identifier: ca.test.mappings.cart.productTileExpansionGM
              else:
                - scroll:
                    direction: down
                    untilIdentifier: ca.test.mappings.cart.productTileExpansionGM
                    scrollLimit: 1
                - click:
                    identifier: ca.test.mappings.cart.productTileExpansionGM     
         catch:
           flow:
             - log:
                message: "Product details are already Expanded"
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: ca.test.mappings.cart.arrivesBy2
            - identifier: ca.test.mappings.cart.arrivesBy1
      - getString:
          identifier: ca.test.mappings.cart.arrivesBy2
          attribute: text
          storeIn: EDD1
      - log: ${EDD1}
      - getString:
          identifier: ca.test.mappings.cart.arrivesBy1
          attribute: text
          storeIn: EDD2
      - log: ${EDD2}

  - name: ca.test.functions.cart.groupingGo
    platform: android
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.productTileCollapse
          then:
            - click:
                identifier: ca.test.mappings.cart.productTileCollapse
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.goItems
            - identifier: ca.test.mappings.cart.itemsNumber

  - name: ca.test.functions.cart.groupingGM
    platform: android
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.productTileCollapse
          then:
            - click:
                identifier: ca.test.mappings.cart.productTileCollapse
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.gmItems
            - identifier: ca.test.mappings.cart.itemsNumberGm

  # increase qty - cart
  - name: ca.test.functions.cart.qtyIncrement
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle.bottomPan
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle.bottomPan
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: text
          storeIn: itemQty
      - log:
          message: Item Quantity Before Increment - ${itemQty}
          color: GREEN_BOLD
      - loop:
          begin: 0
          end: ${quantity}
          mode: increment
          flow:
            - click:
                identifier: ca.test.mappings.cart.productQty.increment
            - arithmetic:
                expression: ${itemQty} + 1
                storeIn: updatedQty
            - storeIn:
                key: itemQty
                value: ${updatedQty}
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: text
          storeIn: getQty
      - if:
          condition: ${getQty} == ${itemQty}
          then:
            - log:
                message: Product qty updated
                color: GREEN_BOLD
          else:
            - failTest:
                message: Quantity increment failed

  # increase qty - cart
  - name: ca.test.functions.cart.qtyDecrement
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle.bottomPan
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle.bottomPan
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: text
          storeIn: itemQty
      - if:
          condition: ${quantity} > ${itemQty}
          then:
            - failTest:
                message: Decrement quantity is higher than available quantity in cart.
          else:
            - if:
                condition: ${quantity} == ${itemQty}
                then:
                  - loop:
                      begin: 0
                      end: ${quantity}
                      mode: increment
                      flow:
                        - click:
                            identifier: ca.test.mappings.cart.productQty.decrement
                  - verifyIdentifier:
                      timeout: 10000
                      notPresent:
                        - identifier: ca.test.mappings.cart.productTitle.bottomPan
                  - log:
                      message: Product successfully removed from cart.
                      color: GREEN_BOLD
                else:
                  - loop:
                      begin: 0
                      end: ${quantity}
                      mode: increment
                      flow:
                        - click:
                            identifier: ca.test.mappings.cart.productQty.decrement
                        - arithmetic:
                            expression: ${itemQty} - 1
                            storeIn: updatedQty
                        - storeIn:
                            key: itemQty
                            value: ${updatedQty}
                  - getString:
                      identifier: ca.test.mappings.cart.productTitle.itemQty
                      attribute: text
                      storeIn: getQty
                  - if:
                      condition: ${getQty} == ${itemQty}
                      then:
                        - log:
                            message: Product qty updated
                            color: GREEN_BOLD
                      else:
                        - failTest:
                            message: Quantity decrement failed
                        
  # increase qty - cart
  - name: ca.test.functions.cart.decreaseQtyCartUntilZero
    platform: android
    flow:
      - getString:
          identifier: ca.test.mappings.cart.itemQty
          attribute: text
          storeIn: itemQty
      - loop:
          begin: 0
          end: ${itemQty}
          mode: increment
          flow:
            - click:
                identifier: ca.test.mappings.amendOrder.qtydecrease
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.startShopping
          then:
            - log:
                message: Decreased Item Quantity to Zero in Cart
                color: GREEN_BOLD

  # Validate the address message validation
  - name: ca.test.functions.cart.validateAddressMessage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.addressMessage
      - getString:
          identifier: ca.test.mappings.cart.addressMessage
          attribute: text
          storeIn: accurateDelivery
      - log:
          message: $accurateDelivery - Message is displayed
          color: GREEN_BOLD

  # validate the shipping info in cart
  - name: ca.test.functions.cart.validateShippingInformation
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.shippingHeading
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.shippingHeading
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.shippingHeading
            - identifier: ca.test.mappings.cart.delivery.fullfilmentTime
            - identifier: ca.test.mappings.cart.changeDeliveryAddressButton

  # total items validation
  - name: ca.test.functions.cart.totalItemsValidation
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.productTileCollapse
          then:
            - click:
                identifier: ca.test.mappings.cart.productTileCollapse
          else:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTileCollapse
            - click:
                identifier: ca.test.mappings.cart.productTileCollapse
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.totalItemsCount
            - identifier: ca.test.mappings.cart.Items

  #validate the total number of GM items in cart
  - name: ca.test.functions.cart.totalGMItemsValidation
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTileCollapse
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTileCollapse
                timeout: 2000
            - click:
                identifier: ca.test.mappings.cart.productTileCollapse    
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.totalItemsCount
            - identifier: ca.test.mappings.cart.Items

  # GM EDD based validation
  - name: ca.test.functions.cart.GM_EDDValidation
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.cart.productTileExpansion

  # Validate Rollback old and new price
  - name: ca.test.functions.cart.rollbackPriceValidation
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productWasPrice
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productWasPrice
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productWasPrice
            - identifier: ca.test.mappings.cart.productLinePrice
      - getString:
          identifier: ca.test.mappings.cart.productLinePrice
          attribute: text
          storeIn: linePrice
      - getString:
          identifier: ca.test.mappings.cart.productWasPrice
          attribute: text
          storeIn: oldPrice
      - log:
          message: Old Price - $oldPrice
          color: GREEN_BOLD
      - log:
          message: New Price After Discount - $linePrice
          color: GREEN_BOLD

  - name: ca.test.functions.cart.validatingSize
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.productTitle
      - verifyIdentifier:
              present:
                - identifier: ca.test.mappings.cart.multiVariantItemSize
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.multiVariantItemSize
              contains: ${productSize}
      - log:
          message: Size assertion sucessful in cart, Product Size - ${productSize}
          color: GREEN_BOLD

  - name: ca.test.functions.cart.generalMerchandise.fulfillmentCard.dateRange
    platform: android
    flow:
      - if: 
          condition: $EED1 == $EED2
          then:
            - if:
                condition: $EED1 == $EED3
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.generalMerchandise.fulfillmentCard.dateRange
                          contains: $EED1
                else:
                  - verifyIdentifier:
                      text:
                        - identifier: ca.test.mappings.cart.generalMerchandise.fulfillmentCard.dateRange
                          contains: $EED1–$EED3
  
  - name: ca.test.functions.grocerySlot.dateTimeExtraction
    platform: android
    flow:
      - getString:
          identifier: ca.test.mappings.cart.reserveTime.slotDay
          storeIn: slot_day
      - getString:
          identifier: ca.test.mappings.cart.reserveTime.slotDate
          storeIn: slot_date
      - storeIn:
          key: slot_details
          value: ${j}, ${slot_day}, ${slot_date}
      - log: ${slot_details}
      - getString:
          identifier: ca.test.mappings.cart.reserveTime.slotTiming
          storeIn: slot_time
      - log: ${slot_time}
  
  - name: ca.test.functions.cart.groceryFulfillmentCard.detailsAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.groceryFulfillment.fulfillmentType
            - identifier: ca.test.mappings.cart.groceryFulfillment.slotDetails
      # - verifyIdentifier:
      #     text:
      #       - identifier: ca.test.mappings.cart.groceryFulfillment.slotDetails
      #         contains: ${fulfillment}
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.groceryFulfillment.fulfillmentAddress
              contains: ${storeName}

  - name: ca.test.function.cart.generalMerchandise.eedBasedGrouping
    platform: android
    flow:   
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.cart.shippingFulfillment  #ca.test.mappings.cart.gmFulfillmentCard.shippedByWalmartText
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.walmartDeliveryDate
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.shippedByWalmartText
      - log: 
          message: "${GM_1P_SellerInfo} products reaches by ${GM_1P_Shipping_EED}"
          color: GREEN_BOLD
      - scroll:
          direction: up
          untilIdentifier: ca.test.mappings.cart.gmFulfillmentCard.walmartShippedItems
      - verifyIdentifier: 
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.walmartShippedItems
              contains: ${itemsShippedByWalmart}
      - log: 
          message: "${itemsShippedByWalmart} will be ${GM_1P_SellerInfo}"
          color: GREEN_BOLD
      - scroll:
          direction: down
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.productTitle
              contains: ${freight_merchandise}
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.freightProductTitle
              contains: ${general_merchandise}
      - log:
          message: "${general_merchandise} and ${freight_merchandise} will be ${GM_1P_SellerInfo}"
          color: GREEN_BOLD
      - if: 
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.gmFulfillmentCard.shippedBySellerText
          then:
            - executeFunction:
                name: ca.test.functions.utils.scrollToView
                params:
                  - name: scrollContainer
                    string: ca.test.mappings.cart.productRecyclerView
                  - name: untilIdentifier
                    string: ca.test.mappings.cart.gmFulfillmentCard.shippedBySellerText
                  - name: searchDirection
                    string: down
      - log: 
          message: "Scrolling to get 3P product."
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pDeliveryDate
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.shippedBySellerText
      - log: 
          message: "${GM_3P_SellerInfo} products reaches by ${GM_3P_Shipping_EED}"
          color: GREEN_BOLD
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pProductQty
              contains: ${itemShippedByThirdParty}
      - log:
          message: "${itemShippedByThirdParty} will be ${GM_3P_SellerInfo}"
          color: GREEN_BOLD
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pProductTitle
              contains: ${third_party_merchandise}
      - log: 
          message: "${third_party_merchandise} will be ${GM_3P_SellerInfo}"
          color: GREEN_BOLD
          
  - name: ca.test.functions.cart.proceedToCheckOutIos1
    platform: ios
    flow:
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 500  

#DFTB page validation
  - name: ca.test.functions.cart.dftbValidation 
    platform: ios
    flow:       
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 10000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.missingAnythingPopUp
            - identifier: ca.test.mappings.cart.dftbItemName
            - identifier: ca.test.mappings.cart.dftbItemPPUnit
            # - identifier: ca.test.mappings.cart.dftbItemSponsered
            - identifier: ca.test.mappings.cart.dftbItemRating
            - identifier: ca.test.mappings.cart.dftbItemATCButton 
            - identifier: ca.test.mappings.cart.dftbItemPrice
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.DFTB.outOfStock
          then:
            - failTest:
                message: "--------------------Out of stock item listed in DFTB--------------------"               
           
#dftb OOS and GM not Available Validation
  - name: ca.test.functions.cart.dftbOOSandGMnotAvailValidation
    platform: ios
    flow: 
      - executeFunction:
          name: ca.test.functions.cart.proceedToCheckOutIosFromDftb
          
#add From DFTB
  - name: ca.test.functions.cart.addFromDFTB
    platform: ios
    flow: 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.srp.addToCartByProductName
      - click:
          identifier: ca.test.mappings.srp.addToCartByProductName
      - click:
          identifier: ca.test.mappings.global.onboarding.personaliseExperiencecontinueButton
    
  # GM EDD based validation
  - name: ca.test.functions.cart.DFTB.pageValidationDFTB
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.DFTB.title
            - identifier: ca.test.mappings.DFTB.productModule
            - identifier: ca.test.mappings.DFTB.productTitle
            - identifier: ca.test.mappings.DFTB.productPrice
            - identifier: ca.test.mappings.DFTB.addToCartBtn
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pdp.productStar
          then:
            - log:
                message: Item rating is visible
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.DFTB.outOfStock
          then:
            - failTest:
                message: "--------------------Out of stock item listed in DFTB--------------------"

  # Continue to CheckOut
  - name: ca.test.functions.cart.DFTB.extractItemNameAndAddToCart
    platform: android
    flow:
      - getString:
          identifier: ca.test.mappings.DFTB.productTitle
          attribute: text
          storeIn: itemName
      - log:
          message: "Items added from DFTB: $itemName"
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.DFTB.addToCart

  # Continue to CheckOut
  - name: ca.test.functions.cart.DFTB.continue
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.cart.missingAnythingContiune
      - sleep:
          duration: 10000

  # Continue to CheckOut
  - name: ca.test.functions.cart.DFTB.close
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.global.closeIcon
      - sleep:
          duration: 2000

  # Cart page to CheckOut
  - name: ca.test.functions.cart.proceedToCheckOutDFTB
    platform: android
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - verifyIdentifier:
          timeout: 15000
          notPresent:
            - identifier: ca.test.mapping.cart.proceedToCheckOutButton

  - name: ca.test.functions.cart.navigateToOrderViewDetailsPageFromCart
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.global.alertText
      - click:
          identifier: ca.test.mappings.global.alertText

  - name: ca.test.functions.cart.removeItemFromCart
    platform: android
    flow:
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.removeItem
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.cart.removeItem
                      scrollLimit: 4
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.removeItem
            - click:
                identifier: ca.test.mappings.cart.removeItem
            - verifyIdentifier:
                notPresent:
                  - identifier: ca.test.mappings.cart.removeItem
            - log:
                message: Item removed from cart sucessfully
                color: GREEN_BOLD
          catch:
            flow:
              - failTest:
                  message: Failed to remove item from cart

  # GM EDD based validation
  - name: ca.test.functions.cart.DftbNotVisibleValidation
    platform: android
    flow:
      - sleep:
          duration: 12000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.DFTB.title
          then:
            - failTest:
                message: "--------------------DFTB visible for GM Only Order--------------------"
          else:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.checkOutPage.fulfillmentCard
                then:
                  - log:
                      message: "Review Order Page is Loaded"
                      color: GREEN_BOLD

  - name: ca.test.functions.cart.estimatedTotalCalculationAfterDriverTip
    flow:
      - log:
          message: "Estimated total calculation started"
          color: GREEN_BOLD
      - arithmetic:
          expression: ${estimate_total} + ${tipAmount}
          storeIn: estimate_total
      - log:
          message: "Calculated estimated total: ${estTotal}"
          color: GREEN_BOLD
                      
  # Continue to CheckOut
  - name: ca.test.functions.cart.DFTB.continue
    platform: ios
    flow:
      - click:
          identifier:  ca.test.mappings.cart.missingAnythingContinueButton  
      - sleep:
          duration: 10000      

  - name: ca.test.functions.cart.DftbNotVisibleValidation
    platform: ios
    flow:
      - click:
          identifier: ca.test.mapping.cart.proceedToCheckOutButton
      - sleep:
         duration: 500
      - verifyIdentifier:
            timeout: 10000
            notPresent:
              - identifier: ca.test.mappings.cart.missingAnythingPopUp
      - log:
          message: DFTB screen not shown when GM only cart present.
          color: GREEN_BOLD      
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: ca.test.mappings.checkOutPage.reviewOrderText  

  # Book a slot for delivery from store
  - name: ca.test.functions.cart.deliverySlotCheckoutIos
    platform: ios
    flow:
      - sleep:
          duration: 5000      
      - click:
          identifier: ca.test.mappings.deliveryTab
      - sleep:
          duration: 3000                   
      # Validation of book a slot for delivery from store 
      - executeFunction:
          name: ca.test.functions.cart.bookADeliverySlot  
      - sleep:
          duration: 3000   
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.deliverySlot
          then:
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
          else:
            - click:
                identifier: ca.test.mappings.cart.deliveryDateChange  
            - sleep:
                duration: 3000          
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice 
      - click:
          identifier: ca.test.mappings.reserveButton 
      - sleep:
          duration: 5000            

  # New cart value assertion
  - name: ca.test.functions.cart.assertCartTotal
    platform: ios
    flow:
      - log: 
          message: "Cart Sub Total Assertion Started"
          color: GREEN_BOLD
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cartSummarySubTotal
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cartSummarySubTotal
              contains: ${subTotal}
      - log: 
          message: "Cart SubTotal Assertion Succesful" 
          color: GREEN_BOLD

  - name: ca.test.functions.cart.salesFinancing.validateDetailsNotPresent
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.estimatedTotalText
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.estimatedTotalText
                position: center
                scrollLimit: 4
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.salesFinancing.details
          then:
            - log:
                message: Sales Financing options not present for mixed order.
                color: GREEN_BOLD
          else:
            - failTest:
                message: Sales Financing options present for mixed order.

 # Validating store in cart page, changing if required
  - name: ca.test.functions.cart.validatingStoreForPickUp
    platform: ios
    flow:
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfillmentMethod
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.pickUpAddress
                then:
                  - click:
                      identifier: ca.test.mappings.cart.pickUpAddressLabel
                  - enterText:
                        identifier: ca.test.mappings.home.zipCodeHome
                        clearField: true
                        string: ${Zip_Code}
                        pressEnter: true
                  - click:
                      identifier: ca.test.mapping.testLab.storeSelect
                  - click:
                      identifier: ca.test.mapping.testLab.save     
                  - sleep:
                      duration: 5000                        
                  - loop:
                      begin: 1
                      end: 4
                      mode: increment
                      flow:
                        - try:
                            flow:
                              - verifyIdentifier:
                                  timeout: 15000
                                  present:
                                    - identifier: ca.test.mappings.cart.fulfillmentMethod
                              - break: true
                            catch:
                              flow:
                                - if:
                                    identifier:
                                      present:
                                        - identifier: ca.test.mappings.placeOrder.alertBoxText 
                                    then:
                                      - click: 
                                          identifier: ca.test.mappings.error.retryButton
                                    else:
                                      - failTest: true
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: ca.test.mappings.cart.pickUpAddress
          catch:  
            flow:
              - getString:
                  identifier: ca.test.mappings.cart.pickup.address
                  attribute: label
                  storeIn: storeText
              - if:
                  condition: ${storeAddress} == ${storeText}
                  then:
                    - log:
                        message: "Store Assertion Successful in cart page."
                        color: GREEN_BOLD
                  else:
                    - click:
                        identifier: ca.test.mappings.cart.pickup.address
                    - verifyIdentifier:
                        present:
                          - identifier: ca.test.mappings.global.locationSearchTextBox
                    - enterText:
                        identifier: ca.test.mappings.global.locationSearchTextBox
                        string: ${storeZipCode}
                        pressEnter: true
                    - if:
                        identifier:
                          notPresent:
                            - identifier: ca.test.mappings.selectStore.storeName
                        then:
                          - scroll:
                              direction: down
                              untilIdentifier: ca.test.mappings.selectStore.storeName
                    - click:
                        identifier: ca.test.mappings.selectStore.storeName
                    - click:
                        identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
                    - loop:
                        begin: 1
                        end: 4
                        mode: increment
                        flow:
                          - try:
                              flow:
                                - verifyIdentifier:
                                    timeout: 15000
                                    present:
                                      - identifier: ca.test.mappings.cart.fulfillmentMethod
                                - break: true
                              catch:
                                 flow:
                                  - if:
                                      identifier:
                                        present:
                                          - identifier: ca.test.mappings.global.errorBoxTitle
                                      then:
                                        - click: 
                                            identifier: ca.test.mappings.error.retryButton
                                      else:
                                        - failTest: true

  - name: ca.test.functions.cart.addDeliveryAddress
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.addDeliveryAddressText
      - click:
          identifier: ca.test.mappings.cart.addDeliveryAddressText
                                                       
  - name: ca.test.functions.cart.associateDiscountNotPresentValidation
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.associateDiscountText
          then:
            - log:
                message: Associate Discount not present for 3P Item
                color: GREEN_BOLD
          else:
            - failTest:
                message: Associate Discount present for 3P Item

  - name: ca.test.functions.cartox.validate.otherFees
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cartxo.subTotal.additionalFeeText
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cartxo.subTotal.additionalFeeValue
              contains: ${feeValues}
  
  - name: ca.test.functions.cart.addAddressPage.chooseAddress
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.shipInstead.addressPage
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.shipInstead.addressPage.selectAddressBasedOnZip
          then:
            - click:
                identifier: ca.test.mappings.cart.shipInstead.addressPage.selectAddressBasedOnZip
            - click:
                identifier: ca.test.mappings.cart.shipInstead.addressPage.saveButton
            - verifyIdentifier:
                timeout: 20000
                notPresent:
                  - identifier: ca.test.mappings.cart.shipInstead.addressPage.saveButton
          else:
            - failTest:
                message: "Address not present!"

  - name: ca.test.functions.cart.validatingProductFromSeller
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.productTileListView
      - executeNode:
          file: ca/test/helpers/sanitizeSellerInfo.js
          args:
            - value: ${filledBy}   
          getResponse:
            storeIn: fullfilledBy
      - log: ${fullfilledBy}        
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.cart.sellerName
              contains: ${fullfilledBy}       
      - log:
          message: Seller name in cart page above product title matches with PDP page.
          color: GREEN_BOLD
      - getString:
          identifier: ca.test.mappings.cart.sellerFeeText
          attribute: label
          storeIn: storeName
      - log: ${storeName}    
      - executeNode:
          file: ca/test/helpers/comparingTwoValues.js
          args:
            - value: ${fullfilledBy} shipping, FREE
            - value: ${storeName}
          getResponse:
            storeIn: boolean
      - if:
          condition: ${boolean} == "Yes"
          then:
            - log: 
                message: Seller information matches with PDP and cart
                color: GREEN_BOLD
          else:
            - log: 
                message: Seller information doesn't matches with PDP and cart
      - getString:
          identifier: ca.test.mappings.cart.sellerFeeValue
          attribute: label
          storeIn: shippingFee
      - log: ${shippingFee}     
      - executeNode:
          file: ca/test/helpers/comparingTwoValues.js
          args:
            - value: FREE #{shippingCharges}
            - value: ${shippingFee}
          getResponse:
            storeIn: boolean
      - if:
          condition: ${boolean} == "Yes"
          then:
            - log: 
                message: Shipping fee of seller matches with PDP page.
                color: GREEN_BOLD
          else:
            - log: 
                message: Shipping fee doesn't matches with PDP page.

  - name: ca.test.functions.cart.amendOrder.existingOrder.addItems
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.cart.amendOrder.existingOrder.addItemsButton
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.amendOrder.existingOrder.amendSuccessfulMessage
      - click:
          coordinates: 256, 138
      - getString:
          identifier: ca.test.mappings.purchaseHistory.orderNumber
          attribute: label
          extractNumbers: true
          storeIn: orderId
      - log: ${orderId}

  # Checking for any unavailable items in cart and if present executing item removing function
  - name: ca.test.functions.cart.checkUnavailableItemsAndRemovingThem
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.item.currentlyUnavailable
          then:
            - click:
                identifier: ca.test.mappings.cart.item.currentlyUnavailable
            - verifyIdentifier:
                timeout: 20000
                present:
                  - identifier: ca.test.mappings.cart.currentlyUnavailable.itemUpdates
            - numberOfChildElements:
                identifier: ca.test.mappings.cart.currentlyUnavailable.itemContainer
                storeIn: itemCount
            - log: ${itemCount}
            - loop:
                begin: 0
                end: 3
                mode: increment
                flow:
                  - sleep:
                      duration: 3000
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.cart.currentlyUnavailable.removeBtn
                      then:
                        - click:
                            identifier: ca.test.mappings.cart.currentlyUnavailable.removeBtn
                      else:
                        - break: true
                  - sleep:
                      duration: 4000

  #Navigate to cart
  - name: ca.test.functions.cart.amendOrder
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.orderDetails.timerTickerText
          then:
            - click:
                identifier: ca.test.mappings.cart.addItemsToOtherOrderButton

  - name: ca.test.functions.cartProdFulfillmentAddressIos
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.fulfillmentMethod
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mapping.cart.shippingAddressFirstLine
          then:
            - click:
                identifier: ca.test.mappings.cart.fulfillmentMethod
            - sleep:
                duration: 8000
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.home.addressChangeTitle
                then:
                  - click:
                      identifier: ca.test.mapping.cart.shippingAddressFirstLine  
                  - click:
                      identifier: ca.test.mappings.home.addressChange.saveAddressButton
                  - sleep:
                      duration: 5000     
                  - goBack: true
                  - sleep:
                      duration: 5000     
                                
# temporary function - to avaoid add adress popup in delivery slot page
  - name: ca.test.functions.cart.deliverySlot_avoid_addaddresspopup
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
          else:
            - click:
                identifier: ca.test.mappings.cart.pickUp.changeButton
      - sleep:
          duration: 5000      
      - click:
          identifier: ca.test.mappings.deliveryTab
      - sleep:
          duration: 5000                  
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.deliverySlotPage.AddaddressBtn
          then:
            - click:
                identifier: ca.test.mappings.deliverySlotPage.AddaddressBtn
            - sleep:
               duration: 5000    
            - click:
                identifier: ca.test.mappings.addressLocation.addressOne
            - sleep:
                duration: 2000      
            - click:
                  identifier: ca.test.mappings.global.continueButton
          else:
            - break: true
      - sleep:
          duration: 5000
      - click:
            identifier: ca.test.mappings.cart.deliveryFromStore.closeSymbol


  # Book a Std express delivery slot from cart
  - name: ca.test.functions.cart.stdExpressdeliverySlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
          else:
            - click:
                identifier: ca.test.mappings.cart.pickUp.changeButton
      - sleep:
          duration: 5000      
      - click:
          identifier: ca.test.mappings.deliveryTab
      - sleep:
          duration: 5000                   
      # Validation of book a slot for delivery from store 
      - executeFunction:
          name: ca.test.functions.cart.bookADeliverySlot  
      - sleep:
          duration: 5000   
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.deliverySlot
          then:
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
          else:
            - click:
                identifier: ca.test.mappings.cart.deliveryDateChange  
            - sleep:
                duration: 5000          
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice 
      - click:
          identifier: ca.test.mappings.reserveButton
      - sleep:
          duration: 5000               

  # Book a slot for delivery from store
  - name: ca.test.functions.cart.deliverySlotIosfromSlotPage
    platform: ios
    flow:
      - sleep:
          duration: 5000  
      - scroll:
         direction: up
         scrollLimit: 3
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: ca.test.mappings.cart.reserveTime.title
          then:
            - click:
                identifier: ca.test.mappings.deliveryTab
          else:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
            - if: 
                identifier:
                  present:
                    - identifier: ca.test.mappings.cart.reserveTime.title
                then:
                  - click:
                      identifier: ca.test.mappings.deliveryTab
      - sleep:
          duration: 5000                   
      # Validation of book a slot for delivery from store 
      - executeFunction:
          name: ca.test.functions.cart.bookADeliverySlot  
      - sleep:
          duration: 5000   
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.deliverySlot
          then:
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
          else:
            - click:
                identifier: ca.test.mappings.cart.deliveryDateChange  
            - sleep:
                duration: 5000          
            - click:
                identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice 
      - click:
          identifier: ca.test.mappings.reserveButton
      - sleep:
          duration: 5000          
          
  # validating Product Grouping
  - name: ca.test.functions.cart.validatingProductGrouping
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - try:
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.cart.productGrouping
                      then:
                        - scroll:
                            direction: down
                            untilIdentifier: ca.test.mappings.cart.productGrouping
                            # position: center
                            scrollLimit: 3
                  - break: true
                catch:
                  flow:
                    - scroll:
                        direction: up
                        untilIdentifier: ca.test.mappings.cart.productGrouping
                        # position: center
                        scrollLimit: 3
      - verifyPresent:
          timeout: 10000
          identifier: ca.test.mappings.cart.productGrouping 

# save for later in cart
  - name: ca.test.functions.cart.saveforlater
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.saveForLaterButton
          then:
            - click:
                identifier: ca.test.mappings.cart.saveForLaterButton

# move to cart in cart
  - name: ca.test.functions.cart.movetocart
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.moveToCartButton
          then:
            - click:
                identifier: ca.test.mappings.cart.moveToCartButton
  
# move to cart from sfl in cart
  - name: ca.test.functions.cart.removeFromSFL
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier:  ca.test.mappings.cart.removeButtonSFL
          then:
            - click:
                identifier:  ca.test.mappings.cart.removeButtonSFL
  
  #validate address in cart
  - name: ca.test.functions.cart.addressAssertion
    platform: ios
    flow: 
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.address
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.address
              contains: ${address}

# validate product in SFL field in cart
  - name: ca.test.functions.cart.validateInSFL
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            notPresent:
              - identifier:  ca.test.mappings.cart.removeButtonSFL
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.removeButtonSFL
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.removeButtonSFL
      - log:
          message: ${catagory} Product present under SFL!

# remove a particular item from cart
  - name: ca.test.functions.cart.removeItemFromCart
    platform: ios
    flow:
      - try:
          flow:
            - if:
                identifier:
                  notPresent:
                    - identifier: ca.test.mappings.cart.removeButtonSFL
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: ca.test.mappings.cart.removeButtonSFL
                      scrollLimit: 4
            - verifyIdentifier:
                present:
                  - identifier: ca.test.mappings.cart.removeButtonSFL
            - click:
                identifier: ca.test.mappings.cart.removeButtonSFL
            - verifyIdentifier:
                notPresent:
                  - identifier: ca.test.mappings.cart.removeButtonSFL
            - log:
                message: Item removed from cart sucessfully
                color: GREEN_BOLD
          catch:
            flow:
              - failTest:
                  message: Failed to remove item from cart

  # increase qty - cart
  - name: ca.test.functions.cart.qtyIncrement
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle.bottomPan
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle.bottomPan
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: label
          storeIn: qty
      - log:
          message: ${qty}
          color: GREEN_BOLD
      - executeNode:
          file: ca/test/helpers/Cart/quantityInCart.js
          args:
            - value: ${qty}
          getResponse:
            storeIn: itemQty
      - log:
          message: Item Quantity Before Increment - ${itemQty}
          color: GREEN_BOLD
      - loop:
          begin: 0
          end: ${quantity}
          mode: increment
          flow:
            - click:
                identifier: ca.test.mappings.cart.increase
            - arithmetic:
                expression: ${itemQty} + 1
                storeIn: updatedQty
            - storeIn:
                key: itemQty
                value: ${updatedQty}
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: label
          storeIn: nextqty
      - executeNode:
          file: ca/test/helpers/Cart/quantityInCart.js
          args:
            - value: ${nextqty}
          getResponse:
            storeIn: getQty
      - if:
          condition: ${getQty} == ${itemQty}
          then:
            - log:
                message: Product qty updated
                color: GREEN_BOLD
          else:
            - failTest:
                message: Quantity increment failed

  # increase qty - cart
  - name: ca.test.functions.cart.qtyDecrement
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTitle.bottomPan
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTitle.bottomPan
      - getString:
          identifier: ca.test.mappings.cart.productTitle.itemQty
          attribute: label
          storeIn: qty
      - executeNode:
          file: ca/test/helpers/Cart/quantityInCart.js
          args:
            - value: ${qty}
          getResponse:
            storeIn: itemQty
      - if:
          condition: ${quantity} > ${itemQty}
          then:
            - failTest:
                message: Decrement quantity is higher than available quantity in cart.
          else:
            - if:
                condition: ${quantity} == ${itemQty}
                then:
                  - loop:
                      begin: 0
                      end: ${quantity}
                      mode: increment
                      flow:
                        - click:
                            identifier: ca.test.mappings.cart.decrease
                  - verifyIdentifier:
                      timeout: 10000
                      notPresent:
                        - identifier: ca.test.mappings.cart.productTitle.bottomPan
                  - log:
                      message: Product successfully removed from cart.
                      color: GREEN_BOLD
                else:
                  - loop:
                      begin: 0
                      end: ${quantity}
                      mode: increment
                      flow:
                        - click:
                            identifier: ca.test.mappings.cart.decrease
                        - arithmetic:
                            expression: ${itemQty} - 1
                            storeIn: updatedQty
                        - storeIn:
                            key: itemQty
                            value: ${updatedQty}
                  - getString:
                      identifier: ca.test.mappings.cart.productTitle.itemQty
                      attribute: label
                      storeIn: nextqty
                  - executeNode:
                      file: ca/test/helpers/Cart/quantityInCart.js
                      args:
                        - value: ${nextqty}
                      getResponse:
                        storeIn: getQty
                  - if:
                      condition: ${getQty} == ${itemQty}
                      then:
                        - log:
                            message: Product qty updated
                            color: GREEN_BOLD
                      else:
                        - failTest:
                            message: Quantity decrement failed

# EDD date rage
  - name: ca.test.functions.cart.generalMerchandise.fulfillmentCard.dateRange
    platform: ios
    flow:
      - if: 
          condition: $EED1 == $EED2
          then:
            - if:
                condition: $EED1 == $EED3
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: ca.test.mappings.cart.generalMerchandise.fulfillmentCard.dateRange
                          contains: $EED1
                else:
                  - verifyIdentifier:
                      label:
                        - identifier: ca.test.mappings.cart.generalMerchandise.fulfillmentCard.dateRange
                          contains: $EED1–$EED3

#product Card Expansion
  - name: ca.test.functions.cart.productCardExpansion
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.cart.productTileExpansion
          then:
            - scroll:
                direction: down
                untilIdentifier: ca.test.mappings.cart.productTileExpansion
                position: center
          else:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.productTileExpansion
                position: center
      - click:
          identifier: ca.test.mappings.cart.productTileExpansion

  - name: ca.test.function.cart.generalMerchandise.eedBasedGrouping
    platform: ios
    flow:   
      - scroll:
          direction: down
          untilIdentifier: ca.test.mappings.cart.shippingHeading
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.walmartDeliveryDate
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.shippedByWalmartText
      - log: 
          message: "${GM_1P_SellerInfo} products reaches by ${GM_1P_Shipping_EED}"
          color: GREEN_BOLD
      - scroll:
          direction: up
          untilIdentifier: ca.test.mappings.cart.gmFulfillmentCard.walmartShippedItems
      - verifyIdentifier: 
          label:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.walmartShippedItems
              contains: ${itemsShippedByWalmart}
      - log: 
          message: "${itemsShippedByWalmart} will be ${GM_1P_SellerInfo}"
          color: GREEN_BOLD
      - scroll:
          direction: down
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.productTitle
              contains: ${freight_merchandise}
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.freightProductTitle
              contains: ${general_merchandise}
      - log:
          message: "${general_merchandise} and ${freight_merchandise} will be ${GM_1P_SellerInfo}"
          color: GREEN_BOLD
      - scroll:
          direction: down
          scrollLimit: 1
      - log: 
          message: "Scrolling to get 3P product."
          color: GREEN_BOLD
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pDeliveryDate
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.shippedBySellerText
      - log: 
          message: "${GM_3P_SellerInfo} products reaches by ${GM_3P_Shipping_EED}"
          color: GREEN_BOLD
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pProductQty
              contains: ${itemShippedByThirdParty}
      - log:
          message: "${itemShippedByThirdParty} will be ${GM_3P_SellerInfo}"
          color: GREEN_BOLD
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.cart.gmFulfillmentCard.3pProductTitle
              contains: ${third_party_merchandise}
      - log: 
          message: "${third_party_merchandise} will be ${GM_3P_SellerInfo}"
          color: GREEN_BOLD

# calculate total price
  - name: ca.test.function.cart.calculateDynamicSubtotal
    platform: ios
    flow:   
      - if:
          condition: ${quantity} > 1
          then:
            - loop:
                begin: 1
                end: ${quantity}
                mode: increment
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.home.carouselIncreaseQuantity       
                      then: 
                        - click:
                            identifier: ca.test.mappings.home.carouselQuantityBarClick
                  - click:
                      identifier: ca.test.mappings.home.carouselIncreaseQuantity
      - log:
          message: Product added to cart
          color: GREEN_BOLD
      - executeNode:
          file: ca/test/helpers/sanitizePrice.js
          args:
            - value: ${productCost}
          getResponse:
            storeIn: productPrice
      - if:
          condition: ${totalPrice} != "null"
          then:
            - arithmetic:
                expression: ${totalPrice} + (${productPrice} * ${quantity})
                storeIn: totalPrice
          else:
            - arithmetic:
                expression: ${productPrice} * ${quantity}
                storeIn: totalPrice
      - log: ${totalPrice}

  - name: ca.test.functions.cart.changePickupStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.pickup.address
      - click:
          identifier: ca.test.mappings.cart.pickup.address
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.walmart.ecommerceapp.qa:id/parentPanel
                then:
                  - click:
                      identifier: ca.test.mappings.acceptAlertBox
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true
      - verifyIdentifier:
          timeout: 5000
          notPresent:
            - identifier: ca.test.mappings.global.sheetTitle
            - identifier: ca.test.mappings.global.locationSearchTextBox
      - log:
          message: "Store Selection Sucessful"
          color: GREEN_BOLD
