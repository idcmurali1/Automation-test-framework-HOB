functions:

  # Book a pick up slot from home page see times
  - name: ca.test.function.bookASlot.goToSeeTimes
    platform: android
    flow:
      - loop:
          begin: 1
          end: 4
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: ca.test.mappings.home.seeTimes
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: ca.test.mapping.seeTimes.signIn
                  - click:
                      identifier: ca.test.mapping.seeTimes.signIn
                  - log: Sign In botton present, Cart page
                  - break: true
                catch:
                  flow:
                    - goBack: true
                    - log: Sign In botton in cart page not visible


# Book a delivery slot from home page see times
  - name: ca.test.function.bookASlot.deliverySlot
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.home.seeTimes
      - click:
          identifier: ca.test.mappings.deliveryOptions
      #Sign In to Place an order
      - executeFunction:
          name: ca.test.functions.global.authentication.signInAccount
          params:
            - name: email
              string: ${register}
            - name: password
              string: ${register_password}
      - sleep:
          duration: 25000
      
   # Reserve time page navigating to delivery from store
  - name: ca.test.functions.reserveTime.deliverFromStore
    platform: android
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.deliveryOptions
      - click:
          identifier: ca.test.mappings.deliveryOptions

  - name: ca.test.functions.bookASlot.reserveDeliveryExpressCartSlot
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.reserveTime.bookslotTimingRecyclerView
          then:
            - try:
                flow:
                  - loop:
                      begin: 1
                      end: 6
                      mode: increment
                      storeIndex: i
                      flow:
                        - click:
                            identifier: ca.test.mappings.bookExpressTimeSlot
                        - if:
                            identifier:
                              notPresent:
                                - identifier: ca.test.mappings.global.message
                            then:
                              - break: true
                catch:
                  flow:
                    - failTest:
                        message: No Insta Cart slot available

  - name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton
    platform: android
    flow:
      - click: 
          identifier: ca.test.mappings.cart.reserveTime
      - sleep:
          duration: 5000
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.placeOrder.alertBox
                then:
                  - click:
                      identifier: ca.test.mappings.okButton
                  - click:
                      identifier: ca.test.mappings.cart.reserveTime
                else:
                  - break: true
    # If any out of stock is present send it to save for later
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.itemUpdates
          then:
            - click:
                identifier: ca.test.mappings.cart.itemUpdates.gotItButton
            - click:
                identifier: ca.test.mappings.cart.reserveTime

  - name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton
    platform: ios
    flow:
      - click: 
          identifier: ca.test.mappings.reserveATime.reserveButton
      - sleep:
          duration: 5000
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.global.errorBoxTitle
                then:
                  - click:
                      identifier: ca.test.mappings.error.retryButton
                else:
                  - break: true

  - name: ca.test.functions.bookASlot.reserveTimePage.reserveStandardInstaCartSlot
    platform: android
    flow:
      - try:
          flow:
          - verifyIdentifier:
              timeout: 20000
              present:
                - identifier: ca.test.mappings.reservePage.storeInformationCard
          - sleep:
              duration: 7000
          - click:
              identifier: ca.test.mappings.reserveTime.selectCurrentDate
          - sleep:
              duration: 5000
          - loop:
              begin: 1
              end: 9
              storeIndex: i
              flow:
                - if:
                    identifier:
                      notPresent:
                        - identifier: ca.test.mappings.bookTimeSlot
                    then:
                      - scroll:
                          direction: down
                          untilIdentifier: ca.test.mappings.bookTimeSlot
                          position: center
                - click:
                    identifier: ca.test.mappings.bookTimeSlot
                - if:
                    identifier:
                      present:
                        - identifier: ca.test.mappings.global.message
                    then:
                      - log: 
                          message: Insta cart standard slot avialable
                          color: GREEN_BOLD
                      - if: 
                          identifier:
                            notPresent:
                              - identifier: ca.test.mappings.bookTimeSlotPrice
                          then:
                            - storeIn:
                                key: slotPrice
                                value: ca.test.data.freeSlotValue
                          else:
                            - getString:
                                identifier: ca.test.mappings.bookTimeSlotPrice
                                storeIn: slotPrice
                      - log: ${slotPrice}
                      - break: true
          - verifyIdentifier:
              present:
                - identifier: ca.test.mappings.global.message
          catch:
            flow:
              - failTest:
                  message: Standard Instacart slot not available


  # To click reserve a slot button
  - name: ca.test.functions.bookASlot.reservePickUpSlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime
      - click:
          identifier: ca.test.mappings.reserveTime
      - click:
          identifier: ca.test.mappings.pickUpTimeSlot
      - click: 
          identifier: ca.test.mappings.cart.reserveTime
    # If any out of stock is present send it to save for later
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.itemUpdates
          then:
            - click:
                identifier: ca.test.mappings.cart.itemUpdates.gotItButton
            - click:
                identifier: ca.test.mappings.cart.reserveTime


  - name: ca.test.functions.bookASlot.GOreserveTime   
    platform: android
    flow:
      - click:
          identifier: ca.test.mappings.reserveTimePickup
      - click: 
          identifier: ca.test.mappings.reserveButton

  # To click reserve a slot button when both Pickup and Shipping items are added to cart
  - name: ca.test.functions.bookASlot.pickupandshipping.reservePickUpSlot
    platform: android
    flow:
      - if:
          identifier:
            timeout: 15000
            notPresent:
              - identifier: ca.test.mappings.cart.scheduledPickup.changeButton
          then:
            - scroll:
                direction: up
                untilIdentifier: ca.test.mappings.cart.scheduledPickup.changeButton
      - click:
          identifier: ca.test.mappings.cart.scheduledPickup.changeButton
      - click:
          identifier: ca.test.mappings.pickUpTimeSlot
      - click: 
          identifier: ca.test.mappings.cart.reserveTime
    # If any out of stock is present send it to save for later
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.cart.itemUpdates
          then:
            - click:
                identifier: ca.test.mappings.cart.itemUpdates.gotItButton
            - click:
                identifier: ca.test.mappings.cart.reserveTime

  # To click reserve a slot button
  - name: ca.test.functions.bookASlot.reserveTimePage.reserveStandardSlot
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title      
      - sleep:
          duration: 10000
      - loop:
          begin: 1
          end: 4
          storeIndex: i
          flow:
            - storeIn:
                key: j
                value: ${i}
            - click:
                identifier: ca.test.mappings.reserveTime.selectDate
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.bookTimeSlot
                then:
                  - click:
                      identifier: ca.test.mappings.bookTimeSlot
                  - if: 
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.bookTimeSlotPrice
                      then:
                        - storeIn:
                            key: slotPrice
                            value: ca.test.data.freeSlotValue
                      else:
                        - getString:
                            identifier: ca.test.mappings.bookTimeSlotPrice
                            attribute: text
                            storeIn: slotPrice
                  - log: ${slotPrice}
                  - break: true      

  - name: ca.test.functions.bookASlot.reserveATime.getSelectedSlotDay
    platform: android
    flow:
      # Xpaths that will be used in the flow...
      # (since those will be created on the fly end reused to construct more complex ones, it is better to keep them here instead of a mappings file)
      - storeIn:
          key: dayButtonXpath
          value: //androidx.recyclerview.widget.RecyclerView[contains(@resource-id,"bookslot_day_carousel_recycler_view")]//android.view.ViewGroup[contains(@content-desc,"Button")]
      - storeIn:
          key: dayLabelXpath
          value: //android.widget.TextView[contains(@resource-id,"carousel_day")]
      - storeIn:
          key: dateLabelXpath
          value: //android.widget.TextView[contains(@resource-id,"carousel_date")]
      # Loop all the day buttons to identify which one is the one selected...
      - loop:
          begin: 1
          end: 5
          storeIndex: i
          mode: increment
          flow:
            - log: "Checking Button ${i}..."
            # Get the button state...
            - getString:
                identifier: (${dayButtonXpath})[ ${i} ]
                attribute: clickable
                storeIn: state
            - getString:
                identifier: (${dayButtonXpath})[ ${i} ]${dayLabelXpath}
                attribute: text
                storeIn: day
            - getString:
                identifier: (${dayButtonXpath})[ ${i} ]${dateLabelXpath}
                attribute: text
                storeIn: date
            - storeIn:
                key: dayAndDateString
                value: "${day}, ${date}"
            - if:
                condition: ${state} == false
                then: # Show info on the checked button, store the results in the returned variable and break the loop to finish the process...
                  - log: "Checked button: ${i}, ${dayAndDateString}, selected"
                  - storeIn:
                      key: selected_slot_day
                      value: ${i}, ${dayAndDateString}
                  - break: true
                else: # Show info on the checked button and continue the loop...
                  - log: "Checked button: ${i}, ${dayAndDateString}, not selected"
      - log: "Delivery Slot Day Got: ${selected_slot_day}"

  - name: ca.test.functions.bookASlot.reserveATime.getSelectedSlotTime
    platform: android
    flow: 
      - getString:
          identifier: ca.test.mappings.reserveATime.selectedTimeSlotButton
          attribute: contentDescription
          storeIn: currentlyDisplayedLabel 
      - log: "Label of Selected Time Slot: ${currentlyDisplayedLabel}"
      - executeNode:
          file: ca/test/helpers/delivery-slot-extraction/parseTimeLabelToFinalTimeString.js
          args:
            - value: ${currentlyDisplayedLabel}
          getResponse:
            storeIn: parsedTimeSlot
      - storeIn:
          key: selected_slot_time
          value: ${parsedTimeSlot}
      - log: "Delivery Slot Time Got: ${selected_slot_time}"

#########################IOS############################

  - name: ca.test.functions.bookASlot.GOreserveTimeIos   
    platform: ios
    flow:
      - click:
          identifier: ca.test.mappings.reserveTimePickup
      - click: 
          identifier: ca.test.mappings.reserveButton 
      - sleep:
          duration: 25000   

  - name: ca.test.functions.bookASlot.reserveTimePage.standardSlotSelection
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
      - sleep:
          duration: 10000
      - loop:
          begin: 1
          end: 4
          mode: increment
          storeIndex: i
          flow:
            - click:
                identifier: ca.test.mappings.reserveATime.dateSlotButton
            - if:
                identifier:
                  present:
                    - identifier: //XCUIElementTypeButton[@name="SlotHoursView.radioButton"]
                then:
                  - loop:
                      begin: 1
                      end: 6
                      mode: increment
                      storeIndex: i
                      flow:
                        - if:
                            identifier:
                              notPresent:
                                - identifier: ca.test.mappings.reserveATime.expressSlotButton
                            then:
                              - if:
                                  identifier:
                                    present:
                                      - identifier: ca.test.mappings.reserveATime.timeSlotButton
                                  then:
                                    - click:
                                        identifier: ca.test.mappings.reserveATime.timeSlotButton
                                    - storeIn:
                                        key: a
                                        value: ${i}
                                    - getString:
                                        identifier: ca.test.mappings.reserveATime.timeSlotPrice
                                        attribute: label
                                        storeIn: slotDatePrice
                                    - break: true
                                  else:
                                    - break: true
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.reserveATime.timeSlotConformation
                      then:
                        - break: true
                else:
                  - log:
                      message: Slot not present
                      color: GREEN_BOLD
      # - executeNode:
      #     file: ca/test/helpers/Cart/ReserveSlotPage/slotPrice.js
      #     args:
      #       - value: ${slotDatePrice}
      #     getResponse:
      #       storeIn: slotPrice
      # - log: 
      #     message: ${slotPrice}
      #     color: GREEN_BOLD

  - name: ca.test.functions.bookASlot.reserveTimePage.bookExpressSlot
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
      - click:
          identifier: ca.test.mappings.reserveATime.firstDateButton
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.reserveATime.firstTimeSlot
          then:
            - if:
                identifier:
                  present:
                    - identifier: ca.test.mappings.reserveATime.firstExpressSlotButton
                then:
                  - if:
                      condition: ${expressSlotType} == 'Instacart'
                      then:
                        - loop:
                            begin: 1
                            end: 5
                            mode: increment
                            storeIndex: i
                            flow:
                              - log: ${i}
                              - if:
                                  identifier:
                                    present:
                                      - identifier: ca.test.mappings.reserveATime.expressSlotButton
                                  then:
                                    - click:
                                        identifier: ca.test.mappings.reserveATime.timeSlotButton
                                    - if:
                                        identifier:
                                          present:
                                            - identifier: ca.test.mappings.reserveTime.deliveryFromStore.instaCartContainer
                                        then:
                                          - verifyIdentifier:
                                              present:
                                                - identifier: ca.test.mappings.reserveATime.deliveryFromStore.instaCartText
                                                - identifier: ca.test.mappings.reserveATime.deliveryFromStore.instaCartLogo
                                          - getString:
                                              identifier: ca.test.mappings.reserveATime.timeSlotPrice
                                              attribute: label
                                              storeIn: slotDatePrice
                                          - break: true
                        - if:
                            identifier:
                              notPresent:
                                - identifier: ca.test.mappings.reserveTime.deliveryFromStore.instaCartContainer
                            then:
                              - failTest:
                                  message: "No Express Insta cart slot present"
                      else:
                        - if:
                            identifier:
                              present:
                                - identifier: ca.test.mappings.reserveATime.firstExpressSlotButton
                            then:
                              - click:
                                  identifier: ca.test.mappings.reserveATime.timeSlotButton
                              - getString:
                                  identifier: ca.test.mappings.reserveATime.firstTimeSlotPrice
                                  attribute: label
                                  storeIn: slotDatePrice
                else: 
                  - failTest:
                      message: "No Express Slot Available"
          else:
            - failTest:
                message: "No slot available for today"
      - executeNode:
          file: ca/test/helpers/Cart/ReserveSlotPage/slotPrice.js
          args:
            - value: ${slotDatePrice}
          getResponse:
            storeIn: slotPrice
      - log: 
          message: ${slotPrice}
          color: GREEN_BOLD

  # This function can be used for booking express pickup slot for GO item 
  # To extract the slot price
  - name: ca.test.functions.bookASlot.reserveTimePage.reserveExpressPickupSlot
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
      - sleep:
          duration: 10000

      - try:
          flow:
            - click:
                identifier: ca.test.mappings.reserveTime.selectCurrentDate
            - sleep:
                duration: 5000
            - loop:
                begin: 1
                end: 9
                storeIndex: i
                flow:
                  - click:
                      identifier: ca.test.mappings.bookingSlot
                  - if:
                      identifier:
                        notPresent:
                          - identifier: ca.test.mappings.global.message
                      then:
                        - log:
                            message: Not InstaCart Express
                            color: GREEN_BOLD
                        - if:
                            identifier:
                              notPresent:
                                - identifier: ca.test.mappings.bookingSlotPrice
                            then:
                              - storeIn:
                                  key: slotPrice
                                  value: ca.test.data.freeSlotValue
                            else:
                              - getString:
                                  identifier: ca.test.mappings.bookingSlotPrice
                                  storeIn: slotPrice
                        - log: ${slotPrice}
                        - break: true
          catch:
            flow:
              - failTest:
                  message: Express Pickup Slot Not Available

#      - if:
#          identifier:
#            present:
#              - identifier: ca.test.mappings.bookPickUpExpressTimeSlot
#          then:
#            - click:
#                identifier: ca.test.mappings.bookPickUpExpressTimeSlot
#            # Temperory
#            - getString:
#                identifier: ca.test.mappings.bookExpressTimeSlotPrice
#                attribute: text
#                storeIn: slotPrice
#            - log: ${slotPrice}
#          else:
#            - failTest:
#                message: No Express PickUp Slot Available

#===========================================================================================

  - name: ca.test.functions.bookASlot.GOreserveTimeIos   
    platform: ios
    flow:
      - verifyIdentifier:
          present:
           - identifier: ca.test.mappings.reserveTimePickup
      - click:
          identifier: ca.test.mappings.reserveTimePickup
      - click: 
          identifier: ca.test.mappings.reserveButton 
      - sleep:
          duration: 25000            

#Pickup from store GO Mixed flow-ios
      
  - name: ca.test.functions.mixedstoreTimeReservePickUp.time_ios
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.changeStoreInCart
      - click:
          identifier: ca.test.mappings.changeStoreInCart
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.selectTimeSlotIndex2
      - click:
          identifier: ca.test.mappings.selectTimeSlotIndex2
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton

  # Book a slot page verification
  - name: ca.test.functions.pickupTimeReserve.timeValidationIos  
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
            - identifier: ca.test.mappings.pickUpTab
            - identifier: ca.test.mappings.deliveryTab
            - identifier: ca.test.mappings.reserveSlotHeader
            - identifier: ca.test.mappings.reserveTime.bookslotDayCarousel
        
  #delivery from store GO Mixed flow-ios
      
  - name: ca.test.functions.mixedstoreTimeReserve.time_ios
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.changeStoreMixed
      - click:
          identifier: ca.test.mappings.changeStoreMixed
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.deliveryfromStoreOption
      - click:
          identifier: ca.test.mappings.deliveryfromStoreOption
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.selectTimeSlot
      - click:
          identifier: ca.test.mappings.selectTimeSlot
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton

  - name: ca.test.functions.bookASlot.reserveInstaCartSlot
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: ca.test.mappings.cart.reserveTime.title
      - sleep:
          duration: 10000
      - if:
          identifier:
            notPresent:
              - identifier: ca.test.mappings.reserveTime.bookslotTimingRecyclerView
          then:
            - sleep:
                duration: 5000
      - click:
          identifier: ca.test.mappings.reserveTime.selectCurrentDate
      - try:
          flow:
            - loop:
                begin: 1
                end: 6
                mode: increment
                storeIndex: i
                flow:
                  - click:
                      identifier: ca.test.mappings.bookExpressTimeSlot
                  - if:
                      identifier:
                        present:
                          - identifier: ca.test.mappings.global.message
                      then:
                        - getString:
                            identifier: ca.test.mappings.bookInstaTimeSlotPrice
                            attribute: text
                            storeIn: slotPrice
                        - log: ${slotPrice}
                        - getString:
                            identifier: ca.test.mappings.bookInstaTime.deliveryTime
                            attribute: text
                            storeIn: deliveryEta
                        - arithmetic:
                            expression: ${deliveryEta}
                            storeIn: eta
                        - break: true
          catch:
            flow:
              - failTest:
                  message: No insta cart express slot available


  # Click on see times
  - name: ca.test.function.seeTimes.click
    platform: ios
    flow:
      - click:
          identifier: ca.mappings.tabBar.shop
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.home.seeTimes
      - click:
          identifier: ca.test.mappings.home.seeTimes
      - sleep:
          duration: 10000

      #delivery from store GO
  - name: ca.test.functions.deliveryFromStoreExp
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.deliveryfromStoreOption
      - click:
          identifier: ca.test.mappings.deliveryfromStoreOption
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.selectTimeSlotIcc
      - click:
          identifier: ca.test.mappings.selectTimeSlotIcc
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton

  - name: ca.test.functions.penguinPickup.selectIos
    platform: ios
    flow:
      #      - if:
      #          identifier:
      #            present:
      #              - identifier: ca.test.mappings.cart.pickUp.changeButtonPenguinPickup
      #          then:
      #            - click:
      #                identifier: ca.test.mappings.cart.pickUp.changeButtonPenguinPickup
      #            - sleep:
      #                duration: 5000
      #      - verifyIdentifier:
      #          present:
      #            - identifier: ca.test.mappings.storeSelectionPage.title
      #      - if:
      #          identifier:
      #            present:
      #              - identifier: ca.test.mappings.home.zipCodeHome
      #          then:
      #            - enterText:
      #                identifier: ca.test.mappings.home.zipCodeHome
      #                clearField: true
      #                string: ${Zip_Code}
      #                pressEnter: true
      #          else:
      #            - scroll:
      #                direction: down
      #                untilIdentifier: ca.test.mappings.penguinPickup.selectStore
      #      - click:
      #          identifier: ca.test.mappings.penguinPickup.selectStore
      #      - click:
      #          identifier: ca.test.mappings.amendOrder.saveButton
      - click:
          identifier: ca.test.mappings.penguinPickup.timeSelect
      - click:
          identifier: ca.test.mappings.penguinPickup.reserve
      - sleep:
          duration: 5000

  # Change Click
  - name: ca.test.functions.change
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.pickUp.changeButton
      - click:
          identifier: ca.test.mappings.cart.pickUp.changeButton

      #delivery from store GO
  - name: ca.test.functions.deliveryFromStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.deliveryfromStoreOption
      - click:
          identifier: ca.test.mappings.deliveryfromStoreOption
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.deliverySlot
      - click:
          identifier: ca.test.mappings.cart.deliverySlot
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton

  - name: ca.test.functions.timeReservePickUp.standardTimeSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.changeStoreInCart
          then:
            - click:
                identifier: ca.test.mappings.changeStoreInCart
          else:
            - click:
                identifier: ca.test.mappings.cart.pickUp.changeButton
      - executeFunction:
          name: ca.test.functions.pickupTimeReserve.timeValidationIos
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.cart.deliverySlot
      - click:
          identifier: ca.test.mappings.cart.deliverySlot
      - getString: 
          identifier: ca.test.mappings.cart.deliverySlot
          attribute: label
          storeIn: slotPrice 
      - log: $slotPrice     
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveButton
      - click:
          identifier: ca.test.mappings.reserveButton

  - name: ca.test.functions.home.seeTimes.bookStandardSlot
    platform: ios
    flow:
      - if:
          condition: ${fulfillmentType} == 'Delivery from store'
          then:
            - click:
                identifier: ca.test.mappings.deliveryTab
      # Reserving a slot
      - executeFunction: 
          name: ca.test.functions.bookASlot.reserveTimePage.standardSlotSelection
      # Clicking book a slot button
      - executeFunction:
          name: ca.test.functions.bookASlot.reserveTimePage.bookASlotButton

  # Reserve time page navigating to delivery from store
  - name: ca.test.functions.reserveTime.deliverFromStore
    platform: ios
    flow:
    # workaround for add address popup
      - executeFunction:
          name: ca.test.functions.handleAddAddressPopup
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.reserveTime.deliveryFromStore
      - click:
          identifier: ca.test.mappings.reserveTime.deliveryFromStore       
  
  - name: ca.test.functions.reserveTime.changeAddress
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTimePage
            - identifier: ca.test.mappings.cart.delivery.cardTitle.Pickup
            - identifier: ca.test.mappings.cart.scheduledDelivery.slotDetails
      # - verifyIdentifier:
      #     checked:
      #       - identifier: ca.test.mappings.cart.scheduledDelivery.slotDetails
      #         value: true
      - log:
          message: Delivery from store selected
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTimePage.changeAddressbutton
      - verifyIdentifier:
          timeout: 20000
          notPresent:
            - identifier: ca.test.mappings.reserveTimePage.changeAddressbutton

   # Reserve time page navigating to delivery from store
  - name: ca.test.functions.reserveTime.pickUpFromStore
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: ca.test.mappings.reserveTime.curbsidePickup
      - click:
          identifier: ca.test.mappings.reserveTime.curbsidePickup

  - name: ca.test.function.seeTimes.reserveTimePage.changeStore
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.changeLocation
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation
      - log:
          message: Store selection page opened.
          color: GREEN_BOLD
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - loop:
          begin: 1
          end: 4
          mode: increment
          flow:
            - log:
                message: Checking for technical error
                color: GREEN_BOLD
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: ca.walmart.ecommerceapp.qa:id/parentPanel
                then:
                  - click:
                      identifier: ca.test.mappings.acceptAlertBox
                  - if:
                      identifier:
                        timeout: 10000
                        present:
                          - identifier: ca.test.mappings.store.link
                      then:
                        - break: true
                else:
                  - break: true
      - log:
          message: "Store Selection Sucessful"
          color: GREEN_BOLD
  
  - name: ca.test.function.cart.reservePage.selectedStoreAssertion
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.pickupStoreName
      - verifyIdentifier:
          text:
            - identifier: ca.test.mappings.reserveTime.pickupStoreName
              contains: ${storeName}
      - click:
          identifier: ca.test.mappings.global.closeIcon

  - name: ca.test.function.seeTimes.reserveTimePage.changeStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.reserveTime.changeLocation
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation
      - log:
          message: Store selection page opened.
          color: GREEN_BOLD
      - log:
          message: Enter zip code
          color: GREEN_BOLD
      - enterText:
          identifier: ca.test.mappings.global.locationSearchTextBox
          string: ${Zip_Code}
          pressEnter: true
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - log: 
          message: Checking for store based on name.
          color: GREEN_BOLD
      - log:
          message: Clicking on the ${storeName}.
          color: GREEN_BOLD
      - click: 
          identifier: ca.test.mappings.selectStore.storeName
      - log:
          message: Clicking on the save address button
          color: GREEN_BOLD
      - click:
          identifier: ca.test.mappings.reserveTime.changeLocation.locationSaveButton
      - log:
          message: "Store Selection Sucessful"
          color: GREEN_BOLD        


  - name: ca.test.function.cart.reservePage.selectedStoreAssertion
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: ca.test.mappings.selectStore.storeName
      - verifyIdentifier:
          label:
            - identifier: ca.test.mappings.selectStore.storeName
              contains: ${storeName}      

      # Workaround for deliveryslot opens in slot page by default
  - name: ca.test.function.slotpage.fromGuestPopupToPickuSlotPage
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: ca.test.mapping.seeTimes.signIn
          then:
              - click: 
                  identifier: ca.test.mappings.global.closeIcon
      - sleep:
          duration: 1000
      - if:
          identifier:
            present:
              - identifier: ca.test.mappings.pickUpTab 
          then:
            - click: 
                identifier: ca.test.mappings.pickUpTab