# TC 1 Customer location and basket is drone eligible * Drone upsell shows in cart * Customer opts into drone delivery (clicks CTA)
#* Capacity counter will show * Customer checks out with drone delivery 

general:
  platform: ios
  tags: C2707766, p2-ecomm-teflon-e2e
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2707766

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 #***************************************************************************************************************

  # Astro - Clear cart

 #***************************************************************************************************************

      - executeFunction:
          name: us.functions.utils.astro.clearCart
          params:
            - name: custEmail
              string: us.data.flow.drone.ios.email

  - name: Main
    flow:

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome.paramZip
          params:
            - name: ZIP_CODE
              string: us.data.flow.drone.supported.zipCode

#       # Navigate to sign in page
#       - executeFunction:
#           name: us.functions.home.navigateHomeToSignIn

#       # Sign in with Drone iOS account
#       - executeFunction:
#           name: us.functions.global.authentication.signInAccount
#           params:
#             - name: email
#               string: us.data.flow.drone.ios.email
#             - name: password
#               string: us.data.flow.drone.ios.password

#       - executeFunction:
#           name: us.functions.global.navigation.accountToHome


#       # Select Delivery intent from GIC
#       - executeFunction:
#           name: us.functions.gic.expandIfCollapsed
#       - executeFunction:
#           name: us.functions.gic.setFulfillment
#           params:
#             - name: option
#               string: Delivery

#       - executeFunction:
#             name: us.functions.gic.updateStore 

#       # Add DRONE_DELIVERY eligible item via deeplink - to be replaced with astro fetch API
#       - executeFunction:
#           name: us.functions.global.navigation.goToDeepLink
#           params:
#             - name: deepLinkUrl
#               string: us.data.flow.drone.eligible.item
#       - executeFunction:
#           name: us.functions.item.addItemToCart                                                                      

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#       - log: 'R2_SUBFLOW_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

#       - executeFunction:
#            name: us.functions.global.navigation.toCartFromNavBar
    
#       # Verify cart page  
#       - executeFunction:
#           name: us.functions.cart.verifyCardDetails
#           params:
#             - name: fulfillmentText
#               string: Delivery

#       # Cart Validation for Drone treatment: <Insert function here>
#       # Drone upsell shows in cart with capacity counter and text
#       # Customer opts into drone delivery (clicks Reserve CTA)
#       # Verify Drone Delivery Fulfillment Text is displayed in Cart
#       # Verify Drone Delivery Fee in POS

#       # DRONE FUNCTIONS
#       - executeFunction:
#           name: us.functions.cart.verifyAndReserveDroneSlot

#       - executeFunction:
#           name: us.functions.cart.continueToCheckout

#       # Validate on Review order screen
#       - executeFunction:
#           name: us.functions.checkout.reviewOrder.verifyCardDetails
#           params:
#             - name: fulfillmentText
#               string: Drone delivery

#       - executeFunction:
#           name: us.functions.reviewOrder.verifyDroneFulfillmentDetails           
  
#       #Place order
#       - executeFunction:
#           name: us.functions.checkout.confirmCvvAndPlaceOrder

# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#       - log: 'R2_SUBFLOW_POST_TRANSACTION'
# # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

#       - executeFunction:
#           name: us.functions.orderConfirmation.getOrderNumber

#       - log: ${orderNo}


#  #***************************************************************************************************************

#   # Astro - Move order to Delivered

#  #***************************************************************************************************************

#       - executeFunction:
#           name:  us.functions.utils.astro.getOrderStatus

#       # - executeFunction:
#       #     name: us.functions.utils.astro.setOrderStatus
#       #     params:
#       #       - name: orderNo
#       #         string: ${orderNo}
#       #       - name: orderType
#       #         string: SFS
#       #       - name: status
#       #         string: Delivered
    
#       # - executeFunction:
#       #     name: us.functions.utils.astro.setOrderStatus
#       #     params:
#       #       - name: orderNo
#       #         string: ${orderNo}          
#       #       - name: orderType
#       #         string: FC_DELIVERY
#       #       - name: status
#       #         string: Delivered
      
#       - executeFunction:
#           name: us.functions.global.navigation.goToDeepLink
#           params:
#             - name: deepLinkUrl
#               string: walmart://orders/$orderNo

#       #FUNCTION for Drone Delivery ODP screen
#       - executeFunction:
#           name: us.functions.odp.verifyDroneCardDetails

#       - executeFunction:
#           name: us.functions.utils.astro.setOrderStatus
#           params:
#             - name: orderNo
#               string: ${orderNo}          
#             - name: orderType
#               string: FC_DELIVERY
#             - name: status
#               string: Delivered

#       - executeFunction:
#           name: us.functions.orderDetails.ost.mixedOrder.verifyOrderStatus
#           params:
#             - name: fulfillmentType
#               string: Shipping
#             - name: orderStatus
#               string: Delivered
#             - name: index
#               string: 1

#       - executeFunction:
#           name: us.functions.orderDetails.ost.mixedOrder.verifyOrderStatus
#           params:
#             - name: fulfillmentType
#               string: Shipping
#             - name: orderStatus
#               string: Delivered
#             - name: index
#               string: 2

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
