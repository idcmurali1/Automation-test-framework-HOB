general:
  platform: ios
  tags: C2697584, p1-ecomm-teflon-e2e, us-golden-flows, FF006, p1-fulcrum-teflon-e2e
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2697584
  metadata:
    - name: scenarioId
      string: FF006 #"383"

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      #***************************************************************************************************************

      # Astro - Create order and move to out of delivery status.

      #***************************************************************************************************************
      # Fetch stock available items using fetch API
      # - executeFunction:
      #     name: us.functions.utils.getSearchableItem
      #     params:
      #       - name: source
      #         string: astro
      #       - name: itemType
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: store
      #         string: 32144
      #       - name: itemFilter
      #         string: subscriptions

      - executeFunction:
          name: us.functions.utils.fetchItemAndValidate
          params:
            - name: itemType
              string: STORE_SCHEDULED_DELIVERY
            - name: storeId
              string: 32144
            - name: action
              string: FetchAndValidateOrderMovment
            - name: orderStatus
              string: PO Out for Delivery
            - name: emailId
              string: us.data.driverReturn.ios.email
            - name: itemFilter
              string: subscriptions
            - name: getOrderId
              string: true

      - log: order Succefully created $orderNo

      # - storeIn:
      #     key: item1
      #     value: $itemFetched

      # - executeFunction:
      #     name: us.functions.utils.astro.createOrder
      #     params:
      #       - name: payload
      #         string: us.data.driverReturn.createOrderPayload

      # - executeFunction:
      #     name: us.functions.utils.astro.getOrderStatus

      # - executeFunction:
      #     name: us.functions.utils.astro.setOrderStatus
      #     params:
      #       - name: orderNo
      #         string: ${orderNo}
      #       - name: orderType
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: status
      #         string: PO Out for Delivery

  - name: Main
    flow:
      - log: Start Main

      #Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      # Will take the user to the account menu from where the user can sign in to the app
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      # User signs in to the account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: us.data.driverReturn.ios.email
            - name: password
              string: us.data.driverReturn.ios.password

      - sleep:
          duration: 3000

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      # Verify order status in order details page
      - executeFunction:
          name: us.functions.orderDetails.ost.scheduledDelivery.verifyOrderStatus
          params:
            - name: fulfillmentType
              string: Delivery from store
            - name: orderStatus
              string: On the way

      # Astro - Make order status to driver returned to store
      - executeFunction:
          name: us.functions.utils.astro.triggerDriverreturnedstatus
          params:
            - name: orderNo
              string: ${orderNo}
            - name: orderType
              string: STORE_SCHEDULED_DELIVERY
            - name: status
              string: Returned

      - sleep:
          duration: 3000

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      # Verify order status in order details page
      #       - executeFunction:
      #           name: us.functions.orderDetails.ost.scheduledDelivery.verifyOrderStatus
      #           params:
      #             - name: fulfillmentType
      #               string: Delivery from store
      #             - name: orderStatus
      #               string: Attempted

      #Validate Reschedule, Convert to Pickup, Request cancellation options are being displayed in order details
      - executeFunction:
          name: us.functions.orderDetails.verifycustomerchoiceondriverreturns

      #Select reschedule option for  driver return order
      #       - executeFunction:
      #            name: us.functions.orderDetails.verifyrescheduleorderupondriverreturn

      #Select Pickup option for  driver return order inorder to Conver to Pickup
      - click:
          identifier: us.mappings.orderDetails.customeroptionreschedule
      - sleep:
          duration: 5000          
      - executeFunction:
          name: us.functions.reserveSlot.scheduledDelivery.bookSlot
      - sleep:
          duration: 10000
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      # Verify order status in order details page
      #       - executeFunction:
      #           name: us.functions.orderDetails.ost.scheduledDelivery.verifyOrderStatus
      #           params:
      #             - name: fulfillmentType
      #               string: Delivery from store
      #             - name: orderStatus
      #               string: Preparing

      # Payment clarity ledger when order is converted to pickup with "Order detail edited" showing on ledger
      - executeFunction:
          name: us.functions.orderDetails.clickChargeHistoryPage

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
