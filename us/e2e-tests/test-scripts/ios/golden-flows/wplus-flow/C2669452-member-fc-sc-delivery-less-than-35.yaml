general:
  platform: ios
  tags: C2669452 , us-golden-flows-wplus, p2-wplus-teflon-e2e
  testCaseId: C2669452
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  metadata:
    - name: scenarioId
      string: 187

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    endTestOnFailure: true
    flow:

      - log: Start Main

      # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      - storeIn:
          key: customerEmail
          value: wplususer${timestamp}@walmart.com

      - storeIn:
          key: password
          value: E2epassword$   

      # Create Accountusing astro api
      - executeFunction:
          name: us.functions.utils.astro.createAccount
          params:
            - name: payload
              string: us.data.flow083.createAccountPayload

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

    # Sign in with default account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: $customerEmail
            - name: password
              string: $password
              
      - executeFunction:
          name: us.functions.global.navigation.goToHomeFromTabBar 

      # Set store
      - executeFunction:
          name: us.functions.home.setStore
          params:
              - name: store
                string: 32144
              - name: storeName
                string: San Jose Supercenter 

      # Function to fetch working items from the item array list using API.
      - executeFunction:
          name: us.functions.utils.getSearchableItem
          params:
            - name: email
              string: ${customerEmail}
            - name: storeId
              string: 32144        
            - name: itemType
              string: STORE_SCHEDULED_DELIVERY
            - name: itemFilter 
              string: lessThan35

      # Add item to cart from deeplink
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: ${deeplinkURl} 
                    
      - executeFunction:
          name: us.functions.item.addItemToCart

       # Function to fetch working items from the item array list using API.
      - executeFunction:
          name: us.functions.utils.getSearchableItem
          params:
            - name: email
              string: ${customerEmail}
            - name: storeId
              string: 32144      
            - name: itemType
              string: FC_DELIVERY
            - name: itemFilter 
              string: lessThan35

      # Add item to cart from deeplink
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: ${deeplinkURl} 

      - executeFunction:
          name: us.functions.item.addItemToCart

      # Navigating to cart
      - executeFunction:
          name: us.functions.global.navigation.toCartFromNavBar

      # Select slot
      - executeFunction:
          name: us.functions.selectBookingSlot
          params:
            - name: tab
              string: delivery
            - name: page
              string: cart
            - name: addAddress
              string: true
            - name: addExistingAddress
              string: true
            - name: slotDay
              string: tomorrow
            - name: slotIndex
              string: 4        

      # # Verify optIn and optOut screen
      # - executeFunction:
      #     name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
      #     params:
      #       - name: wplusUser
      #         string: optIn
            
      # - executeFunction:
      #     name:  us.functions.wplus.reserveSlot.optInOrOutWPlusMembershipCharge
      #     params:
      #       - name: wplusUser
      #         string: optIn

      # - executeFunction:
      #     name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
      #     params:
      #       - name: wplusUser
      #         string: optOut

      # - executeFunction:
      #     name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembershipCharge

      # # Function to select appropriate day for slot booking
      # - executeFunction:
      #     name: us.functions.selectDayForSlotDisplay
      #     params:          
      #       - name: slotDay
      #         string: dayAfter

      # # Function to select appropriate slot time
      # - executeFunction:
      #     name: us.functions.selectTimeSlot
      #     params:
      #       - name: timeSlot
      #         string: generic         
      #       - name: slotIndex
      #         string: 2

      # # Function to save selected time slot
      # - executeFunction:
      #     name: us.mappings.confirmSlotSelection

      # # Function to reset data
      # - executeFunction:
      #     name: us.functions.slotDataReset            

      # # Select Try W+ from cart screen and join Monthly Plan
      # - executeFunction:
      #     name: us.functions.wplus.cart.verifyTryWalmartPlusfromCart

      # - executeFunction:
      #     name: us.functions.wplus.reviewOrder.verifyDeliveryFeesWaivedOff

      # # Proceeding to Review order page
      # - executeFunction:
      #     name: us.functions.cart.continueToCheckoutOrNewOrder

      # # Select slot if Reserved time got expired    
      # - executeFunction:
      #     name: us.functions.selectBookingSlot
      #     params:
      #       - name: tab
      #         string: delivery
      #       - name: slotDay
      #         string: dayAfter
      #       - name: slotIndex
      #         string: 3 

      # - executeFunction:
      #     name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

      # # Review Scheduled delivery order details and Shipping details
      # - executeFunction:
      #     name: us.functions.checkout.reviewOrder.verifyCardDetails
      #     params:
      #       - name: fulfillmentText
      #         string: Delivery 

      # - executeFunction:
      #     name: us.functions.checkout.reviewOrder.verifyCardDetails
      #     params:
      #       - name: fulfillmentText
      #         string: Shipping

      # # Verify default selection is Annual Plan
      # - executeFunction:
      #     name: us.functions.wplus.reviewOrder.verifyDefaultselection.annualPlan

      # # Select NotInterested and verify
      # - executeFunction:
      #     name: us.functions.wlus.reviewOrder.selectNotInterestedAndVerifyPOS

      # # Select Annual plan and verify
      # - executeFunction:
      #     name: us.functions.wplus.reviewOrder.selectAnnualAndVerifyPOS   

      # # placing order and navigating to order confirmation page
      # - executeFunction:
      #     name: us.functions.checkout.placeOrder

      # - executeFunction:
      #     name: us.functions.orderConfirmation.ratings

      # #Validate order confirmation page
      # - executeFunction:
      #     name: us.functions.orderConfirmation.getOrderNumber

      # - log: ${orderNo}

      # # Verify Scheduled delivery order details and Shipping details
      # - executeFunction:
      #     name: us.functions.orderConfirmation.verifyCardDetails
      #     params:
      #       - name: fulfillmentText
      #         string: Delivery

      # - executeFunction:
      #     name: us.functions.orderConfirmation.verifyCardDetails
      #     params:
      #       - name: fulfillmentText
      #         string: Shipping

     # W+ cart opt-in
      - executeFunction:
          name: us.functions.wplus.cart.verifyTryWalmartPlusfromCart

      # Validate if delivery and shipping fees are waivedOff
      - executeFunction:
          name:  us.functions.wplus.cart.chargeWaiveOff-deliveryFromStoreCharges    
 
       # W+ cart opt-out and validate if delivery and shipping fees are re-applied
      - executeFunction:
          name: us.functions.wplus.cart.optOutWPlusMembership

       # W+ cart opt-out and validate if delivery and shipping fees are re-applied
      - executeFunction:
          name: us.functions.wplus.cart.optOutWPlusMembershipCharges

     # W+ cart opt-in back
      - executeFunction:
          name: us.functions.wplus.cart.verifyTryWalmartPlusfromCart

      # Validate if delivery and shipping fees are waivedOff
      - executeFunction:
          name:  us.functions.wplus.cart.chargeWaiveOff-deliveryFromStoreCharges

      # Proceeding to Review order page
      - executeFunction:
          name: us.functions.cart.continueToCheckoutwithOutClosingW+BottomSheet

      # Select monthly plan from W+ bottom sheet
      - executeFunction:
          name: us.functions.wplus.reviewOrder.splash.verifyWalmartPlusPlans     
          params:
            - name: tenure
              string: Monthly

       # Validate if delivery and shipping fees are waivedOff
      - executeFunction:
          name:  us.functions.wplus.cart.chargeWaiveOff-deliveryFromStoreCharges

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps 