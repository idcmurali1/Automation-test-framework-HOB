#============================================================= Author: Amar Kumar (a0k05n4) ===================================================

general:
  platform: ios
  tags: C2696984 #(Deprecated as part of Regression Optimization), p1-wplus-teflon-e2e
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2696984
  metadata:
    - name: scenarioId
      string: "397, 389, 388"

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


  - name: Main
    flow:
      - log: Start Main

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      - storeIn:
          key: customerEmail
          value: wmtuser${timestamp}@walmart.com

      - storeIn:
          key: password
          value: E2epassword$

      # Create Accountusing astro api
      - executeFunction:
          name: us.functions.utils.astro.createAccount
          params:
            - name: payload
              string: us.data.flow032ios.createAccountPayload

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://expo?expo_preview=true&experiment_spec=DbnGz&variation_specs=4lbnx&experiment_count=0

      # Setting up the store to 32144
      - log: "Setting up store to 32144"
      - executeFunction:
          name: us.functions.home.setStore
          params:
            - name: store
              string: 32144
            - name: storeName
              string: San Jose Supercenter
            - name: storeOnly
              string: true
      
      # Search for an item
      - log: "Searching for an item"
      - executeFunction:
          name: us.functions.search.searchItem
          params:
            - name: searchTerm
              string: 278681002


      # Validating that Sign in to claim button is present for searched item
      - log: "Validating that Sign in to claim button is present for searched item"
      - executeFunction:
          name: us.functions.ibotta.validateSignInButtonForGuestUser

      - log: "Clicking on the first item in order to navigate to the item page"
      - executeFunction:
          name: us.functions.search.clickOnFirstItem

      - log: "Validating that the Sign in to claim CTA is present in Item page as well"
      - executeFunction:
          name: us.functions.ibotta.validateSingInButtonForGuestUserItemPage

      - log: "Signing in to the never member account"
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: wmtuser${timestamp}@walmart.com
            - name: password
              string: E2epassword$

      - log: "Relaunching the item page"
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://ip/278681002

      - log: "Validating that clipping component is present and clipping it"
      - executeFunction:
          name: us.functions.wplus.verifyibottaandatc.fromItemPage

      - log: "Adding item to cart"
      - executeFunction:
          name: us.functions.item.addItemToCart

      - log: "Navigating to cart"
      - executeFunction:
          name: us.functions.global.navigation.toCartFromNavBar 

      - log: "Increasing the quantity to 2 so as to handle must buy 2 use case"
      - executeFunction:
          name: us.functions.cart.increaseItemQtyInCart
          params:
            - name: quantity
              string: 2
      
      - executeFunction:
          name: us.functions.cart.switchBetweenPickUpAndShipping
          params:
            - name: fulfillmentType
              string: pickup

      - log: "Validating the updated rewards earned banner in the cart page"
      - executeFunction:
          name: us.functions.wplus.verifyRewardEarned.fromCartPage

      - executeFunction:
          name: us.functions.cart.continueToCheckoutOrNewOrder

      - log: "Validating that the user sees the earned rewards message in review order page"
      - executeFunction:
          name: us.functions.ibotta.validateRewardsInfoInCheckoutPage

      - executeFunction:
          name: us.functions.checkout.confirmCvvAndPlaceOrder

      - executeFunction:
          name: us.functions.orderConfirmation.ratings

      - log: "Validating the updated rewards banner in the Thank you page"
      - executeFunction:
          name: us.functions.ibotta.validateRewardsEarnedInThankYouPage
        
      - executeFunction:
          name: us.functions.orderConfirmation.getOrderNumber

      - log: ${orderNo}    

      - executeFunction:
          name: us.functions.utils.astro.getOrderStatus
          params:
            - name: orderNo
              string: ${orderNo}
          
      - executeFunction:
          name: us.functions.utils.astro.setOrderStatus
          params:
            - name: orderNo
              string: ${orderNo}
            - name: orderType
              string: FC_DELIVERY
            - name: status
              string: Delivered
            - name: altOrderType
              string: OZARK

      - executeFunction:
          name: us.functions.tippingAndFeedback.click.continueShopping.button

      - executeFunction:
          name: us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account

      # Validating that the rewards earned is being displayed on the account page
      - executeFunction:
          name: us.functions.ibotta.validateRewardsEarnedOnAccountPage

      # Deeplink into order details page
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      - executeFunction:
          name: us.functions.ibotta.validateBannerInODP

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://home

      - executeFunction:
          name: us.functions.search.searchItem
          params:
            - name: searchTerm
              string: 278681002

      - executeFunction:
          name: us.functions.item.addItemToCart

      - executeFunction:
          name: us.functions.global.navigation.toCartFromNavBar 

      - executeFunction:
          name: us.functions.cart.continueToCheckoutOrNewOrder

      - log: "Validating that the user sees the walmart cash card in the checkout wallet"
      - executeFunction:
          name: us.functions.ibotta.validateCheckoutWallet

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps

