# Author : Joel Litvin  #Regression test case - Happy path for BuyNow Eligibility and Associate Discount
general:
  platform: ios
  tags: us-golden-flows-wplus, C2664855
  #p1-wplus-teflon-e2e
  testCaseId: C2664855
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      - storeIn:
          key: customerEmail
          value: wplususer${timestamp}@walmart.com

  # Create Wplus Account using astro api
      - executeFunction:
          name: us.functions.utils.astro.createTrialAccountConvertToPaid #us.functions.utils.astro.createAccount
          params:
            - name: email
              string: $customerEmail
            - name: payload
              string: us.data.createWplusAccountPayload.monthly
     
       
  - name: Main
    flow:
      - log: Start Main

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      # Sign in with free trial account and convert to paid member
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
              - name: email
                string: $customerEmail
              - name: password
                string: E2epassword$

      #Search for an item
     # - executeFunction:
     #     name: us.functions.search.searchItem
     #     params : 
     #       - name: searchTerm
     #         string: us.data.paidmember.item.buyNow

    #Click on first item
      #- executeFunction:
      #    name: us.functions.search.clickOnFirstItem

      - executeFunction:
          name: us.functions.utils.getSearchableItem
          params:
            - name: email
              string: ${customerEmail}
            - name: storeId
              string: 32144      
            - name: itemType
              string: FC_DELIVERY
            - name: itemFilter #itemList
              string: lessThan35

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: ${deeplinkURl}

      #Tapping BuyNow and verify free shipping text on buynow overlay
      - executeFunction:
          name: us.functions.buyNow.existingUser.overlay
      
      #Verify Free Shipping No Min Order Label on buyNow Overlay
      - executeFunction:
          name: us.functions.wplus.cart.noMinimumOrderFeeWaived

      #Place an order
      - executeFunction:
          name: us.functions.buynow.existingUser.placeOrder
  
      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
