general:
  platform: ios
  tags: C2689769 #(Deprecated as part of Regression Optimization) , us-golden-flows-wplus, p1-wplus-teflon-e2e
  testCaseId: C2689769
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  metadata:
    - name: scenarioId
      string: 463

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    flow:
      - log: Start Main

      # These lines of code is commented as the order move is not successful everytime.
      #       - getTimestamp:
      #           asDate: false
      #           storeIn: timestamp

      #       - storeIn:
      #           key: customerEmail
      #           value: wplususer${timestamp}@walmart.com

      #             # Create Wplus Trial Monthly Account using astro api
      #       - executeFunction:
      #                 name: us.functions.utils.astro.createAccount
      #                 params:
      #                   - name: email
      #                     string: $customerEmail
      #                   - name: payload
      #                     string: us.data.createWplusAccountPayload.monthly

      #         #Cancel membership using Astro api
      #       - executeFunction:
      #             name: us.functions.utils.astro.cancelPaidMembership
      #             params:
      #               - name: email
      #                 string: $customerEmail
      #               - name: payload
      #                 string: us.data.createWplusAccountPayload.monthly

      # #***************************************************************************************************************

      #   # Astro - Create order and move to Customer Picked / Delivered status

      # #***************************************************************************************************************
      #       # Fetch stock available items using fetch API
      #       - executeFunction:
      #           name: us.functions.utils.fetchFromDataList
      #           params:
      #             - name: email
      #               string: $customerEmail
      #             - name: itemType
      #               string: FC_DELIVERY
      #             - name: itemList
      #               string: us.data.flow037.lmdEligile.itemLists
      #       - storeIn:
      #           key: item1
      #           value: $itemFetched

      #       - executeFunction:
      #           name: us.functions.utils.astro.createOrder
      #           params:
      #             - name: payload
      #               string: us.data.wplus.lmdreturn.ios.createOrderPayload

      #       - executeFunction:
      #           name: us.functions.utils.astro.getOrderStatus

      #       - executeFunction:
      #           name: us.functions.utils.astro.setOrderStatus
      #           params:
      #             - name: orderNo
      #               string: ${orderNo}
      #             - name: orderType
      #               string: FC_DELIVERY
      #             - name: status
      #               string: Shipped

      #       - executeFunction:
      #           name: us.functions.utils.astro.getOrderStatus

      #       - executeFunction:
      #           name: us.functions.utils.astro.setOrderStatus
      #           params:
      #             - name: orderNo
      #               string: ${orderNo}
      #             - name: orderType
      #               string: FC_DELIVERY
      #             - name: status
      #                string: Delivered
      #       - sleep:
      #           duration : 30000

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      # Sign in with default account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: us.data.android.lmd.expiredmember.email
            - name: password
              string: us.data.android.lmd.expiredmember.password

      # Navigating to Order details page
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/100000253419994

      # Start Return the Order
      - executeFunction:
          name: us.functions.returns.goToStartReturn

      # Verify the Return order
      - executeFunction:
          name: us.functions.returns.verifyStartReturnScreen

      - executeFunction:
          name: us.functions.returns.requiredReturnDataSetup

      # Select the reason for the Return
      - executeFunction:
          name: us.functions.returns.returnItemAndReasonSelection
          params:
            - name: itemIndex
              string: 1
            - name: returnReason
              string: Damaged

      - executeFunction:
          name: us.functions.returns.returnTypeSelection

      # Verify the Restart W+ link and make sue Splash page is opened.
      - executeFunction:
          name: us.functions.returns.checkWplusReactivationBottomsheetFromReturnMethodScreen
          params:
            - name: returnMethod
              string: Return from home

      # Commenting out these lines of code as per the Faishal notes.

      # # Verify the Return from home option enabled, select the option
      # - executeFunction:
      #     name: us.functions.returns.returnMethodSelection
      #     params:
      #       - name: returnMethod
      #         string: Return from home
      #       - name: addressForPickup
      #         string: us.data.wplus.ios.lmd.addressForPickup.expired
      #       - name: appointmentInstruction
      #         string: us.data.ios.lmd.appointmentInstruction

      # # Verify the Return details
      # - executeFunction:
      #     name: us.functions.returns.returnReviewDetailsValidation
      #     params:
      #       - name: returnReviewText
      #         string:  By our returns pickup partner

      # # Confirm the return
      # - executeFunction:
      #     name: us.functions.returns.returnConfirmationValidation

      # # Verify the Returns
      # # - executeFunction:
      # #     name: us.functions.returns.itemReturn
      # #     params:
      # #       - name: itemIndex
      # #         string: 1
      # #       - name: returnReason
      # #         string: Item damaged
      # #       - name: returnMethod
      # #         string: Return from home with, Walmart plus
      # #       - name: addressForPickup
      # #         string: us.data.wplus.ios.lmd.addressForPickup
      # #       - name: appointmentInstruction
      # #         string: us.data.ios.lmd.appointmentInstruction
      # #       - name: returnReviewText
      # #         string:  By our returns pickup partner

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
