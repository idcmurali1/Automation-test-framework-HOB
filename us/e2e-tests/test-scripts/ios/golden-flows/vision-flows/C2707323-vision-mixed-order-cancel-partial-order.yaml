general:
  platform: ios
  tags: C2707323, p1-fulcrum-teflon-e2e, p0-ecomm-teflon-e2e,faultboard
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2707323  
  metadata:
    - name: scenarioId
      string: PV008 
scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   
  - name: Main
    endTestOnFailure: true
    flow:
      - log: Start Main

       # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome
      
      # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp
      
      - storeIn:
          key: customerEmail
          value: wplususer${timestamp}@walmart.com

      - storeIn:
          key: password
          value: E2epassword$ 
      
      # Create Accountusing astro api
      - executeFunction:
          name: us.functions.utils.astro.createAccount
          params:
            - name: payload
              string: us.data.visionFlow.createAccountPayload

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn
      
      # Sign in with default account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: ${customerEmail}
            - name: password
              string: $password

      - executeFunction:
          name: us.functions.global.navigation.accountToHome

      - executeFunction:
           name: us.functions.gic.select.inhome.delivery.address
      
      # add vision item to cart
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: us.data.flow.vision.item1.deeplink

      - executeFunction:
          name: us.functions.item.visionItem.verifyItemPage

      - executeFunction:
          name: us.functions.item.visionItem.selectLenses.verifyNavigations  

      - executeFunction:
          name: us.functions.item.visionItem.verifySelectLenses
          params:
            - name: itemType
              string: Eyeglasses          
            - name: LenseType
              string: Lense B   
            - name: LenseMaterial
              string: Standard
            - name: LenseColor
              string: Grey   
            - name: add-ons
              string: No add-ons                         

      - executeFunction:
          name: us.functions.item.visionItem.AddPrescription
          params:
            - name: name
              string: PatientA              
            - name: dob
              string: us.data.flow.multiPrecriptionDob1
            - name: PD
              string: us.data.flow.multiPrecriptionPd1

      - executeFunction:
          name: us.functions.item.addItemToCart

      - executeFunction:
           name: us.functions.global.navigation.toCartFromNavBar

      - executeFunction:
          name: us.functions.cart.verifyVisionItemTile      

      # add Sunglass item to cart
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: us.data.flow.vision.sunglass.item2.deeplink

      - executeFunction:
          name: us.functions.item.addItemToCart 

  # add non-vision item to cart
      - executeFunction:
          name: us.functions.utils.getSearchableItem
          params:
            - name: itemType
              string: FC_DELIVERY
            - name: store
              string: 32144
            - name: itemFilter
              string: buynow

      - storeIn:
          key: item1
          value: $itemFetched 
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://item/$itemFetched
      - executeFunction:
          name: us.functions.item.addItemToCart

# Navigate to cart and place the order
      - executeFunction:
           name: us.functions.global.navigation.toCartFromNavBar

      - executeFunction:
          name: us.functions.cart.continueToCheckoutOrNewOrder
              
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed              

      - executeFunction:
          name: us.functions.reviewOrder.verifyVisionItemTile
                   
      - executeFunction:
          name: us.functions.checkout.placeOrder

      - executeFunction:
          name: us.functions.orderConfirmation.ratings          

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *          

      #Validate order confirmation page
      - executeFunction:
          name: us.functions.orderConfirmation.getOrderNumber
      - log: ${orderNo}

      #Deeplink into order details page
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.orderDetails.totalValue
            - name: direction
              string: down
            - name: scrollPosition
              string: center 

     # Fetch estimated total before clicking on checkout & store in variable estimatedTotalBefore
      - executeFunction:
          name: us.functions.utils.fetchAmountDisplayed
          params:
            - name: identifier
              string: us.mappings.orderDetails.totalValue
            - name: attribute
              string: label
            - name: delimeter
              string: '$' 
      - storeIn:
          key: estimatedTotalBefore
          value: ${amountValue}                  

      - executeFunction:
          name: us.functions.utils.astro.getOrderStatus 

      - executeFunction:
              name: us.functions.utils.astro.cancelOrder
              params:
                - name: orderNo
                  string: ${orderNo}
                - name: payload
                  string: us.data.vision.cancelPartialOrderPayload

      #Deeplink into order details page
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://orders/$orderNo

      - executeFunction:
          name: us.functions.orderDetails.clickChargeHistoryPage

      - executeFunction:
          name: us.functions.utils.fetchAmountDisplayed
          params:
            - name: identifier
              string: us.mappings.orderDetails.chargeHistory.orderAdjustmentValue
            - name: attribute
              string: label
            - name: delimeter
              string: '$' 
      - storeIn:
          key: orderAdjustmentValue
          value: ${amountValue}

      # Verify Refund is processed
      - executeFunction:
          name: us.functions.orderDetails.chargeHistoryPage.verifyOrderAdjustment

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
