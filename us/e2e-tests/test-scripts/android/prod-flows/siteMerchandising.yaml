general:
  platform: android
  tags: site-merchandising-test
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
    #Started Main Flow
  - name: Main
    flow:

      - log: Start Main

      - storeIn:
          key: statusPass
          value: ''

      - storeIn:
          key: statusFail
          value: ''

      - storeIn:
          key: homePagePass
          value: ''

      - storeIn:
          key: storyPagePass
          value: ''

      # Navigate on-boarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

     # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      #Sign In with an User account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: stirumala@walmart.com
            - name: password
              string: mobile123

      - executeFunction:
          name: us.functions.global.navigation.accountToHome

      - executeFunction:
          name: us.functions.itemPage.fetchItemNamesOfList
          params:
            - name: listOfItems
              string: us.data.itemIds.list

      - executeFunction:
          name: us.functions.item.closeItemPage

      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.homePage.campaignAdSection
      #     then:
      #       # Deeplink into order details page
      #       - executeFunction:
      #           name: us.functions.global.navigation.goToDeepLink
      #           params:
      #             - name: deepLinkUrl
      #               string: us.data.springOutdoorRefresh.deeplink
      #     else:
      #       - executeFunction:
      #           name: us.functions.homePage.validateAndOpenOldCampaignPage
      #           params:
      #             - name: campaignName
      #               string: us.data.campaignLinkText

      - executeFunction:
          name: us.functions.homePage.validateAndOpenNewCampaignPage
          params:
            - name: campaignName
              string: us.data.campaignLinkText

      - executeFunction:
          name: us.mappings.browsePage.validateBrowsePage
          # params:
          #   - name: campaignName
          #     string: us.data.campaignPageHeader

      # - executeFunction:
      #     name: us.functions.browsePage.fetchItemNamesofList

      - executeFunction:
          name: us.functions.browsePage.fetchDisplayedItemNames

      - executeFunction:
          name: us.mappings.utils.validateItemPresence

      # # performing After steps
      - if:
          condition: ${testStatus} != 'failed'
          then:
            - storeIn:
                key: testStatus
                value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.sm.afterSteps
