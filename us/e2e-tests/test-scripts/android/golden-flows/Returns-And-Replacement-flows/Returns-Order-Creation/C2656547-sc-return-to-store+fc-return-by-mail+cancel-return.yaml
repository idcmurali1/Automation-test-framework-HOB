general:
  platform: android
  tags: C2656547, us-order-creation
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2656547
  metadata:
    - name: scenarioId
      string: 21

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  #***************************************************************************************************************

  # Astro - Create order and move to Delivered status

  #***************************************************************************************************************

  - name: Main
    flow:
      - log: Start Main
                      
      # # Navigate onboarding to home
      # # - executeFunction:
      # #     name: us.functions.global.onboarding.navigateOnboardingToHome

      # - sleep:
      #     duration: 3000

      # Fetch stock available items using fetch API
      # - executeFunction:
      #     name: us.functions.utils.getSearchableItem
      #     params:
      #       - name: source
      #         string: astro
      #       - name: itemType
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: backupItem
      #         string: 967762968
      # - storeIn:
      #     key: item1
      #     value: $itemFetched

      # # Fetch stock available items using fetch API
      # - executeFunction:
      #     name: us.functions.utils.getSearchableItem # Temp function to test out new API
      #     params:
      #       - name: source
      #         string: astro
      #       - name: itemType
      #         string: FC_DELIVERY
      #       - name: backupItem
      #         string: 945213102
      #       - name: itemFilter
      #         string: fastreplace
      # - storeIn:
      #     key: item2
      #     value: $itemFetched

      # - executeFunction:
      #     name: us.functions.utils.astro.createOrder
      #     params:
      #       - name: payload
      #         string: us.data.FC_OrderCreation.createOrderPayload

      # - executeFunction:
      #     name: us.functions.utils.astro.getOrderStatus

      # - executeFunction:
      #     name: us.functions.utils.astro.setMultilineOrderStatus
      #     params:
      #       - name: orderNo
      #         string: ${orderNo}
      #       - name: orderType1
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: status1
      #         string: Delivered
      #       - name: orderType2
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: status2
      #         string: Delivered
      - executeFunction:
            name: us.functions.utils.fetchFromDataList
            params:
              - name: email
                string: e2e.teflon.fc.order@gmail.com   
              - name: itemType
                string: STORE_SCHEDULED_DELIVERY 
              - name: itemList
                string: "[\"10898594\", \"186572457\", \"3738868392\", \"5012720420\"]"  
      - storeIn:
          key: item1
          value: $itemFetched

      # - executeFunction:
      #     name: us.functions.utils.fetchFulcrumAvailableItem
      #     params:
      #       - name: source
      #         string: astro
      #       - name: itemType
      #         string: STORE_SCHEDULED_DELIVERY
      #       - name: store
      #         string: 32144
      #       - name: backupItem
      #         string: 5017689513
      #       - name: skipForNext
      #         string: true
      #       - name: storeId
      #         string: 32138

      # - storeIn:
      #     key: item1
      #     value: $itemFetched

      - executeFunction:
          name: us.functions.utils.astro.createOrder
          params:
            - name: payload
              string: us.data.FC_OrderCreation.createOrderPayload 

      - executeFunction:
          name: us.functions.utils.astro.getOrderStatus

      - executeFunction:
          name: us.functions.utils.astro.setOrderStatus
          params:
            - name: orderNo
              string: ${orderNo}
            - name: orderType
              string: STORE_SCHEDULED_DELIVERY
            - name: status
              string: Delivered 
      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps