# Day 0 - Video Streaming Paramount Plus - Upgrade Plan to Premium and - Upgrade Monthly to Annual Plan
# User Scenario #1.1-P1
# As a Paid Monthly Wplus Member - Enrolled with Paramount Essential Plan
# Navigate to Wplus Benifits Page
# Verify the Paramount Video Streaming with Paramount+ Batch - With Upgrade to Premium, Start Steaming Options
# User Clicks on Upgrade to Premium option and user is navigated to Manage your Plan Page
# User Selects Premium Option and Clicks Choose this Plan Button >> Navigates to Upgrade to Premium Page
# Verify Premium Payment Plan and Card Details and Click on Start with Premium Plam Button
# Verify the Plan Enrolement Success Page with Start Streaming and Go to My W+ Benefits Links.
  #Scenario 2.1-P1
# User Navigates to Manage Membership Page
# Chooses to Upgrade from Monthly Base plan to Annual.
# As a monthly paid W+ member, I can upgrade both my W+ base membership and P+ with SHOWTIME to annual both at the same time.


general:
  platform: android
  tags:  C2703197
  testCaseId: C2703197 
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  metadata:
    - name: scenarioId
      string: 

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:


# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    flow:
      - log: Start Main

      #====== Login with Existing ACcount ========================

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome
    
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      # Sign in with default account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: us.data.memberhub.paramount.member.email
            - name: password
              string: us.data.memberhub.paramount.member.password

  #======= Login by Using Astro API Account =======================

  # # Get timestamp
  #     - getTimestamp:
  #         asDate: false
  #         storeIn: timestamp

  #     - storeIn:
  #         key: customerEmail
  #         value: wmtuser${timestamp}@walmart.com

  #     - storeIn:
  #         key: password
  #         value: E2epassword$  
      
  #     #Create a Wplus Account with Paramount+ Essential Plan
  #     - executeFunction:
  #         name: us.functions.utils.astro.createAccount
  #         params:
  #           - name: payload
  #             string: us.data.flow030.createAccountPayload.wplus
  #           - name: withoutPayment
  #             string: false

  #     - executeFunction:
  #         name: us.functions.global.onboarding.navigateOnboardingToHome.paramZip
  #         params:
  #           - name: ZIP_CODE
  #             string: 72712

  #      # signing in to the account
  #     - executeFunction:
  #               name: us.functions.home.navigateHomeToSignIn

  #     # Sign in with above created account
  #     - executeFunction:
  #         name: us.functions.global.authentication.signInAccount
  #         params:
  #           - name: email
  #             string: us.data.prod.member.email
  #           - name: password
  #             string: us.data.prod.member.password

#=================================================================================

      - executeFunction:
          name: us.functions.global.navigation.goToAccountFromTabBar

      - executeFunction:
          name: us.functions.wplus.account.navigateToWalmartPlus
      

      #Scroll down to Paramount+ Manage Plan Batch 
      - executeFunction:
          name: us.functions.wplus.BenefitsPage.validateParamountPlus

      # User Clicks on Upgrade to Premium option and user is navigated to Manage your Plan Page
      - executeFunction:
          name: us.functions.wplus.benefits.paramount.navigateToManagePlanPage

      #Under Manage Your Plan Page
      #User Selects Upgrade to Premium + Show Time Option and Clicks Choose this Plan Button >> Navigates to Upgrade to Premium Page >> Payment Plan Page
      - executeFunction:
          name: us.functions.wplus.benefits.paramount.navigateToPaymentPlanPage

      #Verify Payment Plan Page details and Click Choose this Plan CTA under Premium Showtime Plan
      - executeFunction:
          name: us.functions.wplus.benefits.paramount.UpgradewithShowtime

    
      # #Verify the User is Upgraded Successfully to Paramount+ Premium Plan
      # - executeFunction:
      #     name: us.functions.wplus.BenefitsPage.validateParamountPlusTestingBatch

      #Terminate the App and restart 
      - terminateApp: true

      #Navigate to Membership Page using  Deep Link 
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://plus/chooseplan

      # - executeFunction:
      #     name: us.functions.global.navigation.goToAccountFromTabBar

      # - executeFunction:
      #     name: us.functions.wplus.account.navigateToWalmartPlus

      - sleep:
          duration: 10000
      #Click on Manage Membership Gare Icon
      - executeFunction:
          name: us.functions.wplus.navigateToManageMembershipFromBenefitsPage  

      #Upgrade the Base plan from Monthly to Annual with Paramount+ Showtime
      - executeFunction:
          name: us.functions.wplus.upgradeParamountMembership
          params:
            - name: membership
              string: Annual plan

      #Verify the Upgrade.
      - executeFunction:
          name: us.functions.wplus.membership.verifyMyMembershipDetails
          params:
            - name: tenure
              string: annual


      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps

