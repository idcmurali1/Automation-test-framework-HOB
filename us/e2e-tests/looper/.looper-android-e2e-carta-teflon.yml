inherit: 'job:///carta-jobs/apps/looper-base:.looper-carta.yml'

gitShallowDepth: 10

branches:
  - spec: development
    scheduling: concurrent

    triggers:
      - pr: disabled
      - push:
          manualOnly: true

      - manual:
          name: E2E Android Golden Flows
          call: e2e_test

envs:
  global:
    variables:
      MARKET: us
      APP_PLATFORM: android
      SLACK_CHANNEL: r2-glass-test-result
      POST_TO_ES: true
      POST_TO_ANIVIA: true
      # TESTRAIL_PLAN_ID: 599995
      APPLITOOLS_API_KEY: ENC[Rt+/oXg4fNf9b2Pq2MQ47frfGB42KVDp7l7/tQ/1na985VV7Ia42QMgDDOppIoaDTWfXJmsQW0Imo7rpXjXaQQ==]

  # Environment profiles can be specified here with specific environment variable values.
  env_android_teflon:
    variables:
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      GLASS_ENV: teflon
      MAPPING_LABELS: teflon
      SAUCE_APP: 'storage:filename=glass-release-latest.apk'
      APP_BUILD_BRANCH: 'release-latest'
      DEPENDENCY_PROFILE: 'looper'
      TESTS_DIRECTORY: ${MARKET}/test/test-scripts/android/prod-flows
      TEST_ENV: Teflon
      PLATFORM: Android

flows:
  e2e_test:
    - call: build_carta(env_android_teflon)

  build_carta:
    - ? node(label = linux, isolation = except_project, ws = exclusive, group = '${APP_PLATFORM} - ${TEST_TAGS}')
      : try:
          - declare(APP_VERSION)
          - call: setup
          - call: get_app_version
          - call: get_repository_build
          - call: return_sauce_app_location
          - call: get_build_app_version
          - call: execute_test
          - call: generate_sauce_labs_build_url
          - call: publish_report
          - call: get_test_failures
          - var(TEST_RUN_STATUS = $TEST_RUN_PASSED)
        catch:
          - var(TEST_RUN_STATUS = $TEST_RUN_FAILED)
          - shell: exit 1
        finally:
          # - call: post_test_results_json_to_es
          # - call: slack_test_run_helper
          # - call: post_test_results_json_to_splunk
          # - call: update_test_results_to_xray
          - call: generate_email_template
          - call: post_email
