#RELEASE BRANCH IS CUT EVERY FRIDAY AT 3PM 
#The PCF cutoff time for any PR to get merged is 9AM PT every Tuesday

inherit: 'job:///glass-mobile-app-automation/looper-base:.looper.yml'

gitShallowDepth: 10

branches:
  - spec: development #RUNS TUESDAY-THURSDAY
    scheduling: concurrent

    triggers:
      - push:
          manualOnly: true

# DCT GROUP A RUNS TUESDAY POST 9AM PST:

# Run DCT e2e Flows on Prod on Development build for Prod iPhone 12 Pro Max, iOS 14x-15x RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 12 Pro Max RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone12_pro_max_rdc)

      - cron:
          spec: "H 17 * * 2"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone12_pro_max_rdc)


# Run DCT e2e Flows on Prod on Development build for Prod iPad 10.9 (2022), iOS 16.3.1 RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPad 10.9 (2022) RDC
          call: run_prod_dct_rdc_e2e_dev(env_iPad_10x9inch_2022_rdc)

      - cron:
          spec: "H 22 * * 2"
          call: run_prod_dct_rdc_e2e_dev(env_iPad_10x9inch_2022_rdc)


# Run DCT e2e Flows on Prod on Development build for Prod iPhone 13 mini, iOS 15x-16.3.1 RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 13 mini RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone13_mini_rdc)

      - cron:
          spec: "H 3 * * 3"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone13_mini_rdc)


# Run DCT e2e Flows on Prod on Development build for Prod iPhone SE 2020, iOS 14.3-15.6 RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone SE 2020 RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhoneSE_rdc)

      - cron:
          spec: "H 8 * * 3"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhoneSE_rdc)


# DCT GROUP B RUNS WEDNESDAY:

# Run DCT e2e Flows on Prod on Development build for Prod iPhone 11 , iOS 14x-15x RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 11 RDC
          call: run_prod_dct_rdc_e2e_dev(env_iPhone11_rdc)

      - cron:
          spec: "H 13 * * 3"
          call: run_prod_dct_rdc_e2e_dev(env_iPhone11_rdc)


# Run DCT e2e Flows on Prod on Development build for Prod iPhone 13, iOS 15.6 RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 13 RDC
          call: run_prod_dct_rdc_e2e_dev(env_iPhone13_rdc)

      - cron:
          spec: "H 18 * * 3"
          call: run_prod_dct_rdc_e2e_dev(env_iPhone13_rdc)


# Run DCT e2e Flows on Prod on Development build for Prod iPhone 7 , iOS 15.0 SIM
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 7 SIM
          call: run_prod_dct_sim_e2e_dev(env_iPhone7_sim)
                
      - cron:
          spec: "H 23 * * 3"
          call: run_prod_dct_sim_e2e_dev(env_iPhone7_sim)

# Run DCT e2e Flows on Prod on Development build for Prod iPhone 13 Pro Max , iOS 15.2 SIM
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 13 Pro Max SIM
          call: run_prod_dct_sim_e2e_dev(env_iPhone13_pro_max_sim)
                
      - cron:
          spec: "H 3 * * 4"
          call: run_prod_dct_sim_e2e_dev(env_iPhone13_pro_max_sim)


# DCT GROUP C RUNS THURSDAY:

# Run DCT e2e Flows on Prod on Development build for Prod iPhone 12, iOS 17.0.3 RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 12 RDC - 17.x
          call: run_prod_dct_rdc_e2e_dev(env_iPhone12_17x_rdc)

      - cron:
          spec: "H 8 * * 4"
          call: run_prod_dct_rdc_e2e_dev(env_iPhone12_17x_rdc)

# Run DCT e2e Flows on Prod on Development build for Prod iPhone 12, iOS 15.x-17x RDC
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPhone 12 RDC - 15.x
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone12_15x_rdc)
                
      - cron:
          spec: "H 13 * * 4"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_iPhone12_15x_rdc)  

# Run DCT e2e Flows on Prod on Development build for Prod_iPad mini 4, iOS 15.0 SIM
      - manual:
          name: Run iOS Prod Dev Branch DCT E2E flows - iPad mini 2019 SIM
          call: run_prod_dct_sim_e2e_dev(env_iPad_mini_2019_sim)

      - cron:
          spec: "H 18 * * 4"
          call: run_prod_dct_sim_e2e_dev(env_iPad_mini_2019_sim)


  - spec: us/release-latest  #RUNS FRIDAY-SUNDAY
    scheduling: concurrent
   
    triggers:
      - push:
          manualOnly: true

# DCT GROUP A RUNS FRIDAY POST 3PM PST:

# Run DCT e2e Flows on Prod on Release build for Prod iPhone 12 Pro Max, iOS 14x-15x RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 12 Pro Max RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone12_pro_max_rdc)

      - cron:
          spec: "H 17 * * 5"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone12_pro_max_rdc)


# Run DCT e2e Flows on Prod on Release build for Prod iPad 10.9 (2022), iOS 16.3.1 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPad 10.9 (2022) RDC
          call: run_prod_dct_rdc_e2e_rel(env_iPad_10x9inch_2022_rdc)

      - cron:
          spec: "H 22 * * 5"
          call: run_prod_dct_rdc_e2e_rel(env_iPad_10x9inch_2022_rdc)


# Run DCT e2e Flows on Prod on Release build for Prod iPhone 13 mini, iOS 15x-16.3.1 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 13 mini RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone13_mini_rdc)

      - cron:
          spec: "H 3 * * 6"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone13_mini_rdc)


# Run DCT e2e Flows on Prod on Release build for Prod iPhone SE 2020, iOS 14.3-15.6 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone SE 2020 RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhoneSE_rdc)

      - cron:
          spec: "H 8 * * 6"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhoneSE_rdc)


# DCT GROUP B RUNS SATURDAY:

# Run DCT e2e Flows on Prod on Release build for Prod iPhone 11 , iOS 14x-15x RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 11 RDC
          call: run_prod_dct_rdc_e2e_rel(env_iPhone11_rdc)

      - cron:
          spec: "H 13 * * 6"
          call: run_prod_dct_rdc_e2e_rel(env_iPhone11_rdc)


# Run DCT e2e Flows on Prod on Release build for Prod iPhone 13, iOS 15.6 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 13 RDC
          call: run_prod_dct_rdc_e2e_rel(env_iPhone13_rdc)

      - cron:
          spec: "H 18 * * 6"
          call: run_prod_dct_rdc_e2e_rel(env_iPhone13_rdc)


# Run DCT e2e Flows on Prod on Release build for Prod iPhone 7 , iOS 15.0 SIM
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 7 SIM
          call: run_prod_dct_sim_e2e_rel(env_iPhone7_sim)
                
      - cron:
          spec: "H 23 * * 6"
          call: run_prod_dct_sim_e2e_rel(env_iPhone7_sim)

# Run DCT e2e Flows on Prod on Release build for Prod iPhone 13 Pro Max , iOS 15.2 SIM
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 13 Pro Max SIM
          call: run_prod_dct_sim_e2e_rel(env_iPhone13_pro_max_sim)
                
      - cron:
          spec: "H 3 * * 0"
          call: run_prod_dct_sim_e2e_rel(env_iPhone13_pro_max_sim)


# DCT GROUP C RUNS SUNDAY:

# Run DCT e2e Flows on Prod on Release build for Prod iPhone 12, iOS 17.0.3 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 12 RDC - 17.x
          call: run_prod_dct_rdc_e2e_rel(env_iPhone12_17x_rdc)

      - cron:
          spec: "H 8 * * 0"
          call: run_prod_dct_rdc_e2e_rel(env_iPhone12_17x_rdc)

# Run DCT e2e Flows on Prod on Release build for Prod iPhone 12, iOS 15.0 RDC
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPhone 12 RDC - 15.x
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone12_15x_rdc)

      - cron:
          spec: "H 13 * * 0"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_iPhone12_15x_rdc)
                
# Run DCT e2e Flows on Prod on Release build for Prod_iPad mini 4, iOS 15.0 SIM
      - manual:
          name: Run iOS Prod Rel Branch DCT E2E flows - iPad mini 2019 SIM
          call: run_prod_dct_sim_e2e_rel(env_iPad_mini_2019_sim)

      - cron:
          spec: "H 18 * * 0"
          call: run_prod_dct_sim_e2e_rel(env_iPad_mini_2019_sim)


envs:
  global:
    variables:
      # THREADS: 1 
      MARKET: us
      APP_PLATFORM: ios
      SLACK_CHANNEL: r2-glass-test-result # Add your own team's test result slack channel. Also, make sure to add looperbot app to channel.
      # TESTRAIL_PROJECT_ID: 133 # OPTIONAL: If used, a new Testrail plan id will be generated on this project id for each looper run.
      # TESTRAIL_PLAN_ID: '' # OPTIONAL: Declare global var TESTRAIL_PLAN_ID to be used in test configs
      # SKIP_SLACK_TEST_RUN: passed # OPTIONAL: Set value to skip posting slack message for test runs using condition "all" or "passed"
      POST_TO_ANIVIA: true

  # DEVELOPMENT BRANCH/BUILD PROFILES----------------------------------------------------------------------------------------
  env_ios_prod_dct_sim_e2e_dev:
    variables:
      # TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'  Note: Maybe causing a conflict
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-sim-dct #looper-prod
      GLASS_ENV: production
      MAPPING_LABELS: production
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-development-latest.zip 
      TEST_TAGS: prod-e2e-sim-dct
      APPIUM_VERSION: '1.22.3'        
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_ios_prod_dct_rdc_e2e_dev:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct
      GLASS_ENV: production
      MAPPING_LABELS: production
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-development-latest.ipa
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '2.0.0' 
      # APPIUM_VERSION: '1.22.0'       
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_ios_prod_dct_rdc_noversion_e2e_dev:  
    variables:
      # NOTE: This global variable profile allows saucelabs to pull a device from a group of available devices; does not specify platformversion.
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct-noversion
      GLASS_ENV: production
      MAPPING_LABELS: production
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-development-latest.ipa
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '2.0.0' 
      # APPIUM_VERSION: '1.22.0'       
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"  

  # RELEASE BRANCH/BUILD PROFILES----------------------------------------------------------------------------------------
  env_ios_prod_dct_sim_e2e_rel:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-sim-dct #looper-prod
      GLASS_ENV: production
      MAPPING_LABELS: production
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-release-latest.zip
      TEST_TAGS: prod-e2e-sim-dct
      APPIUM_VERSION: '1.22.3'        
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_ios_prod_dct_rdc_e2e_rel:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct
      GLASS_ENV: production
      MAPPING_LABELS: production 
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-release-latest.ipa
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '2.0.0' 
      # APPIUM_VERSION: '1.22.0'       
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_ios_prod_dct_rdc_noversion_e2e_rel:  
    variables:
      # NOTE: This global variable profile allows saucelabs to pull a device from a group of available devices; does not specify platformversion.
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/ios/ios-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct-noversion
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-ios
      DEVICE_ORIENTATION_IOS: 'PORTRAIT'
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'
      SAUCE_APP: storage:filename=glass-release-latest.ipa
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '2.0.0' 
      # APPIUM_VERSION: '1.22.0'
      # TEST_TAGS: prod-e2e-dct      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_IOS}\n
        *OS*: ${PLATFORM_VERSION_IOS}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_IOS}\n
        *Tag*: ${TEST_TAGS}\n        
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}" 


  # SAUCE LABS RDC/EMULATORS:  https://app.saucelabs.com/live/web-testing

  env_iPhoneSE_rdc: #Real Device
    variables:
      DEVICE_NAME_IOS: 'iPhone SE 2020'
      PLATFORM_NAME_IOS: 'iOS' 
      # PLATFORM_VERSION_IOS: no version specified (15.4.1, or 17.0.3)

  env_iPhone7_sim:  #Sim
    variables:
      DEVICE_NAME_IOS: 'iPhone 7 Simulator'
      PLATFORM_NAME_IOS: 'iOS' 
      PLATFORM_VERSION_IOS: '15.0'


  env_iPhone11_rdc:  #Real Device  
    variables:
      DEVICE_NAME_IOS: 'iPhone 11'
      PLATFORM_NAME_IOS: 'iOS' 
      PLATFORM_VERSION_IOS: '15.5'
        

  env_iPhone12_pro_max_rdc:  #Real Device 
    variables:
      DEVICE_NAME_IOS: 'iPhone 12 Pro Max'  
      PLATFORM_NAME_IOS: 'iOS'  
      # PLATFORM_VERSION_IOS: no version specified (15.0, 15.1.1, 15.0.2) 

  env_iPhone12_17x_rdc: #Real Device
    variables:
      DEVICE_NAME_IOS: 'iPhone 12'
      PLATFORM_NAME_IOS: 'iOS'
      PLATFORM_VERSION_IOS: '17.0.3'

  env_iPhone12_15x_rdc: #Real Device
    variables:
      DEVICE_NAME_IOS: 'iPhone 12'
      PLATFORM_NAME_IOS: 'iOS'
      # PLATFORM_VERSION_IOS: no version specified (15.0, 15.6, 17.x)
      # PLATFORM_VERSION_IOS: '15.*'          

  env_iPhone13_pro_max_sim:  #Sim 
    variables:
      DEVICE_NAME_IOS: 'iPhone 13 Pro Max Simulator'
      PLATFORM_NAME_IOS: 'iOS' 
      PLATFORM_VERSION_IOS: '15.2'     

  env_iPhone13_rdc: #Real Device 
    variables:
      DEVICE_NAME_IOS: 'iPhone 13' #'iPhone 13.*'
      PLATFORM_NAME_IOS: 'iOS'
      PLATFORM_VERSION_IOS: '15.6' #no version specified (OS_15.5-15.6)     

  env_iPad_mini_2019_sim:  #Sim
    variables:
      DEVICE_NAME_IOS: 'iPad mini 4 Simulator'
      PLATFORM_NAME_IOS: 'iOS' 
      PLATFORM_VERSION_IOS: '15.0'     

  env_iPad_10x9inch_2022_rdc:  #Real Device
    variables:
      DEVICE_NAME_IOS: 'iPad 10.9.*' #' (2022)'
      PLATFORM_NAME_IOS: 'iOS' 
      PLATFORM_VERSION_IOS: '16.3.1'     

  env_iPhone13_mini_rdc:  #Real Device
    variables:
      DEVICE_NAME_IOS: 'iPhone 13 mini'     
      PLATFORM_NAME_IOS: 'iOS' 
      # PLATFORM_VERSION_IOS: no version specified (15.4, 15.6, or 16.3.1)

flows:
  #Development Branch/Build
  run_prod_dct_sim_e2e_dev: 
    - call: build(env_ios_prod_dct_sim_e2e_dev)
  run_prod_dct_rdc_e2e_dev: 
    - call: build(env_ios_prod_dct_rdc_e2e_dev)
  run_prod_dct_rdc_noversion_e2e_dev: 
    - call: build(env_ios_prod_dct_rdc_noversion_e2e_dev)

  #Release Branch/Build
  run_prod_dct_sim_e2e_rel: 
    - call: build(env_ios_prod_dct_sim_e2e_rel)
  run_prod_dct_rdc_e2e_rel: 
    - call: build(env_ios_prod_dct_rdc_e2e_rel)
  run_prod_dct_rdc_noversion_e2e_rel: 
    - call: build(env_ios_prod_dct_rdc_noversion_e2e_rel)

    