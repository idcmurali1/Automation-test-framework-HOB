#RELEASE BRANCH IS CUT EVERY FRIDAY AT 3PM 
#The PCF cutoff time for any PR to get merged is 9AM PT every Tuesday

inherit: 'job:///glass-mobile-app-automation/looper-base:.looper.yml'

gitShallowDepth: 10

branches:
  - spec: development #RUNS TUESDAY-THURSDAY
    scheduling: concurrent

    triggers:
      - push:
          manualOnly: true

# DCT GROUP A RUNS TUESDAY POST 9AM PST:

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy S8, RDC Android OS 7-8-9
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy S8 RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_s8_rdc)

      - cron:
          spec: "H 17 * * 2"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_s8_rdc)

# Run DCT e2e Flows on Prod on Development build for Google Pixel 6, RDC Android OS 13
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Google Pixel 6 RDC
          call: run_prod_dct_rdc_e2e_dev(env_google_pixel_6_rdc)

      - cron:
          spec: "H 22 * * 2"
          call: run_prod_dct_rdc_e2e_dev(env_google_pixel_6_rdc)

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy S22 Ultra 5G, RDC Android OS 12
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy S22 Ultra 5G RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_galaxy_s22_or_Ultra5G_rdc)

      - cron:
          spec: "H 3 * * 3" 
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_galaxy_s22_or_Ultra5G_rdc)

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy Tab A7, RDC Android OS 12
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy Tab A7 RDC
          call: run_prod_dct_rdc_e2e_dev(env_samsung_tab_A7_rdc)

      - cron:
          spec: "H 8 * * 3" 
          call: run_prod_dct_rdc_e2e_dev(env_samsung_tab_A7_rdc)


# DCT GROUP B RUNS WEDNESDAY:

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy S21 5G, RDC Android OS 11
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy S21 5G OS11 RDC
          call: run_prod_dct_rdc_e2e_dev(env_samsung_galaxy_s21_5G_os11_rdc)

      - cron:
          spec: "H 13 * * 3"
          call: run_prod_dct_rdc_e2e_dev(env_samsung_galaxy_s21_5G_os11_rdc)

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy S20 Ultra, RDC Android OS 12
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy S20 Ultra/Plus/5G RDC
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_galaxy_s20x_OSx_rdc)

      - cron:
          spec: "H 18 * * 3"
          call: run_prod_dct_rdc_noversion_e2e_dev(env_samsung_galaxy_s20x_OSx_rdc)          

# Run DCT e2e Flows on Prod on Development build for Google Pixel 3, SIM Android OS 9.0
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Google Pixel 3 RDC
          call: run_prod_dct_rdc_e2e_dev(env_google_pixel_3_wm_us_rdc)

      - cron:
          spec: "H 23 * * 3"
          call: run_prod_dct_rdc_e2e_dev(env_google_pixel_3_wm_us_rdc)


# DCT GROUP C RUNS THURSDAY:

# Run DCT e2e Flows on Prod on Development build for Google Pixel 3a XL sim, SIM Android OS 8.1
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Google Pixel C GoogleAPI SIM
          call: run_prod_dct_sim_e2e_dev(env_google_pixel_C_tablet_sim)

      - cron:
          spec: "H 3 * * 4"
          call: run_prod_dct_sim_e2e_dev(env_google_pixel_C_tablet_sim)

# Run DCT e2e Flows on Prod on Development build for Samsung Galaxy S21 5G, RDC Android OS 12
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Samsung Galaxy S21 5G OS12 RDC
          call: run_prod_dct_rdc_e2e_dev(env_samsung_galaxy_s21_5G_os12_rdc)

      - cron:
          spec: "H 8 * * 4"
          call: run_prod_dct_rdc_e2e_dev(env_samsung_galaxy_s21_5G_os12_rdc)

# Run DCT e2e Flows on Prod on Development build for Google Pixel 3a XL sim, SIM Android OS 10.0
      - manual:
          name: Run Android Prod Dev Branch DCT E2E flows - Google Pixel 3a XL SIM
          call: run_prod_dct_sim_e2e_dev(env_google_pixel_3a_xl_sim)

      - cron:
          spec: "H 13 * * 4"
          call: run_prod_dct_sim_e2e_dev(env_google_pixel_3a_xl_sim)


  - spec: us/release-latest #RUNS FRIDAY-SUNDAY
    scheduling: concurrent

    triggers:
      - push:
          manualOnly: true

# DCT GROUP A RUNS FRIDAY POST 3PM PST:

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy S8, RDC Android OS 7-8-9
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy S8 RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_s8_rdc)

      - cron:
          spec: "H 17 * * 5"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_s8_rdc)

# Run DCT e2e Flows on Prod on Release build for Google Pixel 6, RDC Android OS 13
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Google Pixel 6 RDC
          call: run_prod_dct_rdc_e2e_rel(env_google_pixel_6_rdc)

      - cron:
          spec: "H 22 * * 5"
          call: run_prod_dct_rdc_e2e_rel(env_google_pixel_6_rdc)

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy S22 Ultra 5G, RDC Android OS 12
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy S22 Ultra 5G RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_galaxy_s22_or_Ultra5G_rdc)

      - cron:
          spec: "H 3 * * 6" 
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_galaxy_s22_or_Ultra5G_rdc)

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy Tab A7, RDC Android OS 12
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy Tab A7 RDC
          call: run_prod_dct_rdc_e2e_rel(env_samsung_tab_A7_rdc)

      - cron:
          spec: "H 8 * * 6" 
          call: run_prod_dct_rdc_e2e_rel(env_samsung_tab_A7_rdc)


# DCT GROUP B RUNS SATURDAY:

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy S21 5G, RDC Android OS 11
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy S21 5G OS11 RDC
          call: run_prod_dct_rdc_e2e_rel(env_samsung_galaxy_s21_5G_os11_rdc)

      - cron:
          spec: "H 13 * * 6"
          call: run_prod_dct_rdc_e2e_rel(env_samsung_galaxy_s21_5G_os11_rdc)

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy S20 Ultra, RDC Android OS 12
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy S20 Ultra/Plus/5G RDC
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_galaxy_s20x_OSx_rdc)

      - cron:
          spec: "H 18 * * 6"
          call: run_prod_dct_rdc_noversion_e2e_rel(env_samsung_galaxy_s20x_OSx_rdc)          

# Run DCT e2e Flows on Prod on Release build for Google Pixel 3, SIM Android OS 9.0
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Google Pixel 3 RDC
          call: run_prod_dct_rdc_e2e_rel(env_google_pixel_3_wm_us_rdc)

      - cron:
          spec: "H 23 * * 6"
          call: run_prod_dct_rdc_e2e_rel(env_google_pixel_3_wm_us_rdc)


# DCT GROUP C RUNS SUNDAY:

# Run DCT e2e Flows on Prod on Release build for Google Pixel 3a XL sim, SIM Android OS 8.1
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Google Pixel C GoogleAPI SIM
          call: run_prod_dct_sim_e2e_rel(env_google_pixel_C_tablet_sim)

      - cron:
          spec: "H 3 * * 0"
          call: run_prod_dct_sim_e2e_rel(env_google_pixel_C_tablet_sim)

# Run DCT e2e Flows on Prod on Release build for Samsung Galaxy S21 5G, RDC Android OS 12
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Samsung Galaxy S21 5G OS12 RDC
          call: run_prod_dct_rdc_e2e_rel(env_samsung_galaxy_s21_5G_os12_rdc)

      - cron:
          spec: "H 8 * * 0"
          call: run_prod_dct_rdc_e2e_rel(env_samsung_galaxy_s21_5G_os12_rdc)

# Run DCT e2e Flows on Prod on Release build for Google Pixel 3a XL sim, SIM Android OS 10.0
      - manual:
          name: Run Android Prod Rel Branch DCT E2E flows - Google Pixel 3a XL SIM
          call: run_prod_dct_sim_e2e_rel(env_google_pixel_3a_xl_sim)

      - cron:
          spec: "H 13 * * 0"
          call: run_prod_dct_sim_e2e_rel(env_google_pixel_3a_xl_sim)

   
envs:
  global:
    variables:
      # THREADS: 1  (Need this is failures continue)       
      MARKET: us
      APP_PLATFORM: android
      SLACK_CHANNEL: r2-glass-test-result # Add your own team's test result slack channel. Also, make sure to add looperbot app to channel.
      # TESTRAIL_PROJECT_ID: 133 # OPTIONAL: If used, a new Testrail plan id will be generated on this project id for each looper run.
      # TESTRAIL_PLAN_ID: '' # OPTIONAL: Declare global var TESTRAIL_PLAN_ID to be used in test configs
      # SKIP_SLACK_TEST_RUN: passed # OPTIONAL: Set value to skip posting slack message for test runs using condition "all" or "passed"
      POST_TO_ANIVIA: true

  # DEVELOPMENT BRANCH/BUILD PROFILES----------------------------------------------------------------------------------------
  env_android_prod_dct_sim_e2e_dev:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-sim-dct #looper-prod
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-sim-dct
      APPIUM_VERSION: '1.20.2'        
      # TEST_TAGS: prod-e2e-dct         
      SAUCE_APP: storage:filename=glass-development-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_android_prod_dct_rdc_e2e_dev:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '1.22.0'      
      # TEST_TAGS: prod-e2e-dct        
      SAUCE_APP: storage:filename=glass-development-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_android_prod_dct_rdc_noversion_e2e_dev:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct-noversion
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '1.22.0'      
      # TEST_TAGS: prod-e2e-dct       
      SAUCE_APP: storage:filename=glass-development-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"


  # RELEASE BRANCH/BUILD PROFILES----------------------------------------------------------------------------------------
  env_android_prod_dct_sim_e2e_rel:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-sim-dct #looper-prod
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-sim-dct
      APPIUM_VERSION: '1.20.2'        
      # TEST_TAGS: prod-e2e-dct         
      SAUCE_APP: storage:filename=glass-release-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_android_prod_dct_rdc_e2e_rel:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '1.22.0'       
      # TEST_TAGS: prod-e2e-dct        
      SAUCE_APP: storage:filename=glass-release-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"

  env_android_prod_dct_rdc_noversion_e2e_rel:
    variables:
      DEPENDENCY_FILE_NAME: us/e2e-tests/dependencies/android/android-default.yaml
      DEPENDENCY_PROFILE: looper-prod-rdc-dct-noversion
      GLASS_ENV: production
      MAPPING_LABELS: production # production-dct
      SLACK_CHANNEL: glass-r2-dct-results-android
      DEVICE_ORIENTATION_ANDROID: 'PORTRAIT'      
      TEST_TAGS: prod-e2e-rdc-dct
      APPIUM_VERSION: '1.22.0'      
      # TEST_TAGS: prod-e2e-dct       
      SAUCE_APP: storage:filename=glass-release-latest.apk        
      TEST_SESSION_ID: '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}'      
      # GET_NETWORK_HISTORY: true
      SLACK_TEST_RUN_MESSAGE: "${TEST_PLAN_STATUS}\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *App Build*: ${SAUCE_APP}\n
        *Device Name*: ${DEVICE_NAME_ANDROID}\n
        *OS*: ${PLATFORM_VERSION_ANDROID}\n
        *Device Orientation*: ${DEVICE_ORIENTATION_ANDROID}\n
        *Tag*: ${TEST_TAGS}\n
        *Build Link*: ${BUILD_URL}\n
        *Test Report*: ${SLACK_TEST_REPORT_MESSAGE}\n
        *Report Link*: ${REPORT_URL}"


  # SAUCE LABS RDC/EMULATORS:  https://app.saucelabs.com/live/web-testing

  env_samsung_galaxy_s20x_OSx_rdc:  #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy S20.*'
      PLATFORM_NAME_ANDROID: 'Android' 
      # PLATFORM_VERSION_IOS: no version specified  (OS_7.0- Plus Model 9)

  env_samsung_galaxy_s21_5G_os11_rdc: #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy S21 5G'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '11'

  env_samsung_galaxy_s21_5G_os12_rdc: #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy S21 5G'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '12'

  env_samsung_galaxy_s22_or_Ultra5G_rdc:   #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy S22.*'
      PLATFORM_NAME_ANDROID: 'Android' 
      # PLATFORM_VERSION_IOS: no version specified  (OS_11_Ultra 5G-12)

  env_samsung_tab_A7_rdc:  #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy Tab A7'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '11'

  env_samsung_s8_rdc:  #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Samsung Galaxy S8.*'
      PLATFORM_NAME_ANDROID: 'Android' 
      # PLATFORM_VERSION_IOS: no version specified  (OS_7.0- Plus Model 9)

  env_google_pixel_3_wm_us_rdc: #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Google Pixel 3'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '11'

  env_google_pixel_3a_xl_sim:
    variables:
      DEVICE_NAME_ANDROID: 'Google Pixel 3a XL GoogleAPI Emulator'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '10.0'
      APPIUM_VERSION: '1.20.2'

  env_google_pixel_C_tablet_sim:
    variables:
      DEVICE_NAME_ANDROID: 'Google Pixel C GoogleAPI Emulator'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '8.1'
      APPIUM_VERSION: '1.20.2'

  env_google_pixel_6_rdc:  #Real Device
    variables:
      DEVICE_NAME_ANDROID: 'Google Pixel 6'
      PLATFORM_NAME_ANDROID: 'Android' 
      PLATFORM_VERSION_ANDROID : '13'

flows:
  #Development Branch/Build
  run_prod_dct_sim_e2e_dev: 
    - call: build(env_android_prod_dct_sim_e2e_dev)   
  run_prod_dct_rdc_e2e_dev: 
    - call: build(env_android_prod_dct_rdc_e2e_dev)
  run_prod_dct_rdc_noversion_e2e_dev: 
    - call: build(env_android_prod_dct_rdc_noversion_e2e_dev)

  #Release Branch/Build
  run_prod_dct_sim_e2e_rel: 
    - call: build(env_android_prod_dct_sim_e2e_rel)        
  run_prod_dct_rdc_e2e_rel: 
    - call: build(env_android_prod_dct_rdc_e2e_rel)
  run_prod_dct_rdc_noversion_e2e_rel: 
    - call: build(env_android_prod_dct_rdc_noversion_e2e_rel)      
