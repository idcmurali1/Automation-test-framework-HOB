functions:

  # Cart
  - name: us.functions.cart.scheduledPickup.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.pickup.cardTitle
            # - identifier: us.mappings.cart.scheduledPickup.slotDetails
            # - identifier: us.mappings.cart.changeSlotLink

  - name: us.functions.cart.sc.verify.noSlotBooked
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

  - name: us.functions.cart.scheduledDelivery.verifyEBTDetails
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.scheduledDelivery.EBTDetails

  - name: us.functions.cart.unscheduledPickup.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.pickup.cardTitle
            - identifier: us.mappings.cart.unScheduledPickup.slotDetails
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

  - name: us.functions.cart.fcDelivery.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fcDelivery.cardTitle #zipcode should be a variable in the identifier

  - name: us.functions.cart.expandCardDetails
    platform: ios
    flow:
      - loop:
          begin: 0
          end: 4
          storeIndex: i
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.fulfillmentSection.expandView
                then:
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                        - name: direction
                          string: up
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.fulfillmentSection.expandView
                        - name: direction
                          string: down
                  - click:
                      identifier: us.mappings.cart.fulfillmentSection.expandView
                  - sleep:
                      duration: 1000
                else:
                  - log: All card details are already expanded
                  - break: true

  # Utility to validate cart details for any fulfillment type
  # [mandatory] ${fulfillmentText}    - Shipping/Pickup/Delivery from store/Pickup or delivery/Digital delivery/Pickup from Auto Care ... [Required for identifying fulfillment section to be validated]
  # [optional]  ${altFulfillmentText} - Alternate fulfillment text for validation if 2 different fulfillment text display possibility exists [e.g. Curbside pickup / Pickup | Curbside pickup/In-store pickup]
  # [optional]  ${partialCheckout}    - true/false [default false] [Set to true if Patial checkout section also to be validated]
  # [optional]  ${unscheduled}        - true/false [default false] [Set to true if unscheduled item fulfillment time needs to be validated]
  # [optional]  ${validationScope}    - partial/detailed [default partial] ['partial' scope validates fulfillment section type existance only and 'detailed' scope validates item icon/price/buttons ... as well]
  - name: us.functions.cart.verifyCardDetails
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - executeFunction:
          name: us.functions.utils.getFulfillmentTextsToCompare

      - log: -------Validate ${fulfillmentText} cart details function start-------
      - if:
          condition: ${initialCartDataSetup} == null
          then:
            - sleep:
                duration: 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.navBarTitle
                then:
                  - log: Cart page displayed
                else:
                  - failTest:
                      message: "FAILURE - ${env} - cart page is not displayed"
            # Expand item details only if detailed validation needs to be done else for basic validation details expansion is not needed
            - if:
                condition: ${validationScope} == 'detailed'
                then:
                  - executeFunction:
                      name: us.functions.cart.expandCardDetails
            - storeIn:
                key: initialCartDataSetup
                value: complete
          else:
            - log: Cart page already loaded and inital setup is done.

      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTypeText
          catch:
            flow:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.navBar.cartIconEmpty
                  then:
                    - failTest:
                        message: "FAILURE - ${env} - Added items are not available in cart page"
                  else:
                    - failTest:
                        message: "FAILURE - ${env} - ${fulfillmentText} fulfillment section not displayed in cart page"

      - if:
          condition: ${validationScope} == 'detailed'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.itemDetailsSection
                  - identifier: us.mappings.cart.fulfillmentSection.itemRemoveLink
                  - identifier: us.mappings.cart.fulfillmentSection.itemSaveForLaterLink
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperSection
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperMinusButton
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperCountText
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperPlusButton
            - log: Detailed ${fulfillmentText} fulfillment section validation done
            - if:
                condition: ${fulfillmentText} == 'Pickup' || ${fulfillmentText} == 'pickup' ||  ${fulfillmentText} == 'Retiro'
                then:
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.cart.fulfillmentSection.fulfillmentDeliveryText
                else:
                  - if:
                      condition: ${fulfillmentText} == 'Shipping' || ${fulfillmentText} == 'shipping' || ${fulfillmentText} == 'Env√≠o'
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.cart.fulfillmentSection.fulfillmentDeliveryText
          else:
            - log: Basic ${fulfillmentText} fulfillment section validation done
      - if:
          condition: ${unscheduled}
          then:
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTimeText
                    contains: us.data.cart.textAfter
            - log: Validations unscheduled fulfillment time text
      - if:
          condition: ${partialCheckout}
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.itemPartialCheckoutButton
                  - identifier: us.mappings.cart.fulfillmentSection.itemSubTotalAmount
      - if:
          condition: ${fulfillmentText} == 'Pickup at Cary Advance Auto Parts'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.switching.switchtoshippingButton
      - storeIn:
          key: altFulfillmentText
          value: 'null'
      - storeIn:
          key: validationScope
          value: 'null'
      - storeIn:
          key: unscheduled
          value: false
      - storeIn:
          key: partialCheckout
          value: false
      - log: -------Validate ${fulfillmentText} cart details function end-------

  # [mandatory] ${fulfillmentText} - Shipping/Pickup/Digital delivery ... [Required to scroll to the appropriate cart fulfillment section]
  - name: us.functions.cart.scrollToSection
    platform: ios
    flow:
      # Validate if Cart title is displayed
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
      - log: Scroll to top of cart page
      - if:
          identifier:
            present:
              - identifier: us.mappings.navBar.cartIconEmpty
          then:
            - failTest:
                message: "FAILURE - ${env} - Added items are not available in cart page"
      # Scroll up until top section fulfillment type
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
            - name: direction
              string: up
      - log: Scroll to specific fulfillment type section and skip if it is already visible on screen
      - log: Scrolling to Fulfillment section ${fulfillmentText}
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentSection.fulfillmentTypeText
            - name: direction
              string: down
            - name: scrollPosition
              string: center

  - name: us.functions.cart.scrollToTopOfCart
    platform: ios
    flow:
      - log: -------Scroll to top of cart page function start-------
      - try:
          flow:
            # Validate if Cart title is displayed
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.cart.navBarTitle
          catch:
            flow:
              - failTest:
                  message: 'ENV_FAILURE - ${env} - Issue with cart page loading'

      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.navBar.cartIconEmpty
            - log: Cart empty
          catch:
            flow:
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                    - name: direction
                      string: up
                    - name: limit
                      string: 8
      - log: -------Scroll to top of cart page function end-------

  - name: us.functions.cart.seeDetails
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - loop:
          begin: 0
          end: 5
          storeIndex: i
          flow:
            - log: $i
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 0
                      present:
                        - identifier: us.mappings.cart.fulfillmentSection.expandView
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentSectionTwo.expandView 
                      then:
                        - scroll:
                            direction: down
                            scrollLimit: 1
                  - log: See details is present
                  - click:
                      identifier: us.mappings.cart.fulfillmentSection.expandView
                catch:
                  flow:
                    - log: No See details in Cart  
                    - break: true

# go to Reserve Slot when no slot booked
  - name: us.functions.cart.noSlotBooked.goToReserveSlot
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - click:
          identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

  - name: us.functions.cart.handleEmptyCartScreen
    platform: ios
    flow:
       - if:
          identifier:
            present:
              - identifier: us.mappings.cart.emptyCartText
          then:
            - click:
                identifier: us.mappings.cart.emptyCartStartShoppingButton    
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cartContainsItem
                then:
                  - click:
                      identifier: us.mappings.navBar.cartIcon
                # else:
                #   - executeFunction:
                #       name: us.functions.search.addItemtoCart
                #       params:
                #         - name: searchTerm
                #           string: ${searchTermAgain}
                #         - name: expectedItemCount
                #           string: ${expectedItemCountAgain}
                #   - executeFunction:
                #       name: us.functions.global.navigation.toCartFromNavBar
                #   - if:
                #       identifier:
                #         present:
                #           - identifier: us.mappings.cart.emptyCartText
                #       then:
                #           - click:
                #               identifier: us.mappings.cart.emptyCartStartShoppingButton
                #           - if:
                #               identifier:
                #                 present:
                #                   - identifier: us.mappings.cartContainsItem
                #               then:
                #                   - click:
                #                       identifier: us.mappings.navBar.cartIcon
                #               else: 
                #                   - log: Cart is empty on 2nd attempt again
          else: 
            - log: handleEmptyCartScreen - Cart is not empty

#Proceed to checkout from cart
  - name: us.functions.cart.continueToCheckout
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: us.mappings.cart.checkoutButton
      - click:
          identifier: us.mappings.cart.checkoutButton 
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.cart.checkOutGetItFasterPopUp
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
            - sleep:
                duration: 3000   
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.selectAddressTitle
          then:
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue
            - sleep:
                duration: 3000
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: us.functions.cart.handleItemUpdatesBottomTray
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - executeFunction:
          name:  us.functions.cart.handleDroneDropffPopup
    # trying again to click checkout button if the technical error is dismissed before failing test
      - if:
          condition: ${errorDismissed}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.checkoutButton
                then:
                  - click:
                      identifier: us.mappings.cart.checkoutButton
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.checkoutButton
          then:
            - log: Clicked on Checkout button successfully
          else:
            - if:
                condition: ${skipErrorValidation}
                then:
                  - log: Checkout button presence check skipped
                else:
                  - failTest: 
                       message: "ENV_FAILURE - ${env} - Review order page not loaded, still displaying cart page after click on checkout button"
      - executeFunction:
          name: us.functions.wplus.handle.SubstitutionPreferencePopup

  - name: us.functions.cart.handleCheckoutGiftItemsBottomTray
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.checkoutGiftItemsPopUpTitle 
          then:
            - click:
                identifier: us.mappings.cart.checkoutGiftItemsProceedButton

  - name: us.functions.cart.continueToCheckoutwithOutClosingW+BottomSheet
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.checkoutButton
      - click:
          wait: 5000
          identifier: us.mappings.cart.checkoutButton
      - sleep:  
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
      - if: 
          identifier:
            present:
              - identifier: us.mappings.gifting.checkout.addressSelection
          then:
            - click:
                identifier: us.mappings.gifting.checkout.addressSelection.selectAddress
            - sleep:  
                duration: 3000 
            - click:
                identifier: us.mappings.gifting.checkout.addressSelection.saveButton
      - sleep:  
          duration: 5000     
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.selectAddressTitle
          then:
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue

#Proceed to checkout from cart
  - name: us.functions.cart.handleItemUpdatesBottomTray
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.cart.itemUpdatesTitle
            - click:
                identifier: us.mappings.cart.itemUpdatesContinueButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.checkoutButton
                then:
                  - click:
                      identifier: us.mappings.cart.checkoutButton
          catch:
            flow:
              - log: No item update pop up

  - name: us.functions.cart.handleDroneDropffPopup
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.cart.droneDropoffAreaText
            - click:
                identifier: us.mappings.cart.droneDropoffAreaCloseButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.checkoutButton
                then:
                  - click:
                      identifier: us.mappings.cart.checkoutButton
          catch:
            flow:
              - log: No item update pop up

  - name: us.functions.cart.checkOutGetItFasterPopUp
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.cart.getItFasterTitle
            - click:
                identifier: us.mappings.cart.noThanksButton
          catch:
            flow:
              - log: Get It Faster PopUp not visible

  - name: us.functions.cart.addToExistingOrder
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:
          identifier: us.mappings.cart.addToExistingOrderButton
      - sleep:
          duration: 7000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.amend.alcoholDisclosure.bottomSheet.navigationBar
          then:
            - executeFunction:
                name: us.functions.amend.alcoholItemToSCPickup.changeSlot.alcoholRestrictedToAllowed
      - if:
          identifier:
            present:
              - identifier: us.mappings.paymentMethod.checkout.wallet.title
          then:
            - click:
                identifier: us.mappings.reviewOrder.confirmCvv.cvvField            
            - enterText:
                identifier: us.mappings.reviewOrder.confirmCvv.cvvField
                string: ${cvv}
            - click:
                identifier: us.mappings.default.keyboardDoneButton    
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.saveButton                                      
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup       
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.addToExistingOrderButton
          then:
            - click:
                identifier: us.mappings.cart.addToExistingOrderButton
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: us.mappings.amend.itemAddedConfimationMessage
           

  - name: us.functions.cart.continueToCheckoutOrNewOrder
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.startNewOrderButton
          then:
            - click:
                identifier: us.mappings.cart.startNewOrderButton
          else:
            - click:
                identifier: us.mappings.cart.checkoutButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue 
      - sleep:
          duration: 7000
      - executeFunction:
          name: us.functions.cart.continueToCheckoutShipItemSeparately
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed   
      - executeFunction:
          name: us.functions.wplus.handle.SubstitutionPreferencePopup

  - name: us.functions.cart.continueToCheckoutShipItemSeparately
    platform: ios
    flow:
      - if: 
          identifier:
            present:
              - identifier: us.functions.cart.continueToCheckoutShipItemSeparatelyButton
          then:
            - click:
                identifier: us.functions.cart.continueToCheckoutShipItemSeparatelyButton

  - name: us.functions.cart.verifyNonConfigBundleViewDetails
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.nonConfigBundleViewDetailsButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.nonConfigBundleViewDetailsButton
      - click:
          identifier: us.mappings.cart.nonConfigBundleViewDetailsButton
      - sleep:
          duration: 1000    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.nonConfigBundleViewHideDetailsButton
            - identifier: us.mappings.cart.oneItemPresent.itemNameLabel

  - name: us.functions.cart.verifySaveForLaterAndRemoveItemsFromCart
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.estimatedTotalCost
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - log: $i
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.itemSaveForLaterLink
                  - name: direction
                    string: up
                  - name: scrollPosition
                    string: center
            - log: 'Save for later link is present'
            - if: 
                identifier:
                  notPresent: 
                    - identifier: us.mappings.cart.itemSaveForLaterLink
                then:
                  - break: true
                else:
                  - click:
                      identifier: us.mappings.cart.itemSaveForLaterLink       
      - sleep:
          duration: 1000         
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.emptyCartText
      - storeIn:
          key: movedToCart
          value: false
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - log: $i
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.moveToCartButton
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            # - if: 
            #     identifier:
            #       present: 
            #         - identifier: us.mappings.home.feedback.givefeedback.button 
            #     then:
            #       - executeFunction:                   
            #           name: us.functions.utils.scrollIfNotVisible
            #           params:
            #             - name: identifier
            #               string: us.mappings.home.feedback.givefeedback.button 
            #             - name: direction
            #               string: down
            #             - name: scrollPosition
            #               string: center                             
            - if: 
                identifier:
                  notPresent: 
                    - identifier: us.mappings.cart.moveToCartButton
                then:
                  - break: true
                else:
                  - storeIn:
                      key: movedToCart
                      value: true
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.moveToCartButton 
                  - click:
                      identifier: us.mappings.cart.moveToCartButton 
      - if:
          condition: ${movedToCart} == false
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - All items were not moved to cart from SFL section"

  - name: us.functions.cart.checkoutWithSlotBooking
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
          then:
            - storeIn:
                key: page
                value: cart
            - executeFunction:
                name: us.functions.selectBookingSlotWithErrorHandling
            - executeFunction:
                name: us.functions.cart.handleItemUpdatesBottomTray
            - executeFunction:
                name: us.functions.cart.continueToCheckoutOrNewOrder
            - executeFunction:
                name: us.functions.cart.continueMissingAnythingScreen  
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue  
            - executeFunction:
                name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed     
            - executeFunction:
                name: us.functions.wplus.handle.SubstitutionPreferencePopup            
          else:
            - storeIn:
                key: page
                value: 'null'
            - executeFunction:
                name: us.functions.cart.continueToCheckoutOrNewOrder
            - executeFunction:
                name: us.functions.cart.continueMissingAnythingScreen   
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue             
            - executeFunction:
                name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed          
            - executeFunction:
                name: us.functions.selectBookingSlotWithErrorHandling
            - executeFunction:
                name: us.functions.cart.handleItemUpdatesBottomTray
            - executeFunction:
                name: us.functions.cart.continueMissingAnythingScreen   
            - executeFunction:
                name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
            - executeFunction:
                name: us.functions.wplus.handle.SubstitutionPreferencePopup

  - name: us.functions.cart.verifyNoThresholdFeesOnCart
    platform: ios
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.thresholdText

  - name: us.functions.cart.verifyThresholdFeesDisplay
    platform: ios
    flow: 
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.subTotalEffectiveAmount
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - executeFunction:
          name: us.functions.utils.fetchAmountDisplayed
          params:
            - name: identifier
              string: us.mappings.cart.subTotalEffectiveAmount
            - name: delimeter
              string: '$'

      - if:
          condition: ${amountValue} > 35.00
          then:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.cart.thresholdText
          else:     
            - if:
                condition: ${amountValue} < 35.00     
                then:
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.wplus.cart.pos.deliveryFromStoreCharges.rightLabel
                        - identifier: us.mappings.wplus.thresholdLabel
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.thresholdText
                        - identifier: us.mappings.cart.thresholdValue
                  - executeFunction:
                      name: us.functions.utils.fetchAmountDisplayed
                      params:
                        - name: identifier
                          string: us.mappings.cart.thresholdValue
                        - name: attribute
                          string: value                      
                        - name: delimeter
                          string: '$'               
                  - if:
                       condition: ${amountValue} > 0
                       then:  
                          - log :  Verified below order minimum fee is ${amountValue}   
                       else:
                         - if:
                              condition: ${amountValue} == 0
                              then:
                                - failTest:
                                    message: "FAILURE - ${env} - Below order minimum fee should never be 0" 

  - name: us.functions.cart.addDeliveryAddress
    platform: ios
    flow:
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.fcDelivery.addAddress
      - verifyIdentifier:
          value:
            - identifier: us.mappings.cart.fcDelivery.addAddress
              equals: zipcode 9 5 1 2 2
      - click:
          identifier: us.mappings.cart.fcDelivery.addAddress
      - executeFunction: 
          name: us.functions.deliveryAddress.addAddress
          params:
            - name: firstName
              string: glass
            - name: lastName
              string: e2e
            - name: streetAddress
              string: ${streetAddress}
            - name: city
              string: ${city}
            - name: state
              string: ${state}
            - name: zipcode
              string: ${zipcode}
            - name: phoneNumber
              string: ${phoneNumber}

  - name: us.functions.cart.selectAddress
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.selectAddress.ExistingAdderss
      - verifyIdentifier:
          present:
            - identifier: us.mappings.selectAddress.ExistingAdderss
      - click:
          identifier: us.mappings.selectAddress.ExistingAdderss
          wait: 2000         
      - verifyIdentifier:
          present:
            - identifier: us.mappings.selectAddress.selectAddressTitle
      - click:
          identifier: us.mappings.selectAddress.existingAddressRadioButton
      - click:
          identifier: us.mappings.selectAddress.continueButton

  - name: us.functions.cart.selectAddress
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.selectAddress.selectAddressTitle
      - click:
          identifier: us.mappings.selectAddress.addressRadioButton
      - click:
          identifier: us.mappings.selectAddress.continueButton

  - name: us.functions.cart.moveItemToSfl
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemMovetoSFL
      - click:
          identifier: us.mappings.cart.itemMovetoSFL
          wait: 3000      
      # - verifyIdentifier:
      #     present:
      #       - identifier:  us.mappings.cart.sflMessagingLabel
      #       - identifier:  us.mappings.cart.sflUndoButton
              
  - name: us.functions.cart.moveMixedFCItemToSfl
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.mixedFulfillment.itemMovetoSFL
      - click:
          identifier: us.mappings.cart.mixedFulfillment.itemMovetoSFL
          wait: 3000
      # - verifyIdentifier:
      #     timeout: 50000
      #     present:
      #       - identifier:  us.mappings.cart.sflMessagingLabel
      #       - identifier:  us.mappings.cart.sflUndoButton
              
  - name: us.functions.cart.moveItemToCart
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.moveToCartButton
            - name: direction
              string: down  
      - click:
          identifier: us.mappings.cart.moveToCartButton
          wait: 5000
      - sleep:
          duration: 10000
      # - verifyIdentifier:
      # - verifyIdentifier:
      #     timeout: 50000
      #     present:
      #       - identifier:  us.mappings.cart.sflMessagingLabel
      #       - identifier:  us.mappings.cart.sflUndoButton
              
  - name: us.functions.cart.moveSecondItemToCart
    platform: ios
    flow:
      - scroll: 
         direction: down
         untilIdentifier: us.mappings.cart.sflSecondItemMovetoCart
      # - verifyIdentifier:
      #     present:
      #       - identifier:  us.mappings.cart.sflSecondItemMovetoCart
      - click:
          identifier:  us.mappings.cart.sflSecondItemMovetoCart
          wait: 5000
      - sleep:
          duration: 10000
      # - verifyIdentifier:
      #     timeout: 50000
      #     present:
      #       - identifier:  us.mappings.cart.sflMessagingLabel    
      #       - identifier:  us.mappings.cart.sflUndoButton
          
#####   market place

  - name: us.functions.cart.marketplace.verifySellerType
    platform: ios
    flow:
      # - verifyIdentifier:
      #     present: 
      #       - identifier: us.mappings.cart.marketplace.sellerInfo
      - if: 
          condition: ${sellerType} == 'pro-seller'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.marketplace.text.3P_ProSeller
                then:
                  - log: MP Proseller Item Validated in cart page
                else:
                  - failTest:
                      message: "DATA_FAILURE - ${env} - MP Pro-Seller tag not available for ${itemFetched} " 
          else:
              - if:
                  condition: ${sellerType} == '3p'
                  then:
                    - verifyIdentifier:
                        present:
                          # - identifier: us.mappings.cart.marketplace.3p.sellerInfo
                          - identifier: us.mappings.cart.marketplace.sellerInfo
                  else:
                      - if:
                          condition: ${sellerType} == 'pro-seller-wfs'
                          then:
                            - verifyIdentifier:
                                present:
                                  - identifier: us.mappings.cart.marketplace.text.3P_ProSeller_WFS
                                  - identifier: us.mappings.cart.marketplace.sellerInfo
                          else:
                              - if:
                                  condition: ${sellerType} == '3p-wfs'
                                  then:
                                    - verifyIdentifier:
                                        present:
                                          - identifier: us.mappings.cart.marketplace.text.3P_WFS

  - name: us.functions.cart.acc.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.s2s.cardTitle 
      - if:
          condition: ${item} == 's2s-tire'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.acc.s2sItem
          else:
              - if:
                  condition: ${item} == 'put-tire'
                  then:
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.cart.acc.putItem

  - name: us.functions.cart.continueMissingAnythingScreen
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 8000
                present:
                  - identifier: us.mappings.cart.missingAnythingTitle
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
          catch:
            flow:
              - log: Missing anything popup not displayed   

  - name: us.functions.cart.increaseToMaxQty
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentSection
          then:
            - log: Collapsing the basket view in case increase quantity button is not visible
            - click:
                identifier: us.mappings.cart.fulfillmentSelection.basketView
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.increaseQty
            - name: direction
              string: down    
      - verifyIdentifier: 
          present:
            - identifier: us.mappings.cart.increaseQty
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.cart.increaseQty
            - log: $i

  - name: us.functions.cart.mpPickupPopUp
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.mpPickupPopUpTitle
          then:
            - click:
                identifier: us.mappings.cart.itemUpdatesContinueButton


  - name: us.functions.cart.VerifyRewardsEarnedTag
    platform: ios
    flow:
      - if:
          condition: ${mustBuy} != null
          then:
              - executeFunction:
                  name: us.functions.cart.increaseToMaxQty
                  params:
                    - name: maxQty
                      string: ${mustBuy}
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.earnedRewardTag
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.earnedRewardTag
              equals: Walmart Cash claimed

  - name: us.functions.cart.selectNearByStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.findNearByStoreLink
      - click:
          identifier: us.mappings.cart.findNearByStoreLink
          wait: 2000
      - click: 
          identifier: us.mappings.home.zipcodeClearButton
          wait: 2000
      - click: 
          identifier: us.mappings.home.selectStoreTextField
      - enterText:
          identifier: us.mappings.cart.ACC.zipcodetextField
          string: ${zipcode1}
          pressEnter: true
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ACC.redMessage 
      - click: 
          identifier: us.mappings.home.zipcodeClearButton
          wait: 2000
      - click: 
          identifier: us.mappings.home.selectStoreTextField
      - enterText:
          identifier: us.mappings.cart.ACC.zipcodetextField
          string: ${zipcode2}
          pressEnter: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.ACC.storeAddress 
          then:
            - click:
                identifier: us.mappings.cart.ACC.storeAddress  
          else:
            - scroll: 
                direction: down
                untilIdentifier: us.mappings.cart.ACC.storeAddress 
            - click:
                identifier: us.mappings.cart.ACC.storeAddress  
      - click:
          identifier: us.mappings.cart.ACC.saveButton
      - sleep:
         duration: 5000

  - name:  us.functions.cart.acc.switchToPickup
    platform: ios
    flow:
      - if:
          identifier:
            present: 
              - identifier: us.mappings.cart.switchtopickupButton
          then:
            - click:
                identifier: us.mappings.cart.switchtopickupButton

  - name: us.functions.cart.handleSafetyAdviceAndCheckout
    platform: ios
    flow:
      - click:
          identifier: us.mappings.cart.checkoutButton
      - executeFunction:
          name: us.functions.cart.handleItemUpdatesBottomTray   
      - try:
          flow:
            - verifyIdentifier:
                timeout: 8000
                present:
                  - identifier: us.mappings.cart.safetyAdviceHeader
            - click:
                identifier: us.mappings.cart.safetyAdviceContinueWithOneTire  
          catch:
            flow:
              - log: Safety Advice Header pop up not available  
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

  - name: us.functions.cart.validateTireInstallationRadioButton
    platform: ios
    flow:

      - if:
          identifier:
            present: 
              - identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
          then:
            - click:
                identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
      - if:
          identifier:
            present: 
              - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
          then:                              
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
            - click:
                identifier: us.mappings.cart.tireInstallationRadioButtonSelected

          else:
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 10000
                      value:
                        - identifier: us.mappings.cart.tireInstallationCheckBox
                          equals: 1
                  - log : checkbox already selected 
                catch:
                  flow:
                    - click:
                        identifier: us.mappings.cart.tireInstallationCheckBox  
            
      - sleep:
          duration: 4000   

  - name: us.functions.cart.scheduleInstallation
    platform: ios
    flow:
      - if:
          identifier:
            present: 
              - identifier: us.mappings.cart.scheduler.schedulerScreenTitle
          then:    
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.scheduler.schedulerScreenTitle
            - executeFunction:
                name: us.functions.slotDataSetUp
            - sleep:
                duration: 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.accNearByStore
                then:
                  - log: There are no upcoming appointments available at store.
                  - click:
                      identifier: us.mappings.reviewOrder.accNearByStore
                  - sleep:
                      duration: 3000
                  - click:
                      identifier: us.mappings.reserveSlot.selectStore.second
                  - click: 
                      identifier: us.mappings.gic.selectStore.save.button #us.mappings.home.selectStoreSaveButton
                  - sleep:
                      duration: 3000

            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.timeSlot
                then:
                  - sleep:
                      duration: 5000
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'  
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.reserveSlot.continueButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton  
            - sleep:
                duration: 5000        
            - if: 
                identifier:
                  present:
                    - identifier: us.mappings.cart.schedulePackageAtStore
                then:
                  - click:
                      identifier: us.mappings.cart.schedulePackageAtStore
                  - sleep:
                      duration: 3000

  - name: us.functions.cart.validateInstallationNotAvailableAtAutocare
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIcon
      - click:
          identifier: us.mappings.navBar.cartIcon
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.verifyInstallationUnavailableText
          then:
            - click:
                identifier: us.mappings.cart.clickOnRemoveAndContinueButton

  - name: us.functions.cart.verifyVariantDetails
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentSection.colorVariantDetails
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:             
            - identifier: us.mappings.cart.fulfillmentSection.sizeVariantDetails
            - identifier: us.mappings.cart.fulfillmentSection.colorVariantDetails
      - log: Validated Size $itemSize and Color $Color in cart page are same from item page
      - if: 
          condition: ${Variant} == 3
          then: 
              - log: $wid
              - if: 
                  condition: ${wid} == 'Medium' || ${wid} == 'Medium '
                  then:
                    - storeIn:
                        key: width
                        value: M
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentSection.widthVariantDetails

                  else:
                      - if:
                          condition: ${wid} == 'Extra Wide' || ${wid} == 'Extra Wide '
                          then:
                            - storeIn:
                                key: width
                                value: EW
                            - verifyIdentifier:
                                present:
                                  - identifier: us.mappings.cart.fulfillmentSection.widthVariantDetails            

  - name: us.functions.cart.itemMultiSellerUpdatePopUp
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.itemMultiSellerUpdateSheet
          then:
            - click:
                identifier: us.mappings.global.closeButton

  - name: us.functions.cart.itemWithWeight.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.secondaryPriceTextbyWeight

  - name: us.functions.cart.verifyCustomAmount
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalCost
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalCost
          label:
            - identifier: us.mappings.cart.estimatedTotalCost
              contains: ${giftCardPrice}   

###################### ANDROID ##################

  - name: us.functions.cart.shipping.verifyVariantSelection
    platform: android
    flow:
       - scroll:
           direction: down
           untilIdentifier: us.mappings.cart.itemvariant.size
           position: center
       - log: Started collecting values in cart.
      # Validate variant section
       - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemvariant.size
       - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.itemvariant.size
              contains: ${Size}
       - getString:
          identifier: us.mappings.cart.itemvariant.size
          attribute: text
          storeIn: itemnamesize
       - log: Size was Present $itemnamesize 
       - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemvariantname.color
       - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.itemvariantname.color
              contains: ${itemColour}
       - getString:
          identifier: us.mappings.cart.itemvariantname.color
          attribute: text
          storeIn: itemnamecolor
       - log: Color was Present $itemnamecolor

  # Cart

  # Utility to validate cart details for any fulfillment type
  # [mandatory] ${fulfillmentText}    - Shipping/Pickup/Delivery from store/Pickup or delivery/Digital delivery/Pickup from Auto Care ... [Required to scroll to the appropriate cart fulfillment section]
  # [optional]  ${altFulfillmentText} - Alternate fulfillment text for validation if 2 different fulfillment text display possibility exists [e.g. Curbside pickup / Pickup | Curbside pickup/In-store pickup]
  # [optional]  ${partialCheckout}    - true/false [default false] [Set to true if Patial checkout section also to be validated]
  # [optional]  ${unscheduled}        - true/false [default false] [Set to true if unscheduled item fulfillment time needs to be validated]
  # [optional]  ${validationScope}    - partial/detailed [default partial] ['partial' scope validates fulfillment section type existance only and 'detailed' scope validates item icon/price/buttons ... as well]
  - name: us.functions.cart.verifyCardDetails
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.getFulfillmentTextsToCompare

      - log: -------Validate ${fulfillmentText} cart details function start-------
      - if:
          condition: ${initialCartDataSetup} == null
          then:
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.navBarTitle
                then:
                  - log: Cart page displayed
                else:
                  - failTest:
                      message: "FAILURE - ${env} - cart page is not displayed"
            # Expand item details only if detailed validation needs to be done else for basic validation details expansion is not needed
            - if:
                condition: ${validationScope} == 'detailed'
                then:
                  - executeFunction:
                      name: us.functions.cart.seeDetails
            - storeIn:
                key: initialCartDataSetup
                value: complete
          else:
            - log: Cart page already loaded and inital setup is done.
      - executeFunction:
          name: us.functions.cart.scrollToSection

      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTypeText
          catch:
            flow:
              - failTest:
                  message: "FAILURE - ${env} - ${fulfillmentText} fulfillment section not displayed in cart page"
      - if:
          condition: ${unscheduled}
          then:
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTime
                    contains: us.data.cart.textAfter
            - log: Validations unscheduled fulfillment time text
      - if:
          condition: ${validationScope} == 'detailed'
          then:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.fulfillmentSection.itemPrice
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.itemDetailsIcon
                  - identifier: us.mappings.cart.fulfillmentSection.itemDetailsSection
                  - identifier: us.mappings.cart.fulfillmentSection.itemDescription
                  - identifier: us.mappings.cart.fulfillmentSection.itemPrice
                  # - identifier: us.mappings.cart.fulfillmentSection.itemFulfillmentBadge
            - if:
                condition: ${fulfillmentText} == 'Pickup' || ${fulfillmentText} == 'pickup' || ${fulfillmentText} == 'Retiro'
                then:
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.cart.fulfillmentSection.fulfillmentDeliveryText
                else:
                  - if:
                      condition: ${fulfillmentText} == 'Shipping' || ${fulfillmentText} == 'shipping' || ${fulfillmentText} == 'Env√≠o'
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.cart.fulfillmentSection.fulfillmentDeliveryText
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperSection
                then:
                  - scroll:
                      direction: down
                      position: center
                      untilIdentifier: us.mappings.cart.fulfillmentSection.itemDetails
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.itemRemoveLink
                  - identifier: us.mappings.cart.fulfillmentSection.itemSaveForLaterLink
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperSection
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperMinusButton
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperCountText
                  - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperPlusButton
            - log: Detailed ${fulfillmentText} fulfillment section validation done
          else:
            - log: Basic ${fulfillmentText} fulfillment section validation done
      - if:
          condition: ${partialCheckout}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.fulfillmentSection.itemPartialCheckoutButton
                then:
                  - scroll:
                      direction: down
                      position: center
                      untilIdentifier: us.mappings.cart.fulfillmentSection.itemDetails
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.itemPartialCheckoutButton
                  - identifier: us.mappings.cart.fulfillmentSection.itemSubTotalAmount

      - if:
          condition: ${fulfillmentText} == 'Pickup at Cary Advance Auto Parts'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.switching.switchtoshippingButton

      - storeIn:
          key: altFulfillmentText
          value: 'null'
      - storeIn:
          key: validationScope
          value: 'null'
      - storeIn:
          key: unscheduled
          value: false
      - storeIn:
          key: partialCheckout
          value: false
      - log: -------Validate ${fulfillmentText} cart details function end-------

  - name: us.functions.cart.verifyVariantDetails
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: direction
              string: down
            - name: identifier
              string: us.mappings.cart.fulfillmentSection.sizeVariantDetails
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.fulfillmentSection.sizeVariantDetails
            - identifier: us.mappings.cart.fulfillmentSection.colorVariantDetails
      - if:
          condition: ${itemWidth} == 'Medium'
          then:
            - storeIn:
                key: width
                value: M
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentSection.widthVariantDetails
          else:
              - if:
                  condition: ${itemWidth} == 'Extra Wide'
                  then:
                    - storeIn:
                        key: width
                        value: EW
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentSection.widthVariantDetails

  - name: us.functions.cart.scheduledPickup.verifyCard
    platform: android
    flow:

      # - scroll:
      #     direction: up
      #     untilIdentifier: us.mappings.cart.pickup.cardTitle
      #     position: center
      #     scrollLimit: 2
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.navBarTitle
      #       - identifier: us.mappings.cart.pickup.cardTitle
      #       - identifier: us.mappings.cart.scheduledPickup.slotDetailSelector

     - if:
          identifier:
             notPresent:
               - identifier: us.mappings.cart.pickup.cardTitle
          then:
            - scroll:
                direction: up
                untilIdentifier: us.mappings.cart.pickup.cardTitle
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.navBarTitle
                  - identifier: us.mappings.cart.pickup.cardTitle
                  - identifier: us.mappings.cart.scheduledPickup.slotDetailSelector
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.navBarTitle
                  - identifier: us.mappings.cart.pickup.cardTitle
                  - identifier: us.mappings.cart.scheduledPickup.slotDetailSelector

  # After cart page navigation, confirm fulfillment type for the items selected and switch it necessary.
  # Function will switch the fulfillment type if it is not matching with the sent parameter
  # [mandatory] ${fulfillmentType} - 'pickup / shipping' (Expected fulfillment type for the item)
  - name: us.functions.cart.switchBetweenPickUpAndShipping
    platform: android
    flow:
      - log: ----------Start of function to switch fulfillment type to ${fulfillmentType}----------
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.fulfillmentSelection.basketView
          then:
            - executeFunction:
                name: us.functions.utils.getFulfillmentTextsForIntentSelection
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentSection
                then:
                  - click:
                      identifier: us.mappings.cart.fulfillmentSelection.basketView
      # Only way to differentiate between old and new intent module is by checking availablity of shipping intent 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.fulfillmentSelection.oldBasketViewWithShipping 
                then:
                  - log: Old GIC view with shipping intent
                else:
                  - storeIn:
                      key: newGIC
                      value: true
                  - if:
                      condition: ${fulfillmentType} == 'shipping'
                      then:
                        - storeIn:
                            key: skipSwitch
                            value: true
            - if:
                condition: ${skipSwitch}
                then:
                  - log: Skipping this for Shipping
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentType
                      then:
                        - click:
                            identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentType
                        - sleep:
                            duration: 2000
                        - if:
                            identifier:
                              notPresent:
                                - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentSection
                            then:
                              - click:
                                  identifier: us.mappings.cart.fulfillmentSelection.basketView
                        # - verifyIdentifier:
                        #     present:
                        #         - identifier: us.mappings.cart.fulfillmentSelection.fulfillmentTypeSelected
                      else:
                        - log: Required fulfillment type is either already selected or is disabled or not applicable for the the items selected
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.switching.section
                then:
                  - executeFunction:
                      name: us.functions.utils.getFulfillmentTextsForIntentSelection
                  - try:
                      flow:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.cart.switching.optionLink
                        - log: Switch item to ${fulfillmentType} option
                        - click:
                            identifier: us.mappings.cart.switching.optionLink
                        - executeFunction:
                            name: us.functions.cart.scrollToTopOfCart
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.switching.optionLink
                            then:
                              - click:
                                  identifier: us.mappings.backButton
                              - executeFunction:
                                  name: us.functions.global.navigation.toCartFromNavBar
                        - verifyIdentifier:
                            notPresent:
                              - identifier: us.mappings.cart.switching.optionLink
                        - log: Switch item to ${fulfillmentType} option completed
                      catch:
                        flow:
                          - log: Item fulfillment type is either already in ${fulfillmentType} or no option to switch to ${fulfillmentType} hence skipping
      - log: ----------End of function to switch fulfillment type to ${fulfillmentType}----------

  - name: us.functions.cart.sc.verify.noSlotBooked
    platform: android
    flow:
      - scroll:
          direction: up
          scrollLimit : 3
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

  # Scrolls to top of cart page
  - name: us.functions.cart.scrollToTopOfCart
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - log: -------Scroll to top of cart page function start-------
      - log: Scrolling to top of cart page
      # Validate if Cart title is displayed
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cartVerification
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.cartIconEmpty
          then:
            - log: Cart empty.
          else:      
            - loop:
                begin: 0
                end: 7
                storeIndex: scrollIndex
                mode: increment
                flow:
                  - log: Check ${scrollIndex}
                  # If any fulfillment section is displayed
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                      then:
                        - if:
                            condition: ${validateText} == null
                            then:
                              # Store currently displayed fulfillment section text to be used in next loop
                              - getString:
                                  identifier: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                                  attribute: text
                                  storeIn: validateText
                            else:
                              # Store currently displayed fulfillment section text and compate with previous section text
                              - getString:
                                  identifier: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                                  attribute: text
                                  storeIn: compareText
                              - log: Store currently displayed fulfillment type and compare with previously displayed fulfillment type text
                              # If previous and current fulfillment section texts are same, top of cart page is reached. Hence exit loop
                              # Else, assign current displayed fulfillment section text to ${validateText} for next run
                              - if:
                                  condition: ${validateText} == ${compareText}
                                  then:
                                    - log: Breaking the loop as cart page top is reached
                                    - break: true
                                  else:
                                    - storeIn:
                                        key: validateText
                                        value: ${compareText}
                                    - log: Store current fulfillment type text for next run before scrolling up
                  # Scroll up until loop is not breaked
                  - log: Scrolling up till cart page top is reached
                  - scroll:
                      direction: up
            # Reset to default
            - storeIn:
                key: validateText
                value: 'null'
      - log: -------Scroll to top of cart page function end-------

  # [mandatory] ${fulfillmentText} - Shipping/Pickup/Digital delivery ... [Required to scroll to the appropriate cart fulfillment section]
  # [optional]  ${resetScrollDetails} - true/false [default false] [Set to true if function is called during multiple navigations to cart page]
  - name: us.functions.cart.scrollToSection
    platform: android
    flow:
      - log: -------Scroll to ${fulfillmentText} section start-------
      - log: Scrolls to the required fulfillment section
      - if:
          condition: ${resetScrollDetails}
          then:
            - storeIn:
                key: firstCartSection
                value: 'null'
      # Get top section fulfillment type text from cart page and save to 'firstCartSection' variable
      - log: Scroll to top of cart page
      - if:
          condition: ${firstCartSection} == null
          then:
            # Scroll to cart page top
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.cartIconEmpty
                then:
                  - failTest:
                      message: "FAILURE - ${env} - Added items are not available in cart page"
            # Store the fulfillment details text for top section
            - getString:
                identifier: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                attribute: text
                storeIn: firstCartSection
      # Scroll up until top section fulfillment type is not displayed based on 'firstCartSection' variable data saved from above step
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.fulfillmentFirstSection.fulfillmentTypeText
          then:
            - log: Already at the top of cart page
          else:
            - scroll:
                direction: up
                untilIdentifier: us.mappings.cart.fulfillmentFirstSection.fulfillmentTypeText
            - log: Scrolled to top of the page
      - try:
          flow:
            # Skips scrolling if required section is already displayed
            - log: Skip scrolling if required section is already displayed
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.fulfillmentFirstSection.fulfillmentTypeText
                    contains: ${fulfillmentText}
            - log: Required cart ${fulfillmentText} fulfillment section already displayed.
          catch:
            flow:
              # Scrolls to appropriate section
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: direction
                      string: down
                    - name: identifier
                      string: us.mappings.cart.fulfillmentSection.fulfillmentTypeText
                    - name: scrollPosition
                      string: center
              - log: Required cart ${fulfillmentText} fufillment section is scrolled.
      # Reset to default
      - storeIn:
          key: resetScrollDetails
          value: false
      - log: -------Scroll to ${fulfillmentText} section end-------

  #enable CCM (cart.wic.badge.enabled) to get badge visible on cart CEPG-210661,CEPG-204657      
  - name: us.functions.cart.scheduledDelivery.verifyEBTDetails
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.seeDetailsLink
          then:
              - click:
                  identifier: us.mappings.cart.seeDetailsLink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.scheduledDelivery.EBTthumbnail
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.scheduledDelivery.EBTthumbnail
      #       - identifier: us.mappings.cart.scheduledDelivery.EBTtag

  - name: us.functions.cart.VerifyRewardsEarnedTag
    platform: android
    flow:
      - sleep:
          duration: 10000
      - if:
          condition: ${mustBuy} != null
          then:
              - executeFunction:
                  name: us.functions.cart.increaseToMaxQty
                  params:
                    - name: maxQty
                      string: ${mustBuy}
      - scroll:
          direction: up
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.earnedRewardTag

  - name: us.functions.cart.clipOnCartAndVerifyRewardsEarnedTag
    platform: android
    flow:
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rewardsCheckBox
      - click:
            identifier: us.mappings.cart.rewardsCheckBox
      - if:
          condition: ${mustBuy} != null
          then:
              - scroll:
                  direction: down
              - executeFunction:
                  name: us.functions.cart.increaseToMaxQty
                  params:
                    - name: maxQty
                      string: ${mustBuy}
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.earnedRewardTag   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.earnedRewardTag

  - name: us.functions.cart.VerifyRewardsEarnedBanner
    platform: android
    flow:
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string:  us.mappings.cart.ibottaPromotionalRewardBanner
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplus.rewardsInstructionalButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.wplus.rewardsInstructionalButton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cartdetailpage.cartbasketrewardsbanner.text
                  - identifier: us.mappings.cartdetailpage.cartbasketrewardsbanner.icon

  - name: us.functions.cart.VerifyRewardsEarnedBanner
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.wplus.rewardsBanner
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplus.rewardsInstructionalButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.wplus.rewardsInstructionalButton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.rewardsBanner

  - name: us.functions.cart.clipOnCartAndVerifyRewardsEarnedTag
    platform: ios
    flow:
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rewardsCheckBox
      - click:
            identifier: us.mappings.cart.rewardsCheckBox
      - if:
          condition: ${mustBuy} != null
          then:
              - executeFunction:
                  name: us.functions.cart.increaseToMaxQty
                  params:
                    - name: maxQty
                      string: ${mustBuy}
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.earnedRewardTagTitle   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.earnedRewardTagTitle

  - name: us.functions.cart.unscheduledPickup.verifyCard
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.pickup.cardTitle
            - identifier: us.mappings.cart.unScheduledPickup.slotDetails
            - identifier: us.mappings.cart.changeSlotLink

  - name: us.functions.cart.fcDelivery.preorderItem.verifyCard
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.fcDelivery.cardTitle
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fcDelivery.cardTitle
            - identifier: us.mappings.cart.itemDetails.preOrderLabel
            - identifier: us.mappings.cart.item.preOrder.releaseDateLabel

  - name: us.functions.cart.fcDelivery.preorderItem.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fcDelivery.cardTitle
            - identifier: us.mappings.cart.item.preOrderLabel
         #  - identifier: us.mappings.cart.item.preOrder.releaseDateLabel

  - name: us.functions.cart.fcDelivery.verifyCard
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToSection
          params:
            - name: fulfillmentText
              string: Shipping
            - name: altFulfillmentText
              string: shipping
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fcDelivery.cardTitle

  - name: us.functions.cart.verifyNonConfigBundleViewDetails
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.nonConfigBundleViewDetailsButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.nonConfigBundleViewDetailsButton
      - click:
          identifier: us.mappings.cart.nonConfigBundleViewDetailsButton
      - sleep:
          duration: 1000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.nonConfigBundleViewHideDetailsButton

  - name: us.functions.cart.itemMultiSellerUpdatePopUp
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.itemMultiSellerUpdateSheet
          then:
            - click:
                identifier: us.mappings.global.closeButton

  - name: us.functions.cart.verifySaveForLaterAndRemoveItemsFromCart
    platform: android
    flow:
      - click:
          identifier: us.mappings.cart.secondItem.saveForLaterButton
      - sleep:
          duration: 10000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.secondItem.removeButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.cart.secondItem.saveForLaterButton
      - sleep:
          duration: 1000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.emptyCartText
            - name: direction
              string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.emptyCartText
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.saveForLaterCollapsedView
          then:
            - click:
                identifier: us.mappings.cart.saveForLaterCollapsedView
      - storeIn:
          key: movedToCart
          value: false
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - log: $i
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.sflMovetoCart
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.home.feedback.givefeedback.button 
                then:
                  - executeFunction:                   
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.global.feedbackButton
                        - name: direction
                          string: down
                        - name: scrollPosition
                          string: center                             
            - if: 
                identifier:
                  notPresent: 
                    - identifier: us.mappings.cart.moveToCartButton
                then:
                  - break: true
                else:
                  - storeIn:
                      key: movedToCart
                      value: true
                  - click:
                      identifier: us.mappings.cart.moveToCartButton 
      - if:
          condition: ${movedToCart} == false
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - All items were not moved to cart from SFL section"


# go to Reserve Slot when no slot booked
  - name: us.functions.cart.noSlotBooked.goToReserveSlot
    platform: android
    flow:
      # - executeFunction:
      #     name: us.functions.cart.scrollToSection
      #     params:
      #       - name: fulfillmentText
      #         string: Pickup or delivery from store
      # - scroll:
      #     direction: up
      #     untilIdentifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.sc.noSlotBooked.reserveTime
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - click:
          identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

  - name: us.functions.cart.selectNearByStore
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.findNearByStoreLink
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.findNearByStoreLink
      - click:
          identifier: us.mappings.cart.findNearByStoreLink
      - enterText:
          identifier: us.mappings.cart.ACC.zipcodetextField
          string: ${zipcode1}
          clearField: true
          pressEnter: true
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ACC.redMessage
      - enterText:
          identifier: us.mappings.cart.ACC.zipcodetextField
          string: ${zipcode2}
          clearField: true
          pressEnter: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.ACC.storeAddress
          then:
            - click:
                identifier: us.mappings.cart.ACC.storeAddress
          else:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.ACC.storeAddress
            - click:
                identifier: us.mappings.cart.ACC.storeAddress
      - click:
          identifier: us.mappings.cart.ACC.saveButton
          wait: 2000
      - sleep:
         duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switching.switchtopickupButton
          then:
            - click:
                identifier: us.mappings.cart.switching.switchtopickupButton


  - name: us.functions.cart.validateTireInstallationRadioButton
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
          then:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.verifyGetExpertInstallationExpandButton
                  - name: direction
                    string: up
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
          then:
            - click:
                identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
            - click:
                identifier: us.mappings.cart.tireInstallationRadioButtonSelected
          else:
            - try:
                flow:
                  - verifyIdentifier:
                      checked:
                        - identifier: us.mappings.cart.tireInstallationCheckBox
                          value: true
                  - log : checkbox already selected
                catch:
                  flow:
                    - click:
                        identifier: us.mappings.cart.tireInstallationCheckBox
      - sleep:
          duration: 4000


  - name: us.functions.cart.scheduleInstallation
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.scheduler.schedulerScreenTitle
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.scheduler.schedulerScreenTitle
            - sleep:
                duration: 7000
            - executeFunction:
                name: us.functions.slotDataSetUp
            - sleep:
                duration: 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.accNearByStore
                then:
                  - log: There are no upcoming appointments available at store.
                  - click:
                      identifier: us.mappings.reserveSlot.pickup.changeStoreLink
                  - sleep:
                      duration: 3000
                  - click:
                      identifier: us.mappings.reserveSlot.selectStore.secondAddress
                  - click:
                      identifier: us.mappings.reserveSlot.selectStore.saveButton
                  - sleep:
                      duration: 3000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.timeSlot
                then:
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.continueButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton
                      #Sorry! the time you selected is not handled 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.noslotAccTiresWarningMessage
                then:
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.continueButton
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.chooseInstallationPackage
          then:
            - click:
                identifier: us.mappings.cart.chooseInstallationPackageRadioButton
            - sleep:
                duration: 3000
            - click:
                identifier: us.mappings.cart.continueButton
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.cart.safetyAdviceHeader
                then:
                  - click:
                      identifier: us.mappings.cart.safetyAdviceContinueWithOneTire  
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservationExpired
                then:
                  - click:
                      identifier: us.mappings.cart.selectNewTimeButton
                  - sleep:
                      duration: 3000
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.scheduler.schedulerScreenTitle
                  - executeFunction:
                      name: us.functions.slotDataSetUp
                  - sleep:
                      duration: 3000
                  - click:
                      identifier: us.mappings.reserveSlot.timeSlot
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.checkoutButton  
                      then:
                        - click:
                            wait: 5000
                            identifier: us.mappings.cart.checkoutButton
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
#Proceed to checkout from cart
  - name: us.functions.cart.continueToCheckout
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.checkoutButton
      - click:
          wait: 5000
          identifier: us.mappings.cart.checkoutButton
      - sleep:
          duration: 5000
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.cart.checkoutButton.addressOverlay
      #     then: 
      #       - click:
      #           identifier: us.mappings.cart.addressOverlay.selectAddress
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.cart.addressOverlay.saveAddress    
      #       - click:
      #           identifier: us.mappings.cart.addressOverlay.saveAddress
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.reviewOrder.placeOrderButton            
      #       - verifyIdentifier:
      #           notPresent:
      #             - identifier: us.mappings.cart.checkoutButton
      #       - log: Address selected and checkout button clicked successfully
      - if:
          identifier: 
            present:
              - identifier: us.mappings.checkout.prepareForLandingText
          then: 
              - click:
                  identifier: us.mappings.checkout.prepareForLandingAgreeButton
      - if:
          identifier: 
              present:
                - identifier: us.mappings.cart.checkoutButton.checkoutAnywayButton
          then: 
            - click:
                identifier: us.mappings.cart.checkoutButton.checkoutAnywayButton
      - loop:
          begin: 1
          end: 3
          storeIndex: checkoutRetry
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.navBar.cartIcon
                then:
                  - executeFunction:
                      name: us.functions.global.navigation.toCartFromNavBar
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.checkoutButton
                  - click:
                      identifier: us.mappings.cart.checkoutButton
                  - sleep:
                      duration: 5000
                else:
                  - break: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.navBar.cartIcon
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - Click on checkout button loaded home/search page instead of checkout page"
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - executeFunction:
          name: us.functions.cart.continueToCheckoutkeepItemInCartPopUp
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.checkoutButton
          then:
            - log: Clicked on Checkout button successfully
          else:
            - if:
                condition: ${skipErrorValidation}
                then:
                  - log: Checkout button presence check skipped
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Review order page not loaded, still displaying cart page after click on checkout button"
      - executeFunction:
          name: us.functions.checkout.reviewOrder.subsPreferencePopup

  - name: us.functions.cart.continueToCheckoutkeepItemInCartPopUp
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.preferredDay.keepItemInCart
          then:
            - click:
                identifier: us.mappings.global.closeButton


  # Continue to checkout without closing the W+ pop up sheet
  - name: us.functions.cart.continueToCheckouwithoutClosingWplusBottomSheet
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.checkoutButton
          then:
            - log: 'Clicking on continue to checkout'
            - click:
                identifier: us.mappings.cart.checkoutButton
          else:
            - log: 'Checkout button is NOT clicked'
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.handleMissingAnythingPopUp
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue

  - name: us.functions.cart.availableforShippingOnly
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.verify.cartLoaded
          then:
            - click:
                identifier: us.mappings.cart.verify.cartLoaded

  - name: us.functions.cart.isThisTheRightStorePopup
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.isThisTheRightStorePopup
          then:
            - click:
                identifier: us.mappings.cart.thisIsTheRightStoreButton

  - name: us.functions.cart.mpPickupPopUp
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.mpPickupPopUpTitle
          then:
            - click:
                identifier: us.mappings.cart.gotItButton

  - name: us.functions.cart.verifyNoThresholdFeesOnCart
    platform: android
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.thresholdText

  - name: us.functions.cart.verifyThresholdFeesDisplay
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.estimatedTotalAmount
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - executeFunction:
          name: us.functions.utils.fetchAmountDisplayed
          params:
            - name: identifier
              string: us.mappings.cart.subTotalEffectiveAmount
            - name: delimeter
              string: '$'

      - if:
          condition: ${amountValue} > 35.00
          then:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.cart.thresholdText
          else:
            - if:
                condition: ${amountValue} < 35.00
                then:
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.wplus.cart.pos.freeshippingText
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.thresholdText
                        - identifier: us.mapping.cart.minfee

                  - executeFunction:
                      name: us.functions.utils.fetchAmountDisplayed
                      params:
                        - name: identifier
                          string: us.mapping.cart.minfee
                        - name: attribute
                          string: text
                        - name: delimeter
                          string: '$'
                  - if:
                      condition: ${amountValue} > 0
                      then:
                        - log :  Verified below order minimum fee is ${amountValue}
                      else:
                        - if:
                            condition: ${amountValue} == 0
                            then:
                              - failTest:
                                  message: "FAILURE - ${env} - Below order minimum fee should never be 0"


  - name: us.functions.cart.continueToCheckoutOrNewOrder
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.startNewOrderButton
          then:
            - log: 'Clicking on start new order'
            - click:
                identifier: us.mappings.cart.startNewOrderButton
          else:
            - log: 'Clicking on checkout'
            - click:
                identifier: us.mappings.cart.checkoutButton
      - executeFunction:
          name: us.functions.utils.handleMissingAnythingPopUp
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

  - name: us.functions.cart.checkoutWithSlotBooking
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
          then:
            - storeIn:
                key: page
                value: cart
            - executeFunction:
                name: us.functions.selectBookingSlot
            - executeFunction:
                name: us.functions.cart.continueToCheckoutOrNewOrder
          else:
            - storeIn:
                key: page
                value: 'null'
            - executeFunction:
                name: us.functions.cart.continueToCheckoutOrNewOrder
            - executeFunction:
                name: us.functions.selectBookingSlot
            - executeFunction:
                name: us.functions.utils.handleMissingAnythingPopUp
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue
            - executeFunction:
                name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

  - name: us.function.cart.checkout.timeSelection
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: s.mappings.cart.timeSlotSelection
      - click:
          identifier: us.mappings.cart.timeSlotSelection
      
          
  - name: us.functions.cart.verifyLocationSurcharge
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.verfiyItemLocationSurcharge
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verfiyItemLocationSurcharge
            - identifier: us.mappings.cart.verfiyItemLocationSurchargeValue

  - name: us.functions.cart.verifyCustomAmount
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmountValue
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountValue
          text:
            - identifier: us.mappings.cart.estimatedTotalAmountValue
              equals: ${giftCardPrice}

  - name: us.functions.cart.addToExistingOrder
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - sleep:
          duration: 10000
      - scroll:
          direction: up
      - if:
          condition: ${fulfillmentType} == 'Pickup'
          then:
            - log: Switch to PickUp Button Present on the Cart 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.switching.switchtopickupButton
                then:
                  - click:
                      identifier: us.mappings.cart.switching.switchtopickupButton
                      wait: 2000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.addToExistingOrderButton
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:
          identifier: us.mappings.cart.addToExistingOrderButton
          wait: 3000
      - executeFunction:
          name: us.functions.amend.creditCard.InCart
      - verifyIdentifier:
          timeout: 5000
          present:
            - identifier: us.mappings.cart.itemAddedToExistingOrderText
      - if:
          identifier:
            present:
              - identifier: us.mappings.popup.technicalError
          then:
            - click:
                identifier: us.mappings.error.dismissButton
            - click:
                identifier: us.mappings.cart.addToExistingOrderButton
            - sleep:
                duration: 3000
            - verifyIdentifier:
                present:
                - identifier: us.mappings.cart.itemAddedToExistingOrderText


  - name: us.functions.cart.verifyCartCount
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIconWithCount


  - name: us.functions.cart.expressDelivery.verifyCard
    platform: ios
    flow:
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.expressDeliveryBar.confirmText
      # - verifyIdentifier:
      #     label:
      #       - identifier: us.mappings.cart.expressDeliveryBar.confirmText
      #         equals: You've selected Express!
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.scheduledPickup.slotDetails
              contains: in 2 hours or less
            - identifier: us.mappings.cart.expressDeliveryBar.chargesLabel
              contains: delivery fee + $10 Express fee


  - name: us.functions.cart.continueToReviewOrderScreen
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.cart.continueToCheckout
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.closeTrayButton
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reviewOrder.closeTrayButton
          else:
            - executeFunction:
                name: us.functions.reserveSlot.curbsidePickup.bookTodaysSlot
            - click:
                identifier: us.mappings.reviewOrder.closeTrayButton

  - name: us.functions.cart.storeChangePopUp  
    platform: ios
    flow:
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.cart.storePopUp
      #     then:
      #       - click:
      #           identifier: us.mappings.cart.storePopUPCloseButton
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.cart.storePopUp
            - click:
                identifier: us.mappings.cart.storePopUPCloseButton
          catch:
            flow:
              - log: No Store Change pop up screen displayed

  - name: us.functions.cart.removeAdonsNotAvailable
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.cart.clickOnRemoveAndContinueButton
            - click:
                identifier: us.mappings.cart.clickOnRemoveAndContinueButton
          catch:
            flow:
              - log: No remove Adons pop up screen displayed


  - name: us.functions.cart.removeAllCartItemsIfPresent 
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.navBar.cartIconEmpty
          then:
            # Navigate to cart
            - executeFunction:
                name: us.functions.global.navigation.toCartFromNavBar
            # Remove all items from cart
            - executeFunction:
                name: us.functions.cart.removeAllCartItems
            - executeFunction:
                name: us.functions.cart.removeUnavailableItemsFromCart
            # Going back to the Home page
            - executeFunction:
                name: us.functions.global.navigation.backNavigation

  - name: us.functions.cart.removeAllCartItems #updated: 1/12/22  updated 1/17/22
    platform: ios
    flow:
      - storeIn:
          key: optimizeCart
          value: true
      - if:
          condition: ${optimizeCart}
          then:
            - executeFunction:
                name: us.functions.cart.removeAllCartItemsOptimizedVersion
          else:
            - executeFunction:
                name: us.functions.cart.storeChangePopUp       
            - executeFunction:
                name: us.functions.cart.seeDetails
            - executeFunction:
                name: us.functions.cart.walmartAssistantPopup
            - loop:
                begin: 0
                end: 11
                storeIndex: i
                flow:
                  - log: $i
                  - try:
                      flow:
                        - verifyIdentifier:
                            timeout: 0
                            present:
                              - identifier: us.mappings.cart.smartNudgeView
                        - click:
                            identifier: us.mappings.cart.smartNudgeViewClose
                      catch:
                        flow:
                          - log: Smart Budge view not displayed

                  - try:
                      flow:
                        - verifyIdentifier:
                            timeout: 0
                            present:
                              - identifier: us.mappings.cart.removeLinkButton
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.carePlans.wppSectionHeader 
                            then:
                              - scroll:
                                  direction: down
                                  scrollLimit: 1
                        - click:
                            identifier: us.mappings.cart.removeLinkButton
                            wait: 3000
                      catch:
                        flow:
                          - log: No Items in Cart to Remove
                          - break: true

  - name: us.functions.cart.removeAllCartItemsOptimizedVersion 
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.cart.storeChangePopUp
      - executeFunction:
          name: us.functions.cart.removeAdonsNotAvailable
    # Fetch the number of seeDatails button found in cart
      - numberOfChildElements:
          identifier: us.mappings.global.fulfilmentCardPage
          filterBy: us.mappings.cart.fulfillmentSection.expandView
          storeIn: seeDetailsFound
    # Skip function if there are no see details is found in cart
      - if:
          condition: ${seeDetailsFound} >= 1 
          then:
            - executeFunction:
                name: us.functions.cart.seeDetails
    # Fetch the number of remove button present in cart
      - numberOfChildElements:
          identifier: us.mappings.global.fulfilmentCardPage
          filterBy: us.mappings.cart.removeLinkButton
          storeIn: numberOfChildrenFound
      - log: ${numberOfChildrenFound}
      - if:
          condition: ${numberOfChildrenFound} == 0
          then:
            - log: No Items in Cart to Remove
          else:
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 0
                      present:
                        - identifier: us.mappings.carePlans.wppSectionHeader
                  - storeIn:
                      key: scrollDown
                      value: required
                catch:
                  flow:
                    - storeIn:
                        key: scrollDown
                        value: notRequired
            - if:
                condition: ${numberOfChildrenFound} != 1 || ${scrollDown} == 'required'
                then:
    # scrolling down to last remove button at position center to avoid unwanted clicking on ctc button
                  - scroll:
                      direction: down
                      untilIdentifier: (//XCUIElementTypeButton[@name="CartItemTileView.remove"])[${numberOfChildrenFound}]
                      position: center
                      wait: 1000
    # Removing items from cart
            - loop:
                begin: 0
                end: 9
                storeIndex: i
                flow:
                  - log: $i
                  - try:
                      flow:
                        - verifyIdentifier:
                            timeout: 0
                            present:
                              - identifier: us.mappings.cart.removeLinkButton
                        - click:
                            identifier: us.mappings.cart.removeLinkButton
                      catch:
                        flow:
                          - log: No Items in Cart to Remove
                          - break: true

  - name: us.functions.cart.removeAllCartItems
    platform: android
    flow:
      - if: 
          identifier:
            present:
              - identifier: us.mappings.cart.changeStoretext
          then:
            - click:
                identifier: us.mappings.item.ad.buyboxad.item.close
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.startShoppingButton
          then:
            - log: No items in cart
          else:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - loop:
                begin: 0
                end: 11
                storeIndex: i
                flow:
                  - log: $i
                  - sleep:
                      duration: 5000
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.seeDetailsLink
                      then:
                        - log: See details is present
                        - click:
                            identifier: us.mappings.cart.seeDetailsLink
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.startShoppingButton
                      then:
                        - break: true
                      else:
                        - executeFunction:
                            name: us.functions.utils.scrollIfNotVisible
                            params:
                              - name: identifier
                                string: us.mappings.cart.removeLinkButton
                              - name: direction
                                string: down
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.removeLinkButton
                      then:
                        - click:
                            identifier: us.mappings.cart.removeLinkButton
                      else:
                        - log: All items removed from cart
                        - break: true

  - name: us.functions.cart.removeSaveForLaterItems
    platform: android
    flow:
      - loop:
          begin: 0
          end: 5
          storeIndex: i
          flow:
            - log: $i
            - sleep:
                duration: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.saveForLaterRemoveButton               
                then:
                  - click:
                      identifier: us.mappings.cart.saveForLaterRemoveButton 
                else:          
                  - break: true

  - name: us.functions.cart.removeAllUnavailableItems
    platform: ios
    doWhile: true
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mapping.cart.removeUnavailableItemsLink
      - click:
          identifier: us.mapping.cart.removeUnavailableItemsLink
      - sleep:
          duration: 6000

#remove item from cart and navigate back to home
  - name: us.functions.cart.removeUnavailableItemsFromCart
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.alertMsg.oosItem
          then:
            # - click:
            #     identifier: us.mappings.cart.alertMsg.oosItem
            # - verifyIdentifier:
            #     present:
            #       - identifier: us.mappings.cart.removeUnavailableItemsOKButton
            - executeFunction:
                name: us.functions.cart.removeAllUnavailableItems
            - verifyIdentifier:
                timeout: 5000
                notPresent:
                  - identifier: us.mappings.cart.unavailableAlert
            - executeFunction:
                name: us.functions.cart.removeCurrentlyUnavailableItems


  - name: us.functions.cart.removeCurrentlyUnavailableItems
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.alertMsg.currentlyUnavailableItems
          then:
            - click:
                identifier: us.mappings.cart.alertMsg.currentlyUnavailableItems
            - verifyIdentifier:
               present:
                  - identifier: us.mappings.reserveSlot.oos.itemUpdatesTitle
            - executeFunction:
                name: us.functions.cart.removeAllUnavailableItems

  - name: us.functions.cart.removeUnavailableItemsFromCart
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.unavailableAlert
          then:
            - click:
                identifier: us.mappings.cart.unavailableAlert
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.saveForLaterRemoveButton
            - executeFunction:
                name: us.functions.cart.removeAllUnavailableItems    
            - verifyIdentifier:
                timeout: 5000
                notPresent:
                  - identifier: us.mappings.cart.unavailableAlert
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.unavailableAlert.oosheader
          then:
            - click:
                identifier: us.mappings.cart.unavailableAlert.oosheader.saveallforlater
            - sleep:
                duration: 20000
          else:
            - log : "oos is not displayed"
      - executeFunction:
          name: us.functions.cart.removeAllUnavailableItems

  - name: us.functions.cart.removeAllUnavailableItems
    platform: android
    doWhile: true
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.saveForLaterRemoveButton
      - click:
          identifier: us.mappings.cart.saveForLaterRemoveButton
      - sleep:
          duration: 3000   
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.gotItButton
          then:
            - click:
                identifier: us.mappings.cart.gotItButton      
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.unableToRemovePopUp
          then:
            - click:
                identifier: us.mappings.cart.unableToRemovePopUpCloseButton

#remove item from cart and navigate back to home
  - name: us.functions.cart.removeItemFromCart
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.addToCartMinusButton
      - click:
          identifier: us.mappings.item.addToCartMinusButton
      - click:
          identifier: us.mappings.orderConfirmation.closeButton

  - name: us.functions.cart.verifyCartCount
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIconWithCount

  - name: us.functions.cart.verifyLocationSurcharge
    platform: android
    flow:
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.verfiyItemLocationSurcharge
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verfiyItemLocationSurcharge
            - identifier: us.mappings.cart.verfiyItemLocationSurchargeValue

##################### marketplace #################################

  - name: us.functions.cart.marketplace.verifySellerType
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.marketplace.sellerInfo
            - name: direction
              string: down
            - name: scrollPosition
              string: center

      - if:
          condition: ${sellerType} == 'pro-seller'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.marketplace.sellerInfo
          else:
              - if:
                  condition: ${sellerType} == '3p'
                  then:
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.cart.marketplace.sellerInfo
                  else:
                      - if:
                          condition: ${sellerType} == 'pro-seller-wfs'
                          then:
                            - verifyIdentifier:
                                present:
                                  - identifier: us.mappings.cart.marketplace.text.3P_ProSeller_WFS
                                  - identifier: us.mappings.cart.marketplace.sellerInfo
                          else:
                              - if:
                                  condition: ${sellerType} == '3p-wfs'
                                  then:
                                    - verifyIdentifier:
                                        present:
                                          - identifier: us.mappings.cart.marketplace.text.3P_WFS

##################### marketplace #################################

#Navigate Post reserve slot then place order for a Mixed Order: fcDelivery+scheduledPickup
  - name: us.functions.cart.rSlot.PlaceOrder.mixedOrder.fcDelivery.scheduledPickup
    platform: ios
    flow:
      - click:
          identifier: us.mappings.reserveAtime.cta #us.mappings.cart.reserveTime
          wait: 5000
      - executeFunction:
          name: us.functions.home.bookSlotStatus.setAddress.for.deliveryTime
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab.alternate
          wait: 50000
      - click:
          identifier: us.mappings.reserveSlot.secondSlot
      - click:
          identifier: us.mappings.reserveAtime.save.cta
          wait: 10000
      - click:
          identifier: us.mappings.cart.cartFinishButton
          wait: 10000
      - executeFunction:
          name: us.functions.checkout.placeOrder

#Navigate Post reserve slot then place order for a Mixed Order: fcDelivery+scheduledPickup
  - name: us.functions.cart.rSlot.PlaceOrder.mixedOrder.fcDelivery.scheduledPickup
    platform: android
    flow:
      - click:
          identifier: us.mappings.cart.reserveTime #us.mappings.reserveAtime.cta
          wait: 5000
      - executeFunction:
          name: us.functions.reserveslot.setAddress.for.deliveryTime
      - click:
          identifier: us.mappings.orderConfirmation.pickup.cardTitle
          wait: 50000
      - click:
          identifier: us.mappings.reserveSlot.thirdSlot #us.mappings.reserveSlot.secondSlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton #us.mappings.reserveAtime.save.cta
          wait: 10000
      - click:
          identifier: us.mappings.cart.checkoutButton #us.mappings.cart.cartFinishButton
          wait: 10000
      - executeFunction:
          name: us.functions.checkout.placeOrder

#Navigate Post reserve slot then place order for a Mixed Order: fcDelivery+scDelivery
  - name: us.functions.cart.rSlot.PlaceOrder.mixedOrder.fcDelivery.scDelivery
    platform: ios
    flow:
      - click:
          identifier: us.mappings.reserveAtime.cta
          wait: 5000
      - executeFunction:
          name: us.functions.home.bookSlotStatus.setAddress.for.deliveryTime
      - click:
          identifier: us.mappings.reserveSlot.secondSlot
          wait: 10000
      - click:
          identifier: us.mappings.reserveAtime.save.cta
          wait: 10000
      - click:
          identifier: us.mappings.cart.cartFinishButton
          wait: 10000
      - executeFunction:
          name: us.functions.checkout.placeOrder

#Navigate Post reserve slot then place order for a Mixed Order: fcDelivery+scDelivery
  - name: us.functions.cart.rSlot.PlaceOrder.mixedOrder.fcDelivery.scDelivery
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.noSlotBooked.goToReserveSlot
      - executeFunction:
          name: us.functions.reserveslot.setAddress.for.deliveryTime # us.functions.home.bookSlotStatus.setAddress.for.deliveryTime
      - click:
          identifier: us.mappings.reserveSlot.thirdSlot #us.mappings.reserveSlot.secondSlot
          wait: 20000
      - click:
          identifier: us.mappings.reserveSlot.saveButton
          wait: 10000
      - click:
          identifier: us.mappings.cart.checkoutButton
          wait: 10000
      - executeFunction:
          name: us.functions.checkout.placeOrder

#Navigate to Review Order SCreen
  - name: us.functions.cart.continueToReviewOrderScreen
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.continueToCheckout
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.closeTrayButton
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reviewOrder.closeTrayButton
          else:
            - executeFunction:
                name: us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.closeTrayButton
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reviewOrder.closeTrayButton

  - name: us.functions.cart.increaseToMaxQty
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.increaseQty
            - name: direction
              string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.increaseQty
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.cart.increaseQty
            - log: $i

  - name: us.functions.cart.firstItem.addingQtyToMax
    doWhile: true
    flow:
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.firstItem.stepperbutton.qtyLabelText
              notContains: Max
      - click:
          identifier: us.mappings.item.atc.incrementStepper

  - name: us.functions.cart.firstItem.addingQtyTillRequiredNumber
    doWhile: true
    flow:
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.firstItem.stepperbutton.qtyLabelText
              notContains: ${requiredNumberOfQuantityToAdd}
      - click:
          identifier: us.mappings.item.atc.incrementStepper

  - name: us.functions.cart.expressDelivery.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.expressDeliveryBar.confirmText
      - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.scheduledPickup.slotDetails
              contains: Arrives in 75‚Äî90 min #or less
            - identifier: us.mappings.cart.expressDeliveryBar.chargesLabel
              contains: delivery fee + $10.00 express fee
### ACC Tires ###

  - name: us.functions.cart.acc.verifyCard
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.s2s.cardTitle
      - scroll:
          direction: down
      - if:
          condition: ${item} == 's2s-tire'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.acc.s2sItem
          else:
              - if:
                  condition: ${item} == 'put-tire'
                  then:
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.cart.acc.putItem


  - name: us.functions.cart.acc.verifyCard.headers    #Joel Added 9/30/21
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.acc.cart.needTireInstall.header
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.acc.cart.needTireInstall.header
            - identifier: us.mappings.acc.cart.callAcc.header
            - identifier: us.mappings.acc.cart.callAccNumber.header
      - verifyValue:
          identifier: us.mappings.acc.cart.needTireInstall.header
          equals: ${needTireInstalled}
      - verifyValue:
          identifier: us.mappings.acc.cart.callAcc.header
          equals: ${callYourAcc}
      - verifyValue:
          identifier: us.mappings.acc.cart.callAccNumber.header
          equals: ${accNumber}
      - log: All ACC Headers verified on cart!

  - name: us.functions.cart.acc.verifyCard.headers    #Joel Added 10/5/21
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.acc.cart.needTireInstall.header
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.acc.cart.needTireInstall.header
            - identifier: us.mappings.acc.cart.callAcc.header
            # - identifier: us.mappings.acc.cart.callAccNumber.header
      - verifyValue:
          identifier: us.mappings.acc.cart.needTireInstall.header
          equals: ${needTireInstalled}
      - verifyValue:
          identifier: us.mappings.acc.cart.callAcc.header
          equals: ${callYourAcc}
      # - verifyValue:
      #     identifier: us.mappings.acc.cart.callAccNumber.header
      #     equals: ${accNumber}
      - log: All ACC Headers verified on cart!


  - name: us.functions.cart.addAlcoholItemToExistingOrder
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:
          identifier: us.mappings.cart.addToExistingOrderButton
      - executeFunction:
          name: us.functions.cart.verifyAlcoholDisclosureScreen
  - name: us.functions.cart.verifyAlcoholDisclosureScreen
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.alcoholDisclosure.header
            - identifier: us.mappings.cart.alcoholDisclosure.descriptionInCollapsedView
            - identifier: us.mappings.cart.alcoholDisclosure.checkBox

  - name: us.functions.cart.alcoholDisclosure.selectCheckboxandContinue
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.alcoholDisclosure.checkBox
      - click:
          identifier: us.mappings.cart.alcoholDisclosure.checkBox
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.alcoholDisclosure.continueButton
      - click:
          identifier: us.mappings.cart.alcoholDisclosure.continueButton

  - name: us.functions.cart.verifyUnavailableItemsTray
    platform: android
    flow:
      - verifyIdentifier:
          present:
            # - identifier: us.mappings.cart.unavailableItemsTray.header
            - identifier: us.mappings.cart.unavailableItemsTray.description
            - identifier: us.mappings.cart.unavailableItemsTray.unavailableItem
            - identifier: us.mappings.cart.unavailableItemsTray.reserveNewTimeButton

  - name: us.functions.cart.unavailableItemsTray.clickAndReserveNewTime
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.unavailableItemsTray.reserveNewTimeButton
      - click:
          identifier: us.mappings.cart.unavailableItemsTray.reserveNewTimeButton
      - executeFunction:
          name: us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: us.mappings.cart.itemAddedToExistingOrderText

  - name: us.function.cart.switchToDelivery
    platform:  android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.deliveryButton
      - click:
          identifier: us.mappings.cart.deliveryButton
    

  - name: us.functions.cart.verifyCartItems
    platform:  android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailable     
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailable
      - log: "4 items present in cart"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountValue 
      - getString:
          identifier: us.mappings.cart.estimatedTotalAmountValue
          storeIn: Price 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${Price}
          getResponse:
            storeIn: PriceAmount
      - log: "Price is stored in a variable"            
   
  # - name: us.functions.cart.deselectCartItem
  #   platform: android
  #   flow:
  #     - scroll:
  #         direction: up
  #         untilIdentifier: us.mappings.cart.navBarTitle
  #     - if:
  #         identifier:
  #           present:
  #             - identifier: us.mappings.cart.seeDetailsLink
  #         then:
  #           - click:
  #               identifier: us.mappings.cart.seeDetailsLink
  #     - click:
  #         identifier: us.mappings.cart.checkBoxCheck
  #     - getString:
  #         identifier: us.mappings.cart.leftOverCartItem
  #         storeIn: uncheckedItem 
  #     - executeNode:
  #         file: us/e2e-tests/helpers/splitPayment.js
  #         args:
  #           - value: ${uncheckedItem}
  #         getResponse:
  #           storeIn: uncheckedItem
  #     - log: " ${uncheckedItem} is unchecked" 

          
  # - name: us.functions.cart.verifyCartItemsAfter
  #   platform: android
  #   flow:
  #     - verifyIdentifier:
  #         present:
  #           - identifier: us.mappings.cart.itemsAvailableAfter
  #     - scroll:
  #         direction: down
  #         scrollLimit: 1
  #     - verifyIdentifier:
  #         present:
  #           - identifier: us.mappings.cart.itemsAvailableSubtotalAfter
  #     - log: "3 items is present in cart"
  #     - scroll:
  #         direction: down
  #         untilIdentifier: us.mappings.cart.estimatedTotalAmount
  #     - verifyIdentifier:
  #         present:
  #           - identifier: us.mappings.cart.estimatedTotalAmountValue 
  #     - getString:
  #         identifier: us.mappings.cart.estimatedTotalAmountValue
  #         storeIn: ChangedPrice 
  #     - executeNode:
  #         file: us/e2e-tests/helpers/splitPayment.js
  #         args:
  #           - value: ${ChangedPrice}
  #         getResponse:
  #           storeIn: ChangedPriceAmount
  #     - log: "Price is stored in a variable" 
  #     - if:
  #         condition: ${Price} == ${ChangedPrice}
  #         then:
  #           - failTest:
  #               message: "Prices are same: ${Price} - ${ChangedPrice}"
  #         else:
  #           - log:
  #               message: Prices are different !
  #               color: CYAN           
                

  - name: us.functions.cart.leftOverCartItems
    platform: android
    flow:
      - getString:
          identifier: us.mappings.cart.leftOverCartItem
          storeIn: uncheckedItemCrossCheck 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${uncheckedItemCrossCheck}
          getResponse:
            storeIn: uncheckedItemCrossCheck
      - if:
          condition: ${uncheckedItem} == ${uncheckedItemCrossCheck}
          then:
            - log:
                message: " Items are same as expected ! "
                color: CYAN            
          else:
            - failTest:
                message: "Items are different"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsLeft
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsLeft            

  - name: us.functions.cart.verifyItemsInCart
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.itemsAvailableInCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailableInCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailableInCheckOutBar
      - log: "4 items present in cart"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmountInCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountInCart
      - getString:
          identifier: us.mappings.cart.estimatedTotalAmountInCart
          storeIn: Price 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${Price}
          getResponse:
            storeIn: PriceAmount
      - log: "Price is stored in a variable"   

  - name: us.functions.cart.deselectItemInCart
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.itemsAvailableInCart
      - scroll:
          direction: down
          scrollLimit: 1
          untilIdentifier: us.mappings.cart.checkBox
      - click:
          identifier: us.mappings.cart.checkBox
      - getString:
          identifier: us.mappings.cart.leftOverCartItems
          storeIn: uncheckedItem 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${uncheckedItem}
          getResponse:
            storeIn: uncheckedItem
      - log: " ${uncheckedItem} item is unchecked" 

  # Verifying the cart items and price 

  - name: us.functions.cart.verifyItemsAfter
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailableInCartAfter
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailableInCheckOutBarAfter
      - log: "3 item present in cart"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmountInCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountInCart
      - getString:
          identifier: us.mappings.cart.estimatedTotalAmountInCart
          storeIn: ChangedPrice 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ChangedPrice}
          getResponse:
            storeIn: ChangedPriceAmount
      - log: "Price is stored in a variable"
      - if:
          condition: ${Price} == ${ChangedPrice}
          then:
            - failTest:
                message: "Prices are same: ${Price} - ${ChangedPrice}"
          else:
            - log:
                message: Prices are different as Expected !
                color: CYAN  

  - name: us.function.cart.checkout.timeSlotAndDeliveryFromStore
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.editSlot.bookSlotTitle
      - click:
          identifier: us.mappings.editSlot.deliveryTab
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.title
          then:
            - click:
                identifier: us.mappings.cart.addDeliveryAddressButton
                wait: 3000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.selectAddress.selectAddressTitle
            - click:
               identifier: us.mappings.cart.addAddress.radioButton
            - log : "Address Selected"
            - click:
                identifier: us.mappings.popularServices.pharmacy.prescriptions.continue
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.secondSlot
      - click:
          identifier: us.mappings.reserveSlot.secondSlot
      - log : "Selected time slot"
      - click:
          identifier: us.mappings.checkin.selectAnOrder.continueButton
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: us.functions.cart.handleItemUpdatesBottomTray
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
                 
  - name: us.functions.cart.leftOverItemsInCart
    platform: ios
    flow:
      - getString:
          identifier: us.mappings.cart.leftOverItemInCart
          storeIn: uncheckedItemCrossCheck 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${uncheckedItemCrossCheck}
          getResponse:
            storeIn: uncheckedItemCrossCheck
      - log: " ${uncheckedItemCrossCheck} This item is present in Cart" 
      - if:
          condition: ${uncheckedItem} == ${uncheckedItemCrossCheck}
          then:
            - log:
                message: "${uncheckedItemCrossCheck} is expected to be here and it is Present ! "
                color: CYAN            
          else:
            - failTest:
                message: "Item is different"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsLeftInCartBar
            # - identifier: us.mappings.cart.itemLeftInCart


  - name: us.functions.cart.leftOverCartItems
    platform: android
    flow:
      - getString:
          identifier: us.mappings.cart.leftOverCartItem
          storeIn: uncheckedItemCrossCheck 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${uncheckedItemCrossCheck}
          getResponse:
            storeIn: uncheckedItemCrossCheck
      - if:
          condition: ${uncheckedItem} == ${uncheckedItemCrossCheck}
          then:
            - log:
                message: " Items are same as expected ! "
                color: CYAN            
          else:
            - failTest:
                message: "Items are different"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsLeft
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsLeft   


  - name: us.functions.cart.handleEmptyCartScreen
    platform: android
    flow:
      - sleep:
          duration: 6000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.emptyCart
          then:
            - click:
                identifier: us.mappings.cart.startShoppingButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.navBar.cartIcon.hasItems
                then:
                  - click:
                      identifier: us.mappings.navBar.cartIcon
                else:
                  - executeFunction:
                      name: us.functions.global.navigation.goToDeepLink
                      params:
                        - name: deepLinkUrl
                          string: ${searchTermDeeplink}
                  - executeFunction:
                      name: us.functions.item.addItemToCart

                  - executeFunction:
                      name: us.functions.global.navigation.toCartFromNavBar
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.emptyCartText
                      then:
                          - click:
                              identifier: us.mappings.cart.startShoppingButton
                          - if:
                              identifier:
                                present:
                                  - identifier:  us.mappings.navBar.cartIcon.hasItems
                              then:
                                  - click:
                                      identifier: us.mappings.navBar.cartIcon
                              else:
                                  - log: Cart is empty on 2nd attempt again
          else:
            - log: handleEmptyCartScreen - Cart is not empty
  ## verify no partial checkout in Cart
  - name: us.functions.cart.partialCheckout.verifyNoPartialCheckoutButton
    platform: android
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
            - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
            - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton

  ## verify picku or delivery from store header and partial checkout button in cart screen
  - name: us.functions.cart.partialCheckout.verifyStoreCheckout
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
      - click:
          identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
      - sleep:
          duration: 6000
      - if:
          identifier:
            present:
              - identifier:  us.mappings.cart.partialCheckout.storeCheckoutbutton
          then:
              - click:
                  identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton

## verify shiping header and partial checkout button in cart screen
  - name: us.functions.cart.partialCheckout.verifyShippingCheckout
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.fcDelivery.title
          then:
            - executeFunction:
                name:  us.functions.cart.scrollToSection
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.fcDelivery.title
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
      - verifyIdentifier:
            present:
              - identifier: us.mappings.cart.fcDelivery.title
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
          then:
            - executeFunction:
                name:  us.functions.cart.scrollToTopOfCart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.partialCheckout.shippingCheckoutbutton
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

## verify digital delivery header and partial checkout button in cart screen
  - name: us.functions.cart.partialCheckout.verifyDigitalDeliveryCheckout
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.digitalDeliveryText
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.digitalDeliveryText
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.digitalDeliveryText
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.digitalDeliveryText
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton

  - name: us.functions.cart.partialCheckout.verifyNoPartialCheckoutButton
    platform: ios
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
            - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
            - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton

  ## verify picku or delivery from store header and partial checkout button in cart screen
  - name: us.functions.cart.partialCheckout.verifyStoreCheckout
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.fulfillmentSection.expandView
          then:
            - scroll:
               direction: down
               untilIdentifier: us.mappings.cart.fulfillmentSection.expandView
               position: center               
            - click:
               identifier: us.mappings.cart.fulfillmentSection.expandView
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.storeCheckoutbutton

  - name: us.functions.cart.partialCheckout.verifyShippingCheckout
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.getFulfillmentTextsToCompare
          params:
          - name: fulfillmentText
            string: Shipping
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTypeText
      # Simple scroll to top of cart for optimisation
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
            - name: direction
              string: up
            - name: limit
              string: 8
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentSection.itemPartialCheckoutButton
            - name: direction
              string: down
      - click:
          identifier: us.mappings.cart.fulfillmentSection.itemPartialCheckoutButton
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.fcDelivery.cardTitle
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
      #     else:
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton
      #       - click:
      #           identifier: us.mappings.cart.partialCheckout.shippingCheckoutbutton

  - name: us.functions.cart.partialCheckout.verifyDigitalDeliveryCheckout
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.digitalDeliveryText
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.partialCheckout.digitalDeliveryCheckoutbutton

  # After cart page navigation, confirm fulfillment type for the items selected and switch it necessary.
  # Function will switch the fulfillment type if it is not matching with the sent parameter
  # [mandatory] ${fulfillmentType} - 'pickup / shipping' (Expected fulfillment type for the item)
  - name: us.functions.cart.switchBetweenPickUpAndShipping
    platform: ios
    flow:
      - log: ----------Start of function to switch fulfillment type to ${fulfillmentType}----------
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switching.section
          then:
            - executeFunction:
                name: us.functions.utils.getFulfillmentTextsForIntentSelection
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.switching.optionLink
                  - log: Switch item to ${fulfillmentType} option
                  - click:
                      identifier: us.mappings.cart.switching.optionLink
                  - executeFunction:
                      name: us.functions.cart.scrollToTopOfCart
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.switching.optionLink
                      then:
                        - click:
                            identifier: us.mappings.global.navigation.backNavigation
                        - executeFunction:
                            name: us.functions.global.navigation.toCartFromNavBar
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.cart.switching.optionLink
                  - log: Switch item to ${fulfillmentType} option completed
                catch:
                  flow:
                    - log: Item fulfillment type is either already in ${fulfillmentType} or no option to switch to ${fulfillmentType} hence skipping
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.fulfillmentSelection.basketView
                then:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.fulfillmentSelection.newBasketView
                      then:
                        - storeIn:
                            key: newGIC
                            value: true
                        - if:
                            condition: ${fulfillmentType} == 'shipping'
                            then:
                              - storeIn:
                                  key: skipSwitch
                                  value: true
                  - if:
                      condition: ${skipSwitch}
                      then:
                        - log: Skipping this for Shipping
                      else:
                        - executeFunction:
                            name: us.functions.utils.getFulfillmentTextsForIntentSelection
                        - if:
                            identifier:
                              notPresent:
                                - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentSection
                            then:
                              - click:
                                  identifier: us.mappings.cart.fulfillmentSelection.basketView
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentType
                            then:
                              - click:
                                  identifier: us.mappings.cart.fulfillmentSelection.basketView.fulfillmentType
                              - verifyIdentifier:
                                  present:
                                      - identifier: us.mappings.cart.fulfillmentSelection.fulfillmentTypeSelected
                            else:
                              - log: Required fulfillment type is either already selected or is disabled or not applicable for all the items selected
      - log: ----------End of function to switch fulfillment type to ${fulfillmentType}----------

  - name: us.functions.cart.switchBetweenPickUpAndShipping.clickOnDelivery
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switching.toDeliveryMethod
          then:
            - click:
                identifier: us.mappings.cart.switching.toDeliveryMethod

  - name: us.functions.cart.oos.moveItemToSfl
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.unavailableItem.titleText
          then:
            - log: "Item is Unavailable"
            - click:
                identifier: us.mappings.resreveSlot.alcoholRestrictedUnavailableTraySaveallforlaterAndContinueButton
          else:
            - log: "Item is Available"

  - name: us.functions.cart.validateShippingaAddress
    platform: ios
    flow:
      - scroll:
          direction: up
      - click:
          identifier: us.mappings.cart.registryAddress
      - getString:
          identifier: us.mappings.cart.address.deliveryAddress
          attribute: label
          storeIn: ShipAddress   
      - executeNode:
          file: us/e2e-tests/helpers/splitVariantString.js
          args:
            - value: ${ShipAddress}
            - value: ','
          getResponse:
            storeIn: cartAdress
      - log: $cartAdress  
      - verifyIdentifier:
          label:
            - identifier: ${registryAddress}
              contains: ${cartAdress}        
      - click:
          identifier: us.mappings.global.closeButton     
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifyRegistryType

 ######################### Gifting ###################################

  - name: us.functions.cart.sendOrderAsAGift
    platform: android
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gifting.cart.giftbadge
      - scroll:
          direction: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.gifting.cart.sendOrderAsGiftLink
          then:
            - click:
                identifier: us.mappings.gifting.cart.sendOrderAsGiftLink
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.gifting.cart.thisOrdereIsAGiftText
                then:
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.gifting.cart.Undo
                    - click:
                        identifier: us.mappings.gifting.cart.Undo
                    - sleep:
                        duration: 2000
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.gifting.cart.sendOrderAsGiftLink
                    - click:
                        identifier: us.mappings.gifting.cart.sendOrderAsGiftLink
                else:
                    - try:
                        flow:
                          - verifyIdentifier:
                              checked:
                                - identifier: us.mappings.gifting.cart.sendOrderAsGiftButton
                                  value: true
                          - log: Checkbox alreadyt selected
                        catch:
                          flow:
                            - executeFunction:
                                name: us.functions.utils.scrollIfNotVisible
                                params:
                                  - name: identifier
                                    string: us.mappings.gifting.cart.sendOrderAsGiftButton
                                  - name: direction
                                    string: down
                            - sleep:
                                duration: 2000
                            - click:
                                identifier: us.mappings.gifting.cart.sendOrderAsGiftButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gifting.cart.thisOrdereIsAGiftText

  # Verify the VP items added to the cart
  - name: us.functions.cart.verifyVPItemsInCart
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.findMultiPackCartItem
      - sleep:
          duration: 1500
      - verifyIdentifier:
          present:
            #- identifier: us.mappings.cart.findSinglePackCartItem
            - identifier: us.mappings.cart.findMultiPackCartItem

  - name: us.functions.cart.sendOrderAsAGift
    platform: ios
    flow:
      - sleep:
          duration: 7000
      # - verifyIdentifier:  No unique identifier
      #     present:
      #       - identifier: mappings.gifting.cart.giftbadge
      - try:
          flow:
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.gifting.cart.sendOrderAsGiftButton
                    equals: 1
            - log : checkbox already selected
          catch:
            flow:
              - click:
                  identifier: us.mappings.gifting.cart.sendOrderAsGiftButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gifting.cart.thisOrdereIsAGiftText

######################### OOS ###################################

  - name: us.functions.cart.verifyAndHandleOOSAlert
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.oosAlertViewResultsButton
      - click:
          identifier: us.mappings.cart.oosAlertViewResultsButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.oos.itemUpdatesTitle
            - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
      - click:
          identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          wait: 3000
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.oosAlertViewResultsButton

      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - click:
                identifier: us.mappings.reserveSlot.thirdSlot
                wait: 3000
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.saveButton
      - sleep:
          duration: 10000

  - name: us.functions.cart.verifyAndHandleOOSAlert
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.oosAlertViewResultsButton
      - click:
          identifier: us.mappings.cart.oosAlertViewResultsButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.oos.itemUpdatesTitle
            - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
      - click:
          identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          wait: 8000

  - name: us.functions.cart.missingAnything.clickContinueButton
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.continueButton
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.continueButton

  - name: us.functions.cart.missingAnything.verifycard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.missingAnything.headerText
            - identifier: us.mappings.cart.missingAnything.closeButton
            - identifier: us.mappings.cart.missingAnything.estimatedTotalText
            - identifier: us.mappings.cart.missingAnything.estimatedPrice
            - identifier: us.mappings.cart.missingAnything.ContinueButton
            - identifier: us.mappings.myItems.atcButton
            - identifier: us.mappings.myItems.firstItem
      - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.missingAnything.headerText
              contains: Missing anything?
            - identifier: us.mappings.cart.missingAnything.estimatedTotalText
              contains: Estimated total
            - identifier: us.mappings.cart.missingAnything.ContinueButton
              contains: Continue
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.productTile.sponseredLabel
          then:
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.search.productTile.sponseredLabel
                    contains: Sponsored
      - click:
          identifier: us.mappings.myItems.atcButton
      - click:
          identifier: us.mappings.cart.missingAnything.ContinueButton

  - name: us.functions.cart.missingAnything.verifycard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.missingAnything.headerText
      - verifyIdentifier:
          timeout: 700000
          present:
            - identifier: us.mappings.cart.missingAnything.closeButton
            # - identifier: us.mappings.cart.missingAnything.estimatedTotalText
            - identifier: us.mappings.cart.missingAnything.estimatedPrice
            - identifier: us.mappings.cart.missingAnything.ContinueButton
            - identifier: us.mappings.cart.missingAnything.atcButton
      - verifyIdentifier:
          timeout: 700000
          present:
            - identifier: us.mappings.cart.missingAnything.firstItem
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.missingAnything.headerText
              contains: Missing anything?
            # - identifier: us.mappings.cart.missingAnything.estimatedTotalText
            #   contains: Estimated total
            - identifier: us.mappings.cart.missingAnything.ContinueButton
              contains: Continue
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.sponseredLabel
          then:
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.cart.missingAnything.sponseredLabel
                    contains: Sponsored
      - click:
          identifier: us.mappings.cart.missingAnything.atcButton
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.cart.missingAnything.ContinueButton
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: us.functions.checkout.reviewOrder.verifyCardDetails
          params:
            - name: fulfillmentText
              string: Pickup
      - verifyIdentifier:
          label:
            - identifier: us.mappings.reviewOrder.itemCount
              contains: 4
      - log: Item added from missing anything present in review order page
      - click:
          identifier: us.mappings.global.navigateBackArrow
      - executeFunction:
          name: us.functions.checkout.handleCheckoutAlert
      - scroll:
          direction: down
          untilIdentifier: us.mappings.reviewOrder.subtotalPricelabel
      - verifyIdentifier:
          label:
            - identifier: us.mappings.reviewOrder.subtotalPricelabel
              contains: 4
      - log: Item added from missing anything present in cart page
      - click:
          identifier: us.mappings.cart.checkoutButton
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.missingAnything.headerText
      - log: Missing Anything screen is visible

  - name: us.functions.cart.missingAnything.clickContinueButton
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.missingAnythingTitle
            - click:
                identifier: us.mappings.cart.missingAnything.continueButton.proceed
          catch:
            flow:
              - log: Missing anything section not displayed.

  - name: us.functions.cart.oosCheckout
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reserveTime
          then:
            - click:
                wait: 2000
                identifier: us.mappings.cart.reserveTime
            - executeFunction:
                name: us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
            - executeFunction:
                name: us.functions.cart.continueToCheckout
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fcDelivery.cardTitle
            - executeFunction:
                name: us.functions.cart.continueToCheckout
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.title
                then:                
                  - executeFunction:
                      name:  us.functions.deliveryAddress.addAddress
                      params:
                        - name: firstName
                          string: test
                        - name: lastName
                          string: user
                        - name: streetAddress
                          string: 1694 Adraian way
                        - name: city
                          string: San Jose
                        - name: state
                          string: CA
                        - name: zipcode
                          string: 95122
                        - name: phoneNumber
                          string: 4087575858

  - name: us.functions.cart.oosCheckout
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
          then:
            - executeFunction:
                name: us.functions.selectBookingSlot
                params:
                  - name: tab
                    string: pickup
                  - name: page
                    string: cart  
            - executeFunction:
                name: us.functions.cart.continueToCheckout
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fcDelivery.cardTitle
            - executeFunction:
                name: us.functions.cart.continueToCheckout

  - name: us.functions.cart.switching.clickSwitchtoPickupButton
    platform: android
    flow:
      - scroll:
          direction: up
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switching.switchtopickupButton
          then:
            - click:
                identifier: us.mappings.cart.switching.switchtopickupButton
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle

  - name: us.functions.cart.addItemByTappingOnAddButton
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.search.firstItem 
      - click:
          identifier: us.mappings.item.addToCartButton
      - sleep:
          duration: 2000
      - executeFunction:
         name: us.functions.item.postAddToCartSteps

  - name: us.functions.cart.addItemByTappingOnAddButton
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.atc.incrementStepper
      - click:
          identifier: us.mappings.item.atc.incrementStepper

  - name: us.functions.cart.editAddress
    platform: android
    flow:
      - click:
          identifier: us.mappings.cart.fcDelivery.addressLink
      - click:
          identifier: us.mappings.cart.fcDelivery.editAddressLink
      - if:
            identifier:
              present:
                - identifier: us.mappings.checkin.locationAccessPopup
            then:
              - click:
                  identifier: us.mappings.global.closeButton
      - executeFunction:
          name: us.functions.deliveryAddress.editAddress
          params:
            - name: firstName
              string: us.data.flow0122.firstName
            - name: lastName
              string: us.data.flow0122.lastName
            - name: streetAddress
              string: us.data.deliveryaddress.streetAddress
            - name: phoneNumber
              string: us.data.deliveryaddress.phoneNumber
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle

  - name: us.functions.deliveryAddress.editAddress
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.editbutton
          then:
            - click:
                identifier: us.mappings.selectAddress.editbutton
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.shareYourLocation.title
          then:
            - click:
                identifier: us.mappings.selectAddress.shareYourLocation.cancelButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.edit.title
      - enterText:
          identifier: us.mappings.deliveryAddress.edit.firstName
          string: ${firstName}
          clearField: true
      - click:
          identifier: us.mappings.deliveryAddress.edit.lastName
      - enterText:
          identifier: us.mappings.deliveryAddress.edit.lastName
          string: ${lastName}
          clearField: true
      - goBack: true
      - click:
          identifier: us.mappings.deliveryAddress.edit.streetAddress
      # Accept share precise location pop up if displayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
      # Accept location permission pop up if displayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.allowLocationPermission
      - click:
          identifier: us.mappings.deliveryAddress.edit.streetAddress
      - enterText:
          identifier: us.mappings.deliveryAddress.edit.streetAddress
          string: ${streetAddress}
          clearField: true
      - goBack: true
      - click:
          identifier: us.mappings.deliveryAddress.edit.phoneNumber
      - enterText:
          identifier: us.mappings.deliveryAddress.edit.phoneNumber
          string: ${phoneNumber}
          clearField: true
      - goBack: true
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.continueButton
          then:
            - click:
                identifier: us.mappings.deliveryAddress.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectaddress.continue
          then:
            - click:
                identifier: us.mappings.selectaddress.continue
      - sleep:
          duration: 7000

  - name: us.functions.cart.editAddress
    platform: ios
    flow:
      - click:
          identifier: us.mappings.cart.fcDelivery.addressLink
          wait: 4000
      - click:
          identifier: us.mappings.cart.fcDelivery.editAddressLink
      - executeFunction:
          name: us.functions.deliveryAddress.editAddress
          params:
            - name: firstName
              string: us.data.flow0122.firstName
            - name: lastName
              string: us.data.flow0122.lastName
            - name: streetAddress
              string: us.data.deliveryaddress.streetAddress
            - name: phoneNumber
              string: us.data.deliveryaddress.phoneNumber
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle

  - name: us.functions.deliveryAddress.editAddress
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.edit.title
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
          clearField: true
      - click:
          identifier: us.mappings.deliveryAddress.add.lastName
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
          clearField: true
      - click:
          identifier: us.mappings.deliveryAddress.add.streetAddress
      - click:
          identifier: us.mappings.deliveryAddress.clearStreetAddress  
          wait: 2000
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
          clearField: true
      # Handling Address suggestion if displayed
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
      - click:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - click:
          identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.wrs.saveButton
          then:
            - click:
                identifier: us.mappings.wrs.saveButton

      - sleep:
          duration: 7000

  - name: us.functions.cart.validateShippingaAddress
    platform: android
    flow:
      - scroll:
          direction: up
      - click:
          identifier: us.mappings.cart.registryAddress
      - getString:
          identifier: us.mappings.buyNow.deliverToAddress
          attribute: text
          storeIn: ShipAddress   
      - executeNode:
          file: us/e2e-tests/helpers/splitVariantString.js
          args:
            - value: ${ShipAddress}
            - value: ','
          getResponse:
            storeIn: cartAdress
      - log: $cartAdress  
      - verifyIdentifier:
          text:
            - identifier: ${registryAddress}
              contains: ${cartAdress}   
      - click:
          identifier: us.mappings.reserveSlot.addAddress.closeButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifyregistrytype
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.cart.Undolink
      #       - name: direction
      #         string: down
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.Undolink


  - name: us.functions.cart.validateInstallationAtAutocareCenter
    platform: android
    flow:
       - scroll:
           direction: up
       - sleep:
          duration: 5000
       - verifyIdentifier:
           present:
             - identifier: us.mappings.cart.verifyInstallationAtAutocareCenterText
            #  - identifier: us.mappings.cart.verifyGetExpertInstallationBox
             - identifier: us.mappings.cart.verifyInstallationAtAutocareCenterTextScheduleButton
      #  - sleep:
      #     duration: 3000
      #  - click:
      #      identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
       - sleep:
          duration: 3000
       - verifyIdentifier:
           present:
             - identifier: us.mappings.cart.tireInstallationCheckBoxSelected
            #  - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
            #  - identifier: us.mappings.cart.idontNeedInstallationRadioButtonNotSelected

  - name: us.functions.cart.validateInstallationNotAvailableAtAutocare
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIcon
      - click:
          identifier: us.mappings.navBar.cartIcon
      - sleep:
         duration: 7000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.cartConsentShipForFreeCta
          then:
            - click:
                identifier: us.mappings.cart.cartConsentShipForFreeCta
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.verifyInstallationUnavailableText
          then:
            - click:
                identifier: us.mappings.cart.clickOnRemoveAndContinueButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.verifyInstallationUnavailableText
      - sleep:
         duration: 5000

  - name: us.functions.cart.validateInstallationAtAutocareCenter
    platform: ios
    flow:
      - verifyIdentifier:
           present:
             - identifier: us.mappings.cart.verifyInstallationAtAutocareCenterText
             - identifier: us.mappings.cart.verifyInstallationAtAutocareCenterTextScheduleButton
             - identifier: us.mappings.cart.verifyGetExpertInstallationBox
      - click:
           identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton
      - verifyIdentifier:
           present:
             - identifier: us.mappings.cart.tireInstallationRadioButtonSelected
             - identifier: us.mappings.cart.idontNeedInstallationRadioButtonNotSelected
      - click:
           identifier: us.mappings.cart.verifyGetExpertInstallationExpandButton

  - name: us.functions.cart.skipInstallationAtAutocareCenter
    platform: ios
    flow:
      - if:
          condition: ${checkboxPresent} == false
          then:
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 10000
                      value:
                        - identifier: us.mappings.cart.tireInstallationCheckBox
                          equals: 1
                  - log: "Unselecting installation checkbox"
                  - click:
                      identifier: us.mappings.cart.tireInstallationCheckBox
                catch:
                  flow:
                    - log: "checkbox not selected installation already skipped"

  - name: us.functions.cart.skipInstallationAtAutocareCenter
    platform: android
    flow:
      - if:
          condition: ${checkboxPresent} == false
          then:
            - try:
                flow:
                  - verifyIdentifier:
                      checked:
                        - identifier: us.mappings.cart.tireInstallationCheckBox
                          value: true
                  - log: "Unselecting installation checkbox"
                  - click:
                      identifier: us.mappings.cart.tireInstallationCheckBox
                catch:
                  flow:
                    - log: "checkbox not selected installation already skipped"

  - name: us.functions.cart.validateInstallationUnavailablePopup
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.pickupnotAvailable.ShipforFreeButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.pickupnotAvailable.ShipforFreeButton
            - click:
                identifier: us.mappings.cart.pickupnotAvailable.ShipforFreeButton
            - sleep:
                duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.InstallationUnavailableText
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.InstallationUnavailableText
                  - identifier: us.mappings.cart.InstallationUnavailableRemoveAndContinue
            - click:
                identifier: us.mappings.cart.InstallationUnavailableRemoveAndContinue

  - name: us.functions.cart.seeDetails
    platform: android
    flow:
      - loop:
          begin: 1
          end: 5
          storeIndex: i
          flow:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.seeDetailsLink
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
                  - name: scrollLimit
                    string: 6
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.seeDetailsLink
                then:
                  - click:
                      identifier: us.mappings.cart.seeDetailsLink
                else:
                  - break: true
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart

  #Verify Alcohol restriction on Sunday/Saturday and save the slot
  - name: us.functions.cart.reservetime.AlcoholrestrictionOnSundayOrSaturday
    platform: ios
    flow:
      # - executeFunction:
      #     name: us.functions.loadBookingSlotScreen
      #     params:
      #       - name: page
      #         string: cart
      #       - name: tab
      #         string: pickup
      #       # - name: addAddress
      #       #   string: true
      #       # - name: addExistingAddress
      #       #   string: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.locallyRestrictedBanner
            - click:
                identifier: us.mappings.cart.itemUpdateClose
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.particularDay
          then:
            - click:
                identifier: us.mappings.cart.reservetime.particularDay
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.daySelectionView
            - scroll:
                direction: left
                untilIdentifier: us.mappings.cart.reservetime.particularDay
                withinIdentifier: us.mappings.reserveSlot.daySelectionView
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay
                else:
                  - failTest:
                      message: "FAILURE - ${env} - Slot is not available"
    # Will no longer filter and show the banner as part of lawn and garden changes that were deployed

      # - try:
      #     flow:
      #       - verifyIdentifier:
      #           present:
      #             - identifier:  us.mappings.resreveSlot.alcoholRestrictedSlotalert
      #     catch:
      #       flow:
      #         - failTest:
      #             message: "ENV_FAILURE - ${env} - Alcohol restricted alert banner is not displayed in bookslot screen"
      # - click:
      #     wait: 2000
      #     identifier:  us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup
          then:
            - click:
                identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - click:
          identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton
      - if:
          identifier:
            timeout: 60000
            present:
              - identifier: us.mappings.cart.locallyRestrictedBanner
          then:
            - click:
                identifier: us.mappings.myItems.findItemCancel
          else:
            - failTest:
                message: "FAILURE - ${env} -  CEPG-261761 Able to reserve alcohol Restricted slot with alcohol item"
      - log: Alcohol Restrictions on Sat-Sun Validated

  #Verify Alcohol restriction on Sunday and save the slot
  - name: us.functions.cart.reservetime.AlcoholrestrictionOnSunday
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.loadBookingSlotScreenBasics
          params:
            - name: page
              string: cart
            - name: tab
              string: delivery
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.particularDay
          then:
            - click:
                identifier: us.mappings.cart.reservetime.particularDay
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.daySelectionView
            - scroll:
                direction: left
                untilIdentifier: us.mappings.cart.reservetime.particularDay
                withinIdentifier: us.mappings.reserveSlot.daySelectionView
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay
                else:
                  - failTest:
                      message: "FAILURE - ${env} - Slot is not available"

      # - sleep:
      #     duration: 5000
      # - verifyIdentifier:
      #     present:
      #       - identifier:  us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup
      # - click:
      #     wait: 2000
      #     identifier:  us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup

     # - click:
      #    wait: 2000
       #   identifier: us.mappings.reserveSlot.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
          then:
            - click:
                identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - click:
          identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot

  - name: us.functions.cart.itemWithWeight.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
           present:
             - identifier: us.mappings.item.secondaryPriceTextbyWeight
  
  # Verify Alcohol restriction on both Saturday and Sunday and save Alcohol restricted slot
  - name: us.functions.cart.reservetime.AlcoholrestrictionOnSundayOrSaturday
    platform: android
    flow:
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
          params:
            - name: page
              string: cart
            - name: tab
              string: pickup
            # - name: addAddress
            #   string: true
            # - name: addExistingAddress
            #   string: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.locallyRestrictedBanner
            - sleep:
                duration: 5000
            - click:
                identifier: us.mapings.itemDetails.closeButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.particularDay
          then:
            - click:
                identifier: us.mappings.cart.reservetime.particularDay
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.daySelectionView
            - scroll:
                direction: left
                untilIdentifier: us.mappings.cart.reservetime.particularDay
                withinIdentifier: us.mappings.reserveSlot.daySelectionView
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay
                else:
                  - failTest:
                      message: "FAILURE - ${env} - Slot is not available"
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.noSubsMessage
      - click:
          wait: 2000
          identifier: us.mappings.reviewOrder.noSubsMessage
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
              - click:
                  wait: 2000
                  identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          else:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
            - click:
                wait: 2000
                identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveSlot.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.locallyRestrictedBanner
            - sleep:
                duration: 5000
            - click:
                identifier: us.mapings.itemDetails.closeButton
      - sleep:
          duration: 5000

  - name: us.functions.cart.oos.shopsimilar
    platform: android
    flow:
      # - scroll:
      #     direction: down
      #     untilIdentifier: us.mappings.cart.shopsimilar
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.shopsimilar
      - click:
          identifier: us.mappings.cart.shopsimilar
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.ReplaceCTA
            - name: direction
              string: down
      - click:
          identifier: us.mappings.cart.ReplaceCTA
      - sleep:
          duration: 2000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.viewReplacement
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.viewReplacement
      - click:
          identifier: us.mappings.cart.viewReplacement


  - name: us.functions.cart.oos.shopsimilarcart
    platform: ios
    flow:
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.shopsimilar
      - click:
          identifier: us.mappings.cart.shopsimilar
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.shopsimilarError
          then:
            - failTest:
                message: "DATA_FAILURE - ${env} - Not able to find any shop similar items" 
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.ReplaceCTA
      - click:
          identifier: us.mappings.cart.ReplaceCTA
      - sleep:
          duration: 5000
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.viewReplacement
      - click:
          identifier: us.mappings.cart.viewReplacement

  - name: us.functions.cart.registy.gift.validation
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.registryAddress
            - name: direction
              string: down    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.registryAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ItemFromRegistry
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gifting.cart.sendOrderAsGiftButton

  - name: us.functions.cart.registy.gift.validation
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.registryAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.registryAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ItemFromRegistry
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.gifting.cart.sendOrderAsGiftButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gifting.cart.sendOrderAsGiftButton     

  - name: us.functions.cart.shopSimilarSplitCart
    platform: ios
    flow:
      - if:
          condition: ${shopsimilar} == 'pickup'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.shopSimilarForPickup
                then:
                  - failTest:
                      message: "FAILURE - ${env} - Shop similar for pickup is not displayed"
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.shopSimilarForPickup
                  - click:
                      identifier: us.mappings.cart.shopSimilarForPickup
                  - sleep:
                      duration: 3000
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.ReplaceCTA
                  - click:
                      identifier: us.mappings.cart.ReplaceCTA
                  - sleep:
                      duration: 3000
                  - scroll:
                      direction: up
                      untilIdentifier: us.mappings.cart.replacementAddedLabel
                  - click:
                      identifier: us.mappings.cart.replacementAddedLabel
                  - log: Item is replaced
                  - sleep:
                      duration: 5000
      - if:
          condition: ${shopsimilar} == 'delivery'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.shopSimilarForDelivery
                then:
                  - failTest:
                      message: "FAILURE - ${env} - Shop similar for delivery is not displayed"
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.shopSimilarForDelivery
                  - click:
                      identifier: us.mappings.cart.shopSimilarForDelivery
                  - sleep:
                      duration: 3000
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.ReplaceCTA
                  - click:
                      identifier: us.mappings.cart.ReplaceCTA
                  - sleep:
                      duration: 3000
                  - scroll:
                      direction: up
                      untilIdentifier: us.mappings.cart.replacementAddedLabel
                  - click:
                      identifier: us.mappings.cart.replacementAddedLabel
                  - log: Item is replaced
                  - sleep:
                      duration: 5000

  - name: us.functions.cart.shopSimilarSplitCart
    platform: android
    flow:
      - if:
          condition: ${shopsimilar} == 'pickup'
          then:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.shopSimilarForPickup
                  - name: direction
                    string: down
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.cart.shopSimilarForPickup
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.ReplaceCTA
                  - name: direction
                    string: down
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.cart.ReplaceCTA
            - sleep:
                duration: 3000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.replacementAddedLabel
                  - name: direction
                    string: up
            - click:
                identifier: us.mappings.cart.replacementAddedLabel
            - log: Item is replaced
            - sleep:
                duration: 5000
      - if:
          condition: ${shopsimilar} == 'delivery'
          then:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.shopSimilarForDelivery
                  - name: direction
                    string: down
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.cart.shopSimilarForDelivery
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.ReplaceCTA
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.cart.ReplaceCTA
            - sleep:
                duration: 3000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.replacementAddedLabel
                  - name: direction
                    string: up
            - click:
                identifier: us.mappings.cart.replacementAddedLabel
            - log: Item is replaced
            - sleep:
                duration: 5000

  - name: us.functions.cart.verifyByChangingItemCount
    platform: ios
    flow:
      - scroll:
         direction: down
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperPlusButton
      - click:
          identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperPlusButton
      - log: Item is incremented
      - sleep:
          duration: 5000
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperMinusButton
      - click:
          identifier: us.mappings.cart.fulfillmentSection.itemQuantityStepperMinusButton
      - log: Item is decremented

  - name: us.functions.cart.secondItemAddedToSaveForLater
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.secondItem.saveForLaterButton
            - name: direction
              string: down
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.secondItem.saveForLaterButton
      - click:
          identifier: us.mappings.cart.secondItem.saveForLaterButton
      - log: Item Added to Save for Later
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.sflHeader
            - name: direction
              string: down
            - name: limit
              string: 8
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.sflHeader
            - identifier: us.mappings.cart.moveToCartButton
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.LearnHowLink
            - name: direction
              string: up
            - name: limit
              string: 10
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.LearnHowLink

  - name: us.functions.cart.verifyTotalAmount
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.buynow.estTotal.pos.estimatedTotalLabel.string
            - name: direction
              string: down
      - verifyIdentifier:
           present:
            - identifier: us.mappings.buynow.estTotal.pos.subTotalLabel
            - identifier: us.mappings.buynow.estTotal.pos.estimatedTotalLabel.string
            - identifier: us.mappings.cart.taxLabel

  - name: us.functions.cart.verifyItemCountinCart
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reviewOrder.subtotalPricelabel
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: limit
              string: 10
      - verifyIdentifier:
          label:
            - identifier: us.mappings.reviewOrder.subtotalPricelabel
              contains: 2
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart

  - name: us.functions.cart.verifyByChangingItemCount
    platform: android
    flow:
      - try:
          flow:
            - verifyIdentifier:
                contentDescription:
                  - identifier: us.mappings.cart.fulfillmentSelection.basketView.collapseExpandButton
                    contains: Expanded
            - click:
                identifier: us.mappings.cart.fulfillmentSelection.basketView.collapseExpandButton
          catch:
            flow:
              - log: Fulfillment basket either collapsed or not available
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.nudgeDisplay.closeButton
          then:
            - click:
                identifier: us.mappings.cart.nudgeDisplay.closeButton
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.ad.SponsoredAd.ATCbutton.increment
            - name: direction
              string: up
      - verifyIdentifier:
           present:
            - identifier: us.mappings.item.ad.SponsoredAd.ATCbutton.increment
      - click:
          identifier: us.mappings.item.ad.SponsoredAd.ATCbutton.increment
      - log: Item is incremented
      - sleep:
          duration: 5000
      - verifyIdentifier:
           present:
            - identifier: us.mappings.item.ad.SponsoredAd.ATCbutton.decrement
      - click:
          identifier: us.mappings.item.ad.SponsoredAd.ATCbutton.decrement
      - log: Item is decremented
      - sleep:
          duration: 5000

  - name: us.functions.cart.secondItemAddedToSaveForLater
    platform: android
    flow:
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.recommendedWithYourOrderModule.title
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.saveForLaterLinkButton
      - click:
          identifier: us.mappings.cart.saveForLaterLinkButton
      - log: Item Added to Save for Later
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.sflMovetoCart
            - name: direction
              string: down
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.sflHeader
            - identifier: us.mappings.cart.sflMovetoCart
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.LearnHowLink
            - name: direction
              string: up

  - name: us.functions.cart.verifyTotalAmount
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.estimatedTotalAmount
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: scrollLimit
              string: 10
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.subTotalItemCount
            - identifier: us.mappings.cart.estimatedTotalAmount
            - identifier: us.mappings.cart.taxLabel

  - name: us.functions.cart.verifyItemCountinCart
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.subTotalItemCount
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.subTotalItemCount
              contains: 2

  - name: us.functions.cart.shippingAddress.addAddress
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addShippingAddress
      - click:
          identifier: us.mappings.cart.addShippingAddress
      - sleep:
          duration: 10000
      - executeFunction:
          name: us.functions.account.deliveryAddress.addAddress


  - name: us.functions.cart.shippingAddress.addAddress
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.fcDelivery.alertMessage
          then:
            - click:
                identifier: us.mappings.cart.fcDelivery.alertMessage
      - sleep:
          duration: 10000
      - executeFunction:
          name: us.functions.deliveryAddress.addAddress

  - name: us.functions.homepage.clickOnCart
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.homePage.cartNotEmpty
          then:
            - click:
                identifier: us.mappings.homePage.cartNotEmpty
            - sleep:
                duration: 10000

##################Android################

  # Verify the VP items added to the cart
  - name: us.functions.cart.verifyVPItemsInCart
    platform: ios
    flow:
      - sleep:
          duration: 1500
      - verifyIdentifier:
          present:
            # - identifier: us.mappings.cart.findSinglePackCartItem
            - identifier: us.mappings.cart.findMultiPackCartItem

  # Verify the VP items added to the cart
  - name: us.functions.cart.verifyVPItemsInCartTwoPackAndFourPack
    platform: ios
    flow:
      - sleep:
          duration: 1500
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.findMultiTwoPackCartItem
            - identifier: us.mappings.cart.findMultiPackCartItem

  - name: us.functions.cart.verifySingleVariantDetails
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.singleItemvariant
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      # Validate variant section
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.singleItemvariant
      - getString:
          identifier: us.mappings.cart.singleItemvariant
          attribute: label
          storeIn: cartSingleVariant
      - verifyIdentifier:
          label:
            - identifier: us.mappings.cart.singleItemvariant
              contains: ${itemPageVariant}
      - log: Variant selected in item page is displayed in cart

  - name: us.functions.cart.cartSplitsConsentShopSimilarForPickup
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.cartConsentPickupNotAvailableAlertMessage
      - executeFunction:
          name: us.functions.cart.verifyCardDetails
          params:
            - name: fulfillmentText
              string: Pickup
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.cartConsentPickupNotAvailableModuleHeader
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.cartConsentPickupNotAvailableModuleHeader
            - identifier: us.mappings.cart.cartConsentShippingAvailabilityText
            - identifier: us.mappings.cart.cartConsentShippingDeliveryDate
            - identifier: us.mappings.cart.cartConsentShipForFreeCta
            - identifier: us.mappings.cart.removeLinkButton
            - identifier: us.mappings.cart.cartConsentShopSimilarForPickupCta
      - click:
          identifier: us.mappings.cart.cartConsentShopSimilarForPickupCta
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.cartConsentShopSimilarForPickupCtaExpanded
          then:
            - click:
                identifier: us.mappings.cart.cartConsentShopSimilarForPickupCtaExpanded
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.cartConsentPickupNotAvailableAlertMessage
          position: center
      - click:
          identifier: us.mappings.cart.cartConsentPickupNotAvailableAlertMessage
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.cartConsentItemUpdatesPickupNotAvailableAlertMessage
            - identifier: us.mappings.cart.cartConsentShippingAvailabilityText
            - identifier: us.mappings.cart.cartConsentShippingDeliveryDate
            - identifier: us.mappings.cart.cartConsentShipForFreeCta
            - identifier: us.mappings.cart.removeLinkButton
            - identifier: us.mappings.cart.cartConsentShopSimilarForPickupCta
      - click:
          identifier: us.mappings.cart.cartConsentShopSimilarForPickupCta
      - sleep:
          duration: 10000
      - scroll:
          direction: down
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.ReplaceCTA
            - click:
                identifier: us.mappings.cart.ReplaceCTA
          catch:
            flow:
              - log: Shop similar items not available
              - click:
                  identifier: us.mappings.cart.itemUpdatesContinueButton
      - sleep:
          duration: 10000
      - verifyIdentifier:
          notPresent:
            - identifier:  us.mappings.cart.cartConsentPickupNotAvailableAlertMessage
      - executeFunction:
          name: us.functions.cart.verifyCardDetails
          params:
            - name: fulfillmentText
              string: Pickup

  - name: us.functions.cart.bcbsaFlagAndBenenfitTracker
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.skyBenefitCardLabel
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.viewBenefitTracker
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.viewBenefitTracker

  - name: us.functions.cart.verifyBenefitsProgramEligibleBadge
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitsProgramEligibleBadge
      - log: "Benefit program eligible badge is present"

  - name: us.functions.cart.verifyBenefitsProgramEligibleBadge
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitsProgramEligibleBadge
      - log: "Benefit program eligible badge is present"

  - name: us.functions.cart.viewBenefitTrackerNationscard
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.viewBenefitTracker
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.viewBenefitTracker
      - click:
          identifier: us.mappings.cart.viewBenefitTracker
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerTitle
            - identifier: us.mappings.cart.benefitProgram.benefitTrackerClose
            - identifier: us.mappings.cart.benefitProgram.benefitCardBalanceSummary
            - identifier: us.mappings.cart.benefitProgram.nationsBenefitsText
      - log: "Benefit tracker summary is visible"
      - click:
          identifier: us.mappings.cart.benefitProgram.benefitTrackerClose

  - name: us.functions.cart.viewBenefitTrackerNationscard
    platform: android
    flow:
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.benefitsProgramEligibleBadge
      # - log: "Benefits program eligible badge is present"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerCart
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerCart    
      - click:
          identifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerTitle
            - identifier: us.mappings.cart.benefitProgram.benefitTrackerClose
            - identifier: us.mappings.cart.benefitProgram.benefitCardBalanceSummary
            - identifier: us.mappings.cart.benefitProgram.nationsBenefitsText
            - identifier: us.mappings.cart.benefitProgram.okayButton
      - log: "Benefit tracker summary is visible"
      - click:
          identifier: us.mappings.cart.benefitProgram.okayButton

  - name: us.functions.cart.verifyBCBSAFlag
    platform: android
    flow:
      - sleep:
          duration: 6000
      - verifyIdentifier:
          present:
            - identifier:  us.mappings.cart.benefitProgram.verifyBCBSARFlag
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerCart
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.benefitProgram.verifyBenefitTrackerCart
            - identifier: us.mappings.cart.benefitProgram.verifyTrackYourBenefit
      - sleep:
          duration: 6000

  #Verify Alcohol restriction on Sunday and save the slot
  - name: us.functions.cart.reservetime.AlcoholrestrictionOnSunday
    platform: android
    flow:
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
          params:
            - name: page
              string: cart
            - name: tab
              string: delivery
            - name: addAddress
              string: true
            - name: addExistingAddress
              string: true

      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.particularDay
          then:
            - click:
                identifier: us.mappings.cart.reservetime.particularDay
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.daySelectionView
            - scroll:
                direction: left
                untilIdentifier: us.mappings.cart.reservetime.particularDay
                withinIdentifier: us.mappings.reserveSlot.daySelectionView
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay
                else:
                  - failTest:
                      message: "FAILURE - ${env} - Slot is not available"

      # - sleep:
      #     duration: 5000
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      # - click:
      #     wait: 2000
      #     identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert

     # - click:
      #    wait: 2000
       #   identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - click:
          identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - sleep:
          duration: 5000

  - name: us.functions.cart.BcbsaVerificationAndTracker
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bcbsEligibleText
      - log: BCBS Eligible Flag is present
      - sleep:
          duration: 3000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.services.bcbsa.benefitTrackerCTA
      - click:
          identifier: us.mappings.services.bcbsa.benefitTrackerCTA
      - executeFunction:
          name: us.functions.services.benefitCenter.verifyBnftTrackrCTA

  - name: us.functions.cart.verifyBnftsTrackr
    platform: android
    flow:
      - loop:
         begin: 1
         end: 6
         flow:
           - executeFunction:
               name: us.functions.utils.scrollIfNotVisible
               params:
                 - name: identifier
                   string: us.mappings.cart.trackYourBnftPrgrmSpndng
                 - name: direction
                   string: down
                 - name: scrollPosition
                   string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.trackYourBnftPrgrmSpndng

  - name: us.functions.reviewOrder.verifyBnftPrgrmMsgUndrPymntMthd
    platform: android
    flow:
      - loop:
         begin: 1
         end: 6
         flow:
           - executeFunction:
               name: us.functions.utils.scrollIfNotVisible
               params:
                 - name: identifier
                   string: us.mappings.reviewOrder.BnftPrgrmMsgUndrPymntMthd
                 - name: direction
                   string: down
                 - name: scrollPosition
                   string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.BnftPrgrmMsgUndrPymntMthd

  - name: us.functions.cart.verifyOosInContinueToCheckout
    platform: android
    flow:
      - click:
          identifier: us.mappings.navBar.cartIcon
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.amend.startShoppingButton
          then:
            - executeFunction:
                name: us.functions.global.navigation.backNavigation
            - click:
                identifier: us.mappings.navBar.cartIcon
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.navBarTitle
                then:
                  - executeFunction:
                      name: us.functions.global.navigation.backNavigation
                  - click:
                      identifier: us.mappings.navBar.cartIcon
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.addDeliveryAddress
            - name: direction
              string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addDeliveryAddress
      - click:
          identifier: us.mappings.cart.addDeliveryAddress
      - click:
          identifier: us.mappings.selectAddress.continueButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.outOfStockMessage
      - click:
          identifier: us.mappings.global.closeButton
      - click:
          identifier: us.mappings.cart.checkoutButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.outOfStockMessage
            - identifier: us.mappings.cart.oosPageContinueToCheckout
      - click:
          identifier: us.mappings.cart.oosPageContinueToCheckout
      - sleep:
          duration: 3000

      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.reserveSlot.slotSelectionView
      #     then:
      #       - click:
      #           identifier: us.mappings.cart.checkoutButton 

# Select saved address
  - name: us.functions.cart.selectExistingAddress
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart    
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.addShippingAddress
          then:      
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.addShippingAddress
            - click:
                identifier: us.mappings.cart.addShippingAddress
            - sleep:
                duration: 10000
            - executeFunction:
                name: us.functions.cart.selectAddress
            - sleep:
                duration: 5000

  - name: us.functions.cart.selectExistingAddress
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.addShippingAddress
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.addShippingAddress
            - click:
                identifier: us.mappings.cart.addShippingAddress
            - sleep:
                duration: 10000
            - executeFunction:
                name: us.functions.cart.selectAddress
            - click:
                identifier: us.mappings.buyNow.selectAddress.saveButton
            - sleep:
                duration: 5000

# Handle item oos bottom tray alert
  - name:  us.functions.cart.handleBottomTray
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 40000
          present:
            - identifier: us.mappings.cart.gotItButton
      - click:
          identifier: us.mappings.cart.gotItButton
      - sleep:
          duration: 5000

# Save all for later and empty cart
  - name: us.functions.cart.verifySaveAllForLater
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.cart.smartNudgeView
            - click:
                identifier: us.mappings.cart.smartNudgeViewClose
          catch:
            flow:
              - log: Smart Budge view not displayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.saveAllForLater
          then:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.saveAllForLater
                  - name: direction
                    string: down 
            - click:
                identifier: us.mappings.cart.saveAllForLater
          else: 
            - click:
                identifier: us.mappings.cart.itemSaveForLaterLink
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.emptyCartText

  - name: us.functions.cart.changeAddressItemsGoOOS
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.amend.startShoppingButton
          then:
            - executeFunction:
                name: us.functions.global.navigation.backNavigation
            - click:
                identifier: us.mappings.navBar.cartIcon
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.navBarTitle
                then:
                  - executeFunction:
                      name: us.functions.global.navigation.backNavigation
                  - click:
                      identifier: us.mappings.navBar.cartIcon
      - sleep:
          duration: 3000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.addDeliveryAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addDeliveryAddress
      - click:
          identifier: us.mappings.cart.addDeliveryAddress
          wait: 3000
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.oos.itemUpdatesTitle
              - identifier: us.mappings.cart.outOfStockMessageText
              - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
                wait: 2000
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Item out Of Stock Message missing"

  - name: us.functions.cart.verifyOosItemsMovedtoSFL
    platform: android
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.saveForLaterTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.saveForLaterTitle
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.saveForLaterTitle

  - name: us.functions.cart.verifyOosInContinueToCheckout
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.addDeliveryorShippingAddress
            - name: direction
              string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addDeliveryorShippingAddress
      - click:
          identifier: us.mappings.cart.addDeliveryorShippingAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.selectAddress.selectAddressTitle
      - click:
           identifier: us.mappings.reserveSlot.addressselectionButton        
      - click:
          identifier: us.mappings.cart.saveAddressCTA
      - sleep:
          duration: 10000
      - executeFunction:
         name: us.functions.utils.waitForLoadingImageToDisappear
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.outOfStockMessage
          catch:
            flow:
              - failTest:
                  message: "ENV_FAILURE - ${env} - Item out Of Stock Message missing"
      - click:
          identifier: mapping.item.unavailableItemError.closeButton
      - click:
          identifier: us.mappings.cart.checkoutButton
      - executeFunction:
          name: us.functions.utils.handleMissingAnythingPopUp   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.outOfStockMessage
            - identifier: us.mappings.cart.oosPageContinueToCheckout
      - click:
          identifier: us.mappings.cart.oosPageContinueToCheckout 
      - sleep:
          duration: 3000


  - name: us.functions.cart.recommendedWithYourOrderModule
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.recommendedWithYourOrderModule.title #scroll till recommended carousel
          position: center
      - log: Recommended with your order module is present
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.secondItem
      - click:
          identifier: us.mappings.myItems.secondItem
      - sleep:
          duration: 4000
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.item.postAddToCartSteps


  - name: us.functions.cart.itemUpdateSheet.ineligibleItem
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 100000
          present: 
            - identifier: us.mappings.reserveSlot.oos.itemUpdatesTitle
            - identifier: us.mappings.cart.ineligibleForResevedTime
            - identifier: us.mappings.cart.removeLinkButton
            - identifier: us.mappings.cart.secondItem.saveForLaterButton
            - identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
      - click:
          identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
          wait: 5000

  - name: us.functions.cart.gardenCenter.ineligibleForResevedTimeBanner
    platform: ios
    flow: 
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.sflHeader
            - name: direction
              string: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.sflExpandCollapseView
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.sflCollapsedView
                then:
                  - click:
                      identifier: us.mappings.cart.sflCollapsedView
                else:
                  - log: "save for later is already expanded"
                      
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.showSavedItemLink
            - click:
                identifier: us.mappings.cart.showSavedItemLink          
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.sflHeader                 
            - identifier: us.mappings.cart.moveToCartButton 
      - click:
          identifier: us.mappings.cart.moveToCartButton
          wait: 6000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.moveToCartButton
          then:
            - click:
                identifier: us.mappings.cart.moveToCartButton
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.ineligibleForResevedTime
            - name: direction
              string: up
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.ineligibleForResevedTime
            - identifier: us.mappings.cart.ineligibleItemSubText

  - name: us.functions.cart.verifyIneligibleTimeInCart
    platform: Android 
    flow:
      - if:                
          identifier:
            present:
              - identifier: us.mappings.cart.seeDetailsLink 
          then: 
            - click:
                  identifier: us.mappings.cart.seeDetailsLink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.sflHeader
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
           present:
            - identifier: us.mappings.cart.moveToCartButton
      - click:
          identifier: us.mappings.cart.moveToCartButton
      - sleep:
          duration: 4000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.ineligibleBannerText
            - name: direction
              string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ineligibleBannerText
            - identifier: us.mappings.cart.ineligibleItemSubText
            - identifier: us.mappings.cart.ineligibleTimeHeader

  - name: us.functions.cart.increaseItemQtyInCart
    platform: android
    flow:
      - loop:
          begin: 1
          end: ${quantity}
          mode: increment
          flow:
            - if:                
                identifier:
                  present:
                    - identifier: us.mappings.cart.priceDropAlertMessage
                then: 
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.increaseQuantity.button
                      position: center
            - if:                
                identifier:
                  present:
                    - identifier: us.mappings.cart.seeDetails
                then: 
                  - click:
                      identifier: us.mappings.cart.seeDetails
            - click:
                identifier: us.mappings.cart.increaseQuantity.button
                wait: 2000
                
  - name: us.functions.cart.increaseItemQtyInCartWithoutPriceChange
    platform: android
    flow:
      - loop:
          begin: 1
          end: ${quantity}
          mode: increment
          flow:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.increaseQuantity.button
                position: center
            - click:
                identifier: us.mappings.cart.increaseQuantity.button
                wait: 2000

  # Select saved address
  - name: us.functions.cart.selectExAddress
    platform: ios
    flow:
      - click:
          identifier: us.mappings.cart.checkoutButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.deliveryTab
      - click:
          identifier: us.mappings.cart.deliveryTab
      - sleep:
          duration: 2000
      - if:                
          identifier:
            present:
              - identifier: us.mappings.cart.addAddressClose
          then: 
            - click:
                identifier: us.mappings.cart.addAddressClose
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addAddress
      - click:
          identifier: us.mappings.cart.addAddress
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addressWRestrictions
      - click:
          identifier: us.mappings.cart.addressWRestrictions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.saveAddress
      - click:
          identifier: us.mappings.cart.saveAddress

      - sleep:
          duration: 10000

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.gotItButton
      - click:
          identifier: us.mappings.cart.gotItButton
      - sleep:
          duration: 5000

  - name: us.functions.cart.AlcoholrestrictionOnWeekday
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
          params:
            - name: page
              string: cart
            - name: tab
              string: pickup
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.Monday
          then:
            - click:
                identifier: us.mappings.cart.reservetime.Monday
            - sleep:
                duration: 2000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.alcoholRestrictedSlotalert
                then:
                  - failTest:
                      message: "FAILURE - ${env} - Restrictions are not present"
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.Tuesday
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.Tuesday
                  - sleep:
                      duration: 2000
                  - if:
                      identifier:
                        notPresent:
                          - identifier: us.mappings.cart.alcoholRestrictedSlotalert
                      then:
                        - failTest:
                            message: "FAILURE - ${env} - Restrictions are not present"
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.Wednesday
                      then:
                        - click:
                            identifier: us.mappings.cart.reservetime.Wednesday
                        - sleep:
                            duration: 2000
                        - if:
                            identifier:
                              notPresent:
                                - identifier: us.mappings.cart.alcoholRestrictedSlotalert
                            then:
                              - failTest:
                                  message: "FAILURE - ${env} - Restrictions are not present"
                      else:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.reservetime.Thursday
                            then:
                              - click:
                                  identifier: us.mappings.cart.reservetime.Thursday
                              - sleep:
                                  duration: 2000
                              - if:
                                  identifier:
                                    notPresent:
                                      - identifier: us.mappings.cart.alcoholRestrictedSlotalert
                                  then:
                                    - failTest:
                                        message: "FAILURE - ${env} - Restrictions are not present"
                            else:
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.cart.reservetime.Friday
                                  then:
                                    - click:
                                        identifier: us.mappings.cart.reservetime.Friday
                                    - sleep:
                                        duration: 2000
                                    - if:
                                        identifier:
                                          notPresent:
                                            - identifier: us.mappings.cart.alcoholRestrictedSlotalert
                                        then:
                                          - failTest:
                                              message: "FAILURE - ${env} - Restrictions are not present"




  - name: us.functions.cart.AlcoholrestrictionReserveSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup
          then:
            - click:
                identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalertpickup
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - verifyIdentifier:
          timeout: 12000
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      # - click:
      #     identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      # - click:
      #     identifier: us.mappings.reserveSlot.saveButton
      # - sleep:
      #     duration: 5000
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.cart.locallyRestrictedBanner
      #     then:
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.cart.locallyRestrictedBanner
      #       - click:
      #           identifier: us.mappings.cart.itemUpdateClose
      - log: Alcohol Restrictions on weekday Validation completed

  - name: us.functions.cart.wplus.verifyIntegratedSignUpBanner
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.inHome.bookSlot.verifyTipFreeDeliveriryLabel
      - if:
          identifier:
            present:
              - identifier: us.mappings.inHome.bookSlot.verifyTipFreeDeliveriryLabel
          then:
            - log: "Sign Up Banner is displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Banner should have been displayed but is not"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.inHome.bookSlot.verifyTipFreeDeliveriryLabel
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.wantToSkipDeliveryFeeswithW+logo
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.wantToSkipDeliveryFeeswithW+logo
            - identifier: us.mappings.cart.optInCheckbox
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplusBanner.text
          then:
            - log: "Text in the banner is displayed as expected based on the fulfilment"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - The banner text is not displayed as expected"
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.cart.optInCheckbox
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.cart.VerifyRewardsEarnedBanner


  - name: us.functions.cart.wplus.verifyIntegratedSignUpBanner
    platform: android
    flow:
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.alcoholDisclosure.checkBox
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.inhomeBaseTenure
            - identifier: us.mappings.cart.strikeThroughText
            - identifier: us.mappings.cart.wplusBanner.text
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplusBanner.text
          then:
            - log: "Text in the banner is displayed as expected based on the fulfilment"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - The banner text is not displayed as expected"
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.cart.alcoholDisclosure.checkBox
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplusSignupAdditionalInfo
          then:
            - log: "Trial period text displayed correctly as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Expected the text Your trial begins when you select a plan in checkout but not found"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cartdetailpage.cartbasketrewardsbanner
      - executeFunction:
          name: us.functions.cart.VerifyRewardsEarnedBanner

  - name: us.functions.cart.recommendedWithYourOrderModule
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.smartNudgeViewClose
          then:      
            - click:
                identifier: us.mappings.cart.smartNudgeViewClose    
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.recommendedWithYourOrderModule.carousel
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.recommendedWithYourOrderModule.carouselAddButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center      
      - log: Recommended with your order module is present   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.secondItems
      - click:
          identifier: us.mappings.cart.recommendedWithYourOrderModule.carouselAddButton
          
  # Select saved address
  - name: us.functions.cart.selectExistingAddressRestricted
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.addAddressClose
          then:      
            - click:
                wait: 2000
                identifier: us.mappings.cart.addAddressClose

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.deliveryTab
      - click:
          wait: 2000
          identifier: us.mappings.cart.deliveryTab

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addAddress
      - click:
          wait: 2000
          identifier: us.mappings.cart.addAddress

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.saveAddress
      - click:
          wait: 2000
          identifier: us.mappings.cart.saveAddress

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.gotItButton
      - click:
          wait: 2000
          identifier: us.mappings.cart.cancelAlcoholItemUpdate


  - name: us.functions.cart.AlcoholrestrictionOnWeekday
    platform: android
    flow:
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
          params:
            - name: page
              string: cart
            - name: tab
              string: pickup
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.Monday
          then:
            - click:
                wait: 2000
                identifier: us.mappings.cart.reservetime.Monday
   # Commenting since the alcohol restricted banner will not be visible as part of lawn and garden changes that were deployed
            # - if:
            #     identifier:
            #       notPresent:
            #         - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
            #     then:
            #       - failTest:
            #           message: "FAILURE - ${env} - Restrictions are not present"
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.Tuesday
                then:
                  - click:
                      wait: 2000
                      identifier: us.mappings.cart.reservetime.Tuesday

                  # - if:
                  #     identifier:
                  #       notPresent:
                  #         - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
                  #     then:
                  #       - failTest:
                  #           message: "FAILURE - ${env} - Restrictions are not present"
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.Wednesday
                      then:
                        - click:
                            wait: 2000
                            identifier: us.mappings.cart.reservetime.Wednesday
                        # - if:
                        #     identifier:
                        #       notPresent:
                        #         - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
                        #     then:
                        #       - failTest:
                        #           message: "FAILURE - ${env} - Restrictions are not present"
                      else:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.reservetime.Thursday
                            then:
                              - click:
                                  wait: 2000
                                  identifier: us.mappings.cart.reservetime.Thursday
                              # - if:
                              #     identifier:
                              #       notPresent:
                              #         - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
                              #     then:
                              #       - failTest:
                              #           message: "FAILURE - ${env} - Restrictions are not present"
                            else:
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.cart.reservetime.Friday
                                  then:
                                    - click:
                                        wait: 2000
                                        identifier: us.mappings.cart.reservetime.Friday
                                    # - if:
                                    #     identifier:
                                    #       notPresent:
                                    #         - identifier: us.mappings.cart.regulations
                                    #     then:
                                    #       - failTest:
                                    #           message: "FAILURE - ${env} - Restrictions are not present"




  - name: us.functions.cart.AlcoholrestrictionReserveSlot
    platform: android
    flow:
    # Commenting since the alcohol restricted banner will not be visible as part of lawn and garden changes that were deployed
      # - click:
      #     wait: 2000
      #     identifier: us.mappings.cart.regulations
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.regulations
          then:
            - click:
                identifier: us.mappings.cart.regulations
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
            - click:
                wait: 2000
                identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          else:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
            - click:
                wait: 2000
                identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.saveButton
          then:
            - click:
                wait: 2000
                identifier: us.mappings.reserveSlot.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.locallyRestrictedBanner
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.locallyRestrictedBanner
            - click:
                wait: 2000
                identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
            - sleep:
                duration: 2000

  - name: us.functions.cart.increaseItemQtyInCart
    platform: ios
    flow:
      - loop:
          begin: 1
          end: ${quantity}
          mode: increment
          flow:
            - click:
                identifier: us.mappings.cart.increaseQuantity.button
                wait: 2000

  - name: us.functions.cart.selectExistingAddress.onAddAddressPopup
    platform: android
    flow:
      - click:
          wait: 2000
          identifier: us.mappings.cart.sc.noSlotBooked.chooseOptions
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.delivery.addAddressPopUp
          then:
            - click:
                wait: 2000
                identifier: us.mappings.account.delivery.addAddressPopUp
            - click:
                wait: 2000
                identifier: us.mappings.addAddress.selectaddress.sugesstions
            - click:
                wait: 2000
                identifier: us.mappings.cart.saveAddress
          else:
            - log: "Add Address button not displayed!!!"

  - name: us.functions.cart.selectExpressSlot.verifyOnSlotSelection.andCartPage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fulfillmentFee
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.subTotalEffectiveAmount
            - name: direction
              string: down
            - name: scrollPosition
              string: center    
      - if:
          condition: ${memberType} == 'nonMember'
          then: 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.slotSelection.expressDeliveryPriceNotWaived
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.zeroDeliveryFeesW+
                  - identifier: us.mappings.cart.zeroDeliveryFeesWPlusPrice
                  - identifier: us.mappings.cart.slotSelection.expressDeliveryPriceWaived
  
  - name: us.functions.cart.selectExpressSlot.verifyOnSlotSelection.andCartPage
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.navBarTitle
            - identifier: us.mappings.cart.fulfillmentFee
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.subTotalEffectiveAmount
            - name: direction
              string: down
            - name: scrollPosition
              string: center  
      - if:
          condition: ${memberType} == 'nonMember'
          then: 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.expressDeliveryFeeLabel
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.zeroDeliveryFeesW+
                  - identifier: us.mappings.cart.expressDeliveryWaivedFeeLabel

  - name: us.functions.cart.SelectPackage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.valuePackage
      - click:
          identifier: us.mappings.cart.InstallationPackage.downArrow
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.tireMounting
            - identifier: us.mappings.cart.valveStemsPerTpms
            - identifier: us.mappings.cart.lifetimeBalanceAndRotation
            - identifier: us.mappings.cart.roadHazardProtection
            - identifier: us.mappings.cart.schedulePackageAtStore    
      - click:        
          identifier: us.mappings.cart.valuePackage
      - scroll:
          direction: down
          position: center
          untilIdentifier: us.mappings.cart.basicPackage
      - click:        
          identifier: us.mappings.cart.continueButton

  - name: us.functions.cart.SelectPackage
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.valuePackage
            - identifier: us.mappings.cart.tireMounting
            - identifier: us.mappings.cart.valveStemsPerTpms
            - identifier: us.mappings.cart.lifetimeBalanceAndRotation
            - identifier: us.mappings.cart.roadHazardProtection
            - identifier: us.mappings.cart.basicPackage
            # - identifier: us.mappings.cart.schedulePackageAtStore
      - click:
          identifier: us.mappings.cart.valuePackage
      - click:
          identifier: us.mappings.cart.continueButton

  - name: us.functions.cart.verifyWplusCheckbox
    platform: android
    flow:
      - scroll:
          direction: up
          position: center
          untilIdentifier: us.mappings.cart.optInCheckbox
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.optInCheckbox

  #Proceed to checkout from cart and Validating W+ Package screen.
  - name: us.functions.cart.continueToCheckoutandvalidateWplusdetails
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.checkoutButton
      - click:
          wait: 5000
          identifier: us.mappings.cart.checkoutButton
      - sleep:
          duration: 5000

      - loop:
          begin: 1
          end: 3
          storeIndex: checkoutRetry
          mode: increment
          flow:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.navBar.cartIcon
                then:
                  - executeFunction:
                      name: us.functions.global.navigation.toCartFromNavBar
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.checkoutButton
                  - click:
                      identifier: us.mappings.cart.checkoutButton
                  - sleep:
                      duration: 5000
                else:
                  - break: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.navBar.cartIcon
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - Click on checkout button loaded home/search page instead of checkout page"
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
      - executeFunction:
          name: us.functions.cart.wplus.reviewWpackagescreen

      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.checkoutButton
          then:
            - log: Clicked on Checkout button successfully
          else:
            - if:
                condition: ${skipErrorValidation}
                then:
                  - log: Checkout button presence check skipped
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Review order page not loaded, still displaying cart page after click on checkout button"

  - name: us.functions.cart.amendHotChickenItem
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:        
          identifier: us.mappings.cart.addToExistingOrderButton
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.inEligibleItemCTA
            - identifier: us.mappings.cart.reserveAnewTimeText
      - click:        
          identifier: us.mappings.cart.ReserveAnewTimeCTA

      - executeFunction:
          name: us.functions.reserveTime.amendHotchickenResrtictedTime
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.amendOrderInProgress
          then:
            - click: 
                identifier: us.mappings.popup.cartMergeOkayButton
          else:
            - log: new time is reserved

      - goBack: true

      - executeFunction:
          name: us.functions.global.navigation.toCartFromNavBar

      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.HotChickenAmended1pmText
            
      - sleep:
          duration: 5000      
      - log: New time is selected       


  - name: us.functions.cart.amendHotChickenItem
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:        
          identifier: us.mappings.cart.addToExistingOrderButton
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.inEligibleItemCTA
          text:
            - identifier: us.mappings.cart.reserveAnewTimeText 
              contains: Reserve a new time
      - log: Reserve a new time is displayed
              
      - click:        
          identifier: us.mappings.cart.reserveAnewTimeText 

      - executeFunction:
          name: us.functions.reserveTime.amendHotchickenResrtictedTime
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.amendOrderInProgress
          then:
            - click: 
                identifier: us.mappings.popup.cartMergeOkayButton
          else:
            - log: new time is reserved        

  - name: us.functions.cart.clippingRewardLastCall
    platform: android
    flow:
      - click:
          identifier: us.mappings.evergreen.continue.to.checkout
      - executeFunction:
          name: us.functions.wplus.verifyClippingComponent
      - log: Clipping component has been verified on last call carousel
#apple free offers 
  - name: us.functions.applefreeoffers.CartappleOffers
    platform: iOS
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.AppleFreeOffers.ValidateAppleoffers
      - click:
          identifier: us.mappings.AppleFreeOffers.ValidateAppleArcadePlan
      - verifyIdentifier:
          present:
            - identifier: us.mappings.AppleFreeOffers.ValidateAppleArcadePlan
      - verifyIdentifier:
          present:
            - identifier: us.mappings.AppleFreeOffers.CloseAppleOffers
      - click:
          identifier: us.mappings.AppleFreeOffers.CloseAppleOffers 
#apple free offers 
  - name: us.functions.applefreeoffers.CartvalidateOffers
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: com.walmart.android.debug:id/cart_free_trial_info_icon
      - click:
          identifier: com.walmart.android.debug:id/cart_free_trial_info_icon
      - verifyIdentifier:
          present:
            - identifier: us.mappings.AppleFreeOffers.ValidateArcadePlan
      - verifyIdentifier:
          present:
            - identifier: us.mappings.AppleFreeOffers.CloseOffers
      - click:
          identifier: us.mappings.AppleFreeOffers.CloseOffers 

  - name: us.functions.cart.clippingRewardLastCall
    platform: ios
    flow:
      - click:        
          identifier: us.mappings.cart.checkoutButton
      - sleep:
          duration: 3000
      - verifyIdentifier:
          timeout: 6000
          present:
            - identifier: us.mappings.search.rewardsClippingComponent
      - log: Clipping component has been verified on last call carousel


  - name: us.functions.cart.chargeWaiveOffHandling
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservationExpired
          then:
            - log: Reservation expired, hence checking for threshold text after reserving slot again
            - executeFunction:
                name: us.functions.bookingSlotFromCart
                params:
                  - name: tab
                    string: delivery
                  - name: slotDay
                    string: dayAfter
                  - name: slotIndex
                    string: 3
      - if:
          identifier:
            present:
              - identifier: us.mappings.editSLot.bookSlot.reserveTime
          then:
            - executeFunction:
                name: us.functions.selectBookingSlot
                params:
                  - name: tab
                    string: delivery
                  - name: page
                    string: cart

  - name: us.functions.cart.connectYourBank
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.checkout.walmartPlusRemovePlanCTA
          then:
            - click:
                identifier: us.mappings.checkout.walmartPlusRemovePlanCTA
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.button
          then:
            - log: "Connect Your bank Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.button
      - click:
          identifier: us.mappings.cart.connectYourBank.button
      - log: "Clicked on Connect Your bank Button."
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.bankSearchBar
      - enterText:
          identifier: us.mappings.cart.bankSearchBar
          string: ${bankName}
          pressEnter: true
      - click:
          identifier: us.mappings.cart.selectSearchedBank
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.selectedBankName
            - identifier: us.mappings.cart.linkToVisitBankWebsite
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankAccountUserName
            - identifier: us.mappings.cart.bankAccountPassword
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - enterText:
          identifier: us.mappings.cart.bankAccountUserName
          string: ${bankUserName}
          pressEnter: true
      - enterText:
          identifier: us.mappings.cart.bankAccountPassword
          string: ${bankPassword}
          pressEnter: true
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankAccountType
            - identifier: us.mappings.cart.bankAccountText
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.nextButton
          then:
            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.progressMessage
      - sleep:
          duration: 15000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.connectYourBank.button
          then:
            - click:
                identifier: us.mappings.search.backButton
                wait: 5000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.alert.leaveAnyWayButton
                then:
                  - click:
                      wait: 6000
                      identifier: us.mappings.reviewOrder.alert.leaveAnyWayButton
            - click:
                identifier: us.mappings.evergreen.continue.to.checkout
            - sleep:
                duration: 5000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.bankIcon
                then:
                  - log: "Added bank is not visible. Scrolling down"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.bankIcon
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankIcon
            - identifier: us.mappings.cart.bankLabel
            - identifier: us.mappings.cart.bankNameText
            - identifier: us.mappings.cart.BankAccount.editButton
      - log: "Added the bank to the account successfully!!!"

  - name: us.functions.cart.removeYourBank
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderConfirmation.ContinueShoppingButton
          then:
            - click:
                identifier: us.mappings.orderConfirmation.ContinueShoppingButton
      - executeFunction:
          name: us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account
      # Navigate to pets tab
      - executeFunction:
          name: us.functions.global.navigation.toSubTab
          params:
            - name: subTabName
              string: Wallet
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.bankNameInWallet
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.bankNameInWallet
                  - identifier: us.mappings.cart.bankLastFourDigit
                  - identifier: us.mappings.cart.removeBankAccounts
                  - identifier: us.mappings.cart.bankAccountsIcon
            - click:
                identifier: us.mappings.cart.removeBankAccounts
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.removeBankAccountMessage
                  - identifier: us.mappings.cart.removeBankAccountButton
                  - identifier: us.mappings.cart.removeBankAccountTitle
            - click:
                identifier: us.mappings.cart.removeBankAccountButton
                wait: 5000
            - log: "Removed the bank added successfully!!!!"
          else:
            - log: "No Bank account found to remove and good to go !!!!"

  - name: us.functions.cart.addDirectSpendCard
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - log: "Adding the Direct Spend card to the account!!!!"
      - log: "Entering the Direct Spend card details!!!!"
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reviewOrder.editPayment
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reviewOrder.editPayment
            - click:
                identifier: us.mappings.reviewOrder.editPayment
            - sleep:
                duration: 4000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.addNewPaymentButton
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.addNewPaymentButton
            - click:
                identifier: us.mappings.cart.addNewPaymentButton
            - sleep:
                duration: 3000
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
                string: ${directSpendCardNumber}
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.cart.directSpend.pin
            - enterText:
                identifier: us.mappings.cart.directSpend.pin
                string: ${directSpendCardPin}
            - sleep:
                duration: 1000
          else:
            - click:
                identifier: us.mappings.reviewOrder.editPayment
            - sleep:
                duration: 4000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.addNewPaymentButton
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.addNewPaymentButton
            - click:
                identifier: us.mappings.cart.addNewPaymentButton
            - sleep:
                duration: 3000
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
                string: ${directSpendCardNumber}
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.cart.directSpend.pin
            - enterText:
                identifier: us.mappings.cart.directSpend.pin
                string: ${directSpendCardPin}
            - sleep:
                duration: 1000
      - click:
          identifier: us.mappings.paymentMethod.1Pitem.overlay.saveButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.directSpend.addCardAlertWindowTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.capOne.paymentsOptionsContinueButton
      - click:
          identifier: us.mappings.capOne.paymentsOptionsContinueButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.clickPlaceOrder
      - log: "The Direct Spend card added successful to the account!!!!"
      - scroll:
          direction: up
          position: center
          scrollLimit: 4

  - name: us.functions.cart.deleteDirectSpendCard
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderConfirmation.ContinueShoppingButton
          then:
            - click:
                identifier: us.mappings.orderConfirmation.ContinueShoppingButton
      - executeFunction:
          name: us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account
      # Navigate to pets tab
      - executeFunction:
          name: us.functions.global.navigation.toSubTab
          params:
            - name: subTabName
              string: Wallet
      - if:
          identifier:
            present:
              - identifier: us.mappings.wallet.dsCard.walmartSelect
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.directSpendCardName.inWallet
                  - identifier: us.mappings.cart.directSpendCard.lastFourDigit
                  - identifier: us.mappings.cart.directSpendCard.removeButton
                  - identifier: us.mappings.cart.directSpendCardIcon
            - click:
                identifier: us.mappings.cart.directSpendCard.removeButton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.removeBankAccountMessage
                  - identifier: us.mappings.cart.removeBankAccountButton
                  - identifier: us.mappings.cart.removeBankAccountTitle
            - click:
                identifier: us.mappings.cart.removeBankAccountButton
                wait: 5000
            - log: "Removed the DS Card successfully!!!!"
          else:
            - log: "No Walrmart Select DSCard found to delete!!!"

  - name: us.functions.cart.verifyMultiTenderSelection.onReviewOrderPage
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.clickPlaceOrder
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.cart.walletHeader
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.cart.walletHeader
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
                  - identifier: us.mappings.cart.payByBank.usedForPayment
            - log: "Verified the multi tender payments successfully for this order!!!!"
          else:
            - log: "The control is not in the Order review page, please check!!!"

  - name: us.functions.cart.connectYourBank.afterAddingDirectSpend
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.checkout.walmartPlusRemovePlanCTA
          then:
            - click:
                identifier: us.mappings.checkout.walmartPlusRemovePlanCTA
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reviewOrder.editPayment
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reviewOrder.editPayment
      - click:
          identifier: us.mappings.reviewOrder.editPayment
      - sleep:
          duration: 4000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.addNewPaymentButton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.addNewPaymentButton
            - click:
                identifier: us.mappings.cart.addNewPaymentButton
          else:
            - click:
                identifier: us.mappings.cart.addNewPaymentButton
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.button
          then:
            - log: "Connect Your bank Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.button
      - click:
          identifier: us.mappings.cart.connectYourBank.button
      - log: "Clicked on Connect Your bank Button."
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.bankSearchBar
      - enterText:
          identifier: us.mappings.cart.bankSearchBar
          string: ${bankName}
          pressEnter: true
      - click:
          identifier: us.mappings.cart.selectSearchedBank
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.selectedBankName
            - identifier: us.mappings.cart.linkToVisitBankWebsite
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.nextButton
          then:
            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankAccountUserName
            - identifier: us.mappings.cart.bankAccountPassword
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - enterText:
          identifier: us.mappings.cart.bankAccountUserName
          string: ${bankUserName}
          pressEnter: true
      - enterText:
          identifier: us.mappings.cart.bankAccountPassword
          string: ${bankPassword}
          pressEnter: true
      - sleep:
          duration: 8000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankAccountType
            - identifier: us.mappings.cart.bankAccountText
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.nextButton
          then:
            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.progressMessage
      - sleep:
          duration: 20000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wallet.accountSavedTextMessage
      - if:
          identifier:
            present:
              - identifier: us.mappings.wallet.select.DSCardCheckbox.unChecked
          then:
            - log: "Selecting the Direct Spend Card added for this transaction."
            - click:
                identifier: us.mappings.wallet.select.DSCardCheckbox.unChecked
                wait: 3000
      - click:
          identifier: us.mappings.capOne.paymentsOptionsContinueButton
          wait: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.alert.leaveAnyWayButton
          then:
            - click:
                wait: 6000
                identifier: us.mappings.reviewOrder.alert.leaveAnyWayButton
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
            - identifier: us.mappings.cart.payByBank.usedForPayment
      - log: "Verified the multi tender payments successfully for this order!!!!"
      - log: "Added the bank to the account successfully!!!"

  - name: us.functions.cart.validateOnePayEligiblity
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.verifyGetStartedLink
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          timeout: 120000
          present:
            - identifier: us.mappings.cart.verifyPayOverTimeWithONe
            - identifier: us.mappings.cart.verifyPayOverTimeWithOneTitle            
            - identifier: us.mappings.cart.verifyAsLowAsText           
            - identifier: us.mappings.cart.verifyGetStartedLink
      - click:        
          identifier: us.mappings.cart.verifyGetStartedLink    
      - verifyIdentifier:
          timeout: 120000  
          present:
            - identifier: us.mappings.cart.verifyCheckEligibiltyTitle
            - identifier: us.mappings.cart.verifyCheckEligibileItemsText
            - identifier: us.mappings.cart.verifyAPRPercentage
            - identifier: us.mappings.cart.verify$XX/monthText
            - identifier: us.mappings.cart.verifyLearnHowCart
            - identifier: us.mappings.cart.verifyPayOverTimeItems
            - identifier: us.mappings.cart.verifyItemsToBeSavedForLater
            - identifier: us.mappings.cart.verifyReviewOrderWithOneCTA
            - identifier: us.mappings.cart.verifyTabApplyNowAtNextStepButton
            - identifier: us.mappings.cart.verifyCloseButton                        
      - click:        
          identifier: us.mappings.cart.verifyReviewOrderWithOneCTA
      - sleep:
          duration: 5000

  - name: us.functions.cart.onePayEligiblity  
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.getStartedLink
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifyAsLowAsText
            - identifier: us.mappings.cart.verifyPayOverTimeWithOne
            - identifier: us.mappings.cart.getStartedLink
      - click:        
          identifier: us.mappings.cart.getStartedLink
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.checkEligibleItems
            - identifier: us.mappings.cart.ineligibleMessage
            - identifier: us.mappings.cart.learnHow
            - identifier: us.mappings.cart.APRpercentage
            - identifier: us.mappings.cart.PayOverTimeItems
            - identifier: us.mappings.cart.viewButton
            - identifier: us.mappings.cart.itemsToSaveForLater
            - identifier: us.mappings.cart.reviewOrderWithONE
            - identifier: us.mappings.cart.tapApplyNowNext
            - identifier: us.mappings.cart.payOverClosebtn
      - click:        
          identifier: us.mappings.cart.reviewOrderWithONE
      - sleep:
          duration: 5000

  - name: us.functions.cart.addDirectSpendCard
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - log: "Adding the Direct Spend card to the account!!!!"
      - log: "Entering the Direct Spend card details!!!!"
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reviewOrder.paymentMethod.changeLink
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reviewOrder.paymentMethod.changeLink
      - click:
          identifier: us.mappings.reviewOrder.paymentMethod.changeLink
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.addNewPaymentMethod.button
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.addNewPaymentMethod.button
      - click:
          identifier: us.mappings.cart.addNewPaymentMethod.button
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      - click:
          identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      - enterText:
          identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
          string: ${directSpendCardNumber}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - sleep:
          duration: 1000
      - if:
          identifier:
            present:
              - identifier: us.mappings.paymentMethod.cardTypeField
          then:
            - click:
                identifier: us.mappings.paymentMethod.cardTypeField
            - click:
                identifier: us.mappings.paymentMethod.cardTypeFieldPickerWheel
                coordinates: 30%,70%
            - enterText:
                identifier: us.mappings.paymentMethod.cardTypeFieldPickerWheel
                string: Walmart Gift card
            - click:
                identifier: us.mappings.reviewOrder.PetPickerWheelDone1
      - enterText:
          identifier: us.mappings.paymentMethod.giftCard.pin
          string: ${directSpendCardPin}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - click:
          identifier: us.mappings.cart.directSpend.saveCardButton
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.directSpend.addCardAlertWindowTitle
          then:
            - log: "See the Add card alert window, handling that."
            - click:
                identifier: us.mappings.cart.directSpend.addCardButton.onAlertWindow
            - sleep:
                duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.directSpend.addCardAlertWindowTitle
          then:
            - log: "See the Add card alert window, handling that."
            - click:
                identifier: us.mappings.cart.directSpend.addCardButton.onAlertWindow
            - sleep:
                duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.capOne.paymentsOptionsContinueButton
          then:
            - click:
                identifier: us.mappings.capOne.paymentsOptionsContinueButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.placeOrderButton
      - log: "The Direct Spend card added successful to the account!!!!"
      - scroll:
          direction: up
          position: center
          scrollLimit: 4

  - name: us.functions.cart.removeYourBank
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderConfirmation.ContinueShoppingButton
          then:
            - click:
                identifier: us.mappings.orderConfirmation.ContinueShoppingButton
      - executeFunction:
          name: us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account
      # Navigate to pets tab
      - executeFunction:
          name: us.functions.global.navigation.toSubTab
          params:
            - name: subTabName
              string: Wallet
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.bankNameInWallet
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.bankNameInWallet
                  - identifier: us.mappings.cart.removeBankAccounts
            - click:
                identifier: us.mappings.cart.removeBankAccounts
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.removeBankAccountMessage
                  - identifier: us.mappings.cart.removeBankAccountButton
                  - identifier: us.mappings.cart.removeBankAccountTitle
            - click:
                identifier: us.mappings.cart.removeBankAccountButton
                wait: 5000
            - log: "Removed the bank added successfully!!!!"
          else:
            - log: "No Bank account found to remove and good to go !!!!"

  - name: us.functions.cart.deleteDirectSpendCard
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderConfirmation.ContinueShoppingButton
          then:
            - click:
                identifier: us.mappings.orderConfirmation.ContinueShoppingButton
      - executeFunction:
          name: us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account
      - executeFunction:
          name: us.functions.global.navigation.toSubTab
          params:
            - name: subTabName
              string: Wallet
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.directSpendCardName.inWallet
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.directSpendCardName.inWallet
                  - identifier: us.mappings.cart.directSpendCard.lastFourDigit
                  - identifier: us.mappings.cart.directSpendCard.removeButton
                  - identifier: us.mappings.cart.directSpendCardIcon
            - click:
                identifier: us.mappings.cart.directSpendCard.removeButton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.removeBankAccountMessage
                  - identifier: us.mappings.cart.removeBankAccountButton
                  - identifier: us.mappings.cart.removeBankAccountTitle
            - click:
                identifier: us.mappings.cart.removeBankAccountButton
                wait: 5000
            - log: "Removed the DS card added successfully!!!!"
          else:
            - log: "No DS card Found, Proceeding to the flow!!!!"

  - name: us.functions.cart.verifyVisionItemTile
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - log: Verifying Cart screen
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.verifyPrescriptionAdded
            - name: direction
              string: down
            - name: scrollPosition
              string: center          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifyPrescriptionAdded
            - identifier: us.mappings.cart.prescriptionItems
            - identifier: us.mappings.cart.removeLinkButton
            - identifier: us.mappings.cart.saveForLaterLinkButton
            - identifier: us.mappings.cart.stepperButton

  - name: us.functions.cart.verifyVisionItemTile
    platform: ios
    flow: 
      - storeIn:
          key: executionStage
          value: Transactions 
    # simple scroll to top of cart page
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
            - name: direction
              string: up
            - name: limit
              string: 8
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.verifyPrescriptionAdded
            - name: direction
              string: down
            - name: scrollPosition
              string: center    
      - verifyIdentifier:
          timeout: 60000
          present:
            - identifier: us.mappings.cart.verifyPrescriptionAdded
            - identifier: us.mappings.cart.prescriptionItems
            - identifier: us.mappings.cart.removeButton
            - identifier: us.mappings.cart.saveForLaterButton
            - identifier: us.mappings.cart.stepperButton
            
  - name: us.functions.cart.ineligibleReserveTimeBannerText
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ineligibleItemSubText
            - identifier: us.mappings.cart.ineligibleTimeHeader
            - identifier: us.mappings.cart.ineligibleItemIcon

  - name: us.functions.cart.ineligibleReserveTimeBannerText
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ineligibleTimeHeader
            - identifier: us.mappings.cart.ineligibleItemSubText
            - identifier: us.mappings.cart.ineligibleItemIcon

  - name: us.functions.cart.visionItem.verifyRestrictedPrescription
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIcon
      - log: Navigating to cart screen      
      - click:
          identifier: us.mappings.navBar.cartIcon
      - sleep: 
          duration: 5000          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.vision.AddAPrescriptionText
      - log: Prescription label is displayed and item can not be purchased without prescription                     

  - name: us.functions.cart.visionItem.verifyRestrictedPrescription
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIcon
      - log: Navigating to cart screen      
      - click:
          identifier: us.mappings.navBar.cartIcon
      - sleep: 
          duration: 5000          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.vision.AddAPrescriptionText
      - log: Prescription label is displayed and item can not be purchased without prescription     

  - name: us.functions.myItems.reorder.cart.verifySubscriptionItem
    platform: android
    flow:
      - log: Verifying QTY = 1 on cart page stepper
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.seeDetails
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.seeDetails
          then:
            - click:
                identifier: us.mappings.cart.seeDetails

      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.SubscriptionItemName
            - name: direction
              string: down                     
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.reorder.subscriptionStepper
          text:
            - identifier: us.mappings.myItems.reorder.subscriptionStepper
              contains: "1" 
      - log: Selected QTY is displayed on cart page   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.subscription.FREQHyperlink
          text:
            - identifier: us.mappings.cart.subscription.FREQHyperlink
              contains: Every 4 weeks 
      - log: Selected FREQ is displayed on cart page  

  - name: us.functions.myItems.reorder.cart.verifySubscriptionItem
    platform: ios
    flow:
      - log: Verifying QTY = 1 on cart page stepper     
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.itemPresent.itemNameLabel
            - name: direction
              string: down                      
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.reorder.subscriptionStepper
          label:
            - identifier: us.mappings.myItems.reorder.subscriptionStepper
              contains: "1" 
      - log: Selected QTY is displayed on cart page   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.subscription.FREQHyperlink
          label:
            - identifier: us.mappings.cart.subscription.FREQHyperlink
              contains: Every 4 weeks 
      - log: Selected FREQ is displayed on cart page  

  - name: us.functions.myItems.reorder.cart.verifySubscriptionHyperlink
    platform: ios
    flow:
      - log: Verifying Subscription panel from cart page FREQ hyperlink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.saveForLaterButton
            - name: direction
              string: down          
      - click: 
           identifier: us.mappings.cart.subscription.FREQHyperlink
        # Verify subscription panel stepper
      - executeFunction: 
            name: us.functions.myItems.reorder.verifyStepper
        # Verify subscription panel FREQ
      - executeFunction: 
            name: us.functions.myItems.reorder.verifyFREQ 
      - click:
          identifier: us.mappings.myItems.reorder.subscription.stepper.closeBtn

  - name: us.functions.myItems.reorder.verifyStepperQTYMatches
    platform: ios
    flow:
      - log: Verify List page stepper matches cart page subscription stepper
      - click: 
           identifier: us.mappings.cart.navigateBackToMyItemsListPage
      - sleep:
         duration: 5000
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.myItems.reorder.subscriptionItem.stepperCount
      #       - name: direction
      #         string: down          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.reorder.subscriptionItem.stepperCount
          label:
            - identifier: us.mappings.myItems.reorder.subscriptionItem.stepperCount
              contains: "1"                      

  - name: us.functions.myItems.reorder.cart.verifySubscriptionHyperlink
    platform: android
    flow:
      - log: Verifying Subscription panel from cart page FREQ hyperlink
      - click: 
           identifier: us.mappings.cart.subscription.FREQHyperlink
        # Verify subscription panel stepper
      - executeFunction: 
            name: us.functions.myItems.reorder.verifyStepper
        # Verify subscription panel FREQ
      - executeFunction: 
            name: us.functions.myItems.reorder.verifyFREQ 
      - click:
          identifier: us.mappings.myItems.reorder.subscription.stepper.closeBtn                

  - name: us.functions.myItems.reorder.verifyStepperQTYMatches
    platform: android
    flow:
      - log: Verify List page stepper matches cart page subscription stepper
      - click: 
           identifier: us.mappings.cart.navigateBackToMyItemsListPage
      - sleep:
         duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.myItems.reorder.subscriptionItem.stepperCount
            - name: direction
              string: down          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.reorder.subscriptionItem.stepperCount
          text:
            - identifier: us.mappings.myItems.reorder.subscriptionItem.stepperCount
              contains: "1"                                    

  - name: us.functions.cart.decreaseToMinQty
    platform: ios
    flow:
      - if:
          condition: ${secondItem} == null
          then:
            - verifyIdentifier: 
                present:
                  - identifier: us.mappings.cart.itemDecrementButton
            - loop:
                begin: 0
                end: ${Qty}
                storeIndex: i
                mode: increment
                flow:
                  - click:
                      identifier: us.mappings.cart.itemDecrementButton
                  - log: $i
      - if:
          condition: ${secondItem} == true
          then:
            - verifyIdentifier: 
                present:
                  - identifier: us.mappings.cart.itemDecrementButtonSecondItem
            - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.cart.itemDecrementButtonSecondItem
                    - name: direction
                      string: down      
            - loop:
                begin: 0
                end: ${Qty}
                storeIndex: i
                mode: increment
                flow:
                  - click:
                      identifier: us.mappings.cart.itemDecrementButtonSecondItem
                  - log: $i
            - storeIn:
                key: secondItem
                value: false

  - name: us.functions.cart.verifyMultiOrderQtyBottomSheet
    platform: ios
    flow: 
      - sleep: 
          duration: 5000  
      - verifyIdentifier:
          present: 
           - identifier: us.mappings.search.wantMoreItemText          
           - identifier: us.mappings.search.shipInteadCTAMoq 
      - click:
          identifier: us.mappings.search.shipInteadCTAMoq

  - name: us.functions.cart.IncreaseItemAndVerifyMOQ
    platform: ios
    flow:        
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.itemSaveForLaterLink
      - click:
          identifier: us.mappings.item.atc.incrementStepper
      - sleep: 
          duration: 5000
      - executeFunction:
          name: us.functions.cart.verifyMultiOrderQtyBottomSheet                     

  - name: us.functions.cart.decreaseSharedItemQuantityForMOQ
    platform: ios
    flow:        
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.reviewOrder.subtotalPricelabel
          position: center
      - sleep: 
          duration: 5000
      - executeFunction:
          name: us.functions.cart.decreaseToMinQty   

  - name: us.functions.cart.validateAddOnServicesNotAvailable
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIcon
      - click:
          identifier: us.mappings.navBar.cartIcon
      - sleep:
         duration: 7000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.addOnServicesNotAvailable
          then:
            - click:
                identifier: us.mappings.cart.clickOnRemoveAndContinueButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.cart.addOnServicesNotAvailable
      - sleep:
         duration: 5000  

  - name: us.functions.cart.decreaseToMinQty
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          condition: ${secondItem} == null
          then:
            - verifyIdentifier: 
                present:
                  - identifier: us.mappings.cart.itemDecrementButton
            - loop:
                begin: 0
                end: ${Qty}
                storeIndex: i
                mode: increment
                flow:
                  - click:
                      identifier: us.mappings.cart.itemDecrementButton
                  - log: $i
      - if:
          condition: ${secondItem} == true
          then:
            - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.cart.partialCheckout.shippingCheckoutbutton
                    - name: direction
                      string: down
                    - name: scrollPosition
                      string: center        
            - loop:
                begin: 0
                end: ${Qty}
                storeIndex: i
                mode: increment
                flow:
                  - click:
                      identifier: us.mappings.cart.itemDecrementButton
                  - log: $i
            - storeIn:
                key: secondItem
                value: false

  - name: us.functions.cart.IncreaseItemAndVerifyMOQ
    platform: android
    flow:        
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondItem.saveForLaterButton
          position: center
      - click:
          identifier: us.mappings.cart.increaseQuantity.button
      - sleep: 
          duration: 5000
      - executeFunction:
          name: us.functions.cart.verifyMultiOrderQtyBottomSheet

  - name: us.functions.cart.decrementQuantity
    platform: android
    flow:  
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondItem.saveForLaterButton
          position: center
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.cart.decrementQuantityButton
            - log: $i  

  - name: us.functions.cart.decrementQuantity
    platform: ios
    flow:  
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondItem.saveForLaterButton
          position: center
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.cart.itemDecrementButton
            - log: $i 

  - name: us.functions.cart.IncreaseItemAndselectPickupfromMOQ
    platform: android
    flow:
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondItem.saveForLaterButton
          position: center
      - click:
          identifier: us.mappings.cart.increaseQuantity.button
      - click:
          identifier: us.mappings.cart.moq.keep4forPickupCTA
      - sleep: 
          duration: 5000
      - scroll:
          direction: up
      - verifyIdentifier:
          text:
            - identifier: us.mappings.cart.pickup.cardTitle
              contains: pickup 


  - name: us.functions.cart.IncreaseItemAndselectPickupfromMOQ
    platform: ios
    flow:
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondItem.saveForLaterButton
          position: center
      - click:
          identifier: us.mappings.cart.increaseQuantity.button
      - sleep: 
          duration: 3000
      - click:
          identifier: us.mappings.cart.moq.keepForPickupCTA
      - sleep: 
          duration: 5000
      - scroll:
          direction: up
      - verifyIdentifier:
          present: 
           - identifier: us.mappings.cart.pickup.cardTitle


  - name: us.functions.cart.verifyMultiOrderQtyBottomSheet
    platform: android
    flow: 
      - sleep: 
          duration: 5000  
      - verifyIdentifier:
          present: 
           - identifier: us.mappings.search.wantMoreItemText          
           - identifier: us.mappings.search.shipInteadCTAMoq 
      - click:
          identifier: us.mappings.search.shipInteadCTAMoq
      - sleep: 
          duration: 5000  

  - name: us.functions.cart.changeTime
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - click:
          identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - sleep:
          duration: 2000

  - name: us.functions.cart.walmartAssistantPopup
    platform: ios
    flow:
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.cart.walmartAssistantPopup
      #     then:
      #       - click:
      #           identifier: us.mappings.cart.walmartAssistantClose
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.cart.walmartAssistantPopup
            - click:
                identifier: us.mappings.cart.walmartAssistantClose
          catch:
            flow:
              - log: No Walmart Assistant pop up screen displayed


  - name: us.functions.cart.storeChangePopUp  
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.storePopUp
          then:
            - click:
                identifier: us.mappings.cart.storePopUPCloseButton 

  - name: us.functions.cart.backToDeliveryOrPickup
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switching.switchtopickupButton
          then:
            - click: 
                identifier: us.mappings.cart.switching.switchtopickupButton             
          else:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.switching.switchtoDeliveryButton
                  - name: direction
                    string: down
            - click: 
                identifier: us.mappings.cart.switching.switchtoDeliveryButton  

  - name: us.functions.cart.backToDeliveryOrPickup
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.switchtopickupButton
          then:
            - click: 
                identifier: us.mappings.cart.switchtopickupButton               
          else:
            - click: 
                identifier: us.mappings.cart.switching.switchtodeliveryButton

  # FUNCTIONS for Drone Validations for Cart
  - name: us.functions.cart.verifyAndReserveDroneSlot
    platform: ios
    flow:
      - sleep:
          duration: 3000
      - scroll:
          direction: Up
          untilIdentifier: us.mappings.cart.scheduledDelivery.cardTitle
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.cart.droneDeliveryUpsell.badge
          then:
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.cart.droneDeliveryUpsell.reserve.cta
            - click:
                identifier: us.mappings.cart.droneDeliveryUpsell.reserve.cta
      # Once drone slot is reserved verify card updates with Drone Delivery details.    
      - verifyIdentifier:
          timeout: 12000
          present:
            - identifier: us.mappings.cart.droneDelivery.header 
            - identifier: us.mappings.cart.droneDelivery.arrivesText
            - identifier: us.mappings.cart.droneDelivery.fee
            - identifier: us.mappings.cart.droneCapacity.header
            - identifier: us.mappings.cart.droneCapacity.info
          #  - identifier: us.mappings.cart.droneDelivery.arrivesByTime.Text
      # Clicking Contextual help icon for Drone Delivery triggers Bottom sheet.    
      - click:
          identifier: us.mappings.cart.droneCapacity.info
          wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.droneCapacity.header.bottomSheet
            - identifier: us.mappings.cart.droneCapacity.textBody.bottomSheet
      - click:
          identifier: us.mappings.cart.droneCapacity.textBody.gotIt.cta
          wait: 3000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.droneDelivery.fee.pos.text
            - identifier: us.mappings.cart.droneDelivery.fee.pos.price

    # Drone Delivery via cart reserve-slot upsell CTA / Slot auto-reserved via landing page
  - name: us.functions.cart.verifyAndReserveDroneSlot
    platform: android
    flow:
      - sleep:
          duration: 3000
      - scroll:
          direction: Up
          untilIdentifier: us.mappings.cart.scheduledDelivery.cardTitle
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.cart.droneDeliveryUpsell.badge
          then:
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.cart.droneDeliveryUpsell.reserve.cta
            - click:
                identifier: us.mappings.cart.droneDeliveryUpsell.reserve.cta
      # Once drone slot is reserved verify cart updates with Drone Delivery details.    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.droneDelivery.header 
            - identifier: us.mappings.cart.droneDelivery.arrivesText
            - identifier: us.mappings.cart.droneDelivery.fee
            - identifier: us.mappings.cart.droneCapacity.header
            - identifier: us.mappings.cart.droneCapacity.info
            - identifier: us.mappings.cart.droneDelivery.droneTimerText
            - identifier: us.mappings.cart.droneDelivery.droneTimer
      - click:
          identifier: us.mappings.cart.droneCapacity.info
          wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.droneCapacity.header.bottomSheet
            - identifier: us.mappings.cart.droneCapacity.textBody.bottomSheet
      - click:
          identifier: us.mappings.cart.droneCapacity.textBody.gotIt.cta
          wait: 3000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.droneDelivery.fee.pos.text
            - identifier: us.mappings.cart.droneDelivery.fee.pos.price 

  - name: us.functions.cart.P13NCarousel.addNonVisionItem
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.home.p13nCarouselTitle  
          position: center
      - log: p13n module is present
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.firstItem
      - click:
          identifier: us.mappings.myItems.firstItem
      - sleep:
          duration: 4000
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.item.postAddToCartSteps                 
     
  - name: us.functions.cart.P13NCarousel.addNonVisionItem
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle    
      - scroll:
          direction: down
          untilIdentifier: us.mappings.home.p13nCarousel.firstItem 
          position: center
      - log: p13n module is present
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.p13nCarousel.firstItem 
      - click:
          identifier: us.mappings.home.p13nCarousel.firstItem 
      - sleep:
          duration: 4000
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.item.postAddToCartSteps

  - name: us.functions.cart.connectYourBank.addingDirectSpend
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.addNewPaymentMethod.button
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.addNewPaymentMethod.button
      - click:
          identifier: us.mappings.cart.addNewPaymentMethod.button
      - sleep:
          duration: 4000
#      - if:
#          identifier:
#            notPresent:
#              - identifier: us.mappings.cart.connectYourBank.button
#          then:
#            - scroll:
#                direction: down
#                untilIdentifier: us.mappings.cart.connectYourBank.button
#            - click:
#                identifier: us.mappings.cart.connectYourBank.button
#          else:
#            - click:
#                identifier: us.mappings.cart.connectYourBank.button
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.button
          then:
            - log: "Connect Your bank Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.button
      - click:
          identifier: us.mappings.cart.connectYourBank.button
      - log: "Clicked on Connect Your bank Button."
      - sleep:
          duration: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.bankSearchBar
      - enterText:
          identifier: us.mappings.cart.bankSearchBar
          string: ${bankName}
          pressEnter: true
      - click:
          identifier: us.mappings.cart.selectSearchedBank
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.pageTitle
            - identifier: us.mappings.cart.selectedBankName
            - identifier: us.mappings.cart.linkToVisitBankWebsite
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.nextButton
          then:
            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.bankAccountUserName
            - identifier: us.mappings.cart.bankAccountPassword
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - enterText:
          identifier: us.mappings.cart.bankAccountUserName
          string: ${bankUserName}
          pressEnter: true
      - enterText:
          identifier: us.mappings.cart.bankAccountPassword
          string: ${bankPassword}
          pressEnter: true
      - sleep:
          duration: 10000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.connectYourBank.nextButton
          then:
            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.connectYourBank.nextButton
            - identifier: us.mappings.cart.connectYourBank.cancelButton
      - click:
          identifier: us.mappings.cart.connectYourBank.nextButton
      - sleep:
          duration: 10000
#      - verifyIdentifier:
#          present:
#            - identifier: us.mappings.cart.selectAccount.text
#      - if:
#          identifier:
#            notPresent:
#              - identifier: us.mappings.cart.connectYourBank.nextButton
#          then:
#            - log: "Connect Your bank NEXT Button is not visible. scrolling down"
#            - scroll:
#                direction: down
#                untilIdentifier: us.mappings.cart.connectYourBank.nextButton
      - click:
          identifier: us.mappings.wallet.continueButton
      - sleep:
          duration: 3000
#      - verifyIdentifier:
#          present:
#            - identifier: us.mappings.cart.accountSavedText
      - if:
          identifier:
            present:
              - identifier: us.mappings.wallet.select.DSCardCheckbox.unChecked
          then:
            - log: "Selecting the Direct Spend Card added for this transaction."
            - click:
                identifier: us.mappings.wallet.select.DSCardCheckbox.unChecked
                wait: 3000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.DSCardCheckbox.selected
                  - identifier: us.mappings.cart.bankAccount.selected
#      - click:
#          identifier: us.mappings.wallet.continueButton
#          wait: 5000
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.reviewOrderPage.directSpendCard.usedForPayment
            - identifier: us.mappings.cart.payByBank.usedForPayment
      - log: "Verified the multi tender payments successfully for this order!!!!"
      - log: "Added the bank to the account successfully!!!"
  

# Save all for later and empty cart
  - name: us.functions.cart.verifySaveAllForLater
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.saveAllForLater
          then:      
            - click:
                identifier: us.mappings.cart.saveAllForLater
          else: 
            - click:
                identifier: us.mappings.cart.itemSaveForLaterLink
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.emptyCartText

  - name: us.functions.cart.moveItemToCart
    platform: android
    flow:
      - sleep:
          duration: 2000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.moveToCartButton
            - name: direction
              string: down  
      - click:
          identifier: us.mappings.cart.moveToCartButton
          wait: 5000
      - sleep:
          duration: 10000

  - name: us.functions.cart.verifyDiscountOnVisionItem
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.visionItem.promoDiscount
            - name: direction
              string: down      
      - if:
          condition: ${itemType} == 'Eyeglasses'       
          then:         
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.cart.visionItem.promoDiscount
                    contains: Saving 20%
            - log: Promo discount 'Saving 20%' for second pair of eyeglasses is displayed on cart page
          else:
            - if:
                condition: ${itemType} == 'Sunglasses'       
                then:         
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.cart.visionItem.promoDiscount
                          contains: Saving 35%
                  - log: Promo discount 'Saving 35%' for second pair of sunglasses is displayed on cart page

  - name: us.functions.cart.verifyDiscountOnVisionItem
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.visionItem.promoDiscount
            - name: direction
              string: down      
      - if:
          condition: ${itemType} == 'Eyeglasses'       
          then:         
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.visionItem.promoDiscount
                    contains: Saving 20%
            - log: Promo discount 'Saving 20%' for second pair of eyeglasses is displayed on cart page
      - if:
          condition: ${itemType} == 'Sunglasses'       
          then:         
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.visionItem.promoDiscount
                    contains: Saving 35%


            - log: Promo discount 'Saving 35%' for second pair of sunglasses is displayed on cart page


  - name: us.functions.cart.verifyDiscountAppliedTextInCart
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.savingsAppliedText
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.taxesLineItem
            - name: direction
              string: down 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.savingsText
            - identifier: us.mappings.cart.wasPrice
            - identifier: us.mappings.cart.savingsValue
            - identifier: us.mappings.cart.discountedPrice

  - name: us.functions.cart.verifyAllCartItems
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.allItemsAvailable
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.allItemsAvailable         
      - log: "8 items present in cart"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountValue 
      - getString:
          identifier: us.mappings.cart.estimatedTotalAmountValue
          storeIn: Price 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${Price}
          getResponse:
            storeIn: PriceAmount
      - log: "Price is stored in a variable"
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader     


  - name: us.functions.cart.deselectCartItem
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.pickUpOrDelivery
      - click:
          identifier: us.mappings.cart.firstItemUncheck
      - sleep:
          duration: 1000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.accCheckBox 
      - scroll:
          direction: down
          untilIdentifier: us.mapings.cart.shippingItemUncheck
      - click:
          identifier: us.mapings.cart.shippingItemUncheck
      - executeFunction: 
          name: us.functions.cart.accPromiseDateCrossCheck


      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.AddExpertHelp
      - click:
          identifier: us.mappings.cart.secondshipingItemUncheck
      - executeFunction: 
          name: us.functions.cart.PromiseDateCrossCheck


      - scroll:
          direction: down
          position: top
          untilIdentifier: us.mappings.cart.digitalDelivery
      - scroll:
          direction: down
          scrollLimit: 1
      - click:
          identifier: us.mapings.cart.shippingItemUncheck


  - name: us.functions.cart.accPromiseDateCrossCheck
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.verifyInstallationAtAutocareCenterText
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.accPromiseTime 
      - getString:
          identifier: us.mappings.cart.accPromiseTime 
          storeIn: AccChangedShippingDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${AccChangedShippingDate}
          getResponse:
            storeIn: AccChangedShippingDate
      - log: " Date is stored in a variable" 
      - if:
          condition: ${AccChangedShippingDate} == ${AccShippingDate}
          then:
            - log:
                message: Dates are same even after deselecting item !
                color: CYAN  
          else:
            - log:
                message: Dates are different !
                color: CYAN  

  - name: us.function.cart.accCheckBox
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.accCheckBox 
      - click:
          identifier: us.mappings.cart.accCheckBox 
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader

  - name: us.function.cart.checkoutSelectedItems
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.evergreen.continue.to.checkout
          then:
            - click:
                identifier: us.mappings.evergreen.continue.to.checkout


  - name: us.functions.cart.verifyCartItemsAfter
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.allItemsAvailableAfter
      - scroll:
          direction: down
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.allItemsAvailableAfter
      - log: "4 item is present in cart"
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalAmountValue 
      - getString:
          identifier: us.mappings.cart.estimatedTotalAmountValue
          storeIn: ChangedPrice 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ChangedPrice}
          getResponse:
            storeIn: ChangedPriceAmount
      - log: "Price is stored in a variable" 
      - if:
          condition: ${Price} == ${ChangedPrice}
          then:
            - log:
                message: No changes in Shipping Date !
                color: CYAN  
          else:
            - log:
                message: Prices are different !
                color: CYAN           


  - name: us.function.cart.promiseDateRangeVisible
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader
      - scroll:
          direction: down
          position: center
          untilIdentifier: us.mappings.cart.accPromiseTime 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.accPromiseTime 
      - getString:
          identifier: us.mappings.cart.accPromiseTime 
          storeIn: AccShippingDate 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${AccShippingDate}
          getResponse:
            storeIn: AccShippingDate
      - log: "Promise time of item is visible and Date stored in variable"

      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.shippingOptionInCart
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.shippingPromiseDate
      - getString:
          identifier: us.mappings.cart.shippingPromiseDate
          storeIn: ShippingActualDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ShippingActualDate}
          getResponse:
            storeIn: ShippingActualDate
      - log: "Promise Date item is visible and stored in a variabe for cross checking"
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.mainHeader


  - name: us.functions.cart.PromiseDateCrossCheck
    platform: android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.shippingPromiseDate
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.shippingPromiseDate
      - getString:
          identifier: us.mappings.cart.shippingPromiseDate
          storeIn: ShippingChangedDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ShippingChangedDate}
          getResponse:
            storeIn: ShippingChangedDate
      - log: "Promise Date item is visible and stored in a variabe for cross checking"
      - if:
          condition: ${ShippingActualDate} == ${ShippingChangedDate}
          then:
            - log:
                message: No changes in Shipping Date !
                color: CYAN  
          else:
            - log:
                message: Shipping Date has been updated !
                color: CYAN  


  - name: us.functions.cart.reserveTime
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.reserveaTime
      - click:
          identifier: us.mappings.cart.tommorrowSlot
      - click:
          identifier: us.mappings.cart.tommorrowSlotTime
          wait: 3000
      - click:
          identifier: us.mappings.deliveryAddress.continueButton




#################### ILCC IOS FXN's ###################

  - name: us.functions.cart.verifyAllCartItems
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.allItemsAvailableBefore     
      - log: "6 items present in cart"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalCost 
      - getString:
          identifier: us.mappings.cart.estimatedTotalCost
          storeIn: Price 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${Price}
          getResponse:
            storeIn: PriceAmount
      - log: "Price is stored in a variable"

  - name: us.functions.cart.deselectCartItem
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      # - click:
      #     identifier: us.mappings.cart.firstcheckBox
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.thirdcheckBox
          position: center
      - click:
          identifier: us.mappings.cart.thirdcheckBox
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.fifthCheckBox
      - click:
          identifier: us.mappings.cart.fifthCheckBox
      - executeFunction: 
          name: us.functions.cart.accPromiseDateCrossCheck
      # - scroll:
      #     direction: down
      #     untilIdentifier: us.mappings.cart.seventhCheckBox
      #     position: center
      # - click:
      #     identifier: us.mappings.cart.seventhCheckBox
      - executeFunction: 
          name: us.functions.cart.PromiseDateCrossCheck


  - name: us.functions.cart.accPromiseDateCrossCheck
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.verifyInstallationAtAutocareCenterText
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.accPromiseTime
      - getString:
          identifier: us.mappings.cart.accPromiseTime
          storeIn: AccChangedShippingDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${AccChangedShippingDate}
          getResponse:
            storeIn: AccChangedShippingDate
      - log: " Date is stored in a variable" 
      - if:
          condition: ${AccChangedShippingDate} == ${AccShippingDate}
          then:
            - log:
                message: Dates are same even after deselecting item !
                color: CYAN  
          else:
            - log:
                message: Dates are different !
                color: CYAN  

  - name: us.function.cart.accCheckBox
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
          wait: 1000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.tireInstallationCheckBox
          position: center
      - click:
          identifier: us.mappings.cart.tireInstallationCheckBox
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: us.mappings.cart.accPromiseTime
      - getString:
          identifier: us.mappings.cart.accPromiseTime
          storeIn: AccShippingDate 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${AccShippingDate}
          getResponse:
            storeIn: AccShippingDate
      - log: "Promise time of item is visible and Date stored in variable"       
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
          wait: 1000


  - name: us.functions.cart.verifyCartItemsAfter
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.itemsAvailableAfter
      - log: "4 item is present in cart"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.estimatedTotalCost
      - getString:
          identifier: us.mappings.cart.estimatedTotalCost
          storeIn: ChangedPrice 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ChangedPrice}
          getResponse:
            storeIn: ChangedPriceAmount
      - log: "Price is stored in a variable" 
      - if:
          condition: ${Price} == ${ChangedPrice}
          then:
            - log:
                message: No changes in Shipping Date !
                color: CYAN  
          else:
            - log:
                message: Prices are different !
                color: CYAN           


  - name: us.function.cart.promiseDateRangeVisible
    platform: ios
    flow:
      - scroll:
          direction: down
          position: center
          untilIdentifier: us.mappings.cart.shippingPromiseTime
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.shippingPromiseTime
      - getString:
          identifier: us.mappings.cart.shippingPromiseTime
          storeIn: ShippingActualDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ShippingActualDate}
          getResponse:
            storeIn: ShippingActualDate
      - log: "Promise Date item is visible and stored in a variabe for cross checking"
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.sc.noSlotBooked.cardTitle
          wait: 1000


  - name: us.functions.cart.PromiseDateCrossCheck
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.shippingPromiseTime
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.shippingPromiseTime
      - getString:
          identifier: us.mappings.cart.shippingPromiseTime
          storeIn: ShippingChangedDate
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${ShippingChangedDate}
          getResponse:
            storeIn: ShippingChangedDate
      - log: "Promise Date item is visible and stored in a variabe for cross checking"
      - if:
          condition: ${ShippingActualDate} == ${ShippingChangedDate}
          then:
            - log:
                message: No changes in Shipping Date !
                color: CYAN  
          else:
            - log:
                message: Shipping Date has been updated !
                color: CYAN  

  - name: us.functions.cart.seeAllDetails
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
          wait: 1000
      - click:
          identifier: us.mappings.cart.firstSeeDetails
      - sleep:
          duration: 2000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.secondSeeDetails
          position: center
      - click:
          identifier: us.mappings.cart.secondSeeDetails
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.thirdSeeDetails
          position: center
      - click:
          identifier: us.mappings.cart.thirdSeeDetails
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.fourthSeeDetails
          position: center
      - click:
          identifier: us.mappings.cart.fourthSeeDetails

  - name: us.functions.cart.verifyExtraSavingsInCartPage
    platform: android
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.savingsAppliedCheckbox
            - identifier: us.mappings.cart.savingsTextInCart
            - identifier: us.mappings.cart.youSaveText
  
  - name:  us.functions.cart.handleUnavailableItemBottomTray
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 60000
                present:
                  - identifier: us.mappings.cart.itemUnavailableWarningHeader
          catch:
            flow:
              - failTest:
                  message: ENV_FAILURE - ${env} - Item Unavailable warning bottom sheet missing"
      - click:
          identifier: us.mappings.cart.missingAnything.closeButton
      - sleep:
          duration: 5000
          
  - name:  us.functions.reviewOrder.applyWalmartCash
    platform: android
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.applyWalmartCashButtom    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.applyWalmartCashButtom
      - click:
          identifier: us.mappings.reviewOrder.applyWalmartCashButtom
      - sleep:
          duration: 5000
          
  - name: us.functions.cart.Applyrewards
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.walmartCash.rewardsBanner
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplus.rewardsEligibilityButton
          then:
            - click:
                identifier: us.mappings.cart.wplus.rewardsEligibilityButton
            - log: "Rewards got applied"
          else:
          - failTest:
               message: "FAILURE - ${env} - Walmart cash Rewards is not displayed"  

  - name: us.mappings.cart.verifyDriverTip
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.reviewOrder.applyedDriverTip
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.applyedDriverTip
          then:
            - log: "Driver tip amount is displayed correctly"
          else:
          - failTest:
              message: "FAILURE - ${env} - Driver tip amount is not displayed correctly"

  - name: us.mappings.cart.purchaseOrderPage.VerifyDriverTip
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.purchaseOrder.VerifyDriverTip
      - if:
          identifier:
            present:
            - identifier: us.mappings.cart.purchaseOrder.VerifyDriverTip
          then:
            - log: "Driver tip amount is displayed correctly"
          else:
            - failTest:
                message: "FAILURE - ${env} - Driver tip amount is not displayed correctly"
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wplus.rewardsEligibilityButton
          then:
            - click:
                identifier: us.mappings.cart.wplus.rewardsEligibilityButton
            - log: "Rewards got applied"
          else:
          - failTest:
               message: "FAILURE - ${env} - Walmart cash Rewards is not displayed"          

#EDC/A2H
  - name: us.functions.cart.verifyA2HSlot
    platform: ios
    flow:
      - if:
          condition: ${page} == 'cart'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.A2HTimeSlots
            - click:
                identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.A2HTimeSlots.viewAll

      - if:
          condition: ${page} == 'review order'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reviewOrder.A2HSelectedTimeSlotInReviewOrder

      - if:
          condition: ${page} == 'order confirmation'
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.orderConfirmation.A2HSelectedTimeSlotInOrderConfirmation
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.orderConfirmation.A2HSelectedTimeSlotInOrderConfirmation

  - name: us.functions.cart.reserveA2HSlot
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.evergreen.deliveryFromStore.text.on.reviewOrder.page
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.A2HselectedTimeSlot
      - click:
          identifier: us.mappings.cart.tommorrowSlotTime         

  # New A2H and EDC intiative Functions
  - name: us.functions.cart.verifyA2HSlot
    platform: android
    flow:
      - if:
          condition: ${page} == 'cart'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.A2HTimeSlots
            - click:
                identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.A2HTimeSlots.viewAll
      - if:
          condition: ${page} == 'review order'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reviewOrder.A2HSelectedTimeSlotInReviewOrder

      - if:
          condition: ${page} == 'order confirmation'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.orderConfirmation.A2HSelectedTimeSlotInOrderConfirmation

  - name: us.functions.cart.reserveA2HSlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.evergreen.deliveryFromStore.text.on.reviewOrder.page
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.A2HselectedTimeSlot
      - click:
          identifier: us.mappings.cart.tommorrowSlotTime

  - name: us.functions.cart.EDCBanner
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.EDCBanner
      - log: "EDC Banner present in cart as expected"

  - name: us.functions.cart.EDCBanner
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.EDCBanner
      - log: "EDC Banner present in cart as expected"

  - name: us.functions.reviewOrder.applyWalmartCash.wallet
    platform: android
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.applyWalmartCashButtom
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.applyWalmartCashButtom
      - click:
          identifier: us.mappings.reviewOrder.editPayment
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wallet.walmartCashCard
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.wallet.walmartCashCard.checkbox.notChecked
                then:
                  - log: "The Walmart Cash checkbox is not checked, Will select and proceed !!!"
                  - click:
                      identifier: us.mappings.cart.wallet.walmartCashCard.checkbox.notChecked
                      wait: 1500
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.wallet.walmartCashCard.checkbox.Checked
                else:
                  - log: "The Walmart Cash checkbox is already checked !!!"
            - click:
                identifier: us.mappings.item.continue
                wait: 2000
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reviewOrder.applyWalmartCashButtom
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} Walmart cash card not present"

  - name: us.functions.reviewOrder.selectOtherCreditCard.thanDefault
    platform: android
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.editPayment
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.editPayment
      - click:
          identifier: us.mappings.reviewOrder.editPayment
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.wallet.secondCreditCard.thirdSlot
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.wallet.defaultCardText
            - click:
                identifier: us.mappings.cart.wallet.secondCreditCard.thirdSlot
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.wallet.defaultCardText
            - click:
                identifier: us.mappings.item.continue
                wait: 2000

# WIC functions 
# Android
 # This function ask for authorization for transaction before placing the order with wic card
  - name: us.functions.cart.addWicCardAndPlaceOrder
    platform: android
    flow:
    # if we need to add new card every time , this code can be used 
      # - log: "Adding the WIC card to the account!!!!"
      # - log: "Entering the WIC card details!!!!"
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.reviewOrder.editPayment
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: us.mappings.reviewOrder.editPayment
      #       - click:
      #           identifier: us.mappings.reviewOrder.editPayment
      #       - sleep:
      #           duration: 4000
      #       - if:
      #           identifier:
      #             notPresent:
      #               - identifier: us.mappings.cart.addNewPaymentButton
      #           then:
      #             - scroll:
      #                 direction: down
      #                 untilIdentifier: us.mappings.cart.addNewPaymentButton
      #       - click:
      #           identifier: us.mappings.cart.addNewPaymentButton
      #       - sleep:
      #           duration: 3000
      #       - click:
      #           identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      #       - enterText:
      #           identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      #           string: ${CardNumber}
      #       - sleep:
      #           duration: 1000
      # - click:
      #     identifier: us.mappings.paymentMethod.1Pitem.overlay.saveButton
      # - sleep:
      #     duration: 1000
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.WICPinAuthorizationBanner
      # - click:
      #     identifier: us.mappings.cart.WICPinAuthorizationBannerContinueButton
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.revieworder.WICTooManyAttempts
      #     then:
      #       - failTest:
      #           message: "FAILURE - ${env} - You have tried to many times today Check after 24 Hrs"
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
      # - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
      # - click:
      #     identifier: us.mappings.reviewOrder.WicPin.WicField            
      # - enterText:
      #     identifier: us.mappings.reviewOrder.WicPin.WicField
      #     string: ${Pin}
      # - click:
      #     identifier: us.mappings.reviewOrder.WicPin.ProceedBox
      # - sleep:
      #     duration: 3000
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.revieworder.wicCardSavedIconCheck
      #       - identifier: us.mappings.reviewOrder.wicFruitsAndVegetablesLabelCheck
      - scroll:
          direction: down
          untilIdentifier: us.mappings.reviewOrder.placeOrderButton
      - click:
          identifier: us.mappings.reviewOrder.placeOrderButton
      - sleep:
          duration: 3000
      - log: "Placing Order with Wic Card , Pin might be requried"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.WicTransactionAlertDialog
      - click:
          identifier: us.mappings.reviewOrder.WicTransactionAlertDialogContinueButton
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
      - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
      - click:
          identifier: us.mappings.reviewOrder.WicPin.WicField            
      - enterText:
          identifier: us.mappings.reviewOrder.WicPin.WicField
          string: ${Pin}
      - click:
          identifier: us.mappings.reviewOrder.WicPin.ProceedBox
      - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin} ,and placing order "
      - sleep:
          duration: 5000

 # This function Checks the balance in the  cart page when we try to checkout with wic card
  - name: us.functions.cart.wic.checkBalance
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.WICPBalanceDialog
          then:
              - click:
                  identifier:  us.mappings.cart.wicBalanceCheckContinue
              - sleep:
                    duration: 3000
              - log: "Checking balance , Pin might be requried"
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
              - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
              - click:
                  identifier: us.mappings.reviewOrder.WicPin.WicField            
              - enterText:
                  identifier: us.mappings.reviewOrder.WicPin.WicField
                  string: ${Pin}
              - click:
                  identifier: us.mappings.reviewOrder.WicPin.ProceedBox
              - sleep:
                    duration: 3000
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.reviewOrder.navBarTitle
              - log: "Navigated to Review Order Screen "                          

  - name: us.function.orderConfirmation.wicCardCheck
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.reviewOrderPage.wicCardCheck
          then:
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.cart.reviewOrderPage.wicCardCheck
                    - name: direction
                      string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.reviewOrderPage.wicCardCheck
            - identifier: us.mappings.cart.reviewOrderPage.wicFruitsAndVegetables

  # Wic Ios functions
 # This function Checks the balance in the  cart page when we try to checkout with wic card
  - name: us.functions.cart.wic.checkBalance
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.WICPBalanceDialog
          then:
              - click:
                  identifier:  us.mappings.cart.wicBalanceCheckContinue
              - sleep:
                    duration: 3000
              - log: "Checking balance , Pin might be requried"
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
              - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
              - click:
                  identifier: us.mappings.reviewOrder.WicPin.WicField            
              - enterText:
                  identifier: us.mappings.reviewOrder.WicPin.WicField
                  string: ${Pin}
              - click:
                  identifier: us.mappings.reviewOrder.WicPin.ProceedBox
              - sleep:
                    duration: 3000
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.reviewOrder.navBarTitle
              - log: "Navigated to Review Order Screen "                          

 # This function ask for authorization for transaction before placing the order with wic card
  - name: us.functions.cart.addWicCardAndPlaceOrder
    platform: ios
    flow:
    # if we need to add new card every time , this code can be used 
      # - log: "Adding the WIC card to the account!!!!"
      # - log: "Entering the WIC card details!!!!"
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.reviewOrder.editPayment
      #     then:
      #       - scroll:
      #           direction: down
      #           untilIdentifier: us.mappings.reviewOrder.editPayment
      #       - click:
      #           identifier: us.mappings.reviewOrder.editPayment
      #       - sleep:
      #           duration: 4000
      #       - if:
      #           identifier:
      #             notPresent:
      #               - identifier: us.mappings.cart.addNewPaymentButton
      #           then:
      #             - scroll:
      #                 direction: down
      #                 untilIdentifier: us.mappings.cart.addNewPaymentButton
      #       - click:
      #           identifier: us.mappings.cart.addNewPaymentButton
      #       - sleep:
      #           duration: 3000
      #       - click:
      #           identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      #       - enterText:
      #           identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
      #           string: ${CardNumber}
      #       - sleep:
      #           duration: 1000
      # - click:
      #     identifier: us.mappings.paymentMethod.1Pitem.overlay.saveButton
      # - sleep:
      #     duration: 1000
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.cart.WICPinAuthorizationBanner
      # - click:
      #     identifier: us.mappings.cart.WICPinAuthorizationBannerContinueButton
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.revieworder.WICTooManyAttempts
      #     then:
      #       - failTest:
      #           message: "FAILURE - ${env} - You have tried to many times today Check after 24 Hrs"
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
      # - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
      # - click:
      #     identifier: us.mappings.reviewOrder.WicPin.WicField            
      # - enterText:
      #     identifier: us.mappings.reviewOrder.WicPin.WicField
      #     string: ${Pin}
      # - click:
      #     identifier: us.mappings.reviewOrder.WicPin.ProceedBox
      # - sleep:
      #     duration: 3000
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.revieworder.wicCardSavedIconCheck
      #       - identifier: us.mappings.reviewOrder.wicFruitsAndVegetablesLabelCheck
      - scroll:
          direction: down
          untilIdentifier: us.mappings.reviewOrder.placeOrderButton
      - click:
          identifier: us.mappings.reviewOrder.placeOrderButton
      - sleep:
          duration: 3000
      - log: "Placing Order with Wic Card , Pin might be requried"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reviewOrder.WicTransactionAlertDialog
      - click:
          identifier: us.mappings.reviewOrder.WicTransactionAlertDialogContinueButton
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.revieworder.WICPinEntryBottomSheet
      - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin}"
      - click:
          identifier: us.mappings.reviewOrder.WicPin.WicField            
      - enterText:
          identifier: us.mappings.reviewOrder.WicPin.WicField
          string: ${Pin}
      - click:
          identifier: us.mappings.reviewOrder.WicPin.ProceedBox
      - log: "WIC Pin Entry Bottom Sheet is Displayed ,Entering pin no :- ${Pin} ,and placing order "
      - sleep:
          duration: 5000

  - name: us.function.orderConfirmation.wicCardCheck
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.reviewOrderPage.wicCardCheck
          then:
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.cart.reviewOrderPage.wicCardCheck
                    - name: direction
                      string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.reviewOrderPage.wicCardCheck
            - identifier: us.mappings.cart.reviewOrderPage.wicFruitsAndVegetables

  - name: us.functions.homePage.switchAndSaveAndExploreBenefits
    platform: android
    flow:
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.buyNow.navigateback                     
          then: 
            - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                    - name: direction
                      string: down
            - click:
                wait: 2000
                identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox

            - click:
                wait: 2000
                identifier: us.mappings.home.bookNowButton
            #Verifying confirmation splash screen and clicking on "Explore benefits button"
            - verifyIdentifier:
                timeout: 3000
                present:
                    - identifier: us.mappings.home.bookNowButton
            - click:
                identifier: us.mappings.home.bookNowButton
          else:
            - failTest:
                message: "Splash is not displayed"
    
  - name: us.functions.homePage.switchAndSaveAndExploreBenefits
    platform: ios
    flow:

        #Unable to click on items in some parts of the page; as a temporary fix, we are using coordinates. 

        # These coordinates are for button "Switch and Save"
        # We are clicking on this button first so that we are naviagted close to consent button, as we are having issues with actual locators for scrolling.
        # This also verifies, in one way, the error thrown for not selecting the consent checkbox.
        - click:
             wait: 2000
             coordinates: 203,782

        # These coordinates are for consent check box "I agree to the terms (required)"
        - click:
             wait: 2000
             coordinates: 25,650

        # These coordinates are for button "Switch and Save"
        - click:
             wait: 2000
             coordinates: 203,782

         #Verifying confirmation splash screen and clicking on "Explore benefits button"    
        - click:
            wait: 2000
            identifier: us.mapppings.wplus.PaidMembership.exloreAllWplusBenefits

  - name: us.functions.cart.verifySODBanner
    platform: android
    flow:
    - storeIn:
        key: executionStage
        value: Transactions
    - executeFunction:
        name: us.functions.utils.scrollIfNotVisible
        params:
          - name: identifier
            string: us.mappings.cart.verifySODPresentDeliveryTitle
          - name: direction
            string: down
          - name: scrollPosition
            string: center
    - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.verifySODPresentDeliveryTitle
                    contains : You'll need to be present at delivery  # Validated text here 
    - click:
          identifier: us.mappings.cart.SODBanner          
    #Validating all the headers here displayed in Present Delivery address screen.
    - verifyIdentifier: 
          present: 
            - identifier: us.mappings.cart.verifyHighvalueItemsrequiresignature #Highvalue signature text 
            - identifier: us.mappings.cart.verifygotitinpresentdeliveryscreen   #got it button 
    - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.verifyPleasebePresentatDeliveryTitle 
                    contains : You'll need to be present at delivery  # Validated text here
    - verifyIdentifier: 
          text:
            - identifier: us.mappings.cart.verifyHighvalueItemsrequiresignature  
              contains : require a signature or passcode for extra security. We'll include more info in your order details once it's on the way. # Validated text here                
    - click:
          identifier: us.mappings.cart.verifygotitinpresentdeliveryscreen  


  - name: us.functions.cart.verifySODBanner
    platform: ios
    flow:
    - executeFunction:
        name: us.functions.utils.scrollIfNotVisible
        params:
          - name: identifier
            string: us.mappings.cart-cxo.verifySODPresentDeliveryTextios
          - name: direction
            string: down
          - name: scrollPosition
            string: center
    - verifyIdentifier:
           present: 
            - identifier: us.mappings.cart-cxo.verifySODPresentDeliveryTextios #Signaturetext
           label:
                  - identifier: us.mappings.cart-cxo.verifySODPresentDeliveryTextios
                    contains : us.data.prod.sod.deliveryText # Validated text here 
    - click:
          identifier: us.mappings.cart-cxo.verifySODPresentDeliveryTextios        
    #Validating all the headers are displayed in Present Delivery address screen.
    - verifyIdentifier:
          timeout: 50000
          present: 
            - identifier:  us.mappings.cart.verifysignauturetextios #Signaturetext
            - identifier: us.mappings.cart-cxo.verifyHighvalueItemsrequiresignatureios #Highvalutext
          label:
                  - identifier: us.mappings.cart.verifysignauturetextios 
                    contains : us.data.prod.sod.deliveryText2  # Validated text here
    - verifyIdentifier: 
          label:
            - identifier: us.mappings.cart-cxo.verifyHighvalueItemsrequiresignatureios
              contains : us.data.prod.sod.highValueText # Validated text here                
    - click:
          identifier: us.mappings.cart.verifyHighvalueItemsclose
          wait: 2000

    # Day 0 Automation for Major Appliance intiative
  - name: us.functions.cart.majorAppliance.scheduleDelivery
    platform: ios
    flow:
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.navBarTitle
          - identifier: us.mappings.cart.applianceDelivery
          - identifier: us.mappings.cart.scheduleDeliveryMessage
          - identifier: us.mappings.cart.scheduledDeliveryButton
    - click:
          identifier: us.mappings.cart.scheduledDeliveryButton
    - if:
        condition: ${guestuser} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.signInPage
      # Sign in with default account
            - executeFunction:
                name: us.functions.global.authentication.signInAccount
                params:
                  - name: email
                    string: ${customerEmail}
                  - name: password
                    string: ${password}
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.appliance.scheduledDelivery.BottomSheet
    - sleep:
        duration: 5000
    - click:
        identifier: us.mappings.cart.appliance.scheduledDelivery.slotBooking.saveButton
    - sleep:
        duration: 5000
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.appliance.scheduledDelivery.dateConfirmation

  - name: us.functions.cart.majorAppliance.scheduleDelivery
    platform: android
    flow:
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.navBarTitle
          - identifier: us.mappings.cart.applianceDelivery
          - identifier: us.mappings.cart.scheduleDeliveryMessage
          - identifier: us.mappings.cart.scheduledDeliveryButton
    - click:
          identifier: us.mappings.cart.scheduledDeliveryButton
    - if:
        condition: ${guestuser} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.signInPage
      # Sign in with default account
            - executeFunction:
                name: us.functions.global.authentication.signInAccount
                params:
                  - name: email
                    string: $customerEmail
                  - name: password
                    string: $password
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.appliance.scheduledDelivery.BottomSheet
    - sleep:
        duration: 5000
    - click:
        identifier: us.mappings.cart.appliance.scheduledDelivery.slotBooking.saveButton
    - sleep:
        duration: 5000
    - verifyIdentifier:
        present:
          - identifier: us.mappings.cart.appliance.scheduledDelivery.dateConfirmation

  - name: us.functions.cart.verifyDeliveryCharges
    platform: ios
    flow:
    - executeFunction:
        name: us.functions.utils.scrollIfNotVisible
        params:
          - name: identifier
            string: us.mappings.cart.subTotalEffectiveAmount
          - name: direction
            string: down
          - name: scrollPosition
            string: center
    - if:
        condition: ${HaulAway} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.haulawayCharge
    - if:
        condition: ${RoomOfChoice} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.RoomOfChoiceCharge
    - if:
        condition: ${DeliveryAndInstallation} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.DeliveryAndInstallationCharge 

  - name: us.functions.cart.verifyDeliveryCharges
    platform: android
    flow:
    - executeFunction:
        name: us.functions.utils.scrollIfNotVisible
        params:
          - name: identifier
            string: us.mappings.cart.subTotalEffectiveAmount
          - name: direction
            string: down
          - name: scrollPosition
            string: center
    - if:
        condition: ${HaulAway} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.haulawayCharge
    - if:
        condition: ${RoomOfChoice} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.RoomOfChoiceCharge
    - if:
        condition: ${DeliveryAndInstallation} == true
        then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.subtotal.DeliveryAndInstallationCharge      

  - name: us.functions.cart.handleSafetyAdviceAndCheckout
    platform: android
    flow:
      - click:
          identifier: us.mappings.cart.checkoutButton   
          wait: 3000 
      - if:
          identifier:
            present: 
              - identifier: us.mappings.cart.safetyAdviceHeader
          then:
            - click:
                identifier: us.mappings.cart.safetyAdviceContinueWithOneTire
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed

  # Local Market Place 

  - name: us.functions.cart.localMarketPlace.cartPageValidations
    platform: android
    flow:
      - if: 
          condition: ${fulfillment} == 'Delivery'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSellerSLA
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.feeClarity
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.feeClarityInFulfilmentCard                  
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.sellerName
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.deliveredByWalmart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.localMarketPlace.subTotal
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.subTotalDeliveryFee
      - if: 
          condition: ${fulfillment} == 'Pickup'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.pickupFromLocalSeller
                  - identifier: us.mappings.cart.localMarketPlace.pickupFromLocalSellerSLA
                  - identifier: us.mappings.cart.localMarketPlace.pickuFromLocalSeller.address
  # Local Market Place 

  - name: us.functions.cart.localMarketPlace.cartPageValidations
    platform: ios
    flow:
      - if: 
          condition: ${fulfillment} == 'Delivery'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSellerSLA
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.feeClarity
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.feeClarityInFulfilmentCard                  
                  - identifier: us.mappings.cart.localMarketPlace.deliveryFromLocalSeller.fulfilledByWalmart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.localMarketPlace.subTotal
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.subTotalDeliveryFee
      - if: 
          condition: ${fulfillment} == 'Pickup'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.localMarketPlace.pickupFromLocalSeller
                  - identifier: us.mappings.cart.localMarketPlace.pickupFromLocalSellerSLA
                  - identifier: us.mappings.cart.localMarketPlace.pickuFromLocalSeller.address
                  
   # Validation if Cart estimateTotal > 2500 

  # - name: us.functions.cart.verifyCartOrderLimitBottomSheetAppears
  #   platform:  ios
  #   flow:
  #     - scroll:
  #         direction: up
  #         untilIdentifier: us.mappings.cart.navBarTitle
  #     - scroll:
  #         direction: down
  #         untilIdentifier: us.mappings.cart.estimatedTotalAmountInCart
  #     - verifyIdentifier:
  #         present:
  #           - identifier: us.mappings.cart.estimatedTotalAmountInCart 
  #     - executeFunction:
  #         name: us.functions.utils.fetchAmountDisplayed
  #         params:
  #           - name: identifier
  #             string: us.mappings.cart.estimatedTotalAmountInCart
  #           - name: attribute
  #             string: text
  #           - name: delimeter
  #             string: '$'
  #     - storeIn:
  #         key: estimatedTotalBefore
  #         value: ${amountValue}
  #     - if:
  #         condition: ${estimatedTotalBefore} >= 2500
  #         then:
  #           - scroll:
  #               direction: up
  #               untilIdentifier: us.mappings.cart.navBarTitle
  #           - verifyIdentifier:
  #               present:
  #                 - identifier: us.mappings.cart.orderLimitMessage
  #           - scroll:
  #               direction: down
  #               untilIdentifier: us.mappings.cart.estimatedTotalAmountInCart
  #           - click:
  #               identifier: us.mappings.cart.continueToCheckoutButton
  #           - verifyIdentifier:
  #               present:
  #                 - identifier: us.mapping.cart.orderLimitExceed

  - name: us.functions.cart.verifyMQDDisocuntAppliedorNot
    platform: android
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifySavingsappliedLabel
            - identifier: us.mappings.cart.verifyStrikeThroughPrice

  - name: us.functions.cart.verifyMQDDisocuntAppliedorNot
    platform: ios
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.functions.cart.verifySavingsAppliedLabelInCart
            - identifier: us.functions.cart.verifySavingStrikeThroughPrice

  - name: us.functions.cart.verifyMQDDisocuntAppliedForDifferentItems
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.verifySavingsappliedLabelForItem1
          then:
              - click:
                  identifier: us.mappings.cart.checkoutforextrasavingswarningmessage
              - sleep:
                    duration: 3000
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.cart.verifySavingsappliedLabelForItem1
                    - identifier: us.mappings.cart.verifySavingsappliedLabelForItem2  

  - name: us.functions.cart.verifyCartOrderLimitBottomSheetAppears
    platform:  android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.orderLimitMessage
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - click:
          identifier: us.mappings.cart.checkoutButton
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: us.mapping.cart.orderLimitExceedTitle
      - click:
          identifier: us.mapping.cart.VerifyGotItPresent  

  - name: us.functions.cart.verifyCartOrderLimitBottomSheetAppears
    platform:  ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.orderLimitMessage
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.estimatedTotalAmount
      - click:
          identifier: us.mappings.cart.checkoutButton
      - verifyIdentifier:
          present:
            - identifier: us.mapping.cart.orderLimitExceed
      - click:
          identifier: us.mapping.cart.VerifyGotItPresent  


  - name: us.functions.cart.changeAddressFromCart
    platform:  ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.selectAddressLink
      - click:
          identifier: us.mappings.cart.selectAddressLink
      - if:
          identifier:
            present:
              - identifier: us.mapping.cart.selectAddressFromList
          then:
              - click:
                  identifier: us.mapping.cart.selectAddressFromList
          else:
            - scroll:
                direction: down
                untilIdentifier: us.mapping.cart.selectAddressFromList
            - click:
                identifier: us.mapping.cart.selectAddressFromList
      
      - click:
          identifier: us.mappings.selectAddress.saveButton
  
  - name: us.functions.cart.addAddressFromCart
    platform:  ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.selectAddressLink
      - click:
          identifier: us.mappings.cart.selectAddressLink
      - click:
          identifier: us.mapping.cart.isPresentaddAddress
      
      - click:
          identifier: us.mapping.cart.verifySelectCountryDropDown

      - verifyIdentifier:
          present:
            - identifier: us.mapping.cart.verifySelectCountry
      - click:
          identifier: us.mapping.cart.selectColombiaCountry
      - click:
          identifier: us.mapping.cart.confirmCountrySelection
      - executeFunction:
          name: us.functions.account.deliveryAddress.addCOAddress
          params:
            - name: firstName
              string: us.data.gep.flow01.firstName
            - name: lastName
              string: us.data.gep.flow01.lastName
            - name: streetAddress
              string: us.test.android.data.gep.flow01.addressFirstLine
            - name: city
              string: us.test.android.data.gep.flow01.addressCity
            - name: state
              string: us.test.android.data.gep.flow01.state 
            - name: zipcode
              string: us.test.android.data.gep.flow01.deliveryAddresszipCode
            - name: phoneNumber
              string: us.test.android.data.gep.flow01.mobileNumber

  - name: us.functions.cart.changeAddressFromCart
    platform:  android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.selectAddressLink 
      - click:
          identifier: us.mappings.cart.selectAddressLink 
      - if:
          identifier:
            present:
              - identifier: us.mapping.cart.selectAddressFromList
          then:
              - click:
                  identifier: us.mapping.cart.selectAddressFromList 
          else:
            - scroll:
                direction: down
                untilIdentifier: us.mapping.cart.selectAddressFromList 
            - click:
                identifier: us.mapping.cart.selectAddressFromList
      
      - click:
          identifier: us.mappings.cart.saveAddress
  
  - name: us.functions.cart.addAddressFromCart
    platform:  android
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.cart.navBarTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.selectAddressLink
      - click:
          identifier: us.mappings.cart.selectAddressLink
      - click:
          identifier: us.mapping.cart.isPresentaddAddress
      
      - click:
          identifier: us.mapping.cart.verifySelectCountryDropDown

      - verifyIdentifier:
          present:
            - identifier: us.mapping.cart.verifySelectCountry
      - click:
          identifier: us.mapping.cart.selectColombiaCountry
      - click:
          identifier: us.mapping.cart.confirmCountrySelection
      - executeFunction:
          name: us.functions.account.deliveryAddress.addAddress 
          params: 
            - name: firstName
              string: us.data.gep.flow01.firstName
            - name: lastName
              string: us.data.gep.flow01.lastName 
            - name: streetAddress
              string: us.test.android.data.gep.flow01.addressFirstLine 
            - name: city
              string: us.test.android.data.gep.flow01.addressCity
            - name: state
              string: us.test.android.data.gep.flow01.state 
            - name: zipcode
              string: us.test.android.data.gep.flow01.deliveryAddresszipCode 
            - name: phoneNumber
              string: us.test.android.data.gep.flow01.mobileNumber 
      - sleep:
          duration: 5000          

  - name: us.functions.cart.selectPreferredDay
    platform:  android
    flow:
      - log: "InSide the Preferred day Selection Flow"
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.preferredDay.keepItemInCart
          then:
            - log: "The Preferred day keep Item In Cart option is available."
            - sleep:
                duration: 1500
            - click:
                identifier: us.mappings.cart.preferredDay.keepItemInCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.preferredDay.option
          then:
            - log: "The Preferred day selection option is available"
            - sleep:
                duration: 1500
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
                  - identifier: us.mappings.cart.preferredDay.subtitlePreferredDay.date
            - click:
                identifier: us.mappings.cart.preferredDay.changePreferredDayLink
            - sleep:
                duration: 1500
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.changeDayBottomSheet
                  - identifier: us.mappings.cart.preferredDay.checkoutPreferredDayText
                  - identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySubText
                  - identifier: us.mappings.cart.preferredDay.checkoutPreferredDayCarousel
                  - identifier: us.mappings.cart.preferredDay.savePreferredDayCheckbox
                  - identifier: us.mappings.cart.preferredDay.savePreferredDayText
                  - identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySaveButton
            - click:
                identifier: us.mappings.cart.preferredDay.selectDaySlot
            - sleep:
                duration: 1500
            - if:
                condition: ${savePreferredDay} == true
                then:
                  - log: "savePreferredDay is Set to True"
                  - click:
                      identifier: us.mappings.cart.preferredDay.savePreferredDayCheckbox
            - sleep:
                duration: 1500
            - click:
                identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySaveButton
            - if:
                condition: ${savePreferredDay} == true
                then:
                  - log: "Verifying the Saved preferred Day assertions."
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text
                        - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
                        - identifier: us.mappings.cart.preferredDay.subtitlePreferredDay.date
                else:
                  - log: "Verifying the Selected delivery Day assertions."
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.preferredDay.yourSelectedDay.forThisOrder.text
                        - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
                        - identifier: us.mappings.cart.preferredDay.subtitlePreferredDay.date
            - log: "Preferred day is selected Successfully"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} Preferred Day Option not present, Failing the Test case"

  - name: us.functions.cart.verifySelectPreferredDay.messageOnOrderSuccessPage
    platform:  android
    flow:
      - log: "Verifying the Select PreferredDay message On Order Success Page."
      - if:
          condition: ${verifySavePrefDayMessageOnOrderSuccessPage} == true
          then:
            - log: "Verifying the Saved preferred Day assertions on Order Success page."
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text
          else:
            - log: "Verifying the Selected delivery Day assertions message On Order Success Page."
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.cart.preferredDay.yourSelectedDay.forThisOrder.text
                  - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text
      - log: "Verified Preferred day selection message On Order Success Page."

# CFS Incremental Auth
  - name: us.functions.cart.amendsPage.verifyTemporaryHold
    platform: android
    flow:
      - sleep:
          duration: 10000
      - scroll:
          direction: up
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.addToExistingOrderButton
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
            - identifier: us.mappings.cart.whatIsTemporaryHoldLink
      - click:
          identifier: us.mappings.cart.whatIsTemporaryHoldLink
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.title
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.description
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.gotIt
      - click:
          identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.gotIt

  - name: us.functions.cart.amendsPage.verifyTemporaryHold
    platform: ios
    flow:
      - sleep:
          duration: 10000
      - scroll:
          direction: up
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.addToExistingOrderButton
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
            - identifier: us.mappings.cart.whatIsTemporaryHoldLink
      - click:
          identifier: us.mappings.cart.whatIsTemporaryHoldLink
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.title
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.description
            - identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.gotIt
      - click:
          identifier: us.mappings.cart.amendsPage.temporaryHold.bottomSheet.gotIt

  #RXPD cart Validations
  - name: us.functions.cart.validate.rxpd.item
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.seeDetailsLink
          then:
            - click:
                identifier: us.mappings.cart.seeDetailsLink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.rxpd.item.prescription.txt
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.item.prescription.txt
            - identifier: us.mappings.cart.rxpd.item.prescription.name
            - identifier: us.mappings.cart.rxpd.item.patient.name
            - identifier: us.mappings.cart.rxpd.item.coverage.applied
            - identifier: us.mappings.cart.rxpd.item.price

  - name: us.functions.cart.validate.SODBanner
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.rxpd.sodBanner
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.rxpd.sodBanner
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.sodBanner
            - identifier: us.mappings.cart.rxpd.sodBanner.text
            - identifier: us.mappings.cart.rxpd.sodBanner.infoIcon
      - click:
          identifier: us.mappings.cart.rxpd.sodBanner.infoIcon
          wait: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.title
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.text
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.gotItButton
      - executeFunction:
          name: us.functions.cart.validate.rxpd.item
      - click:
          identifier: us.mappings.cart.rxpd.sod.bottomSheet.closeIcon

  #RXPD cart Validations
  - name: us.functions.cart.validate.rxpd.item
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.seeDetailsLink
          then:
            - click:
                identifier: us.mappings.cart.seeDetailsLink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.cart.rxpd.item.prescription.txt
            - name: direction
              string: down          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.item.prescription.txt
            - identifier: us.mappings.cart.rxpd.item.prescription.name
            - identifier: us.mappings.cart.rxpd.item.patient.name
            - identifier: us.mappings.cart.rxpd.item.coverage.applied
            - identifier: us.mappings.cart.rxpd.item.fulfillment.badge

  - name: us.functions.cart.selectPreferredDay
    platform:  ios
    flow:
      - log: "InSide the Preferred day Selection Flow"
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.preferredDay.keepItemInCart
          then:
            - log: "The Preferred day keep Item In Cart option is available."
            - click:
                identifier: us.mappings.cart.preferredDay.keepItemInCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.preferredDay.yourPreferredDay.radioButton
          then:
            - log: "The Preferred day selection option is available"
            - click:
                identifier: us.mappings.cart.preferredDay.yourPreferredDay.radioButton
            - sleep:
                duration: 500
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
            - click:
                identifier: us.mappings.cart.preferredDay.changePreferredDayLink
          else:
            - click:
                identifier: us.mappings.cart.preferredDay.changePreferredDayLink
      - sleep:
          duration: 500
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.preferredDay.changeDayBottomSheet
            - identifier: us.mappings.cart.preferredDay.checkoutPreferredDayText
            - identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySubText
            - identifier: us.mappings.cart.preferredDay.checkoutPreferredDayCarousel
            - identifier: us.mappings.cart.preferredDay.savePreferredDayCheckbox
            - identifier: us.mappings.cart.preferredDay.savePreferredDayText
            - identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySaveButton
      - click:
          identifier: us.mappings.cart.preferredDay.selectDaySlot
      - sleep:
          duration: 500
      - if:
          condition: ${savePreferredDay} == true
          then:
            - log: "savePreferredDay is Set to True"
            - click:
                identifier: us.mappings.cart.preferredDay.savePreferredDayCheckbox
      - sleep:
          duration: 500
      - click:
          identifier: us.mappings.cart.preferredDay.checkoutPreferredDaySaveButton
      - if:
          condition: ${savePreferredDay} == true
          then:
            - log: "Verifying the Saved preferred Day assertions."
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text
                  - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
#                        - identifier: us.mappings.cart.preferredDay.subtitlePreferredDay.date
          else:
            - log: "Verifying the Selected delivery Day assertions."
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.yourSelectedDay.forThisOrder.text
                  - identifier: us.mappings.cart.preferredDay.changePreferredDayLink
#                        - identifier: us.mappings.cart.preferredDay.subtitlePreferredDay.date
      - log: "Preferred day is selected Successfully"
#          else:
#            - failTest:
#                message: "ENV_FAILURE - ${env} Preferred Day Option not present, Failing the Test case"

  - name: us.functions.cart.verifySelectPreferredDay.messageOnOrderSuccessPage
    platform:  ios
    flow:
      - log: "Verifying the Select PreferredDay message On Order Success Page."
      - if:
          condition: ${verifySavePrefDayMessageOnOrderSuccessPage} == true
          then:
            - log: "Verifying the Saved preferred Day assertions on Order Success page."
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text.onOrderSuccess
          else:
            - log: "Verifying the Selected delivery Day assertions message On Order Success Page."
            - verifyIdentifier:
                notPresent:
#                  - identifier: us.mappings.cart.preferredDay.yourSelectedDay.forThisOrder.text
                  - identifier: us.mappings.cart.preferredDay.yourPreferredDay.ofTheWeek.text.onOrderSuccess
      - log: "Verified Preferred day selection message On Order Success Page."

  - name: us.functions.cart.amendGroceryToRxItem
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:        
          identifier: us.mappings.cart.addToExistingOrderButton
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.inEligibleItemCTA
            - identifier: us.mappings.cart.reserveAnewTimeText
      - click:        
          identifier: us.mappings.cart.ReserveAnewTimeCTA

      - executeFunction:
          name: us.functions.reserveTime.amendGroceryToRxItem
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.amendOrderInProgress
          then:
            - click: 
                identifier: us.mappings.popup.cartMergeOkayButton
          else:
            - log: new time is reserved

  - name: us.functions.cart.amendGroceryToRxItem
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.addToExistingOrderButton
      - click:        
          identifier: us.mappings.cart.addToExistingOrderButton
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.inEligibleItemCTA
            - identifier: us.mappings.cart.reserveAnewTimeText
      - click:        
          identifier: us.mappings.cart.reserveAnewTimeText

      - executeFunction:
          name: us.functions.reserveTime.amendGroceryToRxItem
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.amendOrderInProgress
          then:
            - click: 
                identifier: us.mappings.popup.cartMergeOkayButton
          else:
            - log: new time is reserved   

  - name: us.functions.cart.addAddressIfNotSelected
    platform: ios
    flow:
      - sleep:
          duration: 30000
      - log: --Selecting address if not selected}---
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.shippingAddressAlertmessageLabel
          then:
            - click:
                identifier: us.mappings.cart.shippingAddressAlertmessageLabel
            - sleep:
                duration: 30000
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue

  - name: us.functions.cart.verifyBackorderBadgeIsVisible
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mapings.search.backorderedLabel
          then:
            - log: "Backorder badge is shown as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Backorder badge should be present but is not"

  - name: us.functions.cart.verifyBackorderBadgeIsVisible
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mapings.search.backorderedLabel
          then:
            - log: "Backorder badge is shown as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Backorder badge should be present but is not"

  - name: us.functions.cart.validateBackorderPriceGuarantee
    platform: ios
    flow:
      - click:
          identifier: us.mappings.cart.fulfillmentSection.expandView
      - executeFunction:
          name: us.functions.item.verifyBackOrderPriceGuaranteeDetailsLink
      - executeFunction:
          name: us.functions.item.verifyBackorderPriceGuaranteeBottomsheet

  - name: us.functions.cart.validateBackorderPriceGuarantee
    platform: android
    flow:
      - click:
          identifier: us.mappings.cart.fulfillmentSection.expandView
      - executeFunction:
          name: us.functions.item.verifyBackOrderPriceGuaranteeDetailsLink
      - executeFunction:
          name: us.functions.item.verifyBackorderPriceGuaranteeBottomsheet

####RXPD SOD Changes
  - name: us.functions.cart.validate.SODBanner
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.cart.rxpd.sodBanner
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.cart.rxpd.sodBanner
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.sodBanner
            - identifier: us.mappings.cart.rxpd.sodBanner.text
            - identifier: us.mappings.cart.rxpd.sodBanner.infoIcon
      - click:
          identifier: us.mappings.cart.rxpd.sodBanner.infoIcon
          wait : 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.title
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.text
            - identifier: us.mappings.cart.rxpd.sod.bottomSheet.gotItButton
      - executeFunction:
          name: us.functions.cart.validate.rxpd.item
      - click:
          identifier: us.mappings.cart.rxpd.sod.bottomSheet.closeIcon

  - name: us.functions.cart.pharmacy.minOrderFeeWaiveoffValidation
    platform: android
    flow:
      - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.estimatedTotalAmount
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.pharmacy.chargeWaiveOff

  - name: us.functions.cart.pharmacy.minOrderFeeWaiveoffValidation
    platform: ios
    flow:
      - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.estimatedTotalAmount
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.pharmacy.chargeWaiveOff 
