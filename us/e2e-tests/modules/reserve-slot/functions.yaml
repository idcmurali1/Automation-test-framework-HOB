functions:

  # Reserve Slot

  # Book scheduled delivery slot for today when account has address
  - name: us.functions.reserveSlot.scheduledDelivery.bookTodaysSlot
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.scheduledDelivery.address  Currently there is no separate ID fo this.
      - getString:
          identifier: us.mappings.reserveSlot.thirdSlot
          attribute: label
          storeIn: slotTime
      - log: ${slotTime}
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  # Book scheduled delivery slot for today when account has address
  - name: us.functions.reserveSlot.scheduledDelivery.bookSlot
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
                notPresent:
                  - identifier: mapping.reserveSlot.unScheduledPickup.pickupAnytimeAfterBanner  
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.scheduledDelivery.address  Currently there is no separate ID fo this. $
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - log: "todays slot was available"
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot
          else:
            - log: "tomorrows slots available"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.selectTomorrow
                wait: 3000
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot

  - name: us.functions.reserveSlot.scheduledDelivery.bookThirdDaySlot
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
                notPresent:
                  - identifier: mapping.reserveSlot.unScheduledPickup.pickupAnytimeAfterBanner  
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - log: "todays slot was available"
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot
          else:
            - log: "3rd day slots available"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.selectThirdDay
                wait: 3000
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot

  - name: us.functions.reserveSlot.reserveThirdSlot
    platform: ios
    flow:
      - getString:
          identifier: us.mappings.reserveSlot.thirdSlot
          attribute: label
          storeIn: slotTime
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton
      # - verifyIdentifier:
      #       notPresent:
      #         - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.reserveSecondSlot
    platform: ios
    flow:
      - getString:
          identifier: us.mappings.reserveSlot.secondSlot
          attribute: label
          storeIn: slotTime
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.secondSlot
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.saveButton
  # Reserve express delivery slot
  - name: us.functions.reserveSlot.scheduledExpressDelivery.bookTodaysSlot
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
      - click:
          wait: 5000  
          identifier: us.mappings.reserveSlot.expressDeliverySlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton
      - executeFunction:
          name: us.functions.cart.handleItemUpdatesBottomTray
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup

  # Book scheduled pickup slot
  - name: us.functions.reserveSlot.curbsidePickup.bookTodaysSlot
    platform: ios
    flow:
      - executeFunction:
         name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
          else:
            - log: Skipping reserve slot step

      - log: ${slotTime}
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.thirdSlot
                 
          else:
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.selectTomorrow

              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.thirdSlot

      # - getString:
      #     identifier: us.mappings.reserveSlot.thirdSlot
      #     attribute: label
      #     storeIn: slotTime


      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.saveButton
            - identifier: us.mappings.reserveSlot.saveButton.detailLabel

      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.saveButton
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.confirmButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.confirmButton
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup  
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.saveButton  
                then:
                  - click: 
                      identifier: us.mappings.reserveSlot.saveButton
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton
          else:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton

  # Book scheduled pickup slot
  - name: us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
    platform: ios
    flow:
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
          else:
            - log: Skipping reserve slot step

      - log: ${slotTime}
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:

              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.thirdSlot
          else:
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.selectThirdDay

              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.thirdSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.saveButton
            - identifier: us.mappings.reserveSlot.saveButton.detailLabel

      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.confirmButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.confirmButton
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton
          else:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton

  # Reserve unscheduled pickup
  - name: us.functions.reserveSlot.curbsidePickup.unscheduled
    platform: ios
    flow:
      # - executeFunction:
      #     name: us.functions.utils.handleCartMergePopup
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - sleep:
           duration: 10000
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner 
          then:   
            - click:
                identifier: us.mappings.reserveSlot.saveButton
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.reserveSlot.saveButton
                then:   
                  - click:
                      identifier: us.mappings.reserveSlot.saveButton
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner 
                then:   
                  - click:
                      identifier: us.mappings.reserveSlot.saveButton   
                  - executeFunction:
                      name: us.functions.utils.handleTechnicalErrorPopup
          else: 
              - executeFunction:
                  name: us.functions.reserveSlot.retry.unscheduledPickupSlot


  - name: us.functions.reserveSlot.retry.unscheduledPickupSlot
    platform: ios
    flow:
      - log: 'Trying toggling bookslot tabs'
      - click:
          identifier:  us.mappings.reserveSlot.scheduledDelivery.tab
      - if: 
          identifier:
            present: 
            - identifier: DisclaimerViewController.closeButton   
          then:
            - click:
                identifier:  DisclaimerViewController.closeButton
      - click:
          identifier:  us.mappings.reserveSlot.curbsidePickup.tab
      - loop:
         begin: 0
         end: 1
         storeIndex: i
         flow:
           - log: $i
           - if: 
               identifier:
                 notPresent: 
                   - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
               then:
                   - log: 'Trying toggling bookslot tabs'
                   - click:
                       identifier:  us.mappings.reserveSlot.scheduledDelivery.tab
                   - if: 
                       identifier:
                         present: 
                           - identifier: DisclaimerViewController.closeButton   
                       then:
                         - click:
                             identifier:  DisclaimerViewController.closeButton
                   - click:
                       identifier:  us.mappings.reserveSlot.curbsidePickup.tab         
                       wait: 5000
               else:
                 - break: true
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - click:
            identifier: us.mappings.reserveSlot.saveButton
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner 
          then:   
            - click:
                identifier: us.mappings.reserveSlot.saveButton            
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  # Reserve Delivery slot when there is no added address to account
  - name: us.functions.reserveSlot.scheduledDelivery.addAddress.bookSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.changeSlot
          then:
            - click:
                identifier: us.mappings.cart.changeSlot
          else:
            - click:
                identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - executeFunction:
          name: us.functions.reserveSlot.noAddress.addDeliveryAddress
          params:
            - name: streetAddress
              string: ${streetAddress}
            - name: city
              string: ${city}
            - name: state
              string: ${state}
            - name: zipcode
              string: ${zipcode}
            - name: phoneNumber
              string: ${phoneNumber}
      - executeFunction:
          name: us.functions.reserveSlot.scheduledDelivery.bookSlot

  # Reserve Express Delivery slot when there is no added address to account
  - name: us.functions.reserveSlot.expressDelivery.addAddress.bookSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.changeSlot
          then:
            - click:
                identifier: us.mappings.cart.changeSlot
          else:
            - click:
                identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.reserveSlot.noAddress.addDeliveryAddress
          params:
            - name: streetAddress
              string: ${streetAddress}
            - name: city
              string: ${city}
            - name: state
              string: ${state}
            - name: zipcode
              string: ${zipcode}
            - name: phoneNumber
              string: ${phoneNumber}
      - executeFunction:
          name: us.functions.reserveSlot.scheduledExpressDelivery.bookTodaysSlot


  # Add Delivery Address
  - name: us.functions.reserveSlot.noAddress.addDeliveryAddress
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.title
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
      - click:
          wait: 8000
          identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
      # Temporary condition to click on add address button if form does not load
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.firstName
          then:
            - log: Execute us.functions.deliveryAddress.addAddress
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.deliveryAddress.addNewAddressLink
            - click:
                identifier: us.mappings.deliveryAddress.addNewAddressLink
      - executeFunction:
          name: us.functions.deliveryAddress.addAddress
          params:
            - name: firstName
              string: glass
            - name: lastName
              string: e2e
            - name: streetAddress
              string: ${streetAddress}
            - name: city
              string: ${city}
            - name: state
              string: ${state}
            - name: zipcode
              string: ${zipcode}
            - name: phoneNumber
              string: ${phoneNumber}
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title

  - name: us.functions.deliveryAddress.addAddress     
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Post-transactions
      - log: "Here in this flow to add address"
      - if:
          condition: ${addAddressForBuyNowFlow}
          then:
            - log: Adding address on Buy Now overlay
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.account.deliveryAddress.addNewAddress
                then:
                  - click:
                      identifier: us.mappings.account.deliveryAddress.addNewAddress
#      - click:
#          identifier: us.mappings.account.deliveryAddress.addNewAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.add.title
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      # Handling Address suggestion if displayed 
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:                 
                      identifier: us.mappings.default.keyboardDoneButton
                  - sleep:
                      duration: 2000                
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
          pressEnter: true
      # - click:
      #     identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - sleep:
         duration: 3000          
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.accounts.address.pageTitle
          then:
            - click:
                identifier: us.mappings.selectAddress.backbutton


# Add Delivery Address and Confirm the Address is set ***
  - name: us.functions.deliveryAddress.addAddress.confimSelection     
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.deliveryAddress.addAddress
      - click:
          identifier: us.mappings.reserveSlot.dismissPageButton
      - click:
          identifier: us.mappings.home.seeTimes        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyValue:
          identifier: us.mappings.reserveSlot.deliveryFromStore.Address
          contains: ${addedAddress}
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.changeAddressLink
      - click:
          identifier: us.mappings.deliveryAddress.selectAddress.addNewAddressLink
          wait: 5000

# Add Delivery Address and Confirm the Address is set ***
  - name: us.functions.deliveryAddress.addAddress.confimSelection.fcDelivery   
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.deliveryAddress.addAddress
      - click:
          identifier: us.mappings.reserveSlot.dismissPageButton
      - click:
          identifier: us.mappings.home.seeTimes        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyValue:
          identifier: us.mappings.reserveSlot.deliveryFromStore.Address
          contains: ${addedAddress}
      # - click:
      #     identifier: us.mappings.reserveSlot.scheduledDelivery.changeAddressLink
      - click:
          identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton #us.mappings.deliveryAddress.selectAddress.addNewAddressLink
          wait: 5000

# Add Address bypass Continue ***
  - name: us.functions.deliveryAddress.addAddress.2ndAddress.noContinueBtn  
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress1.add.title
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - click:
          identifier: us.mappings.deliveryAddress.add.lastName
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      # Handling Address suggestion if displayed
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
      - enterText:
          identifier: us.mappings.deliveryAddress.add.city
          string: ${city}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - enterText:
          identifier: us.mappings.deliveryAddress.add.state
          string: ${state}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - enterText:
          identifier: us.mappings.deliveryAddress.add.zipcode
          string: ${zipcode}
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - click:
          identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
          wait: 10000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.selectAddress.addressSavedMsg
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - log: Completed Adding new Address           
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
          wait: 15000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryFromStore.Address
      - log: Ready To validate new Address      
      - verifyValue:
          identifier: us.mappings.reserveSlot.deliveryFromStore.Address
          contains: ${newAddressAdded}


  # Assert Cart and Store Address
  - name: us.functions.deliveryAddress.cart.assertion
    platform: ios
    flow:  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.deliveryAddress.shippingOnly.cart
            - identifier: FulfillmentSummaryView.titleLinkLabel
      - verifyValue:
          identifier: us.mappings.deliveryAddress.deliveryAddress.shippingOnly.cart.fcDelivery
          equals: ${fcDeliveryAddress}
      - click:
          identifier: us.mappings.global.navigation.backNavigation


 # Return to Bookslot, select Delivery Tab, view now FC Only Message + Button and Assert Button redirects back to Cart.
  - name: us.functions.reserveSlot.deliveryAddress.fcOnly.deliveryTab
    platform: ios
    flow:                    
      - click:
          identifier: us.mappings.tabBar.shop
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.seeTimes
      - click:
          identifier: us.mappings.home.seeTimes           
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.deliveryAddress.fcShippingButton
            - identifier: us.mappings.reserveSlot.noDeliveryAvailableText           
      - verifyValue:
          identifier: us.mappings.deliveryAddress.deliveryAddress.fcShippingButton
          equals: View cart for details                   
      - click:
          identifier: us.mappings.deliveryAddress.deliveryAddress.fcShippingButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.deliveryAddress.shippingOnly.cart
            - identifier: us.mappings.deliveryAddress.deliveryAddress.shippingOnly.cart.fcDelivery
      - verifyValue:
          identifier: us.mappings.deliveryAddress.deliveryAddress.shippingOnly.cart.fcDelivery
          equals: ${fcDeliveryAddress}  


# Access bookslot from home verify pickup store, switch to Delivery tab, add Delivery Address: ***
  - name: us.functions.reserveSlot.addDelivery.address    
    platform: ios
    flow:
      - click:
          identifier: us.mappings.home.seeTimes          
      - verifyIdentifier:
          timeout: 5000          
          present: 
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.addAddress.overlay.title
          then:
            - click:
                identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
                wait: 3000
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
                wait: 3000
      - verifyValue:
          identifier: us.mappings.reserveSlot.curbsidePickup.storeAddress #us.mappings.reserveSlot.deliveryFromStore.Address
          equals: ${pickupStore}
      - if:
          condition: ${zipCodeChange} != null
          then:
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.selectStore.title
            - enterText:
                identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
                string: ${zipCodeChange}
                pressEnter: true
            - sleep:
                duration: 5000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
            - click:
                identifier: us.mappings.resrveSlot.selectStore.firstStoreName
            - click:
                identifier: us.mappings.reserveSlot.selectStore.saveButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab          
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton

# From bookslot verify pickup tab and store, switch to Delivery tab, verify Delivery Address and Book a slot: ***
  - name: us.functions.reserveSlot.assertPickupDelivery.bookSlot 
    platform: ios
    flow:
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.popup.technicalError
          then:
            - click:
                identifier: us.mappings.popup.retryAgainButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - identifier: us.mappings.reserveSlot.deliveryFromStore.Address
      - verifyValue:
          identifier: us.mappings.reserveSlot.deliveryFromStore.Address
          equals: ${pickupStore}      
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveslot.deliveryTab.firstDayAvailable
      - click:
          identifier: us.mappings.reserveSlot.thirdSlot 
      - click:
          identifier: us.mappings.reserveAtime.save.cta
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.reserveSlot.dismissPageButton
      #     then:
      #       - log: Dismiss BookSlot            
      #       - click:
      #           identifier: us.mappings.reserveSlot.dismissPageButton
      #     else:
      #       - log: Bookslot Dismissed  
      - click:
          identifier: us.mappings.tabBar.shop
          wait: 10000 

  # Access bookslot from home verify pickup store and then Update Pickup Store 5b*** 
  - name: us.functions.reserveSlot.pickupStoreUpdated
    platform: ios
    flow:
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
          wait: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - identifier: us.mappings.reserveSlot.deliveryFromStore.Address
      - verifyValue:
          identifier: us.mappings.reserveSlot.curbsidePickup.storeAddress
          equals: ${pickupStore1}
      # - click:
      #     identifier: us.mappings.reserveSlot.scheduledDelivery.changeAddressLink
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.changeStore.link
      - click:
          identifier: us.mappings.reserveSlot.selectStore.third #us.mappings.reserveSlot.selectStore.second
      # - click:
      #     identifier: us.mappings.reserveSlot.saveButton
      # - verifyIdentifier:
      #     value:
      #       - identifier: us.mappings.reserveSlot.slotRadioButton.selected
      #         equals: selected
      # - enterText:
      #     identifier: 
      #     string: 95122               
      # - click:
      #     identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      # - click:
      #     identifier: us.mappings.reserveslot.deliveryTab.firstDayAvailable
      # - click:
      #     identifier: us.mappings.reserveSlot.firstSlot

      - click:
          identifier: us.mappings.reserveAtime.save.cta
      - verifyValue:
          identifier: us.mappings.reserveSlot.curbsidePickup.storeAddress
          equals: ${pickupStore2}          
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.dismissPageButton
          then:
            - log: Dismiss BookSlot            
            - click:
                identifier: us.mappings.reserveSlot.dismissPageButton
          else:
            - log: Bookslot Dismissed  
      - click:
          identifier: us.mappings.tabBar.shop
          wait: 10000

  # Return to Bookslot from Home, Choose Pickup slot for Pickup store. 5b ****
  - name: us.functions.reserveSlot.assertPickup.bookSlot 
    platform: ios
    flow:
      - click:
          identifier: us.mappings.home.seeTimes      
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - identifier: us.mappings.reserveSlot.deliveryFromStore.Address
      - verifyValue:
          identifier: us.mappings.reserveSlot.curbsidePickup.storeAddress
          equals: ${pickupStore}
      - click:
          identifier: us.mappings.reserveslot.deliveryTab.firstDayAvailable
      - click:
          identifier: us.mappings.reserveSlot.firstSlot
      - click:
          identifier: us.mappings.reserveAtime.save.cta
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.dismissPageButton
          then:
            - log: Dismiss BookSlot            
            - click:
                identifier: us.mappings.reserveSlot.dismissPageButton
          else:
            - log: Bookslot Dismissed  
      - click:
          identifier: us.mappings.tabBar.shop
          wait: 10000 

  - name: us.functions.reserveSlot.clickSignInButton
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signInButton #identifier is changed on June 17th
      - click:
          identifier: us.mappings.global.authentication.signInButton

  - name: us.functions.reserveSlot.verifySlotAndContinue
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - if:
                identifier:
                  present:
                    - identifier: ${slotTime}
                then:
                  - log: Verify slot time
                  # Disabling due to flakiness in index value for slot time identifier
                  # - verifyIdentifier:
                  #     value:
                  #       - identifier: us.mappings.reserveSlot.thirdSlot
                  #         equals: "selected"
                else:
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.thirdSlot
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton
          else:
            - log: Skipping verify reserve slot step

  - name: us.functions.reserveSlot.verifyPageLoads
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot


  - name: us.functions.reserveSlot.noSlotSaved.verifySlotBehaviour
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot
            - identifier: us.mappings.reserveSlot.daySelectionView
          enabled:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
              value: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.thirdSlot
            - verifyIdentifier:
                enabled:
                  - identifier: us.mappings.reserveSlot.thirdSlot
                    value: true
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.continueButton
                  - identifier: us.mappings.reserveSlot.checkoutByToKeepReservationMessage
          else:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.continueButton
                  - identifier: us.mappings.reserveSlot.checkoutByToKeepReservationMessage
      - scroll:
          direction: left
          untilIdentifier: us.mappings.reserveSlot.lastday
          withinIdentifier: us.mappings.reserveSlot.daySelectionView
          position: center
          wait: 3000
          scrollLimit: 3

  - name: us.functions.reserveSlot.slotPreSelected.verifySlotBehaviour
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot
            - identifier: us.mappings.reserveSlot.daySelectionView
          enabled:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
              value: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - verifyIdentifier:
                enabled:
                  - identifier: us.mappings.reserveSlot.thirdSlot
                    value: true
                value:
                  - identifier: us.mappings.reserveSlot.thirdSlot
                    equals: selected
                #label:
                  #- identifier: us.mappings.reserveSlot.thirdSlot
                    #contains: ${slotTime}

  - name: us.functions.reserveSlot.changeStore.verifySlotSelected
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.selectStore.second
      - click:
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          value:
            - identifier: us.mappings.reserveSlot.slotRadioButton.selected
              equals: selected

  - name: us.functions.verifySlotPageIsLoaded
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.bookSlotModule
            - log: Book slot page loaded
          catch:
            flow:
              - log: Handling error condition
              - executeFunction:
                  name: us.functions.utils.handleTechnicalErrorPopup
              - if:
                  condition: ${errorRemoved} == false
                  then:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Tab ${tab} on booking slot page not loaded"
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.reserveSlot.bookSlotModule

  - name: us.functions.selectTabForSlotBooking
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.verifySlotPageIsLoaded
      - if:
          condition: ${tab} == 'pickup'
          then:
            # Add if add address is displayed close it
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - executeFunction:
                name: us.functions.verifySlotPageIsLoaded
          else:
            # If add address is displayed and if addAddress is false, close it else dont load again
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                then:
                  - if:
                      condition: ${addAddress}
                      then:
                        - log: Tab is already loaded, skipping reload
                      else:
                        - click:
                            identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
                        # - click:
                        #     identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                else:
                  - click:
                      identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                  - executeFunction:
                      name: us.functions.utils.handleTechnicalErrorPopup
                  - if:
                      condition: ${errorRemoved} == false
                      then:
                        - failTest:
                            message: "ENV_FAILURE - ${env} - Tab ${tab} on booking slot page not loaded"

  - name: us.functions.daySlotInitialSetUp
    platform: ios
    flow:
      - log: Identifying day for slot selection
      - if:
          condition: ${slotDay} == 'today'
          then:
            - try:
                flow:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.reserveSlot.todaySlots
                          notContains: full
                  - log: Slot's available for today
                catch:
                  flow:
                    - log: Today's slot is full, setting to tomorrow
                    - storeIn:
                        key: slotDay
                        value: tomorrow
      - if:
          condition: ${slotDay} == 'tomorrow'
          then:
            - storeIn:
                key: slotDayIndex
                value: 1
            - storeIn:
                key: slotDayIndexAlt
                value: 2
          else:
            - if:
                condition: ${slotDay} != 'today' && ${slotDay} != 'tomorrow'
                then:
                  - storeIn:
                      key: slotDayIndex
                      value: 2
                  - storeIn:
                      key: slotDayIndexAlt
                      value: 3

  - name: us.functions.selectDayForSlotDisplay
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.daySelectionView
          catch:
            flow:
              - failTest:
                  message: "ENV_FAILURE - ${env} - Day selection section not loaded in tab ${tab} on booking slot page"
      - executeFunction:
          name: us.functions.daySlotInitialSetUp          
      - if:
          condition: ${slotDay} == 'today'
          then:
            - click:
                identifier: us.mappings.reserveSlot.todaySlots
            - executeFunction:
                name: us.functions.checkSlotAvailability
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.futureDaySlots
                then:
                  - scroll:
                      direction: left
                      untilIdentifier: us.mappings.reserveSlot.futureDaySlots
                      withinIdentifier: us.mappings.reserveSlot.daySelectionView
                      position: center
                      scrollLimit: 2
            - click:
                identifier: us.mappings.reserveSlot.futureDaySlots
            - executeFunction:
                name: us.functions.checkSlotAvailability
      - log: ------ Slot day selection completed ------

  - name: us.functions.checkSlotAvailability
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          mode: increment
          flow: 
            - try:
                flow:
                # CHECK IF THIS NEEDS TO BE CHANGED for iOS
                  - verifyIdentifier:
                      enabled:
                        - identifier: us.mappings.reserveSlot.allTimeSlots
                          value: true
                  - log: Slots are available on the selected day
                  - break: true
                catch:
                  flow:
                    - storeIn:
                        key: slotDayIndex
                        value: ${i}
                    - log: Switching slot day to check slot availability
                    - click:
                        identifier: us.mappings.reserveSlot.futureDaySlots

  - name: us.functions.selectTimeSlot
    platform: ios
    flow:
      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------Selecting express time slot------
            - try:
                flow:
                  - click:
                      identifier: us.mappings.reserveSlot.expressSlot
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.expressSlot
                    contains: selected
      # Unscheduled slot selection section
      - if:
          condition: ${timeSlot} == 'unscheduled'
          then:
            - log: ------Selecting unscheduled time slot------
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Unscheduled slot not displayed"
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
      # Wplus preferred slot selection section
      - if:
          condition: ${timeSlot} == 'wplusPreferred'
          then:
            - log: ------Selecting wplus preferred time slot-----
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                then:
                  # Select 'tomorrow', if no wplus Preferred Time slots are displayed for 'today'
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.wplusPreferredTimeSlot
                        - name: direction
                          string: down
                  - click:
                      identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - wplusPreferred slot not displayed"
            - sleep:
                duration: 1000
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                    contains: selected
      # Generic slot selection section
      - if:
          condition: ${timeSlot} == 'generic'
          then:
            # Generic slot selection section
            - log: ------Selecting general time slot------
            # When no slots are displayed for 'today'
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.timeSlot
                then:
                  # Select 'tomorrow', if no slots are displayed for 'today'
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
                else:
                  - try:
                      flow:
                      # CHECK IF THIS NEEDS TO BE CHANGED for iOS
                      # Check if today's slots displayed are available for selection
                        - verifyIdentifier:
                            enabled:
                              - identifier: us.mappings.reserveSlot.timeSlot
                                value: true
                        - log: Required time slot is available for selection
                        - executeFunction:
                            name: us.functions.utils.scrollIfNotVisible
                            params:
                              - name: identifier
                                string: us.mappings.reserveSlot.timeSlot
                              - name: direction
                                string: down
                              - name: limit
                                string: 2
                      catch:
                        flow:
                          # If today's slots displayed are disabled for selection
                          - log: Required time slot is unavailable for selection, switching to next day
                          - executeFunction:
                              name: us.functions.selectDayForSlotDisplay
                              params:
                                - name: slotDay
                                  string: 'tomorrow'
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
                wait: 1000
            - sleep:
                duration: 1000
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.timeSlot
                    contains: selected
      # Evergreen slot selection
      - if:
          condition: ${timeSlot} == 'evergreen'
          then:
            # Evergreen slot selection section
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveTime.3hours.or.less
                then:
                  - log: "3 hours or less is displayed on the Delivery from store page."
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserve.slot.button
                  - click:
                      identifier: us.mappings.reserveTime.3hours.or.less
                  - log: "The Evergreen slot is selected Successfully"
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Evergreen slots (3 hours or less) are NOT displayed on the Delivery tab"
      - if:
          condition: ${timeSlot} == 'nonIneligibleSlot'
          then: 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                then:
                  - log: "IneligibleSlot are displayed." 
                  - click:
                      identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                      doubleClick: true
                  - sleep:
                      duration: 1000 
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - IneligibleSlot are not selected"
      - log: ------ Slot time selection completed ------

  - name: us.mappings.confirmSlotSelection
    platform: ios
    flow:
      - storeIn:
          key: buttonType
          value: 'null'
      - click:
          identifier: us.mappings.reserveSlot.continueButton

      # Reload timeslot details if Refresh message is displayed on click on Save button          
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.refreshTimeSlot
          then:
            - click:
                identifier: us.mappings.reserveSlot.refreshTimeSlot
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.reserveSlot.continueButton
      
      - executeFunction:
          name: us.functions.cart.handleItemUpdatesBottomTray

      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - executeFunction:
          name: us.functions.cart.continueMissingAnythingScreen
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue       
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.continueButton
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - Selected time slot saving operation failed"
# Commenting temporarily until timeout issue on looper is resolved
      # - if:
      #     condition: ${buttonType} == 'OK'
      #     then:
      #       - click:
      #           identifier: us.mappings.reserveSlot.continueButton
      # - try:
      #     flow:
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.reserveSlot.continueButton
      #       - executeFunction:
      #           name: us.functions.selectTimeSlot
      #       - click:
      #           identifier: us.mappings.reserveSlot.continueButton
      #     catch:
      #       flow:
      #         - log: Time slot saved successfully
      - storeIn:
          key: buttonType
          value: 'null'
      - log: ------ Slot selection saved ------

  # [mandatory] ${page} - home/cart
  # [optional] ${addAddress} - true/false [default 'false']
  #         If ${addAddress} - true then: 
  #         [mandatory] ${firstName}, ${lastName}, ${streetAddress}, ${city}, ${state}, ${zipCode}
  - name: us.functions.loadBookingSlotScreen
    platform: ios
    flow:
      # Based on param, bookinf slot page is loaded either from home / cart page
      - log: ------ Loading booking slot screen ------
      - if:
          condition: ${page} == 'home'
          then:
            - log: ------ Loading booking slot screen from home page ------
            - executeFunction:
                name: us.functions.gic.expandIfCollapsed
            - executeFunction:
                name : us.functions.gic.setFulfillment 
                params:
                  - name: option
                    string: Pickup
            - if:
                identifier:
                  present:  
                    - identifier: us.mappings.page.retryAgainButton                      
                then:                        
                  - click:
                      identifier: us.mappings.page.retryAgainButton             
            - click:
                identifier: us.mappings.home.gic.seeTimes
          else:
            - if:
                condition: ${page} == 'cart'
                then:
                  - log: ------ Loading booking slot screen from cart page ------
                  - executeFunction:
                      name: us.functions.cart.scrollToTopOfCart
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.sc.noSlotBooked.reserveTime
                        - name: direction
                          string: down
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                  - click:
                      identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      # SignIn to user acccount if not signedIn already
      - if:
          condition: ${signInRequired}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.signInButton
                then:
                  - sleep:
                      duration: 3000
                  - click:
                      identifier: us.mappings.reserveSlot.signInButton
            - executeFunction:
                name: us.functions.global.authentication.signInAccount
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            # To Reset store after sign in
            - executeFunction:
                name: us.functions.reserveSlot.changeStore
                params:
                  - name: store
                    string: 32144
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          condition: ${errorRemoved} == false
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} booking slot page not loaded"

      # Check if booking slot needs to be skipped if Review order page is loaded for unscheduled scenario
      - if: 
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.reviewOrderPageTitle
          then:
            - storeIn:
                key: skipSlotPage
                value: true

      - if:
          condition: ${skipSlotPage}
          then:
            - log: Skipping booking slot for unscheduled pickup as screen is not loaded
          else:
            # After screen is loaded, load the required tab as per param
            - log: ------ Loading booking slot screen completed ------
            - log: ------ Loading required tab ------
            - if:
                condition: ${tab} == 'pickup'
                then:
                  - log: ------ Loading Pickup tab ------
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                      then:
                        - click:
                            identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
                  - executeFunction:
                      name: us.functions.selectTabForSlotBooking
            - if:
                condition: ${tab} == 'delivery'
                then:
                  - log: ------ Loading Delivery tab ------
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                      then:
                        - log: Required tab already loaded
                      else:
                        - executeFunction:
                            name: us.functions.selectTabForSlotBooking
            - log: ------ Loading required tab completed ------

            # After tab is loaded, flow to add address based on param
            - if:
                condition: ${addAddress}
                then:
                  - log: New address is to be added
                  - if:
                      condition: ${addressAdded}
                      then:
                        - log: Address already added, skipping
                      else:
                        - log: ------ Adding address ------
                        # If an address is being added for the first time
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                            then:
                              - click:
                                  identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                  then:
                                    - if:
                                        condition: ${addExistingAddress}
                                        then:
                                          - log: Adding existing address
                                          - click:
                                              identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                          - click:
                                              identifier: us.mappings.selectAddress.continueButton
                                          - sleep:
                                              duration: 10000
                                          - storeIn:
                                              key: addressAdded
                                              value: true
                                        else:
                                          - click:
                                              identifier: us.mappings.deliveryAddress.addNewAddressButton
                            else:
                              # If an address is already existing/add address pop up is not displayed and a new address needs to be added
                              - log: Changing address
                              - click:
                                  identifier: us.mappings.reserveSlot.deliveryfromStoreTab.changeAddressLink
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                  then:
                                    - if:
                                        condition: ${addExistingAddress}
                                        then:
                                          - log: Adding existing address
                                          - click:
                                              identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                          - click:
                                              identifier: us.mappings.selectAddress.continueButton
                                          - sleep:
                                              duration: 10000
                                          - storeIn:
                                              key: addressAdded
                                              value: true
                                        else:
                                          - click:
                                              identifier: us.mappings.deliveryAddress.selectAddress.addNewAddressLink
                        - if:
                            condition: ${addressAdded}
                            then:
                              - log: Address already added
                            else:
                              - executeFunction:
                                  name: us.functions.deliveryAddress.addAddress
                        - executeFunction:
                            name: us.functions.utils.handleTechnicalErrorPopup
                        - storeIn:
                            key: addressAdded
                            value: true
                else:
                  - log: Skipping address addition as it is not required
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                      then:
                        - click:
                            identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton

  # [mandatory] ${tab}            - pickup/delivery [Tab where the time slot selection is to be done]
  # [optional] ${page}            - home/cart [If booking slot needs to be loaded explicitly. If page is loaded during checkout, no value required]
  # [optional] ${timeSlot}        - generic/unscheduled/expressSlot/wplusPreferred [default 'generic'] [What kind of time slot to be selected]
  # [optional] ${slotDay}         - today/tomorrow/dayAfter.. [default 'today']
  # [optional] ${slotIndex}       - 1/2/3 [2 default] [Time slot which needs to be selected]
  # [optional] ${wplusUser}       - optIn / validate [optIn: if an user needs to optIn to wplus membership / validate: validates details of an wplus member details in reserve slot page]
  # ------------------------------------------------------------------------------------------------------
  # [optional] ${signInRequired}  - true/false [default 'false'] [Set to true if user sign in required before slot selection]
  # -------------------------------------------------------------------------
  #         If ${signInRequired}  - true then:
  #         [conditional mandatory] 
  #                                 ${email}        - user emailId
  #                                 ${password}     - user password
  # ------------------------------------------------------------------------------------------------------
  # [optional] ${addAddress} - true/false [default 'false'] [Set to true if address also needs to be added]
  # -------------------------------------------------------------------------
  #         If ${addAddress}      - true then: 
  #         [conditional mandatory] 
  #                                 ${firstName}    - first name for new user
  #                                 ${lastName}     - last name for new user
  #                                 ${streetAddress}- new user's address
  #                                 ${city}         - city for new user
  #                                 ${state}        - state for new user
  #                                 ${zipCode}      - zipcode for new user
  - name: us.functions.selectBookingSlotWithErrorHandling
    platform: ios
    flow:
      # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
      # Skips further steps if review page is loaded for unscheduled item
      - if:
          condition: ${skipSlotPage}
          then:
            - log: Slot booking functionality skipped for unscheduled pickup
          else:
            # Skips Day selection for unscheduled item
            - if:
                condition: ${timeSlot} == 'unscheduled' || ${timeSlot} == 'expressSlot'
                then:
                  - log: Skipping slot day selection process
                else:
                  # Function to setup required default data for slot booking selection
                  - executeFunction:
                      name: us.functions.slotDataSetUp
                  # Function to select appropriate day for slot booking
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
            # Wplus details validation/optIn section
            - if:
                condition: ${wplusUser} == 'optIn' || ${wplusUser} == 'optOut'
                then:
                  - executeFunction:
                      name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
                else:
                  - if:
                      condition: ${wplusUser} == 'validate'
                      then:
                        - executeFunction:
                            name: us.functions.wplus.reserveSlot.validateWPlusDetails
            # Function to select appropriate slot time
            - executeFunction:
                name: us.functions.selectTimeSlot
            # Function to save selected time slot
            - executeFunction:
                name: us.mappings.confirmSlotSelection
      # Function to reset data
      - executeFunction:
          name: us.functions.slotDataReset

  # Skip slot booking if already selected[Currently covers for unscheduled only]
  - name: us.functions.selectBookingSlotSkipIfNotRequired
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToSection
          params:
            - name: fulfillmentText
              string: Pickup
            - name: altFulfillmentText
              string: pickup
      - if:
          identifier:
            label:
              - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTimeText
                contains: after
          then:
            - log: Unscheduled slot already selected, skipping slot selection
          else:
            - executeFunction:
                name: us.functions.selectBookingSlot              
      # - try:
      #     flow:
      #       - verifyIdentifier:
      #           label:
      #             - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTimeText
      #               contains: after
      #       - log: Unscheduled slot already selected, skipping slot selection
      #     catch:
      #       flow:
      #         - log: Seleting slot as unscheduled selection is not yet done
      #         - executeFunction:
      #             name: us.functions.selectBookingSlot

  # Function to set/reset store in bookslot page
  # [mandatory] ${store} - Store to be set [default 32144]
  - name: us.functions.reserveSlot.changeStore
    platform: ios
    flow:
      - if:
          condition: ${store} == null
          then:
            - storeIn:
                key: store
                value: 32144
      - if:
          condition: ${store} == 32144
          then:
            - storeIn:
                key: zipcode
                value: 95122
      - if:
          condition: ${store} == 5509
          then:
            - storeIn:
                key: zipcode
                value: 95035

      - if:
          condition: ${store} == 32137
          then:
            - storeIn:
                key: zipcode
                value: 80212                    
      - if:
          condition: ${errorHandle}
          then:
            - log: Handling change store
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.selectStoreTextField
      - enterText:
          identifier: us.mappings.home.selectStoreTextField
          string: ${zipcode}
          pressEnter: true
      - click: 
          identifier: us.mappings.home.storeRadioButton
      - click: 
          identifier: us.mappings.gic.selectStore.save.button # us.mappings.home.selectStoreSaveButton
      - storeIn:
          key: errorHandle
          value: false

  - name: us.functions.reserveSlot.changeStoreHandlingIfRequired
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.selectStoreTextField
            - log: Setting store again as it is displayed while time slot selection
            - executeFunction:
                name: us.functions.reserveSlot.changeStore
          catch:
            flow:
              - log: Set store window not displayed, skipping store set process

###################### ANDROID ##################

  # Function to set/reset store in bookslot page
  # [mandatory] ${store} - Store to be set [default 32144]
  - name: us.functions.reserveSlot.changeStore
    platform: android
    flow:
      - if:
          condition: ${store} == null
          then:
            - storeIn:
                key: store
                value: 32144
      - if:
          condition: ${store} == 32144
          then:
            - storeIn:
                key: zipcode
                value: 95122
      - if:          
          condition: ${store} == 5509
          then:
            - storeIn:
                key: zipcode
                value: 95035

      - if:
          condition: ${store} == 32137
          then:
            - storeIn:
                key: zipcode
                value: 80212  
                                  
      - if:
          condition: ${errorHandle}
          then:
            - log: Handling change store
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.pickup.changeStoreLink
            - click:
                identifier: us.mappings.reserveSlot.pickup.changeStoreLink
      - enterText:
          identifier: us.mappings.home.selectStoreTextField
          string: ${zipcode}
          pressEnter: true
      - click: 
          identifier: us.mappings.home.storeRadioButton
      - click: 
          identifier: us.mappings.gic.selectStore.save.button
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.pickup.changeStoreLink

  - name: us.functions.reserveSlot.changeStoreHandlingIfRequired
    platform: android
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.selectStoreTextField
            - log: Setting store again as it is displayed while time slot selection
            - executeFunction:
                name: us.functions.reserveSlot.changeStore
          catch:
            flow:
              - log: Set store window not displayed, skipping store set process

  - name: us.functions.verifySlotPageIsLoaded
    platform: android
    flow:
      - try:
          flow:
            - sleep:
                duration: 15000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.slotSelectionView
            - log: Book slot page loaded
          catch:
            flow:
              - log: Handling error condition
              - executeFunction:
                  name: us.functions.utils.handleTechnicalErrorPopup
              - if:
                  condition: ${errorRemoved} == false
                  then:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Tab ${tab} on booking slot page not loaded"
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.reserveSlot.slotSelectionView

  - name: us.functions.selectTabForSlotBooking
    platform: android
    flow:
      # Validate if the page is loaded properly
      - executeFunction:
          name: us.functions.verifySlotPageIsLoaded
      # Get currently loaded tab title
      - getString:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
          attribute: checked
          storeIn: pickSelected
      - if:
          condition: ${pickSelected}
          then:
            - if:
                condition: ${tab} == 'delivery'
                then:
                  # If delivery tab is not already loaded, click on the delivery tab link
                  - click:
                      identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                  # If add address pop up is expected, check for error and remove else check if tab is loaded
                  - if:
                      condition: ${addAddress}
                      then:
                        - executeFunction:
                            name: us.functions.utils.handleTechnicalErrorPopup
                      else:
                        - executeFunction:
                            name: us.functions.verifySlotPageIsLoaded
          else:
            # If pickup tab is not already displayed
            - if:
                condition: ${tab} == 'pickup'
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.tab
                  - executeFunction:
                      name: us.functions.utils.handleTechnicalErrorPopup
                  - if:
                      condition: ${errorRemoved} == false
                      then:
                        - failTest:
                            message: "ENV_FAILURE - ${env} - Tab ${tab} on booking slot page not loaded"                    

  - name: us.functions.daySlotInitialSetUp
    platform: android
    flow:
      - log: Identifying day for slot selection
      - if:
          condition: ${slotDay} == 'today'
          then:
            - try:
                flow:
                  - verifyIdentifier:
                      contentDescription:
                        - identifier: us.mappings.reserveSlot.todaySlots
                          notContains: Full
                  - log: Slot's available for today
                catch:
                  flow:
                    - log: Today's slot is full, setting to tomorrow
                    - storeIn:
                        key: slotDay
                        value: tomorrow
      - if:
          condition: ${slotDay} == 'tomorrow'
          then:
            - storeIn:
                key: slotDayIndex
                value: 1
            - storeIn:
                key: slotDayIndexAlt
                value: 2
          else:
            - if:
                condition: ${slotDay} != 'today' && ${slotDay} != 'tomorrow'
                then:
                  - storeIn:
                      key: slotDayIndex
                      value: 2
                  - storeIn:
                      key: slotDayIndexAlt
                      value: 3

  - name: us.functions.selectDayForSlotDisplay
    platform: android
    flow:
      - sleep:
          duration: 3000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.daySelectionView
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - Day selection section not loaded in tab ${tab} on booking slot page"
      - executeFunction:
          name: us.functions.daySlotInitialSetUp
      - if:
          condition: ${slotDay} == 'today'
          then:
            - click:
                identifier: us.mappings.reserveSlot.todaySlots
            - executeFunction:
                name: us.functions.checkSlotAvailability
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.futureDaySlots
                then:
                  - scroll:
                      direction: left
                      untilIdentifier: us.mappings.reserveSlot.futureDaySlots
                      withinIdentifier: us.mappings.reserveSlot.daySelectionView
                      position: center
                      scrollLimit: 2
            - click:
                identifier: us.mappings.reserveSlot.futureDaySlots
            - executeFunction:
                name: us.functions.checkSlotAvailability
            - log: "Skipping the FutureDaySlots selection"
      - log: ------ Slot day selection completed ------

  - name: us.functions.checkSlotAvailability
    platform: android
    flow:
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          mode: increment
          flow: 
            - try:
                flow:
                  - verifyIdentifier:
                      enabled:
                        - identifier: us.mappings.reserveSlot.allTimeSlots
                          value: true
                  - log: Slots are available on the selected day
                  - break: true
                catch:
                  flow:
                    - storeIn:
                        key: slotDayIndex
                        value: ${i}
                    - log: Switching slot day to check slot availability
                    - click:
                        identifier: us.mappings.reserveSlot.futureDaySlots

  - name: us.functions.selectTimeSlot
    platform: android
    flow:

      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------Selecting express time slot------
            - try:
                flow:
                  - click:
                      identifier: us.mappings.reserveSlot.expressSlot
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
            - if:
                condition: ${deliveryText} != null
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.reserveSlot.expressSlot.textView
                          contains: ${deliveryText}
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.wplus.nonMembWplusBanner.wantFreeDeliveryText
                  - sleep:
                      duration: 1000
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - verifyIdentifier:
                checked:
                  - identifier: us.mappings.reserveSlot.expressSlot
                    value: true
      # Unscheduled slot selection section
      - if:
          condition: ${timeSlot} == 'unscheduled'
          then:
            - log: ------Selecting unscheduled time slot------
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.radioButton
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.radioButton
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Unscheduled slot not displayed"
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
      # Wplus preferred slot selection section
      - if:
          condition: ${timeSlot} == 'wplusPreferred'
          then:
            - log: ------Selecting wplus preferred time slot------
            - try:
                flow:
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.wplusPreferredTimeSlot
                        - name: direction
                          string: down
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                  - click:
                      identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - wplusPreferred slot not displayed"
            - sleep:
                duration: 1000
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - verifyIdentifier:
                checked:
                  - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                    value: true
      # Generic slot selection section
      - if:
          condition: ${timeSlot} == 'generic'
          then:
            # Generic slot selection section
            - log: ------Selecting general time slot------
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.rxIneligibleSlot
                then:
                  - scroll:
                      direction: down
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.reserveSlot.timeSlot
                  - name: direction
                    string: down            
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.timeSlot
                then:
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
                else:
                  - try:
                      flow:
                        - verifyIdentifier:
                            enabled:
                              - identifier: us.mappings.reserveSlot.timeSlot
                                value: true
                        - log: Required time slot is available for selection
                      catch:
                        flow:
                          - log: Required time slot is unavailable for selection, switching to next day
                          - executeFunction:
                              name: us.functions.selectDayForSlotDisplay
                              params:
                                - name: slotDay
                                  string: 'tomorrow'
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
            - sleep:
                duration: 1000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.saveAddress
                then:
                  - log: "Save Addrees Overlay displayed"
                  - click:
                      identifier: us.mappings.cart.saveAddress
                  - log: "Selected exoiting address"
            
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            # - verifyIdentifier:
            #     checked:
            #       - identifier: us.mappings.reserveSlot.timeSlot
            #         value: true
      # Evergreen slot selection
      - if:
          condition: ${timeSlot} == 'evergreen'
          then:
            # Evergreen slot selection section
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveTime.3hours.or.less
                then:
                  - log: "3 hours or less is displayed on the Delivery from store page."
                  - click:
                      identifier: us.mappings.reserveTime.3hours.or.less
                  - log: "The Evergreen slot is selected Successfully"
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserve.slot.button

                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Evergreen slots (3 hours or less) are NOT displayed on the Delivery tab"
      - if:
          condition: ${timeSlot} == 'nonIneligibleSlot'
          then: 
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                then:
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.withoutIneligibleSlot
                        - name: direction
                          string: down
                  - log: "IneligibleSlot are displayed."                
                  - click:
                      identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                  - sleep:
                      duration: 1000
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - IneligibleSlot are not selected"
      - log: ------ Slot time selection completed ------

  - name: us.mappings.confirmSlotSelection
    platform: android
    flow:
      - storeIn:
          key: buttonType
          value: 'null'
      - if:
          identifier:
            present: 
              - identifier: us.mappings.reserveSlot.continueButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.continueButton
          else: 
            - executeFunction:
                name: us.functions.reserveSlot.selectDeliverySlotAgain

      # Reload timeslot details if Refresh message is displayed on click on Save button
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.refreshTimeSlot
          then:
            - click:
                identifier: us.mappings.reserveSlot.refreshTimeSlot
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.reserveSlot.continueButton
      # If the item is not available Click Got it and proceed
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.itemUpdatesTitle
          then:
            - click:
                identifier: us.mappings.cart.itemUpdatesContinueButton
                wait: 5000      

      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          condition: ${buttonType} == 'Okay' || ${buttonType} == 'OK'
          then:
            - click:
                identifier: us.mappings.reserveSlot.continueButton
      - storeIn:
          key: buttonType
          value: 'null'
      - log: ------ Slot selection saved ------

  - name: us.functions.slotDataSetUp
    flow:
      - if:
          condition: ${slotDay} == null
          then:
            - storeIn:
                key: slotDay
                value: today
      - if:
          condition: ${slotIndex} == null
          then:
            - storeIn:
                key: slotIndex
                value: 2
      - if:
          condition: ${timeSlot} == null
          then:
            - storeIn:
                key: timeSlot
                value: generic


  - name: us.functions.slotDataReset
    flow:
      - storeIn:
          key: skipSlotPage
          value: false
      - storeIn:
          key: unscheduled
          value: false
      - storeIn:
          key: wplusUser
          value: 'null'
      - storeIn:
          key: page
          value: 'null'
      - storeIn:
          key: skipReserve
          value: false
      - storeIn:
          key: optimize
          value: false

  # [optional] ${page} - home/cart
  # [optional] ${addAddress} - true/false [default 'false']
  #         If ${addAddress} - true then: 
  #         [mandatory] ${firstName}, ${lastName}, ${streetAddress}, ${city}, ${state}, ${zipCode}
  - name: us.functions.loadBookingSlotScreen
    platform: android
    flow:
      # Section to load booking slot screen from home / cart page
      - log: ------ Loading booking slot screen ------
      - if:
          condition: ${page} == 'home'
          then:
            - log: ------ Loading booking slot screen from home page ------
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.home.seeTimes
                then:
                  # Slot page loading from home
                  - click:
                      identifier: us.mappings.home.seeTimes
                else:
                  # Slotpage loading from GIC
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.home.gic.collapseIcon
                      then:
                        - click:
                            identifier: us.mappings.home.gic.collapseIcon
                  - executeFunction:
                      name : us.functions.gic.setFulfillment 
                      params:
                        - name: option
                          string: Pickup
                  - sleep:
                      duration: 3000
                  - if:
                      identifier:
                        present:  
                          - identifier: us.mappings.error.retryButton                  
                      then:                        
                        - click:
                            identifier: us.mappings.error.retryButton
                  - if:
                      condition: ${optimize}
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.reserve.shortcutSlotView
                            then:
                              - click:
                                  identifier: us.mappings.cart.slotShortcutThirdSlot
                              - storeIn:
                                  key: skipReserve
                                  value: true
                            else:
                              - click:
                                  identifier: us.mappings.home.gic.seeTimes
                      else:
                        - click:
                            identifier: us.mappings.home.gic.seeTimes          
          else:
            - if:
                condition: ${page} == 'cart'
                then:
                  - log: ------ Loading booking slot screen from cart page ------
                  - executeFunction:
                      name: us.functions.cart.scrollToTopOfCart
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.sc.noSlotBooked.reserveTime
                        - name: direction
                          string: down
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                  # Selecting time slot from cart page 
                  - if:
                      condition: ${optimize}
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.cart.reserve.shortcutSlotView
                            then:
                              - try:
                                  flow:
                                    - executeFunction:
                                        name: us.functions.utils.getFulfillmentTextsForIntentSelection
                                        params:
                                          - name: fulfillmentType
                                            string: ${tab}
                                    - verifyIdentifier:
                                        timeout: 1000
                                        present:
                                          - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTypeText.shortcutSlot
                                  catch:
                                    flow:                                     
                                      - executeFunction:
                                          name: us.functions.cart.switchBetweenPickUpAndShipping
                                          params:
                                            - name: fulfillmentType
                                              string: ${tab}
                              - click:
                                  identifier: us.mappings.cart.slotShortcutThirdSlot
                              - storeIn:
                                  key: skipReserve
                                  value: true
                            else:
                              - click:
                                  identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                      else:
                        - click:
                            identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                # else:
                #   - log: ------ Loading booking slot screen while checkout ------
                #   - executeFunction:
                #       name: us.functions.cart.continueToCheckoutOrNewOrder
      # SignIn to user acccount if not signedIn already
      - if:
          condition: ${signInRequired}
          then:
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.curbsidePickup.signInButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.signInButton
            - executeFunction:
                name: us.functions.global.authentication.signInAccount
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            # To Reset store after sign in
            - executeFunction:
                name: us.functions.reserveSlot.changeStore
                params:
                  - name: store
                    string: 32144
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          condition: ${errorRemoved} == false
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} booking slot page not loaded"

      # Check if booking slot needs to be skipped if Review order page is loaded for unscheduled scenario
      - if: 
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.navBarTitle
          then:
            - storeIn:
                key: skipSlotPage
                value: true

      - if:
          condition: ${skipSlotPage} || ${skipReserve}
          then:
            - log: Skipping booking slot for unscheduled pickup as screen is not loaded and for selecting slot from cart
          else:
            # After screen is loaded, load the required tab as per param
            - log: ------ Loading booking slot screen completed ------
            - log: ------ Loading required tab ------
            - if:
                condition: ${tab} == 'pickup'
                then:
                  - log: ------ Loading Pickup tab ------
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                      then:
                        - click:
                            identifier: us.mappings.addressOverlayTile.close
                  - executeFunction:
                      name: us.functions.selectTabForSlotBooking
            - if:
                condition: ${tab} == 'delivery'
                then:
                  - log: ------ Loading Delivery tab ------
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                      then:
                        - log: Required tab already loaded
                      else:
                        - executeFunction:
                            name: us.functions.selectTabForSlotBooking
            - log: ------ Loading required tab completed ------
            - if:
                condition: ${addAddress}
                then:
                  - log: New address is to be added
                  - if:
                      condition: ${addressAdded}
                      then:
                        - log: Address already added, skipping
                      else:
                        - log: ------ Adding address ------
                        # If an address is being added for the first time
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                            then:
                              - verifyIdentifier:
                                  present:
                                    - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                              - click:
                                  identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                  then:
                                    - if:
                                        condition: ${addExistingAddress}
                                        then:
                                          - click:
                                              identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                          - click:
                                              identifier: us.mappings.selectaddress.continue
                                          - sleep:
                                              duration: 5000
                                          - storeIn:
                                              key: addressAdded
                                              value: true
                                          - sleep:
                                              duration: 5000                                          
                                          - if:
                                              identifier:
                                                present:
                                                  - identifier: us.mappings.reserveSlot.scheduledDelivery.changeButton
                                              then:
                                                - log: Required tab already loaded
                                              else:
                                                - executeFunction:
                                                    name: us.functions.selectTabForSlotBooking
                                        else:
                                          - click:
                                              identifier: us.mappings.reserveslot.scheduledDelivery.addAddresslink
                            else:
                              # If an address is already existing and a new address needs to be added
                              - log: Changing address
                              - click:
                                  identifier: us.mappings.reserveslot.scheduledDelivery.changeAddresslink
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                  then:
                                    - if:
                                        condition: ${addExistingAddress}
                                        then:
                                          - log: Adding existing address
                                          - click:
                                              identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                          - click:
                                              identifier: us.mappings.selectaddress.continue
                                          - sleep:
                                              duration: 10000
                                          - storeIn:
                                              key: addressAdded
                                              value: true
                                          - sleep:
                                              duration: 5000                                          
                                          - if:
                                              identifier:
                                                present:
                                                  - identifier: us.mappings.reserveSlot.scheduledDelivery.changeButton
                                              then:
                                                - log: Required tab already loaded
                                              else:
                                                - executeFunction:
                                                    name: us.functions.selectTabForSlotBooking
                                        else:
                                          - click:
                                              identifier: us.mappings.reserveslot.scheduledDelivery.addAddresslink
                                  else:
                                    # Dismiss address change if new one needs to be added as against existing addresses
                                    - if:
                                        identifier:
                                          present:
                                            - identifier: us.mappings.deliveryAddress.add.firstName
                                        then:
                                          - click:
                                              identifier: us.mappings.reserveSlot.addAddress.closeButton
                                          - storeIn:
                                              key: addressAdded
                                              value: true
                        - if:
                            condition: ${addressAdded}
                            then:
                              - log: Address already added
                            else:
                              - executeFunction:
                                  name: us.functions.deliveryAddress.addAddress
                        - storeIn:
                            key: addressAdded
                            value: true
                        - sleep:
                            duration: 3000
                        - if:
                            identifier:
                              checked:
                                - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                                  value: true
                            then:
                              - log: Delivery from store tab loaded
                            else:
                              - log: Need to select Delivery from store tab again after address selection
                              - click:
                                  identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                else:
                  - log: Skipping address addition as it is not required
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
                      then:
                        - click:
                            identifier: us.mappings.addressOverlayTile.close

  # [mandatory] ${tab}            - pickup/delivery [Tab where the time slot selection is to be done]
  # [optional] ${page}            - home/cart [If booking slot needs to be loaded explicitly. If page is loaded during checkout, no value required]
  # [optional] ${timeSlot}        - generic/unscheduled/expressSlot/wplusPreferred [default 'generic'] [What kind of time slot to be selected]
  # [optional] ${slotDay}         - today/tomorrow/dayAfter.. [default 'today']
  # [optional] ${slotIndex}       - 1/2/3 [2 default] [Time slot which needs to be selected]
  # [optional] ${wplusUser}       - optIn / validate [optIn: if an user needs to optIn to wplus membership / validate: validates details of an wplus member details in reserve slot page]
  # ------------------------------------------------------------------------------------------------------
  # [optional] ${signInRequired}  - true/false [default 'false'] [Set to true if user sign in required before slot selection]
  # -------------------------------------------------------------------------
  #         If ${signInRequired}  - true then:
  #         [conditional mandatory] 
  #                                 ${email}        - user emailId
  #                                 ${password}     - user password
  # ------------------------------------------------------------------------------------------------------
  # [optional] ${addAddress} - true/false [default 'false'] [Set to true if address also needs to be added]
  # -------------------------------------------------------------------------
  #         If ${addAddress}      - true then: 
  #         [conditional mandatory] 
  #                                 ${firstName}    - first name for new user
  #                                 ${lastName}     - last name for new user
  #                                 ${streetAddress}- new user's address
  #                                 ${city}         - city for new user
  #                                 ${state}        - state for new user
  #                                 ${zipCode}      - zipcode for new user


  - name: us.functions.selectBookingSlot
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          condition: ${wplusUser} == null && ${timeSlot} == null && ${rxpd} == null
          then:
            - storeIn:
                key: optimize
                value: true
      # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
      - executeFunction:
          name: us.functions.loadBookingSlotScreen
      # Skips further steps if review page is loaded for unscheduled item
      - if:
          condition: ${skipSlotPage} || ${skipReserve}
          then:
            - log: Slot booking functionality skipped for unscheduled pickup
          else:
            # Skips Day selection for unscheduled item
            - if:
                condition: ${timeSlot} == 'unscheduled' || ${timeSlot} == 'expressSlot'
                then:
                  - log: Skipping slot day selection process
                else:
                  # Function to setup required default data for slot booking selection
                  - executeFunction:
                      name: us.functions.slotDataSetUp
                  # Function to select appropriate day for slot booking
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
            # Wplus details validation/optIn section
            - if:
                condition: ${wplusUser} == 'optIn' || ${wplusUser} == 'optOut'
                then:
                  - executeFunction:
                      name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
                else:
                  - if:
                      condition: ${wplusUser} == 'validate'
                      then:
                        - executeFunction:
                            name: us.functions.wplus.reserveSlot.validateWPlusDetails
            # Function to select appropriate slot time
            - executeFunction:
                name: us.functions.selectTimeSlot
            # Function to save selected time slot
            - executeFunction:
                name: us.mappings.confirmSlotSelection
      # Function to reset data
      - executeFunction:
          name: us.functions.slotDataReset

  # Skip slot booking if already selected[Currently covers for unscheduled only]
  - name: us.functions.selectBookingSlotSkipIfNotRequired
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToSection
          params:
            - name: fulfillmentText
              string: us.data.fulfillment.pickup
            - name: altFulfillmentText
              string: us.data.fulfillment.reviewOrderPickup
      - try:
          flow:
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTime
                    contains: us.data.cart.textAfter
            - log: Unscheduled slot already selected, skipping slot selection
          # Function to reset data
            - executeFunction:
                name: us.functions.slotDataReset            
          catch:
            flow:
              - executeFunction:
                  name: us.functions.selectBookingSlot

  - name: us.functions.validateTimeSlotBasics
    platform: ios
    flow:
      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------ Validating express time slot ------
            - try:
                flow:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.reserveSlot.expressSlot
                          contains: ${deliveryText}
                  - log: Express slot text validation is successful
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
      - log: ------ Validated slot content ------

  - name: us.functions.validateTimeSlot
    platform: android
    flow:
      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------ Validating express time slot ------
            - try:
                flow:
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.reserveSlot.expressSlot.textView
                          contains: ${deliveryText}
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.expressSlot.viewGroup
                  - log: Express slot text validation is successful
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
      - log: ------ Validated slot content ------

  - name: us.functions.selectTimeSlotBasics
    platform: ios
    flow:

      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------Selecting express time slot------
            - try:
                flow:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.reserveSlot.refreshTimeSlot
                      then:
                        - click:
                            identifier: us.mappings.reserveSlot.refreshTimeSlot
                        - sleep: 
                            duration: 3000                    
                  - click:
                      identifier: us.mappings.reserveSlot.expressSlot
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
            - if:
                condition: ${deliveryText} != null
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.reserveSlot.expressSlot
                          contains: ${deliveryText}
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.wplus.nonMembWplusBanner.wantFreeDeliveryText
            - sleep:
                duration: 1000
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.expressSlot
                    contains: selected
      # Unscheduled slot selection section
      - if:
          condition: ${timeSlot} == 'unscheduled'
          then:
            - log: ------Selecting unscheduled time slot------
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Unscheduled slot not displayed"
      # Wplus preferred slot selection section
      - if:
          condition: ${timeSlot} == 'wplusPreferred'
          then:
            - log: ------Selecting wplus preferred time slot-----
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.wplusPreferredTimeSlot
                        - name: direction
                          string: down
                  - click:
                      identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - wplusPreferred slot not displayed"
            - sleep:
                duration: 1000
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                    contains: selected
      # Generic slot selection section
      - if:
          condition: ${timeSlot} == 'generic'
          then:
            # Generic slot selection section
            - log: ------Selecting general time slot------
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.rxIneligibleSlot
                then:
                  - storeIn:
                      key: slotIndex2
                      value: 10
                  - storeIn:
                      key: slotIndex
                      value: 9
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reserveSlot.timeSlot2
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.timeSlot2
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.timeSlot2
                  # - verifyIdentifier:
                  #     timeout: 10000
                  #     value:
                  #       - identifier: us.mappings.reserveSlot.timeSlot2
                  #         contains: selected
                else:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.timeSlot
                  - click:
                      identifier: us.mappings.reserveSlot.timeSlot
                  # - verifyIdentifier:
                  #     value:
                  #       - identifier: us.mappings.reserveSlot.timeSlot
                  #         contains: selected
      # Evergreen slot selection
      - if:
          condition: ${timeSlot} == 'evergreen'
          then:
            # Evergreen slot selection section
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveTime.3hours.or.less
                then:
                  - log: "3 hours or less is displayed on the Delivery from store page."
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserve.slot.button
                  - click:
                      identifier: us.mappings.reserveTime.3hours.or.less
                      wait: 3000
                  - log: "The Evergreen slot is selected Successfully"
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Evergreen slots (3 hours or less) are NOT displayed on the Delivery tab"
      - log: ------ Slot time selection completed ------

  - name: us.mappings.confirmSlotSelectionBasics
    platform: ios
    flow:
      - loop:
          begin: 0
          end: 2
          mode: increment
          storeIndex: i
          flow:
            - click:
                identifier: us.mappings.reserveSlot.continueButton
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: us.mappings.error.dismissButton
                  - click:
                      identifier: us.mappings.error.dismissButton
                  - click:
                      identifier: us.mappings.reserveSlot.timeSlot
                catch:
                  flow:
                    - executeFunction:
                        name: us.functions.cart.continueMissingAnythingScreen 
                    - log: Slot saved
                    - break: true
      - log: ------ Slot selection saved ------

  # [mandatory] ${page} - home/cart
  # [optional] ${addAddress} - true/false [default 'false']
  #         If ${addAddress} - true then: 
  #         [mandatory] ${firstName}, ${lastName}, ${streetAddress}, ${city}, ${state}, ${zipCode}
  - name: us.functions.loadBookingSlotScreenBasics
    platform: ios
    flow:
      # Based on param, bookinf slot page is loaded either from home / cart page
      - log: ------ Loading booking slot screen ------
      - if:
          condition: ${page} == 'home'
          then:
            - log: ------ Loading booking slot screen from home page ------
            - executeFunction:
                name: us.functions.gic.expandIfCollapsed
            - executeFunction:
                name : us.functions.gic.setFulfillment 
                params:
                  - name: option
                    string: Pickup
            - if:
                condition: ${optimize}
                then:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.gic.reserve.slotView
                      then:
                        - click:
                            identifier: us.mappings.cart.slotShortcutThirdSlot
                        - storeIn:
                            key: skipReserve
                            value: true
                      else:
                        - click:
                            identifier: us.mappings.home.gic.seeTimes
                else:
                  - click:
                      identifier: us.mappings.home.gic.seeTimes
          else:
            - if:
                condition: ${page} == 'cart'
                then:
                  - log: ------ Loading booking slot screen from cart page ------
                # Simple scroll to top of cart
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                        - name: direction
                          string: up
                        - name: limit
                          string: 8
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.cart.sc.noSlotBooked.reserveTime
                        - name: direction
                          string: down
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
      # Selecting time slot from cart page 
                  - if:
                      condition: ${optimize}
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.gic.reserve.slotView
                            then:
                              - try:
                                  flow:
                                    - executeFunction:
                                        name: us.functions.utils.getFulfillmentTextsForIntentSelection
                                        params:
                                          - name: fulfillmentType
                                            string: ${tab}
                                    - if:
                                        identifier:
                                          label:
                                            - identifier: us.mappings.cart.fulfillmentTopSection.fulfillmentTypeText
                                              contains: ${altFulfillmentType}
                                        then:
                                          - log:
                                              message: ${altFulfillmentType}
                                              color: GREEN_BOLD
                                        else:
                                          - verifyIdentifier:
                                              label:
                                                - identifier: us.mappings.cart.fulfillmentSecondSection.fulfillmentTypeText
                                                  contains: ${altFulfillmentType}
                                  catch:
                                    flow:                                     
                                      - executeFunction:
                                          name: us.functions.cart.switchBetweenPickUpAndShipping
                                          params:
                                            - name: fulfillmentType
                                              string: ${tab}
                              - click:
                                  identifier: us.mappings.cart.slotShortcutThirdSlot
                              - storeIn:
                                  key: skipReserve
                                  value: true
                            else:
                              - click:
                                  identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                      else:
                        - click:
                            identifier: us.mappings.cart.sc.noSlotBooked.reserveTime

      # Check if booking slot needs to be skipped if Review order page is loaded for unscheduled scenario
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.reviewOrder.reviewOrderPageTitle
            - storeIn:
                key: skipSlotPage
                value: true
          catch:
            flow:
              - log: Slot page loaded
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.popup.technicalError
                  then:
                    - if:
                        condition: ${skipReserve}
                        then:
                          - click:
                              identifier: us.mappings.cart.slotShortcutThirdSlot
                        else:
                          - click:
                              identifier: us.mappings.popup.retryAgainButton
                    - sleep:
                        duration: 3000
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.popup.technicalError
                        then:
                          - failTest:
                              message: "ENV_FAILURE - ${env} - Slot page not loading due to technical error"

      - log: ------ Loading ${tab} tab ------
      - if:
          condition: ${skipReserve} || ${skipSlotPage}
          then:
            - log: testing Optimization Remove changes after testing
          else:
            - if:
                condition: ${tab} == 'pickup'
                then:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                      then:
                        - click:
                            identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton          
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.tab
                else:
                  - click:
                      identifier: us.mappings.reserveSlot.scheduledDelivery.tab
                  # After tab is loaded, flow to add address based on param
                  - if:
                      condition: ${addAddress}
                      then:
                        - log: New address is to be added
                        - if:
                            condition: ${addressAdded}
                            then:
                              - log: Address already added, skipping
                            else:
                              - log: ------ Adding address ------
                              # If an address is being added for the first time
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                                  then:
                                    - click:
                                        identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                                    - if:
                                        identifier:
                                          present:
                                            - identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                        then:
                                          - if:
                                              condition: ${addExistingAddress}
                                              then:
                                                - log: Adding existing address
                                                - click:
                                                    identifier: us.mappings.reserveSlot.addAddress.selectFirstAddress
                                                - click:
                                                    identifier: us.mappings.selectAddress.continueButton
                                                - sleep:
                                                    duration: 4000
                                                - storeIn:
                                                    key: addressAdded
                                                    value: true

  - name: us.functions.selectBookingSlot
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - storeIn:
          key: slotIndex
          value: 1
      - storeIn:
          key: slotIndex2
          value: 3
      - if:
          condition: ${wplusUser} == null && ${timeSlot} == null 
          then:
            - storeIn:
                key: optimize
                value: true
      - if:
          condition: ${timeSlot} == null
          then:
            - storeIn:
                key: timeSlot
                value: generic
      # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
      - executeFunction:
          name: us.functions.loadBookingSlotScreenBasics
      # Skips further steps if review page is loaded for unscheduled item
      - if:
          condition: ${skipSlotPage} || ${skipReserve}
          then:
            - log: Slot booking functionality skipped for unscheduled pickup and Optimization
            - storeIn:
                key: skipReserve
                value: false
            - storeIn:
                key: optimize
                value: false
          else:
            # # Skips Day selection for unscheduled item
            # - if:
            #     condition: ${timeSlot} == 'unscheduled' || ${timeSlot} == 'expressSlot'
            #     then:
            #       - log: Skipping slot day selection process
            #     else:
            #       # Function to setup required default data for slot booking selection
            # - executeFunction:
            #     name: us.functions.slotDataSetUp
            
          
            - if:
                condition: ${wplusUser} == 'optIn' || ${wplusUser} == 'optOut'
                then:
                  - executeFunction:
                      name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
            - if:
                condition: ${slotDay} != null && ${slotDay} != 'today' && ${timeSlot} == 'generic'
                then:
                  - storeIn:
                      key: slotDayIndex
                      value: 1
                  - storeIn:
                      key: slotDayIndexAlt
                      value: 2
                  - click:
                      identifier: us.mappings.reserveSlot.futureDaySlots

            # Function to select appropriate slot time  
            - executeFunction:
                name: us.functions.selectTimeSlotBasics          
            # Function to save selected time slot
            - executeFunction:
                name: us.mappings.confirmSlotSelectionBasics
      # # Function to reset data
      # - executeFunction:
      #     name: us.functions.slotDataReset

  - name: us.functions.deliveryAddress.addAddress
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.deliveryAddress.addNewAddress
          then:
            - click:
                identifier: us.mappings.account.deliveryAddress.addNewAddress  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.add.title
      - if:
          condition: ${addDeliveryInstructions}
          then:
            - executeFunction:
                name: us.functions.reviewOrder.editDeliveryInstructions          
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - click:
          identifier: us.mappings.deliveryAddress.add.lastName
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - goBack: true
      - click:
          identifier: us.mappings.deliveryAddress.add.streetAddress
      - sleep:
          duration: 3000
      # Accept share precise location pop up if displayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
      # Accept location permission pop up if displayed
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.allowLocationPermission
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.shareLocation
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.shareLocation
            - click:
                identifier: us.mappings.deliveryAddress.add.allowLocationPermission
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      - goBack: true
      - sleep:
          duration: 3000
      # Wait and validate if address suggestion is displayed or not
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - storeIn:
                key: cityState
                value: ${city}, ${state}
            # In location suggestion lists, click option with same city and state as passed in function parameters, else click 1st option
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                  - sleep:
                      duration: 2000
                else:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
          # Enter city, state and pin manually if address suggestion is not displayed
          else:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - goBack: true
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
            - goBack: true
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - goBack: true
      # - click:
      #     identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.streetAddressUpdatedLabel
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.continueButton
          then:
            - click:
                identifier: us.mappings.deliveryAddress.continueButton
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.selectaddress.continue
      #     then:
      #       - click:
      #           identifier: us.mappings.selectaddress.continue
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.title

  # Add Delivery Address
  - name: us.functions.reserveSlot.noAddress.addDeliveryAddress
    platform: android
    flow:
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.title
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
      - click:
          wait: 8000
          identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
      # Temporary condition to click on add address button if form does not load
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.firstName
          then:
            - log: Execute us.functions.deliveryAddress.addAddress
            - executeFunction:
                name: us.functions.deliveryAddress.addAddress
                params:
                  - name: firstName
                    string: glass
                  - name: lastName
                    string: e2e
                  - name: streetAddress
                    string: ${streetAddress}
                  - name: city
                    string: ${city}
                  - name: state
                    string: ${state}
                  - name: zipcode
                    string: ${zipcode}
                  - name: phoneNumber
                    string: ${phoneNumber}
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.selectaddress.continue 
                  #us.mappings.deliveryAddress.addNewAddressLink
            - click:
                identifier: us.mappings.selectaddress.continue 
                #us.mappings.deliveryAddress.addNewAddressLink
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup    


      # - executeFunction:
      #     name: us.functions.deliveryAddress.addAddress
      #     params:
      #       - name: firstName
      #         string: glass
      #       - name: lastName
      #         string: e2e
      #       - name: streetAddress
      #         string: ${streetAddress}
      #       - name: city
      #         string: ${city}
      #       - name: state
      #         string: ${state}
      #       - name: zipcode
      #         string: ${zipcode}
      #       - name: phoneNumber
      #         string: ${phoneNumber}

  - name: us.functions.reserveSlot.scheduledDelivery.addAddress.bookSlot
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.changeSlot
          then:
            - click:
                identifier: us.mappings.cart.changeSlot
          else:
            - click:
                identifier: us.mappings.cart.reserveTime

      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - sleep:
          duration: 10000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
          then:
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.reserveSlot.noAddress.addDeliveryAddress
          params:
            - name: streetAddress
              string: ${streetAddress}
            - name: city
              string: ${city}
            - name: state
              string: ${state}
            - name: zipcode
              string: ${zipcode}
            - name: phoneNumber
              string: ${phoneNumber}
      - executeFunction:
          name: us.functions.reserveSlot.scheduledDelivery.bookSlot

  - name: us.functions.reserveSlot.verifySlotAndContinue
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - log: Verified Reserve Slot Header      
            - if:
                identifier:
                  present:
                    - identifier: ${slotTime}
                then:
                  - log: Verify slot time
                  # Disabling due to flakiness in index value for slot time identifier               
                  # - verifyIdentifier:
                  #     text:  #added ****
                  #       - identifier: us.mappings.reserveSlot.Slot
                  #         equals: "selected"
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reserveSlot.Slot
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.Slot 
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton
          else:
            - log: Skipping verify reserve slot step

  - name: us.functions.reserveSlot.clickSignInButton
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.signInButton
            - click:
                identifier: us.mappings.reserveSlot.signInButton
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.signInButton
            - click:
                identifier: us.mappings.reserveSlot.signInButton

  # Reserve unscheduled pickup
  - name: us.functions.reserveSlot.curbsidePickup.unscheduled
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
# need to monitor and remove following code
#      - click:
#          wait: 2000
#          identifier: mapping.reserveSolot.pickupAnytimeButton
      - click:
          wait: 2000
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  # Reserve express delivery slot
  - name: us.functions.reserveSlot.scheduledExpressDelivery.bookTodaysSlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.expressDeliverySlot
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.expressDeliverySlot
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.expressDeliverySlot 
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.expressDeliverySlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton

  # Book scheduled pickup slot
  - name: us.functions.reserveSlot.curbsidePickup.bookTodaysSlot
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
          else:
            - log: Skipping reserve slot step

      - log: ${slotTime}
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.Slot
          then:
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.Slot
          else:
              - log: 'Switching tomorrow for reserve a slot'
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.selectTomorrow

              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.Slot

      - getString:
          identifier: us.mappings.reserveSlot.Slot
          attribute: text
          storeIn: slotTime

#      - verifyIdentifier:
#          present:
#            - identifier: us.mappings.reserveSlot.saveButton

      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.saveButton
          then:
            - log: "todays slot was available"
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.saveButton
          else:
            - log: "continue to checkout"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton


      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  # Book scheduled pickup slot
  - name: us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.addressOverlayTile.close
          then:
            - click:
                wait: 5000
                identifier: us.mappings.addressOverlayTile.close
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
              
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
          else:
            - log: Skipping reserve slot step

      - log: ${slotTime}
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.reserveSlot.thirdSlot
                  position: center
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.thirdSlot
          else:
              - log: 'Switching tomorrow for reserve a slot'
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.selectThirdDay
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.reserveSlot.Slot
              - click:
                  wait: 3000
                  identifier: us.mappings.reserveSlot.Slot
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.saveButton
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.saveButton
          else:
            - log: "continue to checkout"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.popup.technicalError
          then:
            - executeFunction:
                name: us.functions.utils.handleTechnicalErrorPopup
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.riskOnly.confirmEligibilityButton
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.riskOnly.confirmEligibilityButton

      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton


  # Book scheduled delivery slot for today when account has address
  - name: us.functions.reserveSlot.scheduledDelivery.bookSlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.scheduledDelivery.address  Currently there is no separate ID fo this. $
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - log: "todays slot was available"
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot
          else:
            - log: "tomorrows slots available"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.selectTomorrow
                wait: 3000
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot

  - name: us.functions.reserveSlot.scheduledDelivery.bookThirdDaySlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlotRadioButton   #us.mappings.reserveSlot.thirdSlot
          then:
            - log: "todays slot was available"
            # - executeFunction:
            #     name: us.functions.reserveSlot.reserveThirdSlot
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.thirdSlotRadioButton
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.reserveSlot.saveButton
          else:
            - log: "3rd day slots available"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.selectThirdDay
                wait: 3000
            # - executeFunction:
            #     name: us.functions.reserveSlot.reserveThirdSlot
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.thirdSlotRadioButton
            - click:
                identifier: us.mappings.reserveSlot.saveButton
      - sleep:
          duration: 5000


  - name: us.functions.reserveSlot.reserveThirdSlot
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.thirdSlot
      # - getString:
      #     identifier: us.mappings.reserveSlot.thirdSlot
      #     attribute: label
      #     storeIn: slotTime
      # - log: $slotTime
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.thirdSlot
      - getString:
          identifier: us.mappings.reserveSlot.slotSelected
          attribute: content-desc #changed on April 16th
          storeIn: slotTime1
      - log: $slotTime1
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.saveButton
          then:
            - click: 
                identifier: us.mappings.reserveSlot.saveButton
          else: #workaround added for scenario when the reserve button not showing up on emulator only
            - executeFunction:
                name: us.functions.reserveSlot.selectDeliverySlotAgain
      - verifyIdentifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.selectDeliverySlotAgain  #workaround till bug CEPG-81814 gets fixed
    platform: android
    flow:
      - click:
          identifier: us.mappings.global.navigation.backNavigation.heroImageViewer
      - click: 
          identifier: us.mappings.cart.reserveTime
      - click: 
          identifier: us.mappings.reserveSlot.selectTomorrow
      - click:
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton

 # verifying elements present on 'Curbside pickup' tab when slot is selected and unscheduled pickup option is available.
  - name: us.functions.reserveSlot.curbsidePickup.changeTo.unScheduledSlot.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
            - identifier: us.mappings.reserveSlot.todaysSlot.selected
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
            - identifier: us.mappings.reserveSlot.saveButton
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.saveButton
              value: true
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton.detailLabel


# verifying elements present on 'Curbside pickup' tab when scheduled slot is selected and FF is in cart.
  - name: us.functions.reserveSlot.curbsidePickup.scheduledSlotSelected.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
            - identifier: us.mappings.reserveSlot.todaysSlot.selected
            - identifier: us.mappings.reserveSlot.saveButton
            - identifier: us.mappings.reserveSlot.saveButton.detailLabel
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.saveButton
              value: true

# verifying elements present on 'Curbside pickup' tab when no slot is selected.
  - name: us.functions.reserveSlot.curbsidePickup.noSlotSelected.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
            - identifier: us.mappings.reserveSlot.todaysSlot.selected
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.saveButton
              value: true

# verifying elements present on 'Delivery from store' tab when no slot is selected.
  - name: us.functions.reserveSlot.deliveryFromStore.noSlotSelected.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryTab.selected
            - identifier: us.mappings.reserveSlot.todaysSlot.selected
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.saveButton
              value: true

  - name: us.functions.reserveSlot.curbsidePickup.selectStore.storeSelected.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
                present:
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
                  # - identifier: us.mappings.resrveSlot.selectStore.firstStoreExpressFlag
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreDistance
                  - identifier: us.mappings.reserveSlot.selectStore.first
      - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.selectStore.first
                    equals: 1

# verifying elements present on 'Select Store'  when valid zipcode searched and no store is selected.
  - name: us.functions.reserveSlot.curbsidePickup.selectStore.noStoreSelected.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
                present:
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
                  # - identifier: us.mappings.resrveSlot.selectStore.firstStoreExpressFlag
                  - identifier: us.mappings.resrveSlot.selectStore.firstStoreDistance
                  - identifier: us.mappings.reserveSlot.selectStore.first
      - verifyIdentifier:
                value:
                  - identifier: us.mappings.reserveSlot.selectStore.first
                    notEquals: 1

# Searching stores by zipcode and verifying searched zipcode is present in zipcode bar.
  - name: us.functions.reserveSlot.curbsidePickup.selectStore.searchStores.verifyZipcodeBar
    platform: ios
    flow:
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${zicodeSearch}
          pressEnter: true
      - click:
          identifier: us.mappings.default.keyboardDoneButton
      - verifyIdentifier:
          value:
            - identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
              equals: ${expectedZipCode}

# Verifying elements of stores which are not available (grey-out).
  - name: us.functions.reserveSlot.curbsidePickup.selectStore.notAvailableStores.verifyCard
    platform: ios
    flow:
      - executeFunction:
                name: us.functions.reserveSlot.curbsidePickup.selectStore.searchStores.verifyZipcodeBar
                params:
                  - name: zicodeSearch
                    string: us.data.bookSlot.secondZipcode
                  - name: expectedZipCode
                    string: 72704
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resrveSlot.selectStore.secondStoreName
            - identifier: us.mappings.resrveSlot.selectStore.secondStoreAddress
            - identifier: us.mappings.resrveSlot.selectStore.secondStoreExpressFlag
            - identifier: us.mappings.resrveSlot.selectStore.secondStoreDistance
            - identifier: us.mappings.reserveSlot.selectStore.second
      - click:
          identifier: us.mappings.reserveSlot.selectStore.second
      - verifyIdentifier:
          value:
            - identifier: us.mappings.reserveSlot.selectStore.second
              notEquals: 1

# to verify that store selected from 'select store' is displaying on 'reserve a Time'.
  - name: us.functions.reserveSlot.curbsidePickup.selectedStore.displayOnReserveTimeScreen
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: ${storeNumber}
      - click:
          identifier: ${storeNumber}
      - getString:
          identifier: ${storeAddress}
          attribute: value
          storeIn: fullAddress
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
      - verifyValue:
          identifier: us.mappings.reserveSlot.curbsidePickup.storeAddress
          contains: ${fullAddress}

  - name: us.functions.reserveSlot.curbsidePickup.changeStore.verifyDetails
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.selectStore.navigationBar
            - identifier: us.mappings.reserveSlot.selectStore.title
            - identifier: us.mappings.flex.closeButton
          # - identifier: us.mappings.reserveSlot.selectStore.backButton
            - identifier: us.mappings.reserveSlot.selectStore.saveButton
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.selectStore.title
              value: true
            - identifier: us.mappings.flex.closeButton
              value: true
          # - identifier: us.mappings.reserveSlot.selectStore.backButton
          #   value: true
            - identifier: us.mappings.reserveSlot.selectStore.saveButton
              value: true
      - click:
          identifier: us.mappings.reserveSlot.selectStore.backButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.flex.closeButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.selectStore.backButton

  #  To verify elements of express slot present on 'Delivery from store'
  - name: us.functions.reserveSlot.deliveryFromStore.expressDelivery.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
      - verifyIdentifier:
          label:
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: 2 hours or less with Express
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: $7.95 delivery + $10.00 Express
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: total price $17.95


# to verify 'Select Address' when one address is in file
  - name: us.functions.deliveryAddress.selectAddress.oneAddressAdded.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.selectAddress.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
      - verifyIdentifier:
          value:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              equals: 1
      - verifyIdentifier:
          label:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: 1694 Adrian Way
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: San Jose
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: CA 95122

  - name: us.functions.reserveSlot.changePickUpStore            
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title              
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryfromStoreTab.changeAddressLink
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.deliveryfromStoreTab.changeAddressLink
      - click:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${zipcode}
          pressEnter: true
      - click:
          identifier: us.mappings.resrveSlot.selectStore.firstStoreName  
      - click:
          identifier:  us.mappings.default.keyboardDoneButton       
      - click:
          identifier: us.mappings.reserveSlot.selectStore.first
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton

 #To verify elements of Add Address' bottom sheet on Delivery Tab
  - name: us.functions.reserveSlot.deliveryFromStore.addAddressBottomSheet.verifyCard
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheet
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheetMainView
            - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
            - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheet
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheetMainView
            - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
            - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.title
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheetLabel
      - verifyIdentifier:
          label: 
            - identifier: us.mappings.reserveSlot.deliveryTab.addAddress.bottomSheetLabel
              contains: 9 5 1 2 2
      - verifyIdentifier:
          visible:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
              value: true

  #Reset to See times when Bookslot shows Change button  Joel Added 6/13/22
  - name: us.functions.reserveSlot.fallBack.resetSeeTimes
    platform: android
    flow: 
      # Fallback if See Times did not update as expected. 
      - scroll:
          direction: up               
      - getString:
          identifier: us.mappings.home.seeTimesOrChange.id
          attribute: text
          storeIn: bookslotButton
      - sleep:
          duration: 3000
      - log: Confirm home screen Bookslot button.         
      - if:
          condition: ${bookslotButton} == 'Change' (or) ${bookslotButton} == "Change"
          then:             
            - log: See times button needs to be reset
            - click:
                identifier: us.mappings.home.changeButton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
                wait: 3000
            - click: 
                identifier: ${storeOne}
                wait: 3000
            # - goBack: true

            # saving the store
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.selectStore.saveButton                      
            - click: 
                identifier: us.mappings.reserveSlot.selectStore.saveButton
                wait: 3000
            - sleep:
                duration: 10000
           
                
            # clicking the reserve button        
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.selectStore.saveButton                      
            - click: 
                identifier: us.mappings.reserveSlot.selectStore.saveButton
                wait: 3000 
            - sleep:
                duration: 5000       
            # - click: 
            #     identifier: us.mappings.global.closeButton
            #     wait: 3000
            - scroll:
                timeout: 10000
                direction: up
                untilIdentifier: us.mappings.home.seeTimesOrChange.id
            - sleep:
                duration: 5000    
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.home.seeTimesOrChange.id
            - click:                                  
                identifier: us.mappings.home.seeTimesOrChange.id
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
                wait: 3000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.selectStoreTextField
            - scroll:
                timeout: 15000
                direction: down
                untilIdentifier: ${storeTwo}
            - click: 
                identifier: ${storeTwo}
                wait: 3000
            # - goBack: true
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.reserveSlot.selectStore.saveButton          
            - click: 
                identifier: us.mappings.reserveSlot.selectStore.saveButton
                wait: 3000
            - sleep:
                duration: 10000    

            - goBack: true   
            # - click: 
            #     identifier: us.mappings.global.closeButton
                # wait: 10000
            - log: See times should now be reset          
          else:
            - log: See times button was present, no need to reset

  #verify Delivery Address is already present and add address
  - name: us.functions.reserveSlot.scheduledDelivery.verifyandaddaddress
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectaddress.chooseaddressradio
          then:  
            - click:
                identifier: us.mappings.selectaddress.continue 
          else:         
            - executeFunction:
                name: us.functions.reserveSlot.noAddress.addDeliveryAddress
                params:
                  - name: streetAddress
                    string: ${streetAddress}
                  - name: city
                    string: ${city}
                  - name: state
                    string: ${state}
                  - name: zipcode
                    string: ${zipcode}
                  - name: phoneNumber
                    string: ${phoneNumber}

  - name: us.functions.reserveSlot.verifyPageLoads
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot

  - name: us.functions.reserveSlot.noSlotSaved.verifySlotBehaviour
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot
            - identifier: us.mappings.reserveSlot.daySelectionView
          enabled:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
              value: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.thirdSlot
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.thirdSlot
                position: center
                wait: 3000
            - verifyIdentifier:
                enabled:
                  - identifier: us.mappings.reserveSlot.thirdSlot
                    value: true
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.continueButton
                  - identifier: us.mappings.reserveSlot.checkoutByToKeepReservationMessage
          else:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.continueButton
                  - identifier: us.mappings.reserveSlot.checkoutByToKeepReservationMessage
      - scroll:
          direction: left
          untilIdentifier: us.mappings.reserveSlot.lastday
          withinIdentifier: us.mappings.reserveSlot.daySelectionView
          position: center
          wait: 3000
          scrollLimit: 3

  - name: us.functions.reserveSlot.slotPreSelected.verifySlotBehaviour
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.thirdSlot
            - identifier: us.mappings.reserveSlot.daySelectionView
          enabled:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
              value: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - verifyIdentifier:
                enabled:
                  - identifier: us.mappings.reserveSlot.thirdSlot
                    value: true

  - name: us.functions.reserveSlot.changeStore.verifySlotSelected   # modified on 5th January 2021
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          identifier: us.mappings.reserveSlot.deliveryfromStoreTab.changeAddressLink
      - click:
          identifier: us.mappings.reserveSlot.selectStore.second
      - click:
          identifier: us.mappings.home.saveButton
      - verifyIdentifier:
          checked:
            - identifier: us.mappings.reserveSlot.slotSelected
              value: true

  - name: us.functions.reserveSlot.curbsidePickup.noSlotSelected.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          checked:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
              value: true
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.deliveryFromStore.noSlotSelected.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.addressOverlayTile.close
      - click:
          wait: 5000
          identifier: us.mappings.addressOverlayTile.close
      - verifyIdentifier:
          checked:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
              value: true
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.curbsidePickup.changeTo.unScheduledSlot.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
            #- identifier: us.mappings.reserveSlot.todaysSlot.selected
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
            - identifier: us.mappings.reserveSlot.saveButton
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.saveButton

  # verifying elements present on 'Select Store' when valid zipcode searched and no store is selected.
  - name: us.functions.reserveSlot.curbsidePickup.selectStore.noStoreSelected.verifyCard
    platform: android
    flow:
    - verifyIdentifier:
          present:
          - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
          - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
          - identifier: us.mappings.resrveSlot.selectStore.firstStoreDistance
          - identifier: us.mappings.reserveSlot.selectStore.first

  - name: us.functions.reserveSlot.curbsidePickup.selectStore.searchStores.verifyZipcodeBar
    platform: android
    flow:
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${zicodeSearch}
          pressEnter: true
      - verifyIdentifier:
          text:
            - identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
              equals: ${expectedZipCode}


#verify 'Select Address' when one address is in file
  - name: us.functions.deliveryAddress.selectAddress.oneAddressAdded.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.selectAddress.selectAddressTitle
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
      - verifyIdentifier:
          text:
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: 1694 Adrian Way
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: San Jose
            - identifier: us.mappings.deliveryAddress.selectAddress.firstAddress
              contains: CA 95122

  - name: us.functions.reserveSlot.scheduledDelivery.clickonreserveorChangeButton
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.changeSlot
          then:
            - click:
                identifier: us.mappings.cart.changeSlot
      - if:
          identifier:
            present:
                - identifier: us.mappings.cart.reserveTime
          then:
            - click:
                identifier: us.mappings.cart.reserveTime

# Scroll function for Days Selection in left direction
  - name: us.functions.reserveSlot.deliveryFromStore.daysSelection.scrollToLeft
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.deliveryTab.daySelection
            - identifier: us.mappings.reserveslot.deliveryTab.firstDayAvailable
      - scroll:
          direction: left
          withinIdentifier: us.mappings.reserveSlot.deliveryTab.daySelection
          untilIdentifier: us.mappings.reserveslot.deliveryTab.lastDayAvailable
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.deliveryTab.lastDayAvailable

  - name: us.functions.reserveSlot.curbsidePickup.scheduledSlotSelected.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
            - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.curbsidePickup.selectedStore.displayOnReserveTimeScreen
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: ${storeNumber}
      - click:
          identifier: ${storeNumber}
      - getString:
          identifier: ${storeAddress}
          storeIn: fullAddress
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
            - identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
      - verifyIdentifier:
          text:
            - identifier: us.mappings.reserveSlot.curbsidePickup.selectedstoreAddress
              contains: ${fullAddress}

  - name: us.functions.reserveSlot.scheduledDelivery.bookTodaysSlot
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      # - verifyIdentifier:
      #    present:
      #      - identifier: us.mappings.reserveSlot.scheduledDelivery.address Currently there is no separate ID fo this.
      - getString:
          identifier: us.mappings.reserveSlot.thirdSlot
          attribute: label
          storeIn: slotTime
      - log: ${slotTime}
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.deliveryFromStore.expressDelivery.verifyCard
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - click:
          identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
      - verifyIdentifier:
          text:
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: 2 hours or less with Express
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: $10.00 Express
            - identifier: us.mappings.reserveSlot.expressDeliverySlot
              contains: total price $10.00

  - name: us.functions.reserveSlot.bookTodaysSlot.changezipcodeandSelectStore
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - executeFunction:
          name: us.functions.reserveSlot.curbsidePickup.selectStore.searchStores.verifyZipcodeBar
          params:
            - name: zicodeSearch
              string: ${newzipcode}
            - name: expectedZipCode
              string: ${expectedZipcode}
      - loop:
         begin: 1
         end: 4
         storeIndex: i
         flow:
           - log: $i
           - if:
               identifier:
                 enabled:
                    - identifier: us.mappings.reserveSlot.selectStorebyIndex
                      value: true
               then:
                 - log: 'Store Available'
                 - click:
                      identifier: us.mappings.reserveSlot.selectStorebyIndex
                 - break: true
      - click:
          identifier: us.mappings.home.saveButton

  - name: us.functions.reserveSlot.updatePickUpStore
    platform: android
    flow:
      - click:
          wait: 5000
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${ZIP_CODE}
          pressEnter: true
      - if:
          identifier:
            present:
              - identifier: //android.widget.TextView[contains(@text, "${address}")]
          then:
            - click:
                identifier: //android.widget.TextView[contains(@text, "${address}")]
          else:
            - scroll: 
                direction: down
                untilIdentifier: //android.widget.TextView[contains(@text, "${address}")]
            - click:
                identifier: //android.widget.TextView[contains(@text, "${address}")]
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.selectStore.saveButton
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton

  - name: us.functions.reserveSlot.verifyAddress
    platform: android
    flow:
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.storeAddressText
      - verifyIdentifier:
          text:
            - identifier: us.mappings.reserveSlot.curbsidePickup.storeAddressText
              contains: ${address}
            - identifier: us.mappings.reserveSlot.curbsidePickup.storeAddressText
              contains: ${city}

  - name: us.functions.reserveSlot.verifyAlcoholRestrictedSlot
    platform: android
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - click:
          wait: 2000
          identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.dismissPageButton
      - click:
          wait: 2000
          identifier: us.mappings.reserveSlot.dismissPageButton

  # Book scheduled pickup slot 9am-10am
  - name: us.functions.reserveSlot.curbsidePickup.book8amto9amSlot
    platform: android
    flow:
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.addressOverlayTile.close
          then:
            - click:
                wait: 5000
                identifier: us.mappings.addressOverlayTile.close
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
          else:
            - log: Skipping reserve slot step
      - log: ${slotTime}
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.8am-9amslot
          then:
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.8am-9amslot
          else:
                  - log: 'Switching tomorrow for reserve a slot'
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.selectTomorrow
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.8am-9amslot
                        - name: direction
                          string: down
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.8am-9amslot
                
      - getString:
          identifier: us.mappings.reserveSlot.8am-9amslot
          attribute: text
          storeIn: slotTime
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.saveButton
          then:
            - log: "todays slot was available"
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.saveButton
          else:
            - log: "continue to checkout"
            - click:
                wait: 3000
                identifier: us.mappings.reserveSlot.continueButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton
  
  # Book scheduled alcohol restricted pickup slot
  - name: us.functions.reserveSlot.curbsidePickup.bookAlcoholRestrictedSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - sleep: 
                duration: 5000
      - if:
          identifier: 
            timeout: 40000
            present: 
              - identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
          then: 
            - log: Alcohol restricted slot is available for today
          else: 
            - log: Alcohol restricted slot is not available for today 
            - click: 
                wait: 2000
                identifier: us.mappings.reserveSlot.selectThirdDay
            - verifyIdentifier: 
                present: 
                  - identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
      - if: 
          identifier: 
            visible: 
              - identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
                value: true
          then:
            - click:
                identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
          else: 
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.alcoholRestrictedSlot
                # position: center
            - click:
                identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
      - getString:
          identifier: us.mappings.reserveSlot.alcoholRestrictedSlot
          attribute: label
          storeIn: slotTime
      - log: ${slotTime}
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.saveButton
  
  # Verify alcohol restricted slot 
  - name: us.functions.reserveSlot.verifyAlcoholRestrictedSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.editSlot.todaySlots
          then:
            - click:
                wait: 10000
                identifier: us.mappings.editSlot.todaySlots
      - verifyIdentifier:
          present:
            - identifier:            us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - click:
          wait: 2000
          identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.dismissPageButton
      - click:
          wait: 2000
          identifier: us.mappings.reserveSlot.dismissPageButton

  # Verify alcohol restricted label for w+ members
  - name: us.functions.reserveSlot.verifyAlcoholRestrictedLabelInBookSlot
    platform: ios
    flow:        
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton         
            - executeFunction:
                name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - sleep:
          duration: 3000   
      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
          then:
            - click:
                wait: 10000
                identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay 
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay  
                  # - verifyIdentifier:
                  #     present:
                  #       - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert  
                  # - click:
                  #     wait: 2000
                  #     identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert                      
                else:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.daySelectionView    
                  - scroll:
                      direction: left
                      untilIdentifier: us.mappings.cart.reservetime.particularDay  
                      withinIdentifier: us.mappings.reserveSlot.daySelectionView          
                  - if:                
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.particularDay    
                      then:                                      
                        - click:
                            identifier: us.mappings.cart.reservetime.particularDay        
                      else:     
                        - failTest:
                            message: "FAILURE - ${env} - Slot is not available" 
                  - sleep:
                      duration: 5000
                  # - verifyIdentifier:
                  #     present:
                  #       - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert  
                  # - click:
                  #     wait: 2000
                  #     identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert                                      
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
                    - name: direction
                      string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot

  - name: us.functions.reserveSlot.verifyAlcoholRestrictedLabelInBookSlot
    platform: android    
    flow:
      - sleep:
           duration: 5000     
      - verifyIdentifier:
          present:
            - identifier: us.mappings.inHome.bookSlot.switchToDeliveryFromStoreTab           
      - click:
          identifier: us.mappings.inHome.bookSlot.switchToDeliveryFromStoreTab   
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.delivery.addAddressPopUp
          then:
              - click:
                  identifier: us.mappings.account.delivery.addAddressPopUp           
      - executeFunction:
          name: us.functions.reserveSlot.fcormpselectaddressandcontinue
      - sleep:
          duration: 3000  
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.locallyRestrictedBanner
          then:
            - click:
                wait: 2000
                identifier: us.mappings.cart.cancelAlcoholItemUpdate

      - if:
          identifier:
            present:
              - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
          then:
            - click:
                wait: 10000
                identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.particularDay 
                then:
                  - click:
                      identifier: us.mappings.cart.reservetime.particularDay  
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert  
                  - click:
                      wait: 2000
                      identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert                      
                else:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.daySelectionView    
                  - scroll:
                      direction: left
                      untilIdentifier: us.mappings.cart.reservetime.particularDay  
                      withinIdentifier: us.mappings.reserveSlot.daySelectionView          
                  - if:                
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.particularDay    
                      then:                                      
                        - click:
                            identifier: us.mappings.cart.reservetime.particularDay        
                      else:     
                        - failTest:
                            message: "FAILURE - ${env} - Slot is not available"                    
                  - sleep:
                      duration: 5000
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert  
                  - click:
                      wait: 2000
                      identifier: us.mappings.resreveSlot.alcoholRestrictedSlotalert
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
          then:
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.resreveSlot.bookAlcoholRestrictedSlot
                    - name: direction
                      string: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resreveSlot.bookAlcoholRestrictedSlot

  - name: us.functions.reserveSlot.closeAddressOverlayTile
    platform: android
    flow:
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.addressOverlayTile.close
          then:
            - click:
                wait: 5000
                identifier: us.mappings.addressOverlayTile.close
# Verify and close Address overlay Tile
  - name: us.functions.reserveSlot.closeAddressOverlayTile
    platform: ios
    flow:
      - if:
          identifier:
            timeout: 10000
            present:
              - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
          then:
            - click:
                wait: 10000
                identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton

  - name: us.functions.reserveSlot.curbsidePickup.verifyUnscheduledPickupBanner
    platform: ios
    flow:
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner   
          label:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
              contains: Pick up after 
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
              contains: selected
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
              contains: Free
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.curbsideStoreMoreOptionsView

  - name: us.functions.reserveSlot.curbsidePickup.verifyUnscheduledPickupBanner
    platform: android
    flow:

      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
            - identifier: us.mappings.reserveSlot.UnscheduledPickupAfterText
            - identifier: us.mappings.reserveSlot.UnscheduledPickupSlotPrice
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.curbsideStoreMoreOptionsView

  - name: us.functions.reserveSlot.updatePickUpStore
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.curbsidePickup.changeStoreLink
      - click:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${ZIP_CODE}
          pressEnter: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.changsStore.selectStoreByAddress
          then:
            - click:
                identifier: us.mappings.reserveSlot.changsStore.selectStoreByAddress
          else:
            - scroll: 
                direction: down
                untilIdentifier: us.mappings.reserveSlot.changsStore.selectStoreByAddress
            - click:
                identifier: us.mappings.reserveSlot.changsStore.selectStoreByAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.selectStore.saveButton
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton

  - name: us.functions.reserveslot.verifyStoreNameandAddress
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
            # - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
            
      - verifyValue:
          identifier: us.mappings.resrveSlot.selectStore.firstStoreName
          contains: ${storeName}
      
      # - verifyValue:
      #     identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
      #     contains: ${storeAddress}

  - name: us.functions.reserveslot.verifyStoreNameandAddress
    platform: android
    flow:
      - sleep:
           duration: 10000 
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
      #       - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
            
      # - verifyIdentifier:
      #     text:
      #       - identifier: us.mappings.resrveSlot.selectStore.firstStoreName
      #         contains: ${storeName}
      
      - verifyIdentifier:
          text:
            - identifier: us.mappings.resrveSlot.selectStore.firstStoreAddress
              contains: ${address}
  
  - name: us.functions.reserveSlot.fcormpselectaddressandcontinue
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
          then:
            - click:
                wait: 5000
                identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.addressselectionButton
          then:
            - click:
                identifier: us.mappings.reserveSlot.addressselectionButton
            - click:
                identifier: us.mappings.selectAddress.continueButton

  - name: us.functions.reserveSlot.fcormpselectaddressandcontinue
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.bookslot.AddAddressTitle
          then:
            - click:
                wait: 5000
                identifier: us.mappings.cart.bookslot.AddAddressButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.selectAddressTitle
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.addressselectionButton
            - click:
                identifier: us.mappings.selectAddress.continueButton
  
  - name: us.functions.reserveSlot.clickAddAddressSelectAndContinue
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton

      - click:
          identifier: us.mappings.deliveryAddress.addAddress.overlay.addAddressButton     
         
      - verifyIdentifier:
          present:
            - identifier: us.mapppings.reserveslot.addAddress.selectAddress
          
      - click:
          identifier: us.mapppings.reserveslot.addAddress.selectAddress

      - click:
          identifier: us.mappings.reviewOrder.paymentMethod.continueButton   
            

  - name: us.functions.reserveSlot.clickTryW+AndVerifySCreen
    platform: ios
    flow:  
      - verifyIdentifier:
          present:
            - identifier: us.mapppings.reserveslot.tryW+Button

      - click:
          identifier: us.mapppings.reserveslot.tryW+Button

      - sleep:
          duration: 5000

      - verifyIdentifier:
          present:
            - identifier: us.mapppings.reserveslot.noThanksButton

      - verifyIdentifier:
          present:
            - identifier: us.mapppings.reserveslot.zeroDeliveryCharges

  - name: us.functions.selectBookingSlot.SlotExcept.TodayandSaturdayandSunday
    platform: ios
    flow: 
      - executeFunction:
          name: us.functions.loadBookingSlotScreenBasics      
          params:
            - name: page
              string: home
            - name: tab
              string: pickup

    #Select day except today/saturday/sunday

      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.Thursday
          then:
              - click:
                  identifier: us.mappings.cart.reservetime.Thursday        
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.Friday                
                then:
                    - click:
                        identifier: us.mappings.cart.reservetime.Friday                       
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.Monday              
                      then:
                          - click:
                              identifier: us.mappings.cart.reservetime.Monday

      - click:
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.reserveSlot.clickNoThanksAndVerifyScreen
    platform: ios
    flow:  
      - if:
          identifier:
            present:
              - identifier: us.mapppings.reserveslot.noThanksButton
          then:
              - click:
                  identifier: us.mapppings.reserveslot.noThanksButton       
              - sleep:
                  duration: 5000

  - name: us.functions.selectBookingSlot.SlotExcept.TodayandSaturdayandSunday
    platform: android
    flow:
      # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
      - executeFunction:
          name: us.functions.loadBookingSlotScreen      
          params:
            - name: page
              string: home
            - name: tab
              string: pickup
              
    #Select day except today/saturday/sunday

      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.reservetime.Thursday
          then:
              - click:
                  identifier: us.mappings.cart.reservetime.Thursday        
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.reservetime.Friday                
                then:
                    - click:
                        identifier: us.mappings.cart.reservetime.Friday                       
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.reservetime.Monday              
                      then:
                          - click:
                              identifier: us.mappings.cart.reservetime.Monday

      - click:
          identifier: us.mappings.reserveSlot.thirdSlot
      - click:
          identifier: us.mappings.reserveSlot.saveButton

  - name: us.functions.bookingSlotFromCart
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.shortCutSlotIndex              
          then:
              - log: selecting slot directly from cart page
              - click: 
                  identifier: us.mappings.reserveSlot.shortCutSlotIndex    
          else:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.sc.noSlotBooked.reserveTime
                  - name: direction
                    string: down
            - click:
                identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
                coordinates: 5%, 5%
            - if:
                identifier:
                  timeout: 5000
                  present:
                    - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton           
                then:
                    - click:
                        identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                    - executeFunction:
                        name: us.functions.reserveSlot.fcormpselectaddressandcontinue
                    - storeIn:
                        key: addressAdded
                        value: true
            - if:
                condition: ${tab} == 'pickup'
                then:
                  - log:  Selecting pickup tab
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - if:
                condition: ${tab} == 'delivery'
                then:
                  - log:  Selecting delivery tab
                  - click:
                      identifier: us.mappings.editSlot.deliveryTab
                  - if:
                      condition: ${addressAdded}
                      then:
                        - log: Address already added
                      else:
                        - if:
                            identifier:
                              timeout: 5000
                              present:
                                - identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton           
                            then:
                                - click:
                                    identifier: us.mappings.reserveSlot.scheduledDelivery.addAddressButton
                                - executeFunction:
                                    name: us.functions.reserveSlot.fcormpselectaddressandcontinue
            - sleep:
                duration: 2000
            - if:
                condition: ${slotDay} == 'today'
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.todaySlots
                else:
                  - executeFunction:
                      name: us.functions.daySlotInitialSetUp                
                  - click:
                      identifier: us.mappings.reserveSlot.futureDaySlots
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
            - click:
                identifier: us.mappings.reserveSlot.continueButton

  - name: us.functions.reserveSlot.verifyIneligibleWarningMessage
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.startNewOrderButton
          then:
            - click:
                identifier: us.mappings.cart.startNewOrderButton
            - click:
                identifier: us.mappings.editSlot.thirdDay
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
            - click:
                identifier: us.mappings.reserveSlot.backButton 

  - name: us.functions.reserveSlot.gardenCenter.bookIneligibletimeSlot
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.title
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.title
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.curbsidePickup.tab
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickup.tab
                wait: 5000
      - if:
          identifier: 
            timeout: 40000
            present: 
              - identifier: us.mappings.reserveSlot.IneligibletimeSlot
          then: 
            - log: Ineligible time slot is available for today
          else: 
            - log: Ineligible time slot is not available for today 
            - click: 
                identifier: us.mappings.reserveSlot.selectThirdDay
                wait: 2000
            - verifyIdentifier: 
                present: 
                  - identifier: us.mappings.reserveSlot.IneligibletimeSlot
      - if: 
          identifier: 
            visible: 
              - identifier: us.mappings.reserveSlot.IneligibletimeSlot
                value: true
          then:
            - click:
                identifier: us.mappings.reserveSlot.IneligibletimeSlot
          else: 
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.IneligibletimeSlot
            - click:
                identifier: us.mappings.reserveSlot.IneligibletimeSlot
      - click:
          wait: 3000
          identifier: us.mappings.reserveSlot.saveButton   

  - name: us.functions.reserveSlot.verifyIneligibleWarningMessage
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveTime.button.on.cartPage
          then:
            - click:
                identifier: us.mappings.reserveTime.button.on.cartPage
            - click:
                identifier: us.mappings.editSlot.thirdDay
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
                    contains: Some items in your cart are ineligible for pickup at certain times.
            - click:
                identifier: us.mappings.reserveSlot.goBackButton

  - name: us.functions.reserveSlot.gardenCentre.bookIneligibleSlot
    platform: android 
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart    
      - click:                
          identifier: us.mappings.reserveTime.button.on.cartPage
      - sleep: 
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
      - if:
          identifier: 
            timeout: 40000
            present: 
              - identifier: us.mappings.reserveSlot.ineligibleSlot
          then: 
            - log: ineligible slot is available for today
          else: 
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reserveSlot.ineligibleSlot           
      - click:
          identifier: us.mappings.reserveSlot.ineligibleSlot    
      - click:
          identifier: us.mappings.reserve.slot.button        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.itemUpdatesForIneligibleSlot
      - click:
          identifier: us.mappings.reserveSlot.itemUpdates.gotitButton
      - click:
          identifier: us.mappings.reserveSlot.closeButton

  - name: us.functions.reserveTime.verifyhotchickenResrtictedTime
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - executeFunction:
          name: us.functions.selectTabForSlotBooking
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow

# workaround done as the restricted slot was  displayed only when app is restarted(Bug raised:https://jira.walmart.com/browse/CEPG-194142)
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
          then:
            - click:
                identifier: us.mappings.global.closeButton
            - terminateApp: true
            - executeFunction:
                name: us.functions.global.navigation.goToDeepLink
                params:
                  - name: deepLinkUrl
                    string: walmart://home
            - executeFunction:
                name: us.functions.global.navigation.toCartFromNavBar
            - executeFunction:
                name: us.functions.cart.changeTime
            - executeFunction:
                name: us.functions.selectDayForSlotDisplay
                params:          
                  - name: slotDay
                    string: tomorrow
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - click:
          identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - if:
          condition: ${timeslot} == '9am to 10am'
          then:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.reserveslot.9amto10amSlot
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - click:
                wait: 2000
                identifier: us.mappings.reserveslot.9amto10amSlot
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.itemIneligibleSlot
          else:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.reserveslot.12pmto2pmSlot
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center

            - storeIn:
                key: timeslot
                value: 12pm to 2pm 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveslot.12pmto2pmSlot
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.itemIneligibleSlot
      - click:
          identifier: us.mappings.reserve.slot.button
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.ineligibleForResevedTime
      - click:
          identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
      - sleep:
          duration: 2000
            
  - name: us.functions.reserveTime.verifyhotchickenResrtictedTime
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - if:
          condition: ${tab} == 'pickup'
          then:
            - click:
                identifier: us.mappings.reserveSlot.curbsidePickupTab.selected
          else:
            - if:
                condition: ${tab} == 'delivery'
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow

      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.reserveSlot.ineligibleItemsWarning

      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.9amto10amSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center

      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.9amto10amSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.9amto10amSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.itemIneligibleSlot
      - sleep:
          duration: 5000

      - storeIn:
          key: timeslot
          value: 12pm-2pm

      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center

      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.12pmto2pmSlot
      # - verifyIdentifier:
      #     notPresent:
      #       - identifier: us.mappings.reserveSlot.itemIneligibleSlot
      - click:
          identifier: us.mappings.reserve.slot.button        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.itemUpdatesForIneligibleSlot
      - click:
          identifier: us.mappings.reserveSlot.itemUpdates.gotitButton
      - sleep:
          duration: 3000

  #Verify ineligible slots and choose normal timeslot(3pm to 4pm)
  - name: us.functions.reserveTime.verify7amTo10amRestrictedSlots
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - executeFunction:
          name: us.functions.selectTabForSlotBooking
          params:
          - name: tab
            string: pickup          
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:
            - name: slotDay
              string: tomorrow
      - verifyIdentifier:
          timeout: 9000
          present:
            - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - click:
          identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.9amto10amSlot
            - identifier: us.mappings.reserveSlot.IneligibletimeSlot
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.3pmto4pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.3pmto4pmSlot
      - click:
          identifier: us.mappings.reserveSlot.continueButton

  - name: us.functions.reserveTime.amendHotchickenResrtictedTime
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.deliveryTab.selected
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow
            
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.1pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.1pmto2pmSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.1pmto2pmSlot
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.continueButton      


  - name: us.functions.reserveTime.amendHotchickenResrtictedTime
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.deliveryTab.selected
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow
      - storeIn:
          key: timeslot
          value: 12pm-2pm            
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.11amto12pmSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.11amto12pmSlot
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.continueButton 

  - name: us.functions.verifyselectionofslots
    platform: android
    flow:
     - storeIn:
        key: slotDayIndex
        value: 1
     - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.futureDaySlots #Tomorrow slot verify 

     - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.todaySlots #Today slot verify     
     - storeIn:
        key: slotDayIndex
        value: 2
     - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.futureDaySlots # Future slot verify
     - log: Future slots are not avaible. Please select only today and tomorrow slots.  

  - name: us.functions.verifyselectionofslots
    platform: ios
    flow:
     - storeIn:
        key: slotDayIndex
        value: 1
     - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.futureDaySlots #Tomorrow slot verify 

     - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.todaySlots #Today slot verify     
     - storeIn:
        key: slotDayIndex
        value: 2
     - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.futureDaySlots # Future slot verify
     - log: Future slots are not avaible. Please select only today and tomorrow slots.  


  - name: us.functions.reserveTime.PickupInsteadReserveTime
    platform: android
    flow:
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.orderDetails.customeroptionpickup
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reservePickup.title
      - if:
          condition: ${oderType} == 'expressOrder'     
          then: 
            - verifyIdentifier:
                present:
                 - identifier: us.mappings.reserveSlot.messageBanner  
            - getString:
                identifier: us.mappings.reserveSlot.messageBanner
                attribute: text
                storeIn: reserveSlotMessageBanner          
            - log: Reserve slot new message banner '${reserveSlotMessageBanner}' is displayed                 
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:
            - name: slotDay
              string: 'today' 
      - executeFunction:
          name: us.functions.selectTimeSlot  
          params:
            - name: slotIndex
              string: 2
            - name: timeSlot
              string: generic
      - click:
          identifier: us.mappings.reservePickup.confirmPickupCTA  
      - sleep:
          duration: 15000

  - name: us.functions.reserveTime.PickupInsteadReserveTime
    platform: ios
    flow:
      - click:
          identifier: us.mappings.orderDetails.customeroptionpickup
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reservePickup.title
      - if:
          condition: ${oderType} == 'expressOrder'     
          then: 
            - verifyIdentifier:
                present:
                 - identifier: us.mappings.reserveSlot.messageBanner  
            - getString:
                identifier: us.mappings.reserveSlot.messageBanner
                attribute: label
                storeIn: reserveSlotMessageBanner          
            - log: Reserve slot new message banner '${reserveSlotMessageBanner}' is displayed             
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:
            - name: slotDay
              string: 'today' 
      - executeFunction:
          name: us.functions.selectTimeSlot  
          params:
            - name: slotIndex
              string: 2
            - name: timeSlot
              string: generic
      - click:
          identifier: us.mappings.reservePickup.confirmPickupCTA  
      - sleep:
          duration: 10000        

  - name: us.functions.deliveryAddress.addAddress.onGIC
    platform: android
    flow:
      - executeFunction:
          name: us.functions.gic.expandIfCollapsed
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.button
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.button
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.gic.addAddressTitle
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - click:
          identifier: us.mappings.deliveryAddress.add.streetAddress
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.shareLocationConsent
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.shareLocationConsent
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      # Handling Address suggestion if displayed
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - click:
          identifier: us.mappings.home.gic.expandedIcon

  - name: us.functions.deliveryAddress.addAddress.onGIC
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.gic.expandIfCollapsed
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.button
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.button
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.gic.addAddressTitle
      - click:
          identifier: us.mappings.home.gic.addAddress.firstName
      - enterText:
          identifier: us.mappings.home.gic.addAddress.firstName
          string: ${firstName}
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.home.gic.addAddress.lastName
      - enterText:
          identifier: us.mappings.home.gic.addAddress.lastName
          string: ${lastName}
      - click:
          identifier: us.mappings.deliveryAddress.add.streetAddress
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      # Handling Address suggestion if displayed
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.addressSuggestionList
            - sleep:
                duration: 5000
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:
                      identifier: us.mappings.default.keyboardDoneButton
                  - sleep:
                      duration: 2000
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
            - click:
                identifier: us.mappings.default.keyboardDoneButton
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - click:
          identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton

  - name: us.functions.reserveTime.amendGroceryToRxItem
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.deliveryTab.selected
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow
            
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.12pmto2pmSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.12pmto2pmSlot
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.continueButton 

  - name: us.functions.reserveTime.amendGroceryToRxItem
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.deliveryTab.selected
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow

      - storeIn:
                key: timeslot
                value: 12pm-2pm
            
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.12pmto2pmSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.12pmto2pmSlot
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.continueButton


  - name: us.functions.deliveryAddress.addAOrEditGdiInstructions
    platform: android
    flow:
      - log: "Click Edit button on address page"
      - click:
          identifier: us.mappings.gdiInstructions.addressEditButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.edit.title
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
          then:
            - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.gdiInstructions.editGdiInstructionsButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.gdiInstructionsTitle
      - click:
          identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
      - log: "Verifying the default options that is visible for a new GDI flow!!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderDetails.deliveryInstructionsText
            - identifier: us.mappings.gdiInstructions.propertyType
            - identifier: us.mappings.gdiInstructions.houseType
            - identifier: us.mappings.gdiInstructions.apartmentType
            - identifier: us.mappings.gdiInstructions.businessType
            - identifier: us.mappings.gdiInstructions.otherType
            - identifier: us.mappings.gdiInstructions.dropOffType
            - identifier: us.mappings.gdiInstructions.frontDoor
            - identifier: us.mappings.gdiInstructions.backDoor
            - identifier: us.mappings.gdiInstructions.noPreference
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.subTitle
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
            - identifier: us.mappings.gdiInstructions.deliveryNotesSubTitle
            - identifier: us.mappings.gdiInstructions.deliveryNotes.editBox
            - identifier: us.mappings.gdiInstructions.yourDeliveryAddressSubTitle
            - identifier: us.mappings.gdiInstructions.gdiAddressValue
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
            - identifier: us.mappings.global.saveButton
      - sleep:
          duration: 5000
      - if:
          condition: ${verifyDropOffOptionsForHouse}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
            - sleep:
                duration: 1500
            - click:
                identifier: us.mappings.gdiInstructions.houseType
            - log: "Verifying the dropOff location options for type House!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.garageDoorOption
      - if:
          condition: ${verifyDropOffOptionsForApartment}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
                wait: 3000
            - log: "Verifying the dropOff location options for type Apartment!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
                  - identifier: us.mappings.gdiInstructions.dropOff.mailRoomOrStaffOption
      - if:
          condition: ${verifyDropOffOptionsForBusiness}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.businessType
                wait: 3000
            - log: "Verifying the dropOff location options for type Business!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
                  - identifier: us.mappings.gdiInstructions.dropOff.mailRoomOrStaffOption
      - if:
          condition: ${verifyDropOffOptionsForOther}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.otherType
                wait: 3000
            - log: "Verifying the dropOff location options for type Other!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - click:
                identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - sleep:
                duration: 3000
      - if:
          condition: ${addGdiInstructionsForHouseType}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.withParam
                wait: 3000
            - log: "Adding GDI Instruction options for type House!!!"
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.dropOffType.withParam
                then:
                  - log: "${dropOffType} GDI instructions option is Not visible, scrolling right!!!"
                  - scroll:
                      direction: right
                      untilIdentifier: us.mappings.gdiInstructions.dropOffType.withParam
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOffType.withParam
            - click:
                identifier: us.mappings.gdiInstructions.dropOffType.withParam
                wait: 3000
            - if:
                condition: ${addGateCode}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
                      string: ${gateCode}
                  - goBack: true
            - if:
                condition: ${addDeliveryNotes}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.deliveryNotes.editBox
                      string: ${deliveryNotes}
                  - goBack: true
      - click:
          identifier: us.mappings.global.saveButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.savedDeliveryInstructions
      - click:
          identifier: us.mappings.global.saveButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderDetails.EditItems.backTo
          then:
            - click:
                identifier: us.mappings.orderDetails.EditItems.backTo
      - if:
          identifier:
            present:
              - identifier: us.mappings.orderDetails.EditItems.backTo
          then:
            - click:
                identifier: us.mappings.orderDetails.EditItems.backTo


  - name: us.functions.deliveryAddress.verifySavedGdiInstructions
    platform: android
    flow:
      - log: "Inside the ${entryPoint} - Touch Point for GDI Flow"
      - if:
          condition: ${touchPointBookSlotOnGIC}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.bookSlot.fourth
                then:
                  - log: "Slots are available and selecting the slot!!!"
                  - click:
                      identifier: us.mappings.bookSlot.fourth
            - click:
                identifier: us.mappings.bookSlot.changeCta.button
            - sleep:
                duration: 3000
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
      - if:
          condition: ${touchPointGIC} || ${touchPointItemPage}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.home.gic.module.parent.addAddressButton
                then:
                  - log: "Add Address FE Default button is present and clicked !!!"
                  - click:
                      identifier: us.mappings.home.gic.module.parent.addAddressButton
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: ${elementIdentifier}
                      then:
                        - click:
                            identifier: ${elementIdentifier}
                        - log: "Element to enter into GDI flow is visible, Clicked!!!"
      - if:
          condition: ${touchPointCart} || ${touchPointODP}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
            - sleep:
                duration: 10000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.addAddress
                then:
                  - click:
                      identifier: us.mappings.cart.addAddress
      - if:
          condition: ${touchPointCheckout}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
  # Generic steps irrespective of the touch point entry
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsAddressEdit
          then:
            - click:
                identifier: us.mappings.item.SubsAddressEdit
      - if:
          condition: ${touchPointCheckout}
          then:
            - log: "Skipping edit GDI instructions options !!!!"
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - click:
                identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - log: "Clicked in GDI Instructions Edit button and now on GDI edit panel!!!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.propertyType.selected
            - identifier: us.mappings.gdiInstructions.dropOffType.selected
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
      - click:
          identifier: us.mappings.global.saveButton
      - log: "Saved the edit GDI Instructions bottom sheet!!!!"
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.saveButton
          then:
            - click:
                identifier: us.mappings.global.saveButton
            - log: "Clicked Save button on the edit address sheet!!!!"
      - if:
          condition: ${touchPointBookSlotOnGIC} || ${touchPointCart}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserve.slot.button
                then:
                  - click:
                      identifier: us.mappings.reserve.slot.button
                  - log: "Clicked Save button on the edit address sheet!!!!"


  - name: us.functions.deliveryAddress.addAOrEditGdiInstructions
    platform: ios
    flow:
      - log: "Click Edit button on address page"
      - click:
          identifier: us.mappings.global.editButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.edit.title
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.gdi.editDeliveryInstructionButton
          then:
            - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.gdi.editDeliveryInstructionButton
#      - verifyIdentifier:
#          present:
#            - identifier: us.mappings.gdiInstructions.gdiInstructionsTitle
      - click:
          identifier: us.mappings.gdi.editDeliveryInstructionButton
      - log: "Verifying the default options that is visible for a new GDI flow!!!"
      - if:
          identifier:
            present:
              - identifier: us.mappings.gdiInstructions.propertyType.clear
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.propertyType
            - identifier: us.mappings.gdiInstructions.houseType
            - identifier: us.mappings.gdiInstructions.apartmentType
            - identifier: us.mappings.gdiInstructions.businessType
            - identifier: us.mappings.gdiInstructions.otherType
            - identifier: us.mappings.gdiInstructions.dropOffType
            - identifier: us.mappings.gdiInstructions.frontDoor
            - identifier: us.mappings.gdiInstructions.backDoor
            - identifier: us.mappings.gdiInstructions.noPreference
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.subTitle
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
            - identifier: us.mappings.gdiInstructions.deliveryNotesSubTitle
            - identifier: us.mappings.gdiInstructions.yourDeliveryAddressSubTitle
            - identifier: us.mappings.gdiInstructions.gdiAddressValue
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
            - identifier: us.mappings.paymentMethod.addPayment.overlay.saveButton
      - sleep:
          duration: 5000
      - if:
          condition: ${verifyDropOffOptionsForHouse}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
            - sleep:
                duration: 1500
            - click:
                identifier: us.mappings.gdiInstructions.houseType
            - log: "Verifying the dropOff location options for type House!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.garageDoorOption
      - if:
          condition: ${verifyDropOffOptionsForApartment}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
                wait: 3000
            - log: "Verifying the dropOff location options for type Apartment!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
      - if:
          condition: ${verifyDropOffOptionsForBusiness}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.businessType
                wait: 3000
            - log: "Verifying the dropOff location options for type Business!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
      - if:
          condition: ${verifyDropOffOptionsForOther}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.otherType
                wait: 3000
            - log: "Verifying the dropOff location options for type Other!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - click:
                identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - sleep:
                duration: 3000
      - if:
          condition: ${addGdiInstructionsForHouseType}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.withParam
                wait: 3000
            - log: "Adding GDI Instruction options for type House!!!"
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.dropOffType.withParam
                then:
                  - log: "${dropOffType} GDI instructions option is Not visible, scrolling right!!!"
                  - scroll:
                      direction: right
                      untilIdentifier: us.mappings.gdiInstructions.dropOffType.withParam
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOffType.withParam
            - click:
                identifier: us.mappings.gdiInstructions.dropOffType.withParam
                wait: 3000
            - if:
                condition: ${addGateCode}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
                      string: ${gateCode}
                  - goBack: true
            - if:
                condition: ${addDeliveryNotes}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.deliveryNotes.editBox
                      string: ${deliveryNotes}
                  - goBack: true
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.PetPickerWheelDone1
                then:
                  - log: inside done
                  - click:
                      identifier: us.mappings.reviewOrder.PetPickerWheelDone1
      - click:
          identifier: us.mappings.buyNow.addAddress.save.button
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.gdiInstructions.savedDeliveryInstructions
          then:
            - log: "Saved GDI instructions option is Not visible, scrolling down!!!"
            - sleep:
                duration: 2000
            - scroll:
                direction: down
                untilIdentifier: us.mappings.gdiInstructions.savedDeliveryInstructions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.savedDeliveryInstructions
      - click:
          identifier: us.mappings.buyNow.addAddress.save.button
      - if:
          identifier:
            present:
              - identifier: us.mappings.buyNow.navigateback
          then:
            - click:
                identifier: us.mappings.buyNow.navigateback
      - if:
          identifier:
            present:
              - identifier: us.mappings.navigateBack.button
          then:
            - click:
                identifier: us.mappings.navigateBack.button


  - name: us.functions.deliveryAddress.verifySavedGdiInstructions
    platform: ios
    flow:
      - log: "Inside the ${entryPoint} - Touch Point for GDI Flow"
      - if:
          condition: ${touchPointBookSlotOnGIC}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.bookSlot.fourth
                then:
                  - log: "Slots are available and selecting the slot!!!"
                  - click:
                      identifier: us.mappings.bookSlot.fourth
            - click:
                identifier: us.mappings.bookSlot.changeDeliveryButton
            - sleep:
                duration: 3000
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
      - if:
          condition: ${touchPointGIC} || ${touchPointItemPage}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.home.gic.module.parent.addAddressButton
                then:
                  - log: "Add Address FE Default button is present and clicked !!!"
                  - click:
                      identifier: us.mappings.home.gic.module.parent.addAddressButton
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: ${elementIdentifier}
                      then:
                        - click:
                            identifier: ${elementIdentifier}
                        - log: "Element to enter into GDI flow is visible, Clicked!!!"
      - if:
          condition: ${touchPointCart} || ${touchPointODP}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
            - sleep:
                duration: 10000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.addAddress
                then:
                  - click:
                      identifier: us.mappings.cart.addAddress
      - if:
          condition: ${touchPointCheckout}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: ${elementIdentifier}
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: ${elementIdentifier}
            - click:
                identifier: ${elementIdentifier}
      # Generic steps irrespective of the touch point entry
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsAddressEdit
          then:
            - click:
                identifier: us.mappings.item.SubsAddressEdit
      - if:
          condition: ${touchPointCheckout}
          then:
            - log: "Skipping edit GDI instructions options !!!!"
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - click:
                identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - log: "Clicked in GDI Instructions Edit button and now on GDI edit panel!!!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.propertyType.selected
            - identifier: us.mappings.gdiInstructions.dropOffType.selected
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
      - click:
          identifier: us.mappings.global.saveButton
      - log: "Saved the edit GDI Instructions bottom sheet!!!!"
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.saveButton
          then:
            - click:
                identifier: us.mappings.global.saveButton
            - log: "Clicked Save button on the edit address sheet!!!!"
      - if:
          condition: ${touchPointBookSlotOnGIC} || ${touchPointCart}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserve.slot.button
                then:
                  - click:
                      identifier: us.mappings.reserve.slot.button
                  - log: "Clicked Save button on the edit address sheet!!!!"

  - name: us.functions.selectBookingSlot.MBC
    platform: android
    flow:
      - log: Slot booking from the banner for Scheduled Delivery.
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
          then:
            - click:
                identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.cart.selectRandomSlotMBC

  - name: us.functions.selectBookingSlot.MBC
    platform: ios
    flow:
      - log: Slot booking from the banner for Scheduled Delivery.
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
          then:
            - click:
                identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.cart.selectRandomSlotMBC

  # Updated store address at reserve slot  
  - name: us.functions.reserveSlot.updatedStore
    platform: android
    flow:
      - log: Updated store address at reserve slot  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.headerCart
            - identifier: us.mappings.reserveSlot.updatedStoreButton
      - click:
          identifier: us.mappings.reserveSlot.updatedStoreButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.updatedStoreButton
      - click:
          identifier: us.mappings.reserveSlot.updatedStoreButton
      - enterText:
          identifier: us.mappings.reserveSlot.selectStore.zicodeTextfield
          string: ${ZIP_CODE}
          pressEnter: true
      - if:
          condition: ${secondStore}
          then:
            - log: Selecting Second store
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.selectStore.secondAddress
            - click:
                identifier: us.mappings.reserveSlot.selectStore.secondAddress
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.selectStore.storeAddress 
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.selectStore.storeAddress 
                else:
                  - scroll: 
                      direction: down
                      untilIdentifier: us.mappings.reserveSlot.selectStore.storeAddress 
                  - click:
                      identifier: us.mappings.reserveSlot.selectStore.storeAddress 
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.reserveSlot.selectStore.saveButton
      - click:
          identifier: us.mappings.reserveSlot.selectStore.saveButton
          wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.closeButton
      - click:
          identifier: us.mappings.reserveSlot.closeButton
          wait: 3000
      - click:
          identifier: us.mappings.reserveSlot.closeButton
          wait: 3000