functions:

##################################################### iOS ##################################################
  # Account Sign
  - name: us.functions.global.authentication.signInAccountWithErrorHandling
    platform: ios
    flow:
      - if:
          condition: ${validateSignInPage} #to validate the sign in page
          then:
            - verifyIdentifier:
                present: 
                  - identifier: us.mappings.home.signPageGraphic
                  - identifier: us.mappings.home.signViewLabel

      - executeFunction:
          name: us.functions.global.authentication.dismissSelectSavedPasswordDialog
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}

      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.global.authentication.passwordField
          then:
            # Retry click on continue button if not clicked in earlier iteration
            - loop:
                begin: 1
                end: 3
                storeIndex: i
                flow:
                  - sleep:
                      duration : 3000
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.global.authentication.signIn.continueButton
                      then:
                        - click:
                            identifier: us.mappings.global.authentication.signIn.continueButton
                  - try:
                      flow:
                        - verifyIdentifier:
                            timeout: 0
                            notPresent:
                              - identifier: us.mappings.global.authentication.emailField
                        - storeIn:
                            key: signInValidated
                            value: true
                        - break: true
                      catch:
                        flow:
                          - log: Retrying login
            - if:
                condition: ${signInValidated}
                then:
                  - storeIn:
                      key: signInValidated
                      value: false
                  - log: Email entered
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"

            - try:
                flow:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton 
                          contains: Password option selected
                catch:
                  flow:
                    - click:
                        identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton
      - if:
          condition: ${validateSignInPage} #to validate forgot pwd link
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.signIn.button_forgot_password
                then:
                  - click:
                      identifier: us.mappings.global.authentication.signIn.button_forgot_password
                  - click:
                      identifier: us.mappings.global.authentication.signIn.button_forgot_password.goBack
                      wait: 3000
                else:
                  - log: the forgot pwd button is not present

      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - sleep:
                duration: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.passwordField
                then:
                  - enterText:
                      identifier: us.mappings.global.authentication.passwordField
                      string: ${password}
                      #pressEnter: true
                  - sleep:
                      duration: 1000
                  - click:
                      identifier: us.mappings.global.authentication.signInButton
                  - sleep:
                      duration: 2000
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.global.authentication.signIn.keyBoardReturnButton
                      then:
                        - click:
                            identifier: us.mappings.global.authentication.signIn.keyBoardReturnButton
                  - hideKeyboard: true
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.global.authentication.signInButton
                then:
                  - storeIn:
                      key: signInValidated
                      value: true
                  - break: true
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.quickSecurityCheck
          then:
            - executeFunction:
                name: us.functions.global.authentication.stepUpOTP.flow
                params:
                  - name: email
                    string: $email
            - sleep:
                duration: 3000
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.global.authentication.submitOTPCode
                then:
                  - storeIn:
                      key: signInValidated
                      value: true
      - if:
          condition: ${signInValidated}
          then:
            - log: Account signed in
            - storeIn:
                key: signInValidated
                value: false
            - log: Account Sign in Success
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton

      - executeFunction:
          name: us.test.functions.utils.closeWplusPrompt.homeScreen

      - executeFunction:
          name: us.functions.utils.handleCartMergePopup

  - name: us.functions.global.authentication.signInAccountIfErroredOut
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.somethingWentWrongError
          then:
            - loop:
                begin: 0
                end: 3
                storeIndex: i
                flow:
                    - log: $i
                    - click:
                        identifier: us.mappings.global.authentication.signIn.continueButton
                    - sleep:
                        duration: 5000
                    - if:
                        identifier:
                          notPresent:
                            - identifier: us.mappings.global.authentication.somethingWentWrongError
                        then:
                          - storeIn:
                              key: signInError
                              value: fixed
                          - break: true
            - if:
                condition: ${signInError} != 'fixed'
                then:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"

      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton


      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.passwordField
      - enterText:
          identifier: us.mappings.global.authentication.passwordField
          string: ${password}
      - click:
          identifier: us.mappings.global.authentication.signInButton

      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.somethingWentWrongError
          then:
            - click:
                identifier: us.mappings.global.authentication.signInButton
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.quickSecurityCheck
          then:
            - if:
                condition: ${env} == 'production' || ${env} == 'spanish_prod_e2e'
                then:
                  - executeFunction:
                      name: us.functions.global.authentication.stepUpOTP.flow
                      params:
                        - name: email
                          string: $email
                else:
                  - if:
                      condition: ${env} == 'teflon'
                      then:
                        - click:
                            identifier: us.mappings.global.closeButton
                        - openLink: walmart://debugPanel
                        - executeFunction:
                            name: us.functions.global.navigation.openDeepLink
                        - scroll:
                            direction: down
                            untilIdentifier: us.mappings.global.authentication.debugPanel.authenticationSetting
                        - click:
                            identifier: us.mappings.global.authentication.debugPanel.authenticationSetting
                        - click:
                            identifier: us.mappings.global.authentication.debugPanel.skipStepup
                        - click:
                            identifier: us.mappings.global.authentication.debugPanel.BackButton
                        - click:
                            identifier: Done
                        - click:
                            identifier: us.mappings.account.signInButton
                        - sleep:
                            duration: 2000
                        - enterText:
                            identifier: us.mappings.global.authentication.emailField
                            string: ${email}
                        - click:
                            identifier: us.mappings.global.authentication.signIn.continueButton
                        - enterText:
                            identifier: us.mappings.global.authentication.passwordField
                            string: ${password}
                        - click:
                            identifier: us.mappings.global.authentication.signInButton


      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton

      - executeFunction:
          name: us.test.functions.utils.closeWplusPrompt.homeScreen

      - executeFunction:
          name: us.functions.utils.handleCartMergePopup
      - sleep :
          duration : 1000
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.popUp
          then:
            - log: tooltip present and hence closing it
            - click:
                identifier: us.mappings.home.popUpCloseButton
                wait: 2000

  - name: us.functions.global.authentication.signInAccountCarta
    platform: ios
    flow:
       #Email Field
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.emailField
          then:
            - enterText:
                    identifier: us.mappings.global.authentication.emailField
                    string: ${email}
            - click:
                  identifier: us.mappings.global.authentication.signIn.continueButton
                  wait: 3000
            - log: "Sign in Field present!!"
          else:
               - executeFunction:
                  name: us.functions.global.authentication.signInAccountIfErroredOut
       #Password field
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.passwordField
          then:
            - enterText:
                    identifier: us.mappings.global.authentication.passwordField
                    string: ${password}
            - click:
                  identifier: us.mappings.global.authentication.signInButton
                  wait: 3000
            - log: "Password Field present!!"
          else:
               - executeFunction:
                  name: us.functions.global.authentication.signInAccountIfErroredOut
  #Password Keychain
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
            - log: "Login succesful!!"

          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"

  - name: us.functions.global.authentication.signInAccount
    platform: ios
    flow:
      - storeIn:
          key: executionStage
          value: Pre-transactions      
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.ios.authentication.dismiss
          then:
            - click:
                identifier: us.mappings.global.ios.authentication.dismiss
      
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
          clickFirst: true
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
          wait: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.somethingWentWrongError
          then:
            - loop:
                begin: 0
                end: 3
                storeIndex: i
                flow:
                    - log: $i
                    - click:
                        identifier: us.mappings.global.authentication.signIn.continueButton
                    - sleep:
                        duration: 5000
                    - if:
                        identifier:
                          notPresent:
                            - identifier: us.mappings.global.authentication.somethingWentWrongError
                        then:
                          - storeIn:
                              key: signInError
                              value: fixed
                          - break: true
            - if: 
                condition: ${signInError} != 'fixed'
                then:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"
                
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton


      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.passwordField
      - enterText:
          identifier: us.mappings.global.authentication.passwordField
          string: ${password}
      - click:
          identifier: us.mappings.global.authentication.signInButton
          wait: 2000

      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.somethingWentWrongError
          then:
            - click:
                identifier: us.mappings.global.authentication.signInButton
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.quickSecurityCheck
          then:
            - if:
                condition: ${env} == 'production' || ${env} == 'spanish_prod_e2e'
                then:
                  - executeFunction:
                      name: us.functions.global.authentication.stepUpOTP.flow
                      params:
                        - name: email
                          string: $email
                else:
                  - if:
                      condition: ${env} == 'teflon'

                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
                            then:            
                              - log: "Starts the sign-in with Email Verification Code flow"
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
                                  then: 
                                    - click:
                                        identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
                                    - log: "Selected Email OTP Mode for verification"
                                    - click:
                                        identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
                                    - log: "Selected Send code for verification Code"
                                  else: 
                                    - log: "Verification Code Request Mode Options Not Available"
                              - sleep:
                                    duration: 1000
                              # - verifyIdentifier:
                              #       present:
                              #           - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
                              # - click:
                              #       identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
                                # Call to fetch the OTP from customer's email.
                              - executeFunction:
                                    name: us.functions.utils.astro.fetchPasscode.emailOTP
                                    params:
                                        - name: email
                                          string: ${email}
                              - log: "The OTP generated is: "
                              - log: ${otpFromEmail}
                              - log: "The Request Verification Code button is clicked"    
                              - verifyIdentifier:
                                    present:
                                        - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                              - enterText:
                                    identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                                    string: ${otpFromEmail}
                              - log: "Entered the OTP from Customer's email"
                              - click:
                                    identifier: us.mappings.global.authentication.signInButton 

                                       
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton

      - executeFunction:
          name: us.test.functions.utils.closeWplusPrompt.homeScreen

      - executeFunction:
          name: us.functions.home.closeWplusBottomSheetBannerIfDisplayed

      - executeFunction:
          name: us.functions.utils.handleCartMergePopup
      - sleep :
          duration : 1000
      - log: validate if tooltip is present and closing it
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.popUp
          then:
            - log: tooltip present and hence closing it
            - click:
                identifier: us.mappings.home.popUpCloseButton
                wait: 2000

  - name: us.functions.global.authentication.dismissSelectSavedPasswordDialog
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.global.authentication.selectSavedPasswordText
            - click:
                identifier: us.mappings.global.notNowButton
          catch:
            flow:
              - log: Password selection dialog not displayed

  # Create Account
  - name: us.functions.global.authentication.createAccountFlow
    platform: ios
    flow:
      - click:
          identifier: us.mappings.tabBar.account
      - click:
          identifier: us.mappings.account.signInButton
      - executeFunction:
            name: us.functions.global.authentication.dismissSelectSavedPasswordDialog
      - executeFunction:
          name: us.functions.global.authentication.createAccountFromSignInScreen

  - name: us.functions.global.authentication.handleSomethingWentWrongError
    platform: ios
    flow:
      - loop:
          begin: 0
          end: 3
          storeIndex: i
          flow:
            - log: $i
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.somethingWentWrongError
                then:
                  - click:
                      identifier: us.mappings.global.authentication.goBackFromPasswordPage
                  - sleep:
                      duration: 3000
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
                  - enterText:
                      identifier: us.mappings.global.authentication.passwordField
                      string: ${password}
                      pressEnter: true
                  - sleep:
                      duration: 5000
                else:
                  - break: true

  - name: us.functions.global.authentication.createAccountFromSignInScreen
    platform: ios
    flow:
      - storeIn:
          key: astroEmail        # remove afrer mobile verification issue get resolved 
          value: "identity-testuser${timestamp}@cloudtest.org"
      - storeIn:
          key: astroPhoneNumber 
          value: 1${__randomUSPhone}
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${astroEmail}
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 5000
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
      # mandateOTP flow check
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.createAccount.phoneNumberField
          then:
            - if:
                condition: "!${skipPhoneNumber}"
                then:
                  - log: "Inside the Enter phoneNumber condition"
                  - enterText:
                      identifier: us.mappings.account.createAccount.phoneNumberField
                      string: $astroPhoneNumber
                      pressEnter: true
                  - click:
                      identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
                  - sleep:
                      duration : 2000
                  - enterText:
                      identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
                      string: ${password} #E2epassword$
                # pressEnter: true
                  # - hideKeyboard: true
                  - scroll:
                      direction: down
                      scrollLimit: 1
                  - click:
                      identifier: us.mappings.global.authentication.createAccountButton
                  - sleep:
                      duration: 5000
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.global.authentication.accountVerificationEmail.text
                      then:
                        - executeFunction:
                            name : us.functions.utils.astro.fetchPasscode.emailOTP      
                            params:
                              - name: email
                                string: ${astroEmail}
                        - log: "The OTP generated is: "
                        - log: ${otpFromEmail}
                        - log: "The Request Verification Code button is clicked"
                        - verifyIdentifier:
                                present:
                                - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                        - enterText:
                                identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                                string: ${otpFromEmail}
                        - log: "Entered the OTP form Customer's email"
                        - click:
                                identifier: us.mappings.global.authentication.signInButton
                        - sleep:
                                duration: 5000
                  # Call to fetch the OTP from customer's Phone.
                  - executeFunction:
                      name: us.functions.authentication.verifyPhoneOTP
                      params:
                        - name: email
                          string: ${astroEmail}
                        - name: phone
                          string: ${astroPhoneNumber}
                else:
                  - log: "Skipping to Enter the Phone Number"
                  - click:
                      identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
                  - sleep:
                      duration: 2000
                  - enterText:
                      identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
                      string: ${password} #E2epassword$
                  #      pressEnter: true
                  # - hideKeyboard: true
                  - scroll:
                      direction: down
                      scrollLimit: 1
                  - click:
                      identifier: us.mappings.global.authentication.createAccountButton
                  - sleep:
                      duration: 5000
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.authentication.signIn.phoneNumberEmpty.ErrorMessage
                      then:
                        - click:
                            identifier: us.mappings.global.closeButton
          else:
            - click:
                identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
            - sleep:
                duration: 2000
            - enterText:
                identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
                string: ${password} #E2epassword$
            #      pressEnter: true
            # - hideKeyboard: true
            - scroll:
                direction: down
                scrollLimit: 1
            - click:
                identifier: us.mappings.global.authentication.createAccountButton
      - sleep:
          duration: 6000
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.global.authentication.createAccountButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
            - executeFunction:
                name: us.functions.utils.handleCartMergePopup
      - storeIn:
          key: email
          value: ${email1}

  # Create Account error
  - name: us.functions.global.authentication.createAccountError
    platform: ios
    flow:
      - click:
          identifier: us.mappings.tabBar.account
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - scroll:
          direction: down
      - click:
          identifier: us.mappings.global.authentication.createAccountButton
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
    #   - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
    #   - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.emailTextField
          string: ${email}
          pressEnter: true
    #   - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.passwordTextField
          string: ${password}
          pressEnter: true
    #   - goBack: true
      - click:
          identifier: us.mappings.global.authentication.createAccountButton

  # iOS Account Sign in VIA Email OTP
  - name: us.functions.global.authentication.signInAccount.via.emailOTP
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.global.authentication.dismissSelectSavedPasswordDialog
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Email Verification Code flow"
      - click:
          identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
      - sleep:
          duration: 4000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      - click:
          identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      # Call to fetch the OTP from customer's email.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.emailOTP
          params:
            - name: email
              string: ${email}
      - log: "The OTP generated is: "
      - log: ${otpFromEmail}
      - log: "The Request Verification Code button is clicked"    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromEmail}
      - log: "Entered the OTP from Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.makeItEasierToSignIn 
          then:
            - scroll: 
                direction: down
            - click:
                identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
                wait: 2000  

  - name: us.functions.global.authentication.signInError
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - enterText:
          identifier: us.mappings.global.authentication.passwordField
          string: ${password}
      - click:
          identifier: us.mappings.global.authentication.signInButton

# iOS Account Sign in VIA PasswordReset Code
  - name: us.functions.global.authentication.signInAccount.via.passwordResetCode
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.global.authentication.dismissSelectSavedPasswordDialog
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${custEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
          wait: 3000
      - log: "Forgot password sign-in flow with password reset code sent to the user's email"
      - click:
          identifier: us.mappings.global.authentication.signIn.button_forgot_password       
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.forgotPassword.continueButton
      - click:
           identifier: us.mappings.global.authentication.forgotPassword.continueButton      
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.passwordResetCode
          params:
            - name: payload
              string: us.data.ios.fetchPasswordResetCode.from.customerEmail
      - log: "The Reset Code generated is: "
      - log: ${passwordResetCodeFromEmail}
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP     
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${passwordResetCodeFromEmail}
      - log: "Entered the Reset Code from Customer's email"
      - click:
          identifier: us.mappings.global.authentication.forgotPassword.submitOTP
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.and.keepCurrentPassword
      - click:
          identifier: us.mappings.global.authentication.signIn.and.keepCurrentPassword
      - log: "Selected the Option signIn and keepCurrentPassword"
      - click:
          identifier: us.mappings.global.authentication.updatePassword.button
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
          then:
            - click:
                identifier: us.mappings.global.closeButton
            - log: "The Phone number collector screen is skipped!!"
          else:
            - log: "The Phone number collector screen is not visible, proceeding with next screen."
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.and.keepCurrentPassword
          then:
            - log: Closing the signup bottomsheet
            - scroll:
                direction: up
                scrollLimit: 2

            # - verifyIdentifier:
            #     present:
            #       - identifier: us.mappings.home.searchBar    


  - name: us.functions.global.authentication.createAccountFlowFromCart
    platform: ios
    flow:

 # Enter email screen
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField

      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
          clickFirst: true

      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 3000

# Create your account screen
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: OneFirst
          pressEnter: true

      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: OneLast
          pressEnter: true

# enter phone number
      - storeIn:
          key: astroPhoneNumber
          value: ${__randomUSPhone}

      # - verifyPresent:
      #     identifier: us.mappings.account.createAccount.phoneNumberTextField

      # - click:
      #     identifier: us.mappings.account.createAccount.phoneNumberTextField

      - enterText:
          identifier: us.mappings.account.createAccount.phoneNumberField
          string: $astroPhoneNumber
          # clickFirst: true
          pressEnter: true


      - enterText:
          identifier: us.mappings.account.createAccount.createPassword
          string: E2epassword$
          pressEnter: true





###################### ANDROID ##################

  # Account Sign in
  - name: us.functions.global.authentication.signInAccount
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Pre-transactions
      - executeFunction:
          name: us.functions.global.onboarding.smartLock.DismissNoneOfTheAbove
      - if:
          condition: ${validateSignInPage} #to validate the sign in page
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.signPageGraphic
                  - identifier: us.mappings.home.signViewLabel
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.home.signViewLabel
                    contains: us.data.signinText
      - if:
          identifier:
            present:
              - identifier: us.mappings.authentication.signIn.anotherWayText
          then:
            - log: "The Sign-in another way pop-up is displayed, dismissing it."
            - click:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}

      # Retry click on continue button if not clicked in earlier iteration
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - sleep:
                duration : 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.signIn.continueButton
                then:
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.authentication.signIn.enterPasswordRadioButton
                then:
                  - click:
                      identifier: us.mappings.authentication.signIn.enterPasswordRadioButton
                  - log: 'Selected Password Option to Login'
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.passwordField
                then:
                  - storeIn:
                      key: signInValidated
                      value: true
                  - break: true
                else:
                    - if:
                        identifier:
                            present:
                                - identifier: us.mappings.global.authentication.signIn.verificationCodeRadioButton
                        then:
                        - storeIn:
                            key: signInValidated
                            value: true
                        - break: true
      - if:
          condition: ${signInValidated}
          then:
            - storeIn:
                key: signInValidated
                value: false
            - log: Email entered
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"

      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.somethingWentWrongError
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.continueButton

      - if:
          identifier:
            checked:
               - identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton
                 value: false
          then:
            - click:
               identifier: us.mappings.global.authentication.signIn.verificationPasswordRadioButton  
      - if:
          condition: ${validateSignInPage} #to validate forgot pwd link
          then:
            - if: 
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.signIn.button_forgot_password
                then:
                  - click:
                      identifier: us.mappings.global.authentication.signIn.button_forgot_password
                  - click:
                      identifier: us.mappings.global.authentication.signIn.button_forgot_password.goBack
                      wait: 3000                
                else:
                  - log: the forgot pwd button is not present
      
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          flow:
            - sleep:
                duration: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.signInButton
                then:
                  - enterText:
                      identifier: us.mappings.global.authentication.passwordField
                      string: ${password}
                  - goBack: true
                  - sleep:
                      duration: 1000
                  - click:
                      identifier: us.mappings.global.authentication.signInButton
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.global.authentication.passwordField
                then:
                  - storeIn:
                      key: signInValidated
                      value: true
                  - break: true


      - executeFunction:
          name: us.functions.global.authentication.handleSomethingWentWrongError      
           
      - if:
          condition: ${signInValidated}
          then:
            - log: Account signed in
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - SIGN-IN ERROR"
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.signIn.getYourCodeOnPhone
          then:
            - log: Closing Get your code on your phone bottomsheet
            - click:
                identifier: us.mappings.global.authentication.signIn.getYourCodeCloseButton 
      - if:
          identifier:
            present:
             - identifier: us.mappings.global.authentication.quickSecurityCheck
          then:
            - if:
                condition: ${env} == 'production' || ${env} == 'spanish_prod_e2e'
                then:
                  - executeFunction:
                      name: us.functions.global.authentication.stepUpOTP.flow
                      params:
                        - name: email
                          string: $email
                else:
                    - if:
                        condition: ${env} == 'teflon' || ${env} == 'production'
                        then: 
                          - try:
                              flow:
                                - log: "Starts the sign-in with Email Verification Code flow"
                                    #Select Email Radio Button
                                - click:
                                        identifier: us.mappings.global.authentication.forgotPassword.emailMe.verificationCode 
                                    #Click Send Code Button
                                - click:  
                                        identifier: us.mappings.global.authentication.quickSecurityCheck
                                    # Call to fetch the OTP from customer's email.
                                - executeFunction:
                                        name: us.functions.utils.astro.fetchPasscode.emailOTP
                                        params:
                                            - name: email
                                              string: ${email}
                                - log: "The OTP generated is: "
                                - log: ${otpFromEmail}
                                - log: "The Request Verification Code button is clicked"
                                - verifyIdentifier:
                                        present:
                                        - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                                - enterText:
                                        identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                                        string: ${otpFromEmail}
                                - log: "Entered the OTP form Customer's email"
                                - click:
                                        identifier: us.mappings.global.authentication.signInButton
                                - sleep:
                                        duration: 5000  
                              catch:
                                flow:
                                  - log: validate if signed in and phone number dismiss dialog appeared
                                  - if:
                                      identifier:
                                        present:
                                        - identifier: us.mappings.global.authentication.signedInSuccessMessage
                                      then: 
                                        - click:
                                            identifier: us.mapping.wplus.badges.closeBottomSheetMessage

      - executeFunction:
          name: us.functions.utils.handleCartMergePopup

  # Sign In Error Flow
  - name: us.functions.global.authentication.signInErrorFlow
    platform: android
    flow:
      - enterText:
          identifier: us.mappings.global.authentication.emailAddressField
          string: ${email}
      - enterText:
          identifier: us.mappings.global.authentication.passwordField
          string: ${password}
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - verifyPresent:
          identifier: us.mappings.global.authentication.signInError

  - name: us.functions.global.authentication.handleSomethingWentWrongError 
    platform: android
    flow:
      - sleep:
          duration : 5000
      - loop:
         begin: 0
         end: 3
         storeIndex: i
         flow:
           - log: $i     
           - if: 
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.somethingWentWrongError
                then:
                  - click:
                      identifier: us.mappings.global.authentication.signIn.button_forgot_password.goBack
                  - enterText:
                      identifier: us.mappings.global.authentication.emailField
                      string: ${email}
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
                  - enterText:
                      identifier: us.mappings.global.authentication.passwordField
                      string: ${password}
                  - goBack: true
                  - click:
                      identifier: us.mappings.global.authentication.signInButton
                  - sleep:
                      duration: 5000
                else:
                  - break: true

  - name: us.functions.global.authentication.handleSignInAnotherWayPopup
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.authentication.signIn.anotherWayText
          then:
            - log: "The Sign-in another way pop-up is displayed, dismissing it."
            - click:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss

  - name: us.functions.global.authentication.createAccountFlowFromCart
    platform: android
    flow:

 # Enter email screen
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField

      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
          clickFirst: true

      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 3000

# Create your account screen
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: OneFirst
          pressEnter: true

      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: OneLast
          pressEnter: true

# enter phone number
      - storeIn:
          key: astroPhoneNumber
          value: ${__randomUSPhone}

      - verifyPresent:
          identifier: us.mappings.account.createAccount.phoneNumberTextField

      # - click:
      #     identifier: us.mappings.account.createAccount.phoneNumberTextField

      - enterText:
          identifier: us.mappings.account.createAccount.phoneNumberTextField
          string: $astroPhoneNumber
          clickFirst: true
          pressEnter: true


      - enterText:
          identifier: us.mappings.account.createAccount.passwordTextField
          string: E2epassword$
          pressEnter: true


      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 9000


      - executeFunction:
          name: us.functions.authentication.verifyPhoneOTP
          params:
            - name: astroPhoneNumber
              string: ${astroPhoneNumber}

  # Create Account
  - name: us.functions.global.authentication.createAccountFlow
    platform: android
    flow:
      - storeIn:
          key: email1        # remove afrer mobile verification issue get resolved 
          value: "identity-testuser${timestamp}@walmart.com"
      - storeIn:
          key: astroPhoneNumber
          value: 1${__randomUSPhone:562}
      - click:
          identifier: us.mappings.tabBar.account
      - click:
          identifier: us.mappings.account.signInButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.authentication.signIn.anotherWayText
          then:
            - log: "The Sign-in another way pop-up is displayed, dismissing it."
            - verifyPresent:
                identifier: us.mappings.authentication.signIn.anotherWayText
            - verifyPresent:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
            - click:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
                wait: 3000
          else:
            - log: "The Sign-in another way pop-up not displayed. Proceeding further."
      - if: # Added solution for DCT updated 2/1/22
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.button_forgot_password
          then:
              - click:
                  identifier: us.mappings.global.authentication.signIn.button_forgot_password
              - click:
                  identifier: us.mappings.global.authentication.signIn.button_forgot_password.goBack
                  wait: 3000                
          else:
            - log: the forgot pwd button is not present, DCT test step skipped.  
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.createAccount.emailTextField
          then:             
              - enterText:
                  identifier: us.mappings.account.createAccount.emailTextField
                  string: ${email1}
                  pressEnter: true
              - goBack: true 
              - click:     
                  identifier: us.mappings.global.authentication.signIn.continueButton   
          else:                                  
            - click:
                identifier: us.mappings.global.authentication.createAccountButton
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
      - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
      - goBack: true
      # mandateOTP flow check
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.createAccount.phoneNumberTextField
          then:
            - if:
                condition: "!${skipPhoneNumber}"
                then:
                  - log: "Inside the Enter phoneNumber condition"
                  - enterText:
                      identifier: us.mappings.account.createAccount.phoneNumberTextField
                      string: $astroPhoneNumber
                      pressEnter: true
                  - goBack: true
#                  - if:
#                      identifier:
#                        present:
#                          - identifier: us.mappings.account.createAccount.emailTextField
#                      then:
#                          - enterText:
#                              identifier: us.mappings.account.createAccount.emailTextField
#                              string: ${email}
#                              pressEnter: true
#                          - goBack: true
                  - enterText:
                      identifier: us.mappings.account.createAccount.passwordTextField
                      string: E2epassword$
                      pressEnter: true
#                  - goBack: true
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
                  - sleep:
                      duration: 5000
                  # Call to fetch the OTP from customer's Phone.
                  - executeFunction:
                      name: us.functions.authentication.verifyPhoneOTP
                      params:
                        - name: astroEmail
                          string: ${email1}
                        - name: astroPhoneNumber
                          string: ${astroPhoneNumber}
                else:
                  - log: "Skipping to Enter the Phone Number"
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.account.createAccount.emailTextField
                      then:
                        - enterText:
                            identifier: us.mappings.account.createAccount.emailTextField
                            string: ${email}
                            pressEnter: true
                        - goBack: true
                  - enterText:
                      identifier: us.mappings.account.createAccount.passwordTextField
                      string: E2epassword$
                      pressEnter: true
#                  - goBack: true
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
                  - sleep:
                      duration: 5000
                  - click:
                      identifier: us.mappings.item.closeitemSubscriptionpage
                  - break: true
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.account.createAccount.emailTextField
                then:
                  - enterText:
                      identifier: us.mappings.account.createAccount.emailTextField
                      string: ${email}
                      pressEnter: true
                  - goBack: true
            - enterText:
                identifier: us.mappings.account.createAccount.passwordTextField
                string: E2epassword$
                pressEnter: true
            - goBack: true
            - click:
                identifier: us.mappings.global.authentication.createAccountButton
            - sleep:
                duration: 5000
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyNotPresent:
          identifier: us.mappings.global.authentication.createAccountButton
      - executeFunction:
          name: us.functions.utils.handleCartMergePopup
      - storeIn:
          key: email
          value: ${email1}

  - name: us.functions.global.authentication.signInError
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - enterText:
          identifier: us.mappings.global.authentication.passwordField
          string: ${password}
      - click:
          identifier: us.mappings.global.authentication.signInButton

  # Create Account error
  - name: us.functions.global.authentication.createAccountError
    platform: android
    flow:
      - click:
          identifier: us.mappings.tabBar.account
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - scroll:
          direction: down
      - click:
          identifier: us.mappings.global.authentication.createAccountButton
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
    #   - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
    #   - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.emailTextField
          string: ${email}
          pressEnter: true
      - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.passwordTextField
          string: ${password}
          pressEnter: true
      #- goBack: true
      - click:
          identifier: us.mappings.global.authentication.createAccountButton

  
  - name: us.functions.global.authentication.createAccountFromSignInScreen
    platform: android
    flow:
      - scroll:
          direction: down
      - verifyPresent:
          identifier: us.mappings.global.authentication.createAccountButton
      - click:
          identifier: us.mappings.global.authentication.createAccountButton
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
      - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
      - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.emailTextField
          string: us.data.createAccount.email
          pressEnter: true
      - goBack: true
      - enterText:
          identifier: us.mappings.account.createAccount.passwordTextField
          string: E2epassword$
          pressEnter: true
      - goBack: true
      - click:
          identifier: us.mappings.global.authentication.createAccountButton
      - verifyNotPresent:
          identifier: us.mappings.global.authentication.createAccountButton

  # Account Sign in VIA Email OTP
  - name: us.functions.global.authentication.signInAccount.via.emailOTP
    platform: android
    flow:
      - executeFunction:
          name: us.functions.global.onboarding.smartLock.DismissNoneOfTheAbove
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Email Verification Code flow"
      - click:
          identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
      - sleep:
          duration: 4000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      - click:
          identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      # Call to fetch the OTP from customer's email.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.emailOTP
          params:
            - name: email
              string: ${email}
        #   params:
        #     - name: payload
        #       string: us.data.fetchOTP.customerEmail.payload
      - log: "The OTP generated is: "
      - log: ${otpFromEmail}
      - log: "The Request Verification Code button is clicked"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromEmail}
      - log: "Entered the OTP form Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.makeItEasierToSignIn 
          then:
            - scroll: 
                direction: down
            - click:
                identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
                wait: 2000          

  # Account Sign in VIA Phone OTP
  - name: us.functions.global.authentication.signInAccount.via.phoneOTP
    platform: android
    flow:
      - executeFunction:
          name: us.functions.global.onboarding.smartLock.DismissNoneOfTheAbove
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Email Verification Code flow"
      - click:
          identifier: us.mappings.global.authentication.signIn.via.phoneVerificationCode.radioButton
      - sleep:
          duration: 4000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      - click:
          identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.phoneOTP
          params:
            - name: payload
              string: ${phoneOTPPayload}
      - log: "The OTP generated is: "
      - log: ${otpFromPhone}
      - log: "The Request Verification Code button is clicked"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromPhone}
      - log: "Entered the OTP form Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signInButton

  # Account Sign in VIA Phone OTP
  - name: us.functions.global.authentication.signInAccount.via.phoneOTP
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${email}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Email Verification Code flow"
      - click:
          identifier: us.mappings.global.authentication.signIn.via.phoneVerificationCode.radioButton
      - sleep:
          duration: 4000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      - click:
          identifier: us.mappings.global.authentication.signIn.requestVerificationCode.button
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.phoneOTP
          params:
            - name: payload
              string: ${phoneOTPPayload}
      - log: "The OTP generated is: "
      - log: ${otpFromPhone}
      - log: "The Request Verification Code button is clicked"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromPhone}
      - log: "Entered the OTP form Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signInButton

  # Account Sign in VIA PasswordReset Code
  - name: us.functions.global.authentication.signInAccount.via.passwordResetCode
    platform: android
    flow:
      - executeFunction:
          name: us.functions.global.onboarding.smartLock.DismissNoneOfTheAbove
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${custEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Password Reset Code Verification flow sent to Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signIn.forgotPassword.link
      - sleep:
          duration: 4000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.forgotPassword.emailMe.verificationCode 
          then:
            - click:
                identifier: us.mappings.global.authentication.forgotPassword.emailMe.verificationCode 
                wait: 2000         
      - click:
          identifier: us.mappings.global.authentication.forgotPassword.sendCode
      - sleep:
          duration: 4000
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.passwordResetCode
          params:
            - name: payload
              string: us.data.fetchPasswordResetCode.from.customerEmail
      - log: "The Reset Code generated is: "
      - log: ${passwordResetCodeFromEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${passwordResetCodeFromEmail}
      - log: "Entered the Reset Code form Customer's email"
      - sleep:
          duration: 1000
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.global.authentication.signIn.and.keepCurrentPassword
      - log: "Selected the Option signIn and keepCurrentPassword"
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.global.authentication.signInButton
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.makeItEasierToSignIn
          then:
            - scroll: 
                direction: down
            - click:
                identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
            - log: "The Phone number collector screen is skipped!!"
          else:
            - log: "The Phone number collector screen is not visible, proceeding with next screen."
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.shareYourLocation
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.enterZipcode
            - log: "The Share Zipcode screen is displayed!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.global.authentication.enterZipcode.textbox
            - enterText:
                identifier: us.mappings.global.authentication.enterZipcode.textbox
                string: 95122
                pressEnter: true
            - click:
                identifier: us.mappings.global.authentication.searchZipcode.button
            - sleep:
                duration: 10000
            - click:
                identifier: us.mappings.global.onboarding.dontAllowButton
          else:
            - log: "The Share Zipcode screen is not visible, proceeding with next screen."
      - log: "The Home page is visible!!!"


  # Account Sign in VIA PasswordReset Code and Generate New password
  - name: us.functions.global.authentication.signInAccount.via.passwordResetCode.and.generateNewPassword
    platform: android
    flow:
      - executeFunction:
          name: us.functions.global.onboarding.smartLock.DismissNoneOfTheAbove
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${custEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Password Reset Code Verification flow sent to Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signIn.forgotPassword.link
      - sleep:
          duration: 4000
      - click:
          identifier: us.mappings.global.authentication.forgotPassword.sendCode
      - sleep:
          duration: 4000
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.passwordResetCode
          params:
            - name: payload
              string: us.data.fetchPasswordResetCode.from.customerEmail.createNewPasswordFlow
      - log: "The Reset Code generated is: "
      - log: ${passwordResetCodeFromEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${passwordResetCodeFromEmail}
      - log: "Entered the Reset Code form Customer's email"
      - sleep:
          duration: 1000
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
          wait: 2000
      #workaround if verification code error occur
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.passcodeVerificationCodeError.button
          then:
            - click:
                identifier: us.mappings.global.navigation.backNavigation
                wait: 2000
            - click:
                identifier: us.mappings.global.authentication.forgotPassword.sendCode
            - sleep:
                duration: 4000
            # Call to fetch the OTP from customer's Phone.
            - executeFunction:
                name: us.functions.utils.astro.fetchPasscode.passwordResetCode
                params:
                  - name: payload
                    string: us.data.fetchPasswordResetCode.from.customerEmail.createNewPasswordFlow
            - log: "The Reset Code generated is: "
            - log: ${passwordResetCodeFromEmail}
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
            - enterText:
                identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                string: ${passwordResetCodeFromEmail}
            - log: "Entered the Reset Code form Customer's email"
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.global.authentication.signIn.continueButton
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.global.authentication.signIn.and.createNewPassword
      - log: "Selected the Option signIn and CreateNewPassword"
      - sleep:
          duration: 3000
      - executeNode:
          file: us/e2e-tests/helpers/generateRandomPassword.js
          args:
            - value: '12'
            - value: 'E2epassword'
          getResponse:
            storeIn: newPassword
      - storeIn:
          key: newRandomGenPassword
          value: ${newPassword}
      - log: 'The new Random Password Generated is below.: $newRandomGenPassword'
      - log: $newRandomGenPassword
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
      - enterText:
          identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
          string: $newRandomGenPassword
      - goBack: true
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.global.authentication.updatePassword.button
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
            - log: "The Phone number collector screen is skipped!!"
          else:
            - log: "The Phone number collector screen is not visible, proceeding with next screen."
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.shareYourLocation
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.enterZipcode
            - log: "The Share Zipcode screen is displayed!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.global.authentication.enterZipcode.textbox
            - enterText:
                identifier: us.mappings.global.authentication.enterZipcode.textbox
                string: 95122
                pressEnter: true
            - click:
                identifier: us.mappings.global.authentication.searchZipcode.button
            - sleep:
                duration: 10000
            - click:
                identifier: us.mappings.global.onboarding.dontAllowButton
          else:
            - log: "The Share Zipcode screen is not visible, proceeding with next screen."
      - log: "The Home page is visible!!!"

  # Account Sign in VIA PasswordReset Code and Generate New password
  - name: us.functions.global.authentication.signInAccount.via.passwordResetCode.and.generateNewPassword
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - enterText:
          identifier: us.mappings.global.authentication.emailField
          string: ${custEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.continueButton
      - click:
          identifier: us.mappings.global.authentication.signIn.continueButton
      - log: "Starts the sign-in with Password Reset Code Verification flow sent to Customer's email"
      - click:
          identifier: us.mappings.global.authentication.signIn.and.createNewPassword
      - log: "Selected Password Option to Login"
      - click:
          identifier: us.mappings.global.authentication.signIn.forgotPassword.link
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.global.authentication.forgotPassword.continue
      - sleep:
          duration: 4000
      # Call to fetch the OTP from customer's Phone.
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.passwordResetCode
          params:
            - name: payload
              string: us.data.fetchPasswordResetCode.from.customerEmail.createNewPasswordFlow.iOS
      - log: "The Reset Code generated is: "
      - log: ${passwordResetCodeFromEmail}
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${passwordResetCodeFromEmail}
      - log: "Entered the Reset Code form Customer's email"
      - sleep:
          duration: 1000
      - click:
          identifier: us.mappings.global.authentication.ValidateOTPView.button
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.global.authentication.signIn.and.createNewPassword
      - log: "Selected the Option signIn and CreateNewPassword"
      - sleep:
          duration: 3000
      - executeNode:
          file: us/e2e-tests/helpers/generateRandomPassword.js
          args:
            - value: '12'
            - value: 'E2epassword'
          getResponse:
            storeIn: newPassword
      - storeIn:
          key: newRandomGenPassword
          value: ${newPassword}
      - log: 'The new Random Password Generated is below.: $newRandomGenPassword'
      - log: $newRandomGenPassword
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
      - enterText:
          identifier: us.mappings.global.authentication.signIn.and.enterNewPassword
          string: $newRandomGenPassword
      - click:
           identifier: Done          
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.updatePassword.button
          then:
            - click:
                identifier: us.mappings.global.authentication.updatePassword.button
            - sleep:
                duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
          then:
            - click:
                identifier: us.mappings.global.authentication.passwordKeyChainAlertDon'tAllowButton
            - log: "Clicked Don't allow on the keychain password save option pop-up!!"
      - executeFunction:
          name: us.functions.utils.handleCartMergePopup
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.phoneCollectorNotNow
          then:
            - click:
                identifier: us.mappings.global.closeButton
            - log: "The Phone number collector screen is skipped!!"
          else:
            - log: "The Phone number collector screen is not visible, proceeding with next screen."
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.and.keepCurrentPassword
          then:
            - log: Closing the signup bottomsheet
            - scroll:
                direction: up
                scrollLimit: 2
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.shareYourLocation
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.enterZipcode
            - log: "The Share Zipcode screen is displayed!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.global.authentication.enterZipcode.textbox
            - enterText:
                identifier: us.mappings.global.authentication.enterZipcode.textbox
                string: 95122
                pressEnter: true
            - click:
                identifier: us.mappings.global.authentication.searchZipcode.button
            - sleep:
                duration: 10000
            - click:
                identifier: us.mappings.global.onboarding.dontAllowButton
          else:
            - log: "The Share Zipcode screen is not visible, proceeding with next screen."
      - log: "The Home page is visible!!!"

  - name: us.functions.global.authentication.stepUpOTP.flow
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.quickSecurityCheck.text
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.global.authentication.quickSecurityCheck
      - sleep:
          duration: 5000
      - executeFunction:
          name: us.functions.utils.astro.fetch.stepUpOTPEmail
          params:
            - name: email
              string: $email
      - log: "The STEP_UP_OTP fetched from email: ${stepUpOtpFromEmail}"

      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.enterVerificationCode.text
            - identifier: us.mappings.global.authentication.ValidateOTPView.button
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${stepUpOtpFromEmail}
      - log: "Entered the STEP_UP_OTP from Customer's email"
      - click:
          identifier: us.mappings.global.authentication.submitOTPCode

  - name: us.functions.global.authentication.stepUpOTP.flow
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.via.EmailVerificationCode.radioButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.quickSecurityCheck.text
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.global.authentication.quickSecurityCheck.text
                  - identifier: us.mappings.global.authentication.quickSecurityCheck
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.global.authentication.quickSecurityCheck
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.utils.astro.fetch.stepUpOTPEmail
                params:
                  - name: email
                    string: $email
            - log: "The STEP_UP_OTP fetched from email: ${stepUpOtpFromEmail}"
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.authentication.enterVerificationCode.text
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.global.authentication.enterVerificationCode.text
                        - identifier: us.mappings.global.authentication.submitOTPCode
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.global.authentication.authOTPCode
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.global.authentication.authOTPPrefix
                              - identifier: us.mappings.global.authentication.authOTPCode
                        - enterText:
                            identifier: us.mappings.global.authentication.authOTPCode
                            string: ${stepUpOtpFromEmail}
                        - log: "Entered the STEP_UP_OTP from Customer's email"
                        - click:
                            identifier: us.mappings.global.authentication.submitOTPCode
                      else:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                        - enterText:
                            identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                            string: ${stepUpOtpFromEmail}
                        - log: "Entered the STEP_UP_OTP from Customer's email"
                        - click:
                            identifier: us.mappings.global.authentication.submitOTPCode
            # trying again if there is otp issues in parallel run         
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.global.authentication.submitOTPCodeError
                      then:
                        - loop:
                            begin: 0
                            end: 3
                            storeIndex: retryCount
                            mode: increment
                            flow:
                              - executeFunction:
                                  name: us.functions.utils.astro.fetch.stepUpOTPEmail
                                  params:
                                     - name: email
                                       string: $email
                              - enterText:
                                  identifier: us.mappings.global.authentication.signIn.textBoxForOTP
                                  string: ${stepUpOtpFromEmail}
                              - click:
                                  identifier: us.mappings.global.authentication.submitOTPCode
                              - if:
                                  identifier:
                                    notPresent:
                                      - identifier: us.mappings.global.authentication.submitOTPCodeError
                                  then:
                                    - break: true
          else:
            - log: "The STEP_UP OTP flow is not valid for this user"

  # Verify Phone OTP
  - name: us.functions.authentication.verifyPhoneOTP
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.latestPhoneOTP
          params:
            - name: astroEmail
              string: $email
            - name: astroPhoneNumber
              string: $astroPhoneNumber
      - loop:
          begin: 1
          end: 3
          storeIndex: tryCount
          mode: increment
          flow:
            - log: Fetch passcode try count - ${tryCount}
      - log: "The OTP generated is: "
      - log: ${otpFromPhone}
      - click:
          identifier: us.mappings.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromPhone}
      - click:
          identifier: us.mappings.global.authentication.signInButton

  # Verify Phone OTP
  - name: us.functions.authentication.verifyPhoneOTP
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.astro.fetchPasscode.latestPhoneOTP
          params:
            - name: email
              string: $email
            - name: phone
              string: $phone
      - loop:
          begin: 1
          end: 3
          storeIndex: tryCount
          mode: increment
          flow:
            - log: Fetch passcode try count - ${tryCount}
      - log: "The OTP generated is: "
      - log: ${otpFromPhone}
      - click:
          identifier: us.mappings.authentication.signIn.textBoxForOTP
      - enterText:
          identifier: us.mappings.global.authentication.signIn.textBoxForOTP
          string: ${otpFromPhone}
      - click:
          identifier: us.mappings.global.authentication.signInButton