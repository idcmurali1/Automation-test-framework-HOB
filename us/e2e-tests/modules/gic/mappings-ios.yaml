ios:

  - name: us.mappings.home.gic.module.intentSelection
    identifier: //XCUIElementTypeButton[@name="GlobalIntentCenter.${option}"] | //XCUIElementTypeButton[contains(@name, "${option}") ] | //XCUIElementTypeButton[@name="HoTIntentOptionsView" or @name="HoTIntentOptionsPhase2View" and contains(@label,"${option}")]

  - name: us.mappings.home.gic.module.shippingIntent
    identifier: GlobalIntentCenter.Shipping

  - name: us.mappings.home.gic.newModule.container
    identifier: HoTGlobalIntentCenterViewController.intentOptionsContainerView

  - name: us.mappings.home.gic.module.pickupIntent
    identifier: //XCUIElementTypeButton[contains(@label, "Pickup") and not(contains(@name,"GlobalIntentCenter.BannerFadedButton"))]

  - name: us.mappings.home.gic.module.deliveryIntent
    identifier: //XCUIElementTypeButton[contains(@label, "Delivery")]

  - name: us.mappings.home.gic.module.addAddressViewIcon
    identifier: AddAddressView.iconImageView

  - name: us.mappings.home.gic.module.addAddressMessage.text.iD
    identifier: GlobalIntentCenter.BannerHeader

  - name: us.mappings.home.gic.module.addAddressMessage.text
    identifier: //XCUIElementTypeStaticText[@label="Add an address for shipping and delivery"] | //XCUIElementTypeStaticText[@label="Add an address for delivery"]

  - name: us.mappings.home.gic.module.parent.addAddressButton
    identifier: GlobalIntentCenter.AddAddressButton || HoTLocationsItemDetailsView.addAddressButton

  - name: us.mappings.home.gic.updateStore
    identifier: //XCUIElementTypeStaticText[@name="Update my store"] #//XCUIElementTypeStaticText[@name="Update your store"] | //XCUIElementTypeStaticText[@name="Update your store for delivery"] | //XCUIElementTypeStaticText[@name="Update my store"]

  - name: us.mappings.home.gic.module.unselectedIntent.bannerCheckmarks.section
    identifier: GlobalIntentCenter.BannerCheckmarks

  - name: us.mappings.home.gic.module.unselectedIntent.storeAddress
    identifier: //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]//XCUIElementTypeCell[position()=last()-2 or position()=last()-1]//*[@name="GlobalIntentCenter.FullLocation" and not(contains(@label,"Shipping"))] | //XCUIElementTypeOther[@name="LayoutableChildStackViewController.stackView"]/XCUIElementTypeOther[position()=last()]//XCUIElementTypeOther[@name="HoTLocationsItemDetailsView.containerView"]

  - name: us.mappings.home.gic.module.headerText
    identifier: //XCUIElementTypeOther[@name="How do you want your items?, Expanded, button"] | //XCUIElementTypeButton[@name="GlobalIntentCenter.BannerFadedButton" and contains(@label,"Expanded")]

  - name: us.mappings.home.gic.expandedIcon
    identifier: //*[contains(@label,"Expanded")] | //*[contains(@name,"Expanded")]

  - name: us.mappings.home.gic.collapsedIcon
    identifier: //*[contains(@label,"Collapsed")] | //*[contains(@name,"Collapsed")]

  - name: us.mappings.home.gic.module.headerText.section.expanded
    identifier: How do you want your items?, Expanded, button

  - name: us.mappings.home.gic.module.headerBar
    identifier: GlobalFulfillmentBannerView.fadedButton || GlobalIntentCenter.BannerFadedButton

  - name: us.mappings.home.gicBannerPostalCode
    identifier: //*[@name="GlobalIntentCenter.BannerPostalCode" and (contains(@label, "${zipcode}") or contains(@label, "${storeName}"))] | //*[@name="GlobalIntentCenter.BannerFadedButton" and (contains(@label, "${zipcode}") or contains(@label, "${storeName}"))] | //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]//XCUIElementTypeCell[position()=last()-2 or position()=last()-1]//*[@name="GlobalIntentCenter.FullLocation" and (contains(@label,"${zipcode}") or contains(@label, "${storeName}"))]

  - name: us.mappings.home.gicBannerVerifyPostalCode
    identifier: //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]//XCUIElementTypeCell[position()=last()-2 or position()=last()-1]//*[@name="GlobalIntentCenter.FullLocation" and not(contains(@label,"Shipping")) and contains(@label,"${zipcode}") or contains(@label,"${storeName}")]

  - name: us.mappings.home.gic.module.pickupIntent.selected.inGicHeader
    identifier: //XCUIElementTypeOther[contains(@label, "Pickup, Zip Code:")] | //XCUIElementTypeButton[@name="GlobalIntentCenter.Pickup"] | //XCUIElementTypeButton[@name="GlobalIntentCenter.BannerFadedButton" and contains(@label,"Pickup")] 

  - name: us.mappings.wplus.gicBannerImage
    identifier: GlobalIntentCenter.BannerImage

  - name: us.mappings.wplus.gicBannerPostalCode
    identifier: GlobalIntentCenter.BannerPostalCode

  - name: us.mappings.wplus.gicBannerChevron
    identifier: How do you want your items?, Expanded, button

  - name: us.mappings.wplus.globalIntentPickup
    identifier: GlobalIntentCenter.Pickup

  - name: us.mappings.wplus.shippinIntentEducationalMessage
    identifier: GlobalIntentCenter.EducationalMessage

  - name: us.mappings.wplus.globalDeliveryIntentEducationalMessage
    identifier: //XCUIElementTypeStaticText[@name="GlobalIntentCenter.EducationalMessage"] #//XCUIElementTypeStaticText[contains(@label,‚ÄùFree delivery on orders over $35!")] 

  - name: us.mappings.wplus.pickupIntentEducationalMessage
    identifier: //XCUIElementTypeStaticText[@name="GlobalIntentCenter.EducationalMessage"]

  - name: us.mappings.wplus.wPlusFilter
    identifier: //XCUIElementTypeButton[@name="PillView_name_Free shipping"]

  - name: us.mappings.home.gic.module.unselectedIntent.addresssection 
    identifier: (//XCUIElementTypeStaticText[@name="GlobalIntentCenter.BannerHeader"])[2] | //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]/XCUIElementTypeCell[2]

  - name: us.mappings.home.gic.module.unselectedIntent.storeAddresssection
    identifier: //XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"] | //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]/XCUIElementTypeCell[3]
    
  - name: us.mappings.gicSearch.shareItemBadges.pickup.delivery.1or2dayShipping
    identifier: //XCUIElementTypeButton[contains(@label,"Pickup, Delivery, 1-day shipping")] | //XCUIElementTypeButton[contains(@label,"Pickup, Delivery, 2-day shipping")]

  - name: us.mappings.gicSearch.shareItemBadges.pickup.delivery.1day
    identifier: //XCUIElementTypeButton[contains(@label,"Pickup, Delivery, 1-day shipping")]

  - name: us.mappings.gicSearch.shareItemBadges.pickup.delivery.2day
    identifier: //XCUIElementTypeButton[contains(@label,"Pickup, Delivery, 2-day shipping")] 

  - name: us.mappings.home.gic.seeTimes
    identifier: //XCUIElementTypeStaticText[@name="View all times" or @name="Change" or @name="See times"]

  - name: us.mappings.home.gicSelectStoreButton # us.mappings.gic.update.zipcode.button
    identifier: //XCUIElementTypeStaticText[@name="Update zip code"] | //XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"]

  - name: us.mappings.gic.reserve.pickuptime.text
    identifier: BookslotShortcutHeaderView.titleLabel

  - name: us.mappings.gic.reserve.viewalltimes.text
    identifier: BookslotShortcutHeaderView.viewAllTimesButton

  - name: us.mappings.gic.reserve.timeslots
    identifier: SlotShortcutView.Slot0

  - name: us.mappings.gic.reserve.timeslots.container
    identifier: //XCUIElementTypeCollectionView[@name="SlotShortcutView.CollectionView"]

  - name: us.mappings.gic.reserve.timeslot.slot1
    identifier: SlotShortcutView.Slot1

  - name: us.mappings.gic.inCart.fullfillmentDetail
    identifier: CartCardViewController.fulfillmentDetailView  || FulfillmentSummaryView.mainContainerStackView

  - name: us.mappings.gic.inCart.pickup.timeslot.view
    identifier: SCGroup_FulfillmentSummaryView.detailLabel       

  - name: us.mappings.home.gic.add.address.button
    identifier: GlobalIntentCenter.AddAddressButton

  - name: us.mappings.gic.reserve.deliverytime.text
    identifier: //XCUIElementTypeStaticText[@label="Reserve a delivery time"]

  - name: us.mappings.gic.reserve.inhome.slot1
    identifier: (//XCUIElementTypeStaticText[@name="InHome"])[1] | (//XCUIElementTypeStaticText[@name="$0 (tip-free)"])[1]

  - name: us.mappings.gic.reserve.inhome.slot2
    identifier: (//XCUIElementTypeStaticText[@name="InHome"])[2] | (//XCUIElementTypeStaticText[@name="$0 (tip-free)"])[2]

  - name: us.mappings.gic.reserve.todayorTomorrow.slot3
    identifier: //XCUIElementTypeCell[@name="SlotShortcutView.Slot2" and contains(@label,"Today") or contains(@label, "Tomorrow")or contains(@label, "Express")]

  - name: us.mappings.gic.reserve.todayorTomorrow.slot4
    identifier: //XCUIElementTypeCell[@name="SlotShortcutView.Slot3" and contains(@label,"Today") or contains(@label, "Tomorrow")]

  - name: us.mappings.gic.reserve.todayorTomorrow.slot5
    identifier: //XCUIElementTypeCell[@name="SlotShortcutView.Slot4" and contains(@label,"Today") or contains(@label, "Tomorrow")]

  - name: us.mappings.gic.reserve.slotView
    identifier: SlotShortcutView.CollectionView 

  - name: us.mappings.gic.select.address.radiobutton
    identifier: //XCUIElementTypeButton[@name="DeliveryAddressSelectTableViewCell.itemStackView"] | //XCUIElementTypeButton[@name="AddressSelectTableViewCell.itemStackView"]

  - name: us.mappings.gic.select.address.save.button
    identifier: //XCUIElementTypeButton[@label="Save"] | //XCUIElementTypeButton[@label="Confirm address"]

  - name: us.mappings.gic.select.address.saveMyStore.button
    identifier: //XCUIElementTypeStaticText[@name="Save as my store"]  #Save as my store

  - name: us.mappings.gic.select.address.selectYourStore.headerText # us.mappings.gic.select.address.selectYourStore.Id
    identifier: Select your store  # //XCUIElementTypeStaticText[@label="Select your store"] | //XCUIElementTypeStaticText[@identifier="StoreSelectionViewController.navTitleLabel"] | Select your store #//XCUIElementTypeStaticText[@name="StoreSelectionViewController.navTitleLabel"] | //XCUIElementTypeStaticText[@label="Select your store"] #StoreSelectionViewController.navTitleLabel |  #label: 'Select your store'

  - name: us.mappings.gic.select.address.storesDeliveringToYourAddress.headerText  # us.mappings.gic.select.address.storesDeliveringToYourAddress.Id
    identifier: //XCUIElementTypeStaticText[@label="Stores delivering to your address:"] #| "Stores delivering to your address:"   #//XCUIElementTypeStaticText[@identifier="StoreSelectionViewController.subtitleLabel"] //XCUIElementTypeStaticText[@name="StoreSelectionViewController.subtitleLabel"] | "Stores delivering to your address:" | //XCUIElementTypeStaticText[@label="Stores delivering to your address:"] #StoreSelectionViewController.subtitleLabel |  #label: 'Stores delivering to your address:'    

  - name: us.mappings.home.gic.module.updatestore.deliveryIntent
    identifier: //XCUIElementTypeStaticText[@name="Update my store"]
    
  - name: us.mappings.home.gic.module.selectdeliverystore
    identifier: (//XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"])[2] 

  - name: us.mappings.home.gic.module.selectdeliverystorefromlist
    identifier: //*[contains(@label,"301 Ranch Dr, Milpitas, CA 95035")]

  - name: us.mappings.home.dfs.deliveryaddress
    identifier: //XCUIElementTypeButton[contains(@label,"Milpitas Supercenter, 301 Ranch Dr, Milpitas, CA, 95035")] | //XCUIElementTypeButton[contains(@label,"Milpitas Supercenter, 301 RANCH DR, Milpitas, CA, 95035")]

  - name: us.mappings.home.gic.module.selectdeliverystorefromlistaddress1
    identifier: //*[contains(@label,"777 Story Rd, San Jose, CA 95122")]

  - name: us.mappings.validatedfsinfo.seetimes
    identifier: //XCUIElementTypeStaticText[@name="See times"]

  - name: us.mappings.home.gic.module.storeAddressSection
    identifier: (//XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"])[2]

  - name: us.data.prod.gicDss.storeName.selectYourStore.deliveryIntent
    identifier: (//XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"])[1]

  - name: us.mappings.home.gic.module.pickupIntent.storeAddresssection.iD
    identifier: //XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"] 

  - name: us.mappings.gic.selectStore.headerText # us.mappings.home.gic.dss.storeAddressHeader
    identifier: StoreSelectionViewController.navTitleLabel

  - name: us.mappings.home.gic.dss.selectAddressHeader
    identifier: Select address

  - name: us.mappings.home.gic.module.deliveryAddress.present
    identifier: //XCUIElementTypeButton[contains(@label,"${deliveryAddress}") and not(contains(@label, "Edit"))]

  - name: us.mappings.gic.select.dss.UpdateMyStore.cta
    identifier: //XCUIElementTypeButton[@name="PickupDeliveryCombineViewController.updateMyStoreButton"] | //XCUIElementTypeButton[contains(@label,"Update my store")] #Update my store

  - name: us.mappings.home.gic.module.dssBottomSheet.storeAddress
    identifier: //XCUIElementTypeStaticText[contains(@label,"${dssStoreAddress}")]

  - name: us.mappings.home.gic.module.dssBottomSheet.storeName
    identifier: //XCUIElementTypeStaticText[contains(@label,"${dssStoreName}")]

  - name: us.mappings.home.gic.module.dssBottomSheet.deliveryUnavailbleText
    identifier: //XCUIElementTypeStaticText[contains(@label,"Delivery isn't available from San Jose Supercenter. We can deliver your order from this nearby store:")]

  - name: us.mappings.home.gic.module.dssBottomSheet.updateStoreheader
    identifier: //XCUIElementTypeStaticText[@name="Update your store for delivery"]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectDiffStoreLink
    identifier: //XCUIElementTypeStaticText[@name="Select a different store"]

  - name: us.mappings.home.gic.module.deliveryAddress.present
    identifier: //XCUIElementTypeButton[contains(@label,"${deliveryAddress}")]

  - name: us.mappings.home.gic.module.deliveryAddressCard.present
    identifier: //XCUIElementTypeButton[contains(@label,"${deliveryAddressCard}")] | //XCUIElementTypeStaticText[contains(@label,"${deliveryAddressCard}")]

  - name: us.mappings.home.gic.module.addAddress.cta.present
    identifier: //XCUIElementTypeStaticText[@name="Add address"] | //XCUIElementTypeButton[contains(@label,"Add Address")] | GlobalIntentCenter.AddAddressButton | //XCUIElementTypeButton[@name="GlobalIntentCenter.AddAddressButton"] | //XCUIElementTypeButton[@name="HoTLocationsItemDetailsView.addAddressButton" and @label="Add address"]

  - name: us.mappings.home.gic.module.deliveryAddressCard.cta.present
    identifier: (//XCUIElementTypeButton[@name="GlobalIntentCenter.FullLocation"])[1] | //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]/XCUIElementTypeCell[2]/XCUIElementTypeOther/XCUIElementTypeOther | //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]/XCUIElementTypeCell[2] | (//XCUIElementTypeOther[@name="HoTLocationsItemDetailsView.containerView"])[1]

  - name: us.mappings.gic.selectStore.byZipcode 
    identifier: //XCUIElementTypeStaticText[contains(@label,"${SelectedStoreByZip}")] | //XCUIElementTypeOther[contains(@label,"${SelectedStoreByZip}")]

  - name: us.mappings.home.gic.module.storeAddress.present
    identifier: //XCUIElementTypeButton[contains(@label,"${DeliveryStoreAddress}")]  

  - name: us.mappings.gicDss.storeName.present 
    identifier: //XCUIElementTypeButton[contains(@label,"${DeliveryStoreName}")] 

  - name: us.mappings.home.gic.module.newStoreAddress.selectStore
    identifier: //XCUIElementTypeStaticText[contains(@label,"${NewStoreAddress}")] | //XCUIElementTypeOther[contains(@label,"${NewStoreAddress}")]

  - name: us.mappings.gic.selectedStoreAddress.PickupDeliveryIntent 
    identifier: //XCUIElementTypeStaticText[contains(@label,"${StoreAddressDeliveryPickupIntent}")] 

  - name: us.mappings.gic.selectedStoreName.PickupDeliveryIntent
    identifier: //XCUIElementTypeStaticText[contains(@label,"${StoreNameDeliveryPickupIntent}")]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectYourStorePage.storeAddress
    identifier: //XCUIElementTypeOther[contains(@label,"${SelectYourStoreAddress}")]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectYourStorePage.storeName
    identifier: //XCUIElementTypeOther[contains(@label,"${SelectYourStoreName}")]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectYourStorePage.headerText
    identifier: //XCUIElementTypeStaticText[contains(@label,"Select your store")]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectYourStorePage.saveAsMyStore.cta
    identifier: //XCUIElementTypeButton[@name="SaveStoreSelectionView.saveButton"]

  - name: us.mappings.home.gic.module.dssBottomSheet.selectYourStorePage.saveAsMyStore.ctaName
    identifier: //XCUIElementTypeStaticText[@name="Save as my store"]

  - name: us.mappings.cart.slot
    identifier: SCGroup_FulfillmentSummaryView.detailLabel

  - name: us.mappings.home.gic.module.store
    identifier: //*[contains(@label,"Milpitas Supercenter, 301 Ranch Dr, Milpitas, CA, 95035, Curbside Pickup, available, Pickup, available, ")]

  - name: us.mappings.subs.choose
    identifier: //XCUIElementTypeButton[@name="LDCallout.delegate"]

  - name: us.mappings.subs.close
    identifier: ItemsSubstitutionPrefViewControllercloseButtonAccessibilityIdentifier

  - name: us.mappings.home.deliveryIntent.seeTimes
    identifier: //XCUIElementTypeButton[@name="BookslotShortcutHeaderView.viewAllTimesButton" and @visible = "true"]

  - name: us.mappings.gic.confirmSlot
    identifier: //XCUIElementTypeStaticText[contains(@value,"10am to")]

  - name: us.mappings.home.hot.gic.module.headerText.section.expanded
    identifier: How do you want to shop today?, Expanded, button

  - name: us.mappings.hot.gic.pickupOption
    identifier: //XCUIElementTypeButton[@name="HoTIntentOptionsPhase2View" and @label="Pickup. , 1 of 2"]
      
  - name: us.mappings.hot.gic.deliveryOption
    identifier: //XCUIElementTypeButton[@name="HoTIntentOptionsPhase2View" and @label="Delivery. , 2 of 2"]

  - name: us.mappings.hot.gic.deliveryOptionSelected
    identifier: //XCUIElementTypeButton[@name="HoTIntentOptionsPhase2View" and @label="Delivery. selected, 2 of 2"]

  - name: us.mappings.hot.gic.pickupOptionSelected
    identifier: //XCUIElementTypeButton[@name="HoTIntentOptionsPhase2View" and @label="Pickup. selected, 1 of 2"]

  - name: us.mappings.hot.gic.fullDeliveryAddress
    identifier: (//XCUIElementTypeOther[@name="HoTLocationsItemDetailsView.containerView"])[1]

  - name: us.mappings.hot.gic.storeAddress
    identifier: (//XCUIElementTypeOther[@name="HoTLocationsItemView.locationDetailsView"])[2]

  - name: us.mappings.hot.gic.shippingTile
    identifier: HoTShippingDetailsView.containerView

  - name:  us.mappings.hot.gic.shippingText
    identifier: HoTShippingDetailsView.titleLabel
    
  - name:  us.mappings.hot.gic.shippingTile
    identifier: HoTShippingDetailsView.subtitleLabel

  - name: us.mappings.hot.gic.wplusNoOrderMinimumBenefit
    identifier: //XCUIElementTypeStaticText[contains(@label,"No order min")]

  - name: us.mappings.hot.gic.deliveryAddress
    identifier: //XCUIElementTypeOther[@name="HoTLocationsItemDetailsView.containerView"]

  - name: us.mappings.hot.gic.wplusFreeOverThirtyFive
    identifier: //XCUIElementTypeStaticText[contains(@label,"Free over $35")]

  - name: us.mappings.searchpage.deliveryBadgeSLA.W+
    identifier: //XCUIElementTypeButton[@name="ListView.accessibilityContainer" and contains(@label, "Free delivery")]

  - name: us.mappings.searchpage.deliveryBadgeSLA.nonW+
    identifier: //XCUIElementTypeButton[@name="ListView.accessibilityContainer" and contains(@label, "Or get faster delivery")]

  - name: us.mappings.searchpage.deliveryBadgeSLA.deliveryOnly
    identifier: //XCUIElementTypeButton[contains(@name, "ListView.accessibilityContainer") and contains(@label, "today")] | //XCUIElementTypeButton[contains(@name, "ListView.accessibilityContainer") and contains(@label, "tomorrow")] | //XCUIElementTypeButton[contains(@name, "ListView.accessibilityContainer") and contains(@label, "Free delivery")]

  - name: us.mappings.home.gic.addAddress.button
    identifier: GlobalIntentCenter.AddAddressButton

  - name: us.mappings.home.gic.addAddressTitle
    identifier: (//XCUIElementTypeStaticText[@name="Add address"])[2]

  - name: us.mappings.home.gic.addAddress.firstName
    identifier: //*[(@name="AddressLDEditView.firstNameField" or @name="AddressEditView.firstNameField")]//XCUIElementTypeTextField

  - name: us.mappings.home.gic.addAddress.lastName
    identifier: //*[(@name="AddressLDEditView.lastNameField" or @name="AddressEditView.lastNameField")]//XCUIElementTypeTextField

  - name: us.mappings.home.gic.addAddress.addressSuggestionList
    identifier: (//XCUIElementTypeOther[@name="AddressSuggestionCellView.itemStackView"])[2]

  #EDC/A2H
  - name: us.mappings.gic.select.changeAddress.chevron
    identifier: (//XCUIElementTypeImage[@name="LocationsItemView.chevronIconView"])[1]

  - name: us.mappings.gic.select.standardCatchmentAddress.btn
    identifier: //XCUIElementTypeStaticText[@name="AddressSelectTableViewCell.nameLabel" and @label="Standard Catchment address"]

  - name: us.mappings.gic.select.edcCatchmentAddress.btn
    identifier: //XCUIElementTypeStaticText[@name="AddressSelectTableViewCell.nameLabel" and @label="EDC Catchment Address"]

  # Location Accuracy
  - name: us.mapping.gic.locationAccuracy.banner.searchScreen
    identifier: GicHighlightView.contentView

  - name: us.mapping.gic.locationAccuracy.banner.itemScreen
    identifier: SubtleNudgeView.messageLabel

  - name: us.mapping.gic.locationAccuracy.banner.cartScreen
    identifier: SubtleNudgeView.messageLabel

  - name: us.mapping.gic.locationAccuracy.closeBanner.searchScreen
    identifier: (//XCUIElementTypeButton[@name="GicHighlightView.closeButton"])[2] | //XCUIElementTypeButton[@name="GicHighlightView.closeButton"]

  - name: us.mapping.gic.locationAccuracy.closeBanner
    identifier: //XCUIElementTypeStaticText[@label="close"]

  - name: us.mapping.gic.changeFromPickupButton
    identifier: //XCUIElementTypeButton[@name="FulfillmentSummaryView.actionButton"]
    
  - name: us.mappings.home.gic.module.currentAddress
    identifier: //XCUIElementTypeCollectionView[@name="GlobalIntentCenterViewController.collectionView"]/XCUIElementTypeCell[2]

  - name: us.mappings.home.gic.module.secondAddress
    identifier: (//XCUIElementTypeButton[@name="AddressSelectTableViewCell.radioButton"])[2]

  - name: us.mappings.home.gic.module.shipAnotherCountry
    identifier: //XCUIElementTypeStaticText[@name="CountrySelectionView.label" and @label="Ship to another country"]
  
  - name: us.maping.home.gic.module.addressTitle
    identifier: //XCUIElementTypeStaticText[@name="Shipping location"]
  
  - name: us.mapping.gic.module.selectColumbiaCountry
    identifier: //XCUIElementTypeCollectionView[@name="CountrySelectionListViewController.collectionView"]/XCUIElementTypeCell[3]/XCUIElementTypeOther/XCUIElementTypeOther/XCUIElementTypeButton

  - name: us.mapping.gic.module.addShippingAddress
    identifier: //XCUIElementTypeStaticText[@name="Add shipping address"]
  
  - name: us.mapping.gic.module.verifyAddAddressTitle
    identifier: //XCUIElementTypeStaticText[@name="Add address"]
  
  - name: us.mapping.gic.module.selectAddressHeaderPresent
    identifier: //XCUIElementTypeStaticText[@name="Select address"]
  
  - name: us.mapping.gic.module.clickAddANewAddress
    identifier: //XCUIElementTypeStaticText[@name="Add new address"]  

    # GEP
  - name: us.mappings.home.gic.gep.verifyCountrySwitchNudge.colombia
    identifier: //XCUIElementTypeStaticText[contains(@label,"Colombia")] #[@label="Looks like you're in United States"]

  - name: us.mappings.home.gic.gep.verifyCountrySwitchNudge.shopWithinButton
    identifier: //XCUIElementTypeButton[@name="CountrySwitchNudgeViewController.footerButton"]

  - name: us.mappings.home.gic.shopDroneReadyPicks.cta
    identifier: //XCUIElementTypeImage[@name="drone-delivery"]//parent::XCUIElementTypeOther
    
  - name: us.mappings.home.gic.shopDroneReadyPicks.droneIcon
    identifier: //XCUIElementTypeImage[@name="drone-delivery"]

  - name: us.mappings.home.gic.shopDroneReadyPicks.droneTitle
    identifier: //XCUIElementTypeStaticText[@name="DroneDeliveryInfoView.titleLabel" and @label="Drone delivery"]

  - name: us.mappings.home.gic.shopDroneReadyPicks.droneDescription
    identifier: //XCUIElementTypeStaticText[@name="DroneDeliveryInfoView.descriptionLabel"]

  - name: us.mappings.home.gic.shopDroneReadyPicks.button
    identifier: //XCUIElementTypeButton[@name="DroneDeliveryInfoView.dronePicksCta"]
  
  - name: us.mappings.home.gic.collapsed.droneDeliveryIcon
    identifier: drone-delivery

  - name: us.mappings.home.gic.droneSlotReserved.capacityProgress
    identifier: DroneCapacityProgressIndicator.progressView

  - name: us.mappings.home.gic.droneSlotReserved.capacityHeader 
    identifier: DroneCapacityProgressIndicator.droneCapacityTitle

  - name: us.mappings.home.gic.droneSlotReserved.capacityInfo
    identifier: DroneCapacityProgressIndicator.droneCapacityInfoIcon
  
  - name: us.mappings.home.gic.droneSlotReserved.timer
    identifier: GlobalIntentCenter.BannerFadedButton
  
  - name: us.mappings.checkout.prepareForLandingText
    identifier:  //XCUIElementTypeStaticText[contains(@label="Prepare for landing!")]

  - name: us.mappings.checkout.prepareForLandingAgreeButton
    identifier:  //XCUIElementTypeButton[contains(@label="I agree")]
  
  - name: us.mappings.gic.reserve.timeslot.unavailable
    identifier: //XCUIElementTypeStaticText[@name="Pickup time not available"]
  
  - name: us.mappings.gic.reserve.timeslot.slot4
    identifier: SlotShortcutView.Slot4

  - name: us.mappings.home.gic.module.headerText.section
    identifier: GlobalIntentCenter.BannerFadedButton

  - name: us.mappings.home.gic.module.deliveryFulfillment
    identifier: //XCUIElementTypeButton[contains(@label,"Delivery")]

  - name: us.mappings.home.gic.module.sanJoseZipcode
    identifier: //XCUIElementTypeButton[contains(@label,"95122")]      

  - name: us.mappings.home.limitedTimeWalmartCashPopUp.header
    identifier: //XCUIElementTypeStaticText[@name="BenefitEngagementTempoContainerView.headLineLabel"]  

  - name: us.mappings.home.limitedTimeWalmartCashPopUp.closeButton
    identifier: //XCUIElementTypeButton[@name="Close"]     