functions:

########################################################### iOS ################################################
  # Pre check & validations before ATC
  - name: us.functions.item.preAddToCartSteps
    platform: ios
    flow:
      - try:
          flow:
            - sleep:
                duration: 2000
            - verifyIdentifier:
                timeout: 3000
                value:
                  - identifier: us.mappings.item.addToCartCheckItemAdded
                    contains: "1"
            - click:
                identifier: us.mappings.cart.itemDecrementButton
            - sleep:            
                duration: 2000
          catch:
            flow:
              - log: Item wasn't Added initially, continuing with scenario

  # ATC function for all Items for iOS
  - name: us.functions.item.addItemToCartWithErrorHandling
    platform: ios  
    flow:
      # Pre Requisite check before performing ATC
      - executeFunction:
          name: us.functions.item.preAddToCartSteps
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton

      - if:
          condition: ${skipPostAddToCartSteps} == false
          then:
            - executeFunction:
                name: us.functions.item.postAddToCartSteps
      - storeIn:
          key: skipPostAddToCartSteps
          value: false
      - storeIn:
          key: apiFetch
          value: false

  - name: us.functions.item.validateAndClickAddToCartButton
    platform: ios
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.item.addToCartButton
            - click:
                identifier: us.mappings.item.addToCartButton
          catch:
            flow:
              - if:
                  condition: ${apiFetch}
                  then:
                    - storeIn:
                        key: itemDataDetails
                        value: "[ Source - AstroAPI ] [ ItemId - ${itemFetched} ] [ Tag - ${itemType} ] "
                  else:
                    - storeIn:
                        key: itemDataDetails
                        value: NA
              - failTest:
                  message: "DATA_FAILURE - ${env} - ADD TO CART button not displayed - ${itemDataDetails}"

      - if:
          identifier:
            present:
              - identifier: us.mappings.item.unavailableItemPopUp
          then:
            - click:
                identifier: us.mappings.buyNow.closeButton
            - log: "Trying to add item again before failing test"
            - click:
                identifier: us.mappings.item.addToCartButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.unavailableItemPopUp
                then:
                  - failTest:
                      message: "FAILURE - ${env} - Unable to add item to cart - ${itemDataDetails}"

  - name: us.functions.item.postAddToCartSteps
    platform: ios
    flow:
      - try:
          flow:
            - click:
                identifier: us.mappings.item.petrxAddToCartVetConfirmatiomGotItButton
          catch:
            flow:
              - log: No Petrx item vet confirmation pop up
      - try:
          flow:
            # - verifyIdentifier:
            #     timeout: 0
            #     present:
            #       - identifier: us.mappings.item.accInstallationBottomSheet
            - click:
                identifier: us.mappings.item.accInstallationBottomSheetClose
          catch:
            flow:
              - log: No ACC pop up screen displayed
      - try:
          flow:
            # - verifyIdentifier:
            #     timeout: 0
            #     present:
            #       - identifier: us.mapping.item.postItemAddToCartViewOverlay
            - click:
                identifier: us.mapping.item.postItemAddToCartViewOverlay.closeButton
          catch:
            flow:
              - log: No PAC overlay pop up screen displayed
      - try:
          flow:
            # - verifyIdentifier:
            #     timeout: 0
            #     present:
            #       - identifier: us.mapping.item.addWalmartProtectionPlan
            - click:
                identifier: us.mapping.item.addWalmartProtectionPlan.closeButton
          catch:
            flow:
              - log: No WPP pop up screen displayed
      - executeFunction:
          name: us.functions.item.closeItemPage
      # - verifyIdentifier:
      #     timeout: 0
      #     notPresent:
      #       - identifier: us.mappings.navBar.cartIconEmpty

  # Closes Item page (PAC screen should be a separate function call)
  - name: us.functions.item.closeItemPage
    platform: ios
    flow:
      - try:
          flow:
            - click:
                identifier: us.mappings.item.pacCloseButton
          catch:
            flow:
              - log: PAC not found
      - try:
          flow:
            - click:
                identifier: us.mappings.item.closeButton
          catch:
            flow:
              - log: Item page closed
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.itemPage.itemName
                  then:
                    - goBack: true

  # ATC function with deeplink and simple atc
  - name: us.functions.item.simpleAddItemToCartWithDeepLink
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: ${deepLinkUrl}
      - verifyIdentifier:
          timeout: 80000
          present:
            - identifier: us.mappings.item.addToCartButton
      - click:
          identifier: us.mappings.item.addToCartButton
      # Added sleep for Post ATC pop up to show before closing.
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://home
      

  # ATC function for all Items for iOS
  - name: us.functions.item.addItemToCart
    platform: ios  
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - try:
          flow:
            - verifyIdentifier:
                timeout: 90000
                present:
                  - identifier: us.mappings.item.addToCartButton
            - click:
                identifier: us.mappings.item.addToCartButton
          catch:
            flow:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.AtcButtonText
                  then:
                    - log: Add to cart button present
                    - click:
                        identifier:  us.mappings.item.AtcButtonXpath 
                  else:
                    - loop:
                        begin: 1
                        end: 4
                        flow:
                          - if:
                              identifier:
                                present:
                                  - identifier: us.mappings.item.somethingIsntworkingButton
                              then:
                                - log: "Item page is not loading.. Refreshing the page" 
                                - click:
                                    identifier: us.mappings.item.somethingIsntworkingButton
                              else:
                                - break: true
                    - if:
                        identifier:
                          present:  
                            - identifier: us.mappings.item.somethingIsntworkingButton                 
                        then:   
                          - failTest:
                              message:  "ENV_FAILURE - ${env} - Something isn't working. Item page load error"                 
                    - if:
                        condition: ${apiFetch}
                        then:
                          - storeIn:
                              key: itemDataDetails
                              value: "[ Source - AstroAPI ] [ ItemId - ${itemFetched} ] [ Tag - ${itemType} ] "
                        else:
                          - if:
                              condition: ${itemDataDetails} == null
                              then:
                                - storeIn:
                                    key: itemDataDetails
                                    value: NA
                    - failTest:
                        message: "DATA_FAILURE - ${env} - ADD TO CART button not displayed - ${itemDataDetails}"
      - storeIn:
          key: optimizeAtc
          value: true
      - if:
          condition: ${skipPostAddToCartSteps} == false
          then:
            - if:
                condition: ${optimizeAtc}
                then:
                # optimized closing post ATC pop up by deeplinking to homePage to reduce execution time
                  - executeFunction:
                      name: us.functions.global.navigation.goToDeepLink
                      params:
                        - name: deepLinkUrl
                          string: walmart://home
                else:
                  - executeFunction:
                      name: us.functions.item.postAddToCartSteps
      - verifyIdentifier:
          timeout: 10000
          notPresent:
            - identifier: us.mappings.navBar.cartIconEmpty
      - storeIn:
          key: skipPostAddToCartSteps
          value: false
      - storeIn:
          key: apiFetch
          value: false
      - storeIn:
          key: itemDataDetails
          value: 'null'
      - storeIn:
          key: optimizeAtc
          value: false
  
  #Add Item to Cart and Click Decline Button 
  - name: us.functions.item.addItemToCartAndDeclineProtectionCoverage
    platform: ios  
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
          params:
            - name: skipPostAddToCartSteps
              string: true
      - verifyIdentifier:
          timeout: 50000
          present:
            - identifier: us.mappings.carePlans.declineButton
      - if:
          condition: ${declineUsing} == 'closeButton'
          then:
            - click:
                identifier: us.mapping.item.addWalmartProtectionPlan.closeButton
            - executeFunction:
                name: us.functions.item.postAddToCartSteps
          else:
            - click:
                identifier: us.mappings.carePlans.declineButton
            - sleep: 
                duration: 5000
            # to close item page deeplink to homepage
            - executeFunction:
                name: us.functions.global.navigation.goToDeepLink
                params:
                  - name: deepLinkUrl
                    string: walmart://home

   #Add Item to Cart and Click Decline Button For Android
  - name: us.functions.item.addItemToCartAndDeclineProtectionCoverage
    platform: android  
    flow:
      - executeFunction:
          name: us.functions.item.preAddToCartSteps
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton

      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: us.mappings.carePlans.declineButton
      - click:
          identifier: us.mappings.carePlans.declineButton

      - executeFunction:
          name: us.functions.item.postAddToCartSteps

  - name: us.functions.item.addItemToCartAndVerifyBadge
    platform: ios  
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: us.mappings.navBar.cartIconWithCount

  - name: us.functions.item.verifyStoreNameandAddress
    platform: ios
    flow:
      - sleep:
          duration: 15000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.switching.fulfillment.deliverystoreText
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.switching.fulfillment.deliverystoreText
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillmentContainerView.intentView
          then:
            - verifyIdentifier:
                value:
                  - identifier: us.mappings.item.fulfillmentContainerIntentView.addressLabel
                    contains: ${storeName}
          else:
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.item.switching.fulfillment.pickupText
                    contains: ${storeName}

  - name: us.functions.item.handlePAC
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.PACScreen
          then:
            - click:
                identifier: us.mappings.item.pacCloseButton

  #Add prepaid item to cart
  - name : us.functions.item.addPrepaidItemToCart
    platform: ios
    flow:
      # Pre Requisite check before performing ATC
      - executeFunction:
          name: us.functions.item.preAddToCartSteps

      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.prepaid.topUp
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.prepaid.topUp
      - click:
          identifier: us.mappings.item.prepaid.topUp
          wait: 1000
      - if:
          condition: ${prepaidType}=='top-up'
          then:
            - enterText:
                identifier: us.mappings.item.prepaid.phoneNumber
                string: ${phoneNumber}
                pressEnter: true
            - hideKeyboard: true
            - click:
                wait: 2000
                identifier: us.mappings.item.continueButton
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.item.prepaid.phoneNumber.VerifiedText

      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - executeFunction:
          name: us.functions.item.closeItemPage

  - name: us.functions.item.prepaidItemATCValidation
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: us.mappings.item.addToCartButtonAdded
              contains: 1
      - click:
          identifier: us.mappings.item.stickyATC.addToCartButton
          wait: 1000
      - verifyIdentifier:
          enabled:
            - identifier: us.mappings.item.atc.incrementStepper
              value: false
            - identifier: us.mappings.item.atc.decrementStepper
              value: true

  - name: us.functions.item.verifyPreorderItemDetailsAndAddToCart
    platform: ios
    flow:
      - verifyIdentifier:
          timeout: 110000
          present:
            - identifier: us.mappings.itemPage.itemName
            - identifier: us.mappings.item.productPrimaryPrice
            - identifier: us.mappings.item.preorderLabel
            - identifier: us.mappings.item.preorderItem.releaseDateLabel
      - getString:
          identifier: us.mappings.item.preorderItem.releaseDateLabel
          attribute: label
          storeIn: releaseDateLabel      
      - log: Preorder item page 'releaseDateLabel' - ${releaseDateLabel}            
      - verifyIdentifier:
          value:
            - identifier: us.mappings.item.preOrderButton
              contains: Preorder
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.item.preorderItem.arrivesByLabel
              - name: direction
                string: down
              - name: scrollPosition
                string: center    
      - getString:
          identifier: us.mappings.item.preorderItem.arrivesByLabel
          attribute: label
          storeIn: label      
      - log: Preorder item page 'expectedArrivalLabel' - ${label}
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.preOrderButton
          then:    
            - click:
                identifier: us.mappings.item.preOrderButton
            - sleep:
                duration: 7000          
            - executeFunction:
                name: us.functions.item.postAddToCartSteps

          else:                              
            - executeFunction:
                name: us.functions.item.addItemToCart

  # All element locators are to be updated once they are available
  - name: us.functions.item.droneLandingPage.addDroneReadyItems
    platform: ios
    flow:
      - if:
          identifier:
            timeout: 9000
            present:
              - identifier: us.mappings.item.droneLandingPage.addressBottomSheet
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.droneImage
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.droneTitle
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.eligibleAddress
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.startShopping
            - click:
                identifier: us.mappings.item.droneLanding.addressBottomSheet.startShopping
      - if:
          identifier:
            timeout: 9000
            present:
              - identifier: us.mappings.item.droneLandingPage.banner
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.droneLandingPage.header 
                  - identifier: us.mappings.item.droneLandingPage.description
                  - identifier: us.mappings.item.droneLandingPage.resultsHeader
                  - identifier: us.mappings.item.droneLandingPage.resultsPriceDisclaimer
                  - identifier: us.mappings.item.droneLandingPage.disclaimerIcon
                  - identifier: us.mappings.item.droneLandingPage.itemList
            - log:
                message: Drone Landing Page loaded successfully!
                color: GREEN_BOLD
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: us.mappings.item.droneLandingPage.addItemButton
                  - click:
                      identifier: us.mappings.item.droneLandingPage.addItemButton
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: us.mappings.item.droneLandingPage.itemQuantityStepper.present
                  - log:
                      message: Added first drone item to the cart successfully!
                      color: GREEN_BOLD
                  - if:
                      identifier:
                        timeout: 9000
                        present:
                          - identifier: us.mappings.item.dronesNotAvailableBanner
                      then:
                          - click:
                              identifier: us.mappings.cart.droneCapacity.textBody.gotIt.cta
                catch:
                  flow:
                    - failTest:
                        message: "Add Drone item button is not clickable."    
          else:
            - log:
                message: Drone Landing Page failed to load.
                color: RED                  

################################################ Android ##################################################


#temp fix to work around teflon environment issue

  - name: us.functions.item.handlePAC
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.PACScreen
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.closeButton       
                then:
                  - click:
                        identifier: us.mappings.item.closeButton
                else:
                  - goBack: true

  # Pre check & validations before ATC
  - name: us.functions.item.preAddToCartSteps
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
          then:
            - click:
                identifier: us.mappings.wlus.switchToOriginalApp.startShopping
      #temp fix to work around teflon environment issue
      - executeFunction:
          name: us.functions.utils.tryAgainWhenThereIsError

      - try:
          flow:
            - sleep:
                duration: 2000         
            - verifyIdentifier:
                timeout: 10000
                text:
                  - identifier: us.mappings.myItems.atc.quantityAdded
                    contains: 1
            - click:
                identifier: us.mappings.item.addToCartMinusButton
            - sleep:
                duration: 2000               
          catch:
            flow:
              - log: Add to cart decrement button is not present

  # ATC function for all Items for android
  - name: us.functions.item.addItemToCart
    platform: android  
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - executeFunction:
          name: us.functions.item.preAddToCartSteps
      - if:
          identifier:
            present:  
              - identifier: us.mappings.error.retryButton                  
          then:                        
            - click:
                identifier: us.mappings.error.retryButton 
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton

      - if:
          condition: ${skipPostAddToCartSteps} == false
          then:
            - executeFunction:
                name: us.functions.item.postAddToCartSteps
      - storeIn:
          key: skipPostAddToCartSteps
          value: false
      - storeIn:
          key: apiFetch
          value: false

  - name: us.functions.item.validateAndClickAddToCartButton
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.addToCartButton
          then:
            - log: ATC button present
          else:
            - if:
                condition: ${apiFetch}
                then:
                  - storeIn:
                      key: itemDataDetails
                      value: "[ Source - AstroAPI ] [ ItemId - ${itemFetched} ] [ Tag - ${itemType} ] "
                else:
                  - storeIn:
                      key: itemDataDetails
                      value: NA
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.itemPageError
                then:
                  - failTest:
                      message: "DATA_FAILURE - ${env} - item page load error - ${itemDataDetails}"
            
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.item.addToCartButton
                then:
                  - failTest:
                      message: "DATA_FAILURE - ${env} - ADD TO CART button not displayed - ${itemDataDetails}"
      - verifyIdentifier:
          timeout: 15000
          present:
            - identifier: us.mappings.item.addToCartButton
      - click:
          identifier: us.mappings.item.addToCartButton
      - sleep:
          duration: 3000


  - name: us.functions.item.postAddToCartSteps
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.accInstallationBottomSheet 
          then:
            - click:
                identifier: us.mappings.item.closeButton
      - if:
          identifier:
            present:
              - identifier: us.mapping.item.checkoutButton.Popup
          then:
            - executeFunction:
                name: us.functions.global.navigation.backNavigation
      - if:
          identifier:
            present:
              - identifier: us.mapping.item.pickUpPopUp
          then:
            - click:
                identifier: us.mappings.item.closeButton
      - executeFunction:
          name: us.functions.item.handlePAC
      - executeFunction:
          name: us.functions.item.closeItemPage
      - verifyIdentifier:
          timeout: 10000
          text:
            - identifier: us.mappings.navBar.cartIconEmpty
              notContains: 0 

  # Closes Item page (PAC screen should be a separate function call)
  - name: us.functions.item.closeItemPage
    platform: android
    flow:
      - loop:
          begin: 0
          end: 3
          flow:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.closeButton
                then:
                  - click:
                      identifier: us.mappings.item.closeButton
                else:
                  - break: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.newItemPageLayout
          then:
            - click:
                identifier: us.mappings.global.navigateBackArrow
      - sleep:
          duration: 5000
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.item.productNameTileGeneric

  # Add prepaid item to cart
  - name : us.functions.item.addPrepaidItemToCart
    platform: android
    flow:
      - executeFunction:
          name: us.functions.item.preAddToCartSteps

      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.prepaid.topUp
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.prepaid.topUp
      - if:
          condition: ${prepaidType}=='top-up'
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.prepaid.phoneNumber
            - enterText:
                identifier: us.mappings.item.prepaid.phoneNumber
                string: ${phoneNumber}
            - click:
                wait: 3000
                identifier: us.mappings.item.continueButton
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.item.prepaid.phoneNumber.VerifiedText

      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - executeFunction:
          name: us.functions.item.prepaidItemATCValidation
      - executeFunction:
          name: us.functions.item.closeItemPage

  - name : us.functions.item.tappingPickupDeliverShippingFullfilmentInItempage
    platform: android
    flow:
      - sleep:
          duration: 5000
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.itempage.tappingFulfilmentTextContainer
              - name: direction
                string: down
              - name: scrollPosition
                string: center      
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillmentContainerView
          then:  
              - storeIn:
                  key: fulfillmentContainerView
                  value: true
              - log: Fullfilments are in container                          
      - if:
          condition: ${fulfillmentText} == 'Pickup'
          then:                                         
            - if:
                condition: ${fulfillmentContainerView}
                then:  
                    - click:    
                        identifier: us.mappings.item.switching.fulfillment.pickupText   
                    - sleep:
                        duration: 2000 
                    - executeFunction:
                          name: us.functions.utils.scrollIfNotVisible
                          params:
                            - name: identifier
                              string: us.mappings.pause.clickOnChangeButton
                            - name: direction
                              string: down
                            - name: scrollPosition
                              string: center  
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.pause.clickOnChangeButton   
                    - click:    
                        identifier: us.mappings.pause.clickOnChangeButton
                else:                               
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.item.switching.fulfillment.pickupText            
                    - click:    
                        identifier: us.mappings.item.switching.fulfillment.pickupText      
                        coordinates: 55%,45%     
      - if:
          condition: ${fulfillmentText} == 'Delivery'
          then: 
              - if:
                  condition: ${fulfillmentContainerView}
                  then:  
                      - click:    
                          identifier: us.mappings.item.switching.fulfillment.deliverystoreText 
                      - sleep:
                          duration: 2000   
                      - verifyIdentifier:
                          present:
                            - identifier: us.mappings.pause.clickOnChangeButton   
                      - click:    
                          identifier: us.mappings.pause.clickOnChangeButton
                  else:                                        
                      - verifyIdentifier:
                          present:
                            - identifier: us.mappings.item.switching.fulfillment.deliverystoreText            
                      - click:    
                          identifier: us.mappings.item.switching.fulfillment.deliverystoreText     
                          coordinates: 80%,50%  
      - if:
          condition: ${fulfillmentText} == 'Shipping'
          then:                 
              - if:
                  condition: ${fulfillmentContainerView}
                  then:  
                      - click:    
                          identifier: us.mappings.item.switching.fulfillment.shippingText
                      - sleep:
                          duration: 2000   
                      - verifyIdentifier:
                          present:
                            - identifier: us.mappings.pause.clickOnChangeButton   
                      - click:    
                          identifier: us.mappings.pause.clickOnChangeButton
                  else:                                                                 
                      - verifyIdentifier:
                          present:
                            - identifier: us.mappings.item.switching.fulfillment.shippingText            
                      - click:    
                          identifier: us.mappings.item.switching.fulfillment.shippingText     
                          coordinates: 25%,75%

  - name: us.functions.item.validateAddaddressScreen
    platform: android
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.SelectAddressScreenTitle   
      - click:
          identifier: us.mappings.global.closeButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.closeButton
          then:
          - click:      
              identifier: us.mappings.global.closeButton


  - name: us.functions.item.validateSelectStoreScreen
    platform: android
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gic.selectStore.headerText  
      - click:      
          identifier: us.mappings.global.closeButton
          coordinates: 50%, 50%

  - name: us.functions.item.validateSignInPage
    platform: android
    flow: 
      - executeFunction:
          name: us.functions.global.authentication.handleSignInAnotherWayPopup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.signPageGraphic
            - identifier: us.mappings.home.signViewLabel    
      - if:
          identifier:
            present:
              - identifier: us.mappings.authentication.signIn.anotherWayText
          then:
            - log: "The Sign-in another way pop-up is displayed, dismissing it."
            - click:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
      - click:      
          identifier: us.mappings.global.closeButton

  - name : us.functions.item.tappingPickupDeliverShippingFullfilmentInItempage
    platform: ios
    flow:
      - fetchPageSource: false
      - if:
          condition: ${fulfillmentText} == 'Pickup'
          then:
            - scroll:
               direction: down
               untilIdentifier: us.mappings.item.switching.fulfillment.pickupText
               position: center
            - click:    
                identifier: us.mappings.item.switching.fulfillment.pickupText
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.pause.clickOnChangeButton   
            - click:    
                identifier: us.mappings.pause.clickOnChangeButton
          else:
            - if:
                condition: ${fulfillmentText} == 'Delivery'
                then:
                  - executeFunction:
                        name: us.functions.utils.scrollIfNotVisible
                        params:
                          - name: identifier
                            string: us.mappings.item.switching.fulfillment.deliverystoreText
                          - name: direction
                            string: up
                          - name: scrollPosition
                            string: center
                          - name: limit
                            string: 1
                  - click:    
                      identifier: us.mappings.item.switching.fulfillment.deliverystoreText
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.pause.clickOnChangeButton   
                  - click:    
                      identifier: us.mappings.pause.clickOnChangeButton
                else:
                  - if:
                      condition: ${fulfillmentText} == 'Shipping'
                      then:
                        - executeFunction:
                              name: us.functions.utils.scrollIfNotVisible
                              params:
                                - name: identifier
                                  string: us.mappings.item.switching.fulfillment.shippingText
                                - name: direction
                                  string: up
                                - name: scrollPosition
                                  string: center
                                - name: limit
                                  string: 1
                        - click:    
                            identifier: us.mappings.item.switching.fulfillment.shippingText 
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.pause.clickOnChangeButton   
                        - click:    
                            identifier: us.mappings.pause.clickOnChangeButton
      - fetchPageSource: true
          
  - name: us.functions.item.validateAddaddressScreen
    platform: ios
    flow: 
      - if:
           identifier:
              notPresent:
               - identifier: us.mappings.item.SelectAddressScreenTitle  
           then:
             - click:
                identifier: us.mappings.item.switching.fulfillment.shippingText 
             - if: 
                 identifier:
                   present:
                     - identifier: us.mappings.pause.clickOnChangeButton
                 then:
                   - click:
                       identifier: us.mappings.pause.clickOnChangeButton
                 else:
                   - verifyIdentifier:
                       present:
                         - identifier: us.mappings.item.switching.fulfillment.deliverystoreText            
                   - click:    
                       identifier: us.mappings.item.switching.fulfillment.deliverystoreText     
                       coordinates: 80%,50%    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.SelectAddressScreenTitle   
      - click:      
          identifier: us.mappings.global.closeButton
      # - executeFunction:
      #     name: us.functions.item.closeItemPage
      # For faster item page close deeplinking to homepage
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://home

  - name: us.functions.item.validateSelectStoreScreen
    platform: ios
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.validateSelectStoreScreen   
      - click:    
          identifier: us.mappings.item.selectStoreCloseButton

  - name: us.functions.item.validateSignInPage
    platform: ios
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.signPageGraphic
            - identifier: us.mappings.home.signViewLabel    
      - click:      
          identifier: us.mappings.global.closeButtonSignInPage

#Verify the item details information and Max count validation
  - name: us.functions.item.prepaidItemATCValidation
    platform: android
    flow:
      - verifyIdentifier:
          enabled:
            - identifier: us.mappings.item.addToCartPlusButton
              value: false
            - identifier: us.mappings.item.addToCartMinusButton
              value: true
          text:
            - identifier: us.mappings.item.addToCartButtonText
              contains: 1

  - name: us.functions.item.validatepreOrderItemDetails_addItemToCart
    platform: android
    flow:
      - sleep:
          duration: 15000
      - executeFunction:
          name: us.functions.utils.tryAgainWhenThereIsError
      - verifyIdentifier:
          timeout: 50000
          present:
            - identifier: us.mappings.item.preOrderButton
            - identifier: us.mappings.item.producttile.preorderText
            - identifier: us.mappings.item.producttile.preorderReleaseDateText
      - verifyIdentifier:
          text:
            - identifier: us.mappings.item.producttile.preorderText
              equals: Preorder                   
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.preorderShipping.shippingText
            - name: direction
              string: down
      - getString:
          identifier: us.mappings.item.preorderItem.arrivesByText
          attribute: text
          storeIn: text      
      - log: Preorder item page 'expectedArrivalLabel' - ${text}              
      - click:
          identifier: us.mappings.item.preOrderButton
      - sleep:
          duration: 7000          
      - executeFunction:
          name: us.functions.item.postAddToCartSteps

  - name: us.functions.item.verifyStoreNameandAddress
    platform: android
    flow:
      - sleep:
          duration: 15000
      - scroll:
          direction: down
          scrollLimit: 1
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillment.deliveryText
          then:  
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.item.fulfillment.deliveryText
                  position: center
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.item.fulfillment.deliveryText 
              - verifyIdentifier:
                  text:
                    - identifier: us.mappings.item.switching.fulfillment.pickupText
                      contains: ${storeName}
                    # - identifier: us.mappings.item.switching.fulfillment.deliverystoreText
                    #   contains: ${storeAddress}
          else:
            - verifyIdentifier:
                present:               
                  - identifier: us.mappings.item.itemPagefulfillmentTitle

  - name: us.functions.item.verifyStoreNameandAddress.checkIntent  #Author: Joel Addition
    platform: android
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.switching.fulfillment.storeName
          position: center
      - verifyIdentifier:
          timeout: 10000
          present:
            - identifier: us.mappings.item.switching.fulfillment.intentText
            - identifier: us.mappings.item.switching.fulfillment.storeName 

  - name: us.functions.item.verifyStoreNameandAddress.checkIntent  #Author: Joel Addition
    platform: ios
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.fulfillmentContainerView
          scrollLimit: 2
          position: center
          timeout: 500000    
      - verifyIdentifier:
          timeout: 100000
          present:
            - identifier: us.mappings.item.switching.fulfillment.intentText
            - identifier: us.mappings.item.switching.fulfillment.storeName

            # Verfy ACC item page
  - name: us.functions.item.verifyS2SItemPage
    platform: android
    flow:
      - sleep: 
          duration: 5000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.checkForFitVehicle
            - name: direction
              string: down 
            - name: scrollPosition
              string: center
      - try:
          flow:    
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.checkForFitVehicle
          catch:
            flow:
              - failTest:
                  message: "FAILURE - ${env} - Add Vehicle widget is not displayed"
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.getExpertTireInstallationText
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.idontNeedInstallationRadioButtonSelected
          then:
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.item.getExpertTireInstallationText
                    - identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                    - identifier: us.mappings.item.idontNeedInstallationRadioButtonSelected
          else:
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.item.getExpertTireInstallationText 
                    # - identifier: us.mappings.item.getExpertTireInstallationCheckBox        
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.getExpertTireInstallationCheckBox 
          then:
            - log: Checkbox is present
            - storeIn:
                key: checkboxPresent
                value: true  
          else:  
            - log: Checkbox is not present
            - storeIn:
                key: checkboxPresent
                value: false  

  - name: us.functions.item.selectTireInstallationFromS2SItemPage
    platform: android
    flow:
      - if:
          condition: ${checkboxPresent}
          then:    
            - if:
                identifier:
                  present:
                  - identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                then:
                  - click:
                      identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                      wait: 3000
                else:
                  - try:
                      flow:
                        - verifyIdentifier:
                            checked:
                              - identifier: us.mappings.item.getExpertTireInstallationCheckBox 
                                value: true
                        - log : checkbox already selected 
                      catch:
                        flow:
                          - click:
                              identifier: us.mappings.item.getExpertTireInstallationCheckBox                

  - name: us.functions.item.verifyS2SItemPage
    platform: ios
    flow:
      # - scroll:
      #     direction: down
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.item.checkForFitVehicle   
      #       - name: direction
      #         string: up
      #       - name: scrollPosition
      #         string: center
      # - try:
      #     flow:    
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.item.checkForFitVehicle
      #     catch:
      #       flow:
      #         - failTest:
      #             message: "FAILURE - ${env} - Add Vehicle widget is not displayed"
      - sleep: 
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.idontNeedInstallationRadioButtonSelected
          then:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.getExpertTireInstallationText 
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.item.getExpertTireInstallationText
                    - identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                    - identifier: us.mappings.item.idontNeedInstallationRadioButtonSelected

          else:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.getExpertTireInstallationSection
                  - name: direction
                    string: down
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.getExpertTireInstallationSection
                  # - identifier: us.mappings.item.getExpertTireInstallationCheckBox  
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.getExpertTireInstallationCheckBox 
          then:
            - log: Checkbox is present
            - storeIn:
                key: checkboxPresent
                value: true  
            - try:
                flow:
                  - verifyIdentifier:
                      value:
                        - identifier: us.mappings.item.getExpertTireInstallationCheckBox
                          equals: 1
                  - storeIn:
                      key: checkboxSelected
                      value: true
                catch:
                  flow:
                    - log: Checkbox is not selected. Working as expected
                    - storeIn:
                        key: checkboxSelected
                        value: false
            - if:
                condition: ${checkboxSelected}
                then:
                  - failTest:
                      message: ENV_FAILURE - ${env} - Check box is selected by default  
          else:  
            - log: Checkbox is not present
            - storeIn:
                key: checkboxPresent
                value: false  

  - name: us.functions.item.selectTireInstallationFromS2SItemPage
    platform: ios
    flow:
      - if:
          condition: ${checkboxPresent}
          then:
            - if:
                identifier:
                  present:
                  - identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                then:
                  - click:
                      identifier: us.mappings.item.tireInstallationRadioButtonNotSelected
                      wait: 3000
                else:
                  - try:
                      flow:
                        - verifyIdentifier:
                            value:
                              - identifier: us.mappings.item.getExpertTireInstallationCheckBox 
                                equals: 1
                        - log : checkbox already selected 
                      catch:
                        flow:
                          - click:
                              identifier: us.mappings.item.getExpertTireInstallationCheckBox            

  - name: us.functions.item.pureWeightItemList
    platform: ios
    flow:
      - storeIn:
          key: atcbutton
          value: false    
      - loop:
          each: ${weightedItem}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items
              - sleep: 
                  duration: 5000  
              - executeFunction:
                  name: us.functions.search.clickOnFirstItem
                  params:
                    - name: subFilter
                      string: weight                  
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.addToCartButton
                  then:
                    - log: 'Add to cart button is present'
                    - executeFunction:
                        name: us.functions.item.addItemToCart
                    - storeIn:
                        key: atcbutton
                        value: true                            
                    - break: true
                  else:  
                    - verifyIdentifier:
                        notPresent:
                          - identifier: us.mappings.item.mainAddToCartButtonText                
                    - executeFunction:
                       name: us.functions.item.closeItemPage

  - name: us.functions.search.pacScreenValidation
    platform: ios
    flow:
      - loop:
          each: ${pacItems}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items
              - executeFunction:
                  name: us.functions.search.clickOnFirstItem 
              - sleep:
                  duration: 3000
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.mainAddToCartButtonText
                  then:
                    - log: ATC button present                                               
                    - executeFunction:
                        name: us.functions.item.addItemToCart
                        params:
                          - name: skipPostAddToCartSteps
                            string: true                    
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.item.PACScreen
                        then:
                          - log: 'PAC Screen is present'
                          - storeIn:
                              key: pacScreen
                              value: available
                          - verifyIdentifier:
                              present:
                                - identifier: us.mappings.item.PACScreen
                                - identifier: us.mappings.item.pacScreenCarouselView
                          - executeFunction:
                              name: us.functions.item.postAddToCartSteps                          
                          - break: true
                        else:  
                          - verifyIdentifier:
                              notPresent:
                                - identifier: us.mappings.item.PACScreen   
                          - click:
                              identifier: us.mappings.cart.itemDecrementButton   
                          - sleep:
                              duration: 3000
                          - click:
                              wait: 3000
                              identifier: us.mappings.item.closeButton 
                  else:
                    - click:
                        identifier: us.mappings.item.closeButton                                             
      - if:
          condition: ${pacScreen} != 'available'
          then:
            - failTest:
                message: "FAILURE - ${env} - PAC screen is not  present for the given items"

  - name: us.functions.item.pureWeightItemList
    platform: android
    flow:
      - storeIn:
          key: atcbutton
          value: false    
      - loop:
          each: ${weightedItem}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items
              - sleep: 
                  duration: 5000  
              - executeFunction:
                  name: us.functions.search.clickOnFirstItem
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.mainAddToCartButtonText
                  then:
                    - log: 'Add to cart button is present'
                    - executeFunction:
                        name: us.functions.item.addItemToCart
                    - sleep: 
                        duration: 5000     
                    - storeIn:
                        key: atcbutton
                        value: true                            
                    - break: true
                  else:  
                    - verifyIdentifier:
                        notPresent:
                          - identifier: us.mappings.item.mainAddToCartButtonText                
                    - click:
                        wait: 3000
                        identifier: us.mappings.item.closeButton                                                                      
                                                         
  - name: us.functions.item.giftItemList
    platform: ios
    flow:
      - storeIn:
          key: atcbutton
          value: false    
      - loop:
          each: ${giftItem}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.global.navigation.goToDeepLink
                  params:
                    - name: deepLinkUrl
                      string: walmart://item/$items
              - sleep: 
                  duration: 5000                
              - executeFunction:
                  name: us.functions.item.gift.verifyGiftItem                  
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.mainAddToCartButtonText
                  then:
                    - log: 'Add to cart button is present'
                    - executeFunction:
                        name: us.functions.item.addItemToCart
                    - storeIn:
                        key: atcbutton
                        value: true                            
                    - break: true
                  else:  
                    - verifyIdentifier:
                        notPresent:
                          - identifier: us.mappings.item.mainAddToCartButtonText                
                    - click:
                        wait: 3000
                        identifier: us.mappings.item.closeButton       

  - name: us.functions.item.giftItemList
    platform: android
    flow:
      - storeIn:
          key: atcbutton
          value: false    
      - loop:
          each: ${giftItem}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.global.navigation.goToDeepLink
                  params:
                    - name: deepLinkUrl
                      string: walmart://item/$items
              - sleep: 
                  duration: 5000                
              - executeFunction:
                  name: us.functions.item.gift.verifyGiftItem                 
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.mainAddToCartButtonText
                  then:
                    - log: 'Add to cart button is present'
                    - executeFunction:
                        name: us.functions.item.addItemToCart
                    - storeIn:
                        key: atcbutton
                        value: true                            
                    - break: true
                  else:  
                    - verifyIdentifier:
                        notPresent:
                          - identifier: us.mappings.item.mainAddToCartButtonText                
                    - click:
                        wait: 3000
                        identifier: us.mappings.item.closeButton
      - if:
          condition: ${atcbutton} != true
          then:
            - failTest:
                message: "DATA_FAILURE - ${env} - No Gift Eligible items are present"  


  - name: us.function.item.verifyRefurbishedItemPage
    platform: android
    flow: 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.productNameTileGeneric
          text:
           - identifier: us.mappings.item.productNameTileGeneric
             contains: Restored
           - identifier: us.mappings.item.productNameTileGeneric
             contains: Refurbished          
      - sleep: 
          duration: 5000            
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifyRestoredLink
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifyRestoredLink         
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.itemPage.addToListOption
            - name: direction
              string: down
            - name: scrollPosition
              string: center    
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.wplus.itempage.freeshippinglabel
      #     then:

      #       - click:
      #           identifier: us.mappings.wplus.itempage.freeshippinglabel    
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.item.verifyFreeReturns            
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.productDetails
            - name: direction
              string: down
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.item.productDescriptionViewCollapsed
          then: 
            - click:
                identifier: us.mappings.item.productDescriptionViewCollapsed
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.moreDetailsLink
            - name: direction
              string: down
      - click:
          identifier: us.mappings.item.moreDetailsLink 
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifyProductCondition
            - name: direction
              string: down                              
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.item.verifyProductCondition
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.moreDetailsLink.FeaturesText
            - name: direction
              string: down
      - verifyIdentifier:
          notPresent: 
               - identifier: us.mappings.item.moreDetailsLink.verifyWarrantySection
      - sleep: 
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.backButton
          then:
            - click:
                identifier: us.mappings.item.backButton
          else:
            - click:
                identifier: us.mappings.global.closeButton

  - name: us.functions.item.validatePACScreenAndMultipleCarousels
    platform: android
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
          params:
            - name: skipPostAddToCartSteps
              string: true        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.PACScreen
            - identifier: us.mappings.item.pacScreenCarouselView
      - executeFunction:
          name: us.functions.item.postAddToCartSteps
                            
  - name: us.function.item.verifyRefurbishedItemPage
    platform: ios
    flow: 
      - sleep: 
          duration: 3000      
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.productNameTileGeneric
          label:
           - identifier: us.mappings.item.productNameTileGeneric
             contains: Restored
           - identifier: us.mappings.item.productNameTileGeneric
             contains: Refurbished           
      - sleep: 
          duration: 5000            
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.item.verifyRestoredLink
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifyFreeReturns
            - name: direction
              string: down
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.item.verifyFreeReturns            
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.moreDetailsLink
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: limit
              string: 10

      - click:
          identifier: us.mappings.item.moreDetailsLink 
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.moreDetailsLink.SpecificationsText
            - name: direction
              string: down                              
      - verifyIdentifier:
          notPresent: 
               - identifier: us.mappings.item.moreDetailsLink.verifyWarrantySection
      - sleep: 
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mapping.item.addWalmartProtectionPlan.closeButton 
          then: 
            - click:
                identifier: us.mapping.item.addWalmartProtectionPlan.closeButton 
          else:
            - click:
                identifier: us.mappings.item.cancelsubs.Back
                 
  - name: us.functions.item.validatePACScreenAndMultipleCarousels
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
          params:
            - name: skipPostAddToCartSteps
              string: true         
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.PACScreen
            - identifier: us.mappings.item.pacScreenCarouselView
      - executeFunction:
          name: us.functions.item.postAddToCartSteps

  - name: us.functions.item.verifyReward.mustBuy
    platform: ios
    flow:
        - if: 
            identifier:
              present: 
                - identifier: us.mappings.search.rewardsAddedItem.mustBuy
            then:  
              - getString:
                  identifier: us.mappings.search.rewardsAddedItem.mustBuy
                  extractNumbers: true
                  attribute: value
                  storeIn: MustBuyQuantity
              - log: Must buy quantity is ${MustBuyQuantity}
              - arithmetic:
                  expression: ${MustBuyQuantity} - 1
                  storeIn: maxQuantity
              - log: ${maxQuantity} to be incremented

  - name:  us.functions.itemPage.validatePickupSelected     
    platform: android
    flow: 
        - verifyIdentifier:
            present:
              - identifier: us.mappings.search.pdp.productPrice
        - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.item.itemPagePickupIntent
              - name: direction
                string: down        
        - verifyIdentifier:
            present:
              - identifier: us.mappings.item.itemPagePickupIntent 

  - name:  us.functions.itemPage.validatePickupSelected     
    platform: ios
    flow: 
        - verifyIdentifier:
            present:
              - identifier: us.mappings.search.pdp.productPrice       
        - verifyIdentifier:
            present:
              - identifier: us.mappings.item.switching.fulfillment.pickupText
              
  - name: us.functions.item.verifyReward.mustBuy
    platform: android
    flow:
        - if: 
            identifier:
              present: 
                - identifier: us.mappings.search.rewardsAddedItem.mustBuy
            then:  
              - getString:
                  identifier: us.mappings.search.rewardsAddedItem.mustBuy
                  extractNumbers: true
                  attribute: text
                  storeIn: MustBuyQuantity
              - log: Must buy quantity is ${MustBuyQuantity}
              - arithmetic:
                  expression: ${MustBuyQuantity} - 1
                  storeIn: maxQuantity
              - log: ${maxQuantity} to be incremented

  - name: us.functions.item.addToCart
    platform: ios  
    flow:
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - executeFunction:
          name: us.functions.item.handlePAC
      - executeFunction:
          name: us.functions.item.closeItemPage

  - name: us.function.item.verifyBcbsFlag
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.skyBenefitCardLabel
            - name: direction
              string: down
            - name: scrollPosition
              string: center  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.skyBenefitCardLabel

  - name: us.functions.item.verifySubscriptionIsDisabled
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.oneTimeSubscribe
      - getString:
          identifier: us.mappings.item.subscribeRadiobutton
          attribute: enabled
          storeIn: state
      - if:
          condition: ${state} == false
          then:
            - log: "The subscription option is disabled as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Subscription option should be disabled but is not "

  - name: us.functions.item.verifySubscriptionIsDisabled
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.oneTimeSubscribe
      - getString:
          identifier: us.mappings.item.subscribeRadiobutton
          attribute: enabled
          storeIn: state
      - if:
          condition: ${state} == false
          then:
            - log: "The subscription option is disabled as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Subscription option should be disabled but is not "


  - name: us.functions.item.verifyOneTimePurchaseIsDefaulted
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.oneTimeSubscribe
      - getString:
          identifier: us.mappings.item.oneTimeSubscribe
          attribute: value
          storeIn: value
      - if:
          condition: ${value} == 1
          then:
            - log: "One time purchase option is defaulted as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - One time purchase should be defaulted but is not"

  - name: us.functions.item.verifyOneTimePurchaseIsDefaulted
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.oneTimeSubscribe
      - getString:
          identifier: us.mappings.item.oneTimeSubscribe
          attribute: selected
          storeIn: status
      - if:
          condition: ${status} == false
          then:
            - log: "One time purchase option is defaulted as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - One time purchase should be defaulted but is not"

  - name: us.functions.item.verifyAddToCartButtonPresent
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.addToCartButton
          then:
            - log: "Add to cart button displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Add to cart button should be displayed but is not"

  - name: us.functions.item.verifyAddToCartButtonPresent
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.addToCartButton
          then:
            - log: "Add to cart button displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Add to cart button should be displayed but is not"

  - name: us.functions.item.verifyBXTText
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.reOrder.your.essentials.noOfTimesBoughtTag
          then:
            - log: "BXT box is displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - BXT box should be displayed but is not"

  - name: us.functions.item.verifyBXTText
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.reOrder.your.essentials.noOfTimesBoughtTag
          then:
            - log: "BXT box is displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - BXT box should be displayed but is not"

  - name: us.functions.item.verifySubscriptionIneligibilityText
    platform: ios
    flow:
      - getString:
          identifier: us.mappings.item.subscriptionIneligibilityText
          attribute: label
          storeIn: label
      - if:
          condition: ${label} == "(This item can't be shipped to this address)"
          then:
            - log: "Delivery ineligibility text displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Delivery ineligibility text should have been displayed but is not"

  - name: us.functions.item.verifySubscriptionIneligibilityText
    platform: android
    flow:
      - getString:
          identifier: us.mappings.item.subscriptionIneligibilityText
          attribute: text
          storeIn: label
      - if:
          condition: ${label} == "(This item can't be shipped to this address)"
          then:
            - log: "Delivery ineligibility text displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Delivery ineligibility text should have been displayed but is not"

  
  - name: us.functions.item.validateRewardsDisabledForFewVariant
    platform: android
    flow:
      - scroll:
          untilIdentifier: us.mappings.itemPage.variantItemOption1
          direction: down
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.rewardsCheckBoxDisabled
          then:
            - log: "Rewards are not clippable as expected"
          else:
            - failTest:
                message: "DATA_FAILURE - The rewards should not be clippable for this variant of item but it is"
      - click:
          identifier: us.mappings.itemPage.variantItemOption2
          wait: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.clippableReward
          then:
            - log: "Rewards are present"
          else:
            - scroll:
                untilIdentifier: us.mappings.itemPage.clippableReward
                direction: up
                position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.rewardsCheckBoxEnabled
          then:
            - log: "Rewards are clippable as expected"
          else:
            - failTest:
                message: "DATA_FAILURE - The rewards should be clippable for this variant of item but is not"


  - name: us.functions.item.validateRewardsDisabledForFewVariant
    platform: ios
    flow:
      - scroll:
          untilIdentifier: us.mappings.itemPage.variantItemOption1
          direction: down
          position: center
      - click:
          identifier: us.mappings.itemPage.variantItemOption1
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.rewardsCheckBoxDisabled
          then:
            - log: "Rewards are not clippable as expected"
          else:
            - failTest:
                message: "DATA_FAILURE - The rewards should not be clippable for this variant of item but it is"
      - click:
          identifier: us.mappings.itemPage.variantItemOption2
          wait: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.clippableReward
          then:
            - log: "Rewards are present"
          else:
            - scroll:
                untilIdentifier: us.mappings.itemPage.clippableReward
                direction: up
                position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.itemPage.rewardsCheckBoxEnabled
          then:
            - log: "Rewards are clippable as expected"
          else:
            - failTest:
                message: "DATA_FAILURE - The rewards should be clippable for this variant of item but is not"

  - name: us.functions.wplus.item.verifyClippingComponentOnPAC
    platform: android
    flow:
      # Clip the walmart cash and add to cart
      - executeFunction:
          name: us.functions.item.verifyAddToRewardCheckboxandClipRewardFromItemPage
      - click:
          identifier: us.mappings.item.addToCartButton
          wait: 3000
      - executeFunction:
          name: us.functions.wplus.verifyClippingComponent
      - log: Clipping component has been verified on PAC carousel
      - executeFunction:
          name: us.function.item.navigateToCartFromPAC

  - name: us.functions.wplus.cashCenter.checkForRewardsItem.goToRewardsItemPage
    platform: android
    flow:
      - scroll:
          untilIdentifier: us.mappings.search.rewardsCheckBox
          direction: down
          position: center
      - click:
          identifier: us.mappings.search.rewardsCheckBox   

  - name: us.function.item.navigateToCartFromPAC
    platform: android
    flow:
      # Click View cart button on PAC page
      - click:
          identifier: us.mappings.item.viewCartBtnOnPAC
          wait: 2000

  - name: us.functions.wplus.item.verifyClippingComponentOnPAC
    platform: ios
    flow:
      # Clip the walmart cash and add to cart
      - executeFunction:
          name: us.functions.item.verifyAddToRewardCheckboxandClipRewardFromItemPage
      - click:
          identifier: us.mappings.item.addToCartButton
          wait: 3000
      - verifyIdentifier:
          timeout: 120000
          present:
            - identifier: us.mappings.search.rewardsClippingComponent
      - log: Clipping component has been verified on PAC carousel
      - executeFunction:
          name: us.functions.item.postAddToCartSteps

  - name: us.function.item.navigateToCartFromPAC
    platform: ios
    flow:
      # Click View cart button on PAC page
      - click:
          identifier: us.mappings.item.viewCartBtnOnPAC
          wait: 2000

  - name: us.functions.item.validateOnePayEligibleItem
    platform: ios
    flow:
      - executeFunction: #Joel Added
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifyAsLowAsText
            - name: direction
              string: down
            - name: scrollPosition
              string: center       
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifyAsLowAsText
            - identifier: us.mappings.item.verifyOneText
            - identifier: us.mappings.search.verifyLearnHow
      - sleep:
          duration: 3000
      - click:        
          identifier: us.mappings.search.verifyLearnHow
      - sleep:
          duration: 8000
      - verifyIdentifier:  #Temp turn off
          present:
            - identifier: us.mappings.item.verifyPayOverTimeWithOneTitle
      - click:        
          identifier: us.mappings.flex.doneButton
          wait: 5000

  - name: us.functions.item.validateOnePayEligibleItem #us.functions.item.onePayEligibleItem
    platform: android
    flow:
      - executeFunction: #Joel Added
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifyLearnHow #us.mappings.item.verifyAsLowAsText
            - name: direction
              string: down
            - name: scrollPosition
              string: center      
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifyAsLowAsText
            - identifier: us.mappings.item.verifyOneText
            - identifier: us.mappings.item.verifyLearnHow
      - click:
          identifier: us.mappings.item.verifyLearnHow
      - sleep:
          duration: 5000
      - verifyIdentifier: #Temp turn off
          present:
            - identifier: us.mappings.item.payOverTimeWithOneTitle
      - click:
          identifier: us.mappings.wplus.membership.faqAndTermConditionsCloseButton
          wait: 5000

  - name: us.functions.item.onePayIneligibleItem
    platform: android
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.item.verifyAsLowAsText
            - identifier: us.mappings.item.verifyOneText
      - sleep:
          duration: 3000

  - name: us.functions.item.visionItem.verifyItemPage
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.productNameTileGeneric
            - name: direction
              string: up
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.item.prescriptionAvailable 
      #       - name: direction
      #         string: down                       
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.item.prescriptionAvailable   
      - log: Verifying Vision item page               
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifySeeHow
            - name: direction
              string: down   
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySeeHow
            - identifier: us.mappings.item.verifyMakeTheseFramesYourOwn
            - identifier: us.mappings.item.verifyCustomizeFrameDetails
      - scroll:
         direction: down
         untilIdentifier: us.mappings.item.verifyCustomizeFrameDetails     
      - click:
          identifier: us.mappings.item.verifySeeHow
      - log: Verifying customize these frames content bottom sheet    
      - verifyIdentifier:
          timeout: 70000
          present:
            - identifier: us.mappings.item.arrivesWithinBusinessDays
            - identifier: us.mappings.item.selectYourFrameAndLenses
            - identifier: us.mappings.item.walmart+BottomTrayCloseButton
            - identifier: us.mappings.item.framesSheetGotIt  
      - click:
          identifier: us.mappings.item.framesSheetGotIt
      - if:
          condition: ${SecondSunGlasses} == true     
          then:                                        
          - executeFunction:
              name: us.functions.utils.scrollIfNotVisible
              params:
                - name: identifier
                  string: us.mappings.item.thirtyFivePercentPromo
                - name: direction
                  string: down   
                - name: scrollPosition
                  string: center     
          - verifyIdentifier:
              present:
                - identifier: us.mappings.item.thirtyFivePercentPromo
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.twentyPercentPromo
                then:
                  - executeFunction:
                      name: us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.item.twentyPercentPromo
                        - name: direction
                          string: down   
                        - name: scrollPosition
                          string: center     
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.item.twentyPercentPromo  
                  - click:
                      identifier: us.mappings.visionItem.PercentPromoT&CLink
                      wait: 2000
                  - log: Verifying percent promo bottom sheet                
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.visionItem.PercentPromoBottomsheetTitle
                        - identifier: us.mappings.visionItem.PercentPromoBottomsheetGotIt
                        # - identifier: us.mappings.visionItem.PercentPromoBottomsheetBackBtn
                        - identifier: us.mappings.item.walmart+BottomTrayCloseButton                   
                  - click:
                      identifier: us.mappings.visionItem.PercentPromoBottomsheetGotIt    
                else:
                  - log: 20% Promo is not visible 

  - name: us.functions.item.visionItem.verifySelectLenses
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.verifySelectLensesCTA
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectLensesCTA
      - click:
          identifier: us.mappings.item.verifySelectLensesCTA
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectYourLensesTitle
            - identifier: us.mappings.item.verifySingleVisionLense
            - identifier: us.mappings.item.verifyWhat'sYourPrescriptionType
      - click:
          identifier: us.mappings.item.verifySingleVisionLense
      - click:
          identifier: us.mappings.item.continue
      - sleep:
          duration: 2000  

      - if:
          condition: ${itemType} == 'Eyeglasses'       
          then:
            - log: Selecting Lense   
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.verifyWhatTypesOfLesesYouNeed   
                  - identifier: us.mappings.item.verifyClearOption       
                  - identifier: us.mappings.item.verifySunGlassesOption
                # - identifier: us.mappings.item.verifyLightReactiveOption
                  - identifier: us.mappings.item.selectLensBackButton                
                  - identifier: us.mappings.item.continue
                  - identifier: us.mappings.item.selectLensCloseButton            
            - if:
                condition: ${lensetype} == 'Lense A'
                then:
                  - log: Selecting 'Clear' option
                  - click: 
                     identifier: us.mappings.item.verifyClearOption
            - if:
                condition: ${lensetype} == 'Lense B'
                then:
                  - log: Selecting 'Sunglasses' option
                  - click:
                     identifier: us.mappings.item.verifySunGlassesOption                
            - if:
                condition: ${lensetype} == 'Lense C'
                then:
                  - log: Selecting 'Light Reactive' option
                  - click:
                     identifier: us.mappings.item.verifyLightReactiveOption                       
            - click: 
               wait: 5000
               identifier: us.mappings.item.continue
      - if:
          condition: ${itemType} == 'Sunglasses'       
          then:
            - log: Skipping lenseType selection for sunglasses
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.item.verifySunGlassesOption
                then:
                  - click:
                      identifier: us.mappings.item.verifySunGlassesOption
                  - click:
                      identifier: us.mappings.item.continue
      - sleep:
          duration: 2000           
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.lenseMaterial
            - identifier: us.mappings.item.standard
            # - identifier: us.mappings.item.polyCarbonate
            # - identifier: us.mappings.item.hiIndex
      - if:
          condition: ${LenseMaterial} == 'PolyCarbonate'
          then:
            - log: Selecting 'PolyCarbonate' option
            - click:          
                identifier: us.mappings.item.polyCarbonate
      - if:
          condition: ${LenseMaterial} == 'Standard'
          then:
            - log: Selecting 'Standard' option
            - click:          
                identifier: us.mappings.item.standard               
      - if:
          condition: ${LenseMaterial} == 'HiIndex'
          then:
            - log: Selecting 'HiIndex' option
            - click:          
                identifier: us.mappings.item.hiIndex 
      - click:
          identifier: us.mappings.item.continue
      - sleep:
          duration: 2000           
      - if:
          condition: ${LenseColor} == 'Copper'
          then:
            - log: Selecting 'Copper' color
            - click:          
                identifier: us.mappings.item.color.copper
      - if:
          condition: ${LenseColor} == 'grey'
          then:
            - log: Selecting 'Grey' color
            - click:          
                identifier: us.mappings.item.color.grey
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.color.title
          then:
            - click:
                wait: 5000
                identifier: us.mappings.item.continue 
      - if: 
          condition: ${option} == 'StandardPolycarbonate'
          then: 
            - log: Selecting  "standard polycarbonate"
            - click:          
                identifier: us.mappings.item.standardPolycarbonate.title
            - click:
                identifier: us.mappings.item.continue
      - if: 
          condition: ${option} == 'PremiumPolycarbonate'
          then: 
            - log: Selecting  "premium polycarbonate"
            - click:          
                identifier: us.mappings.item.premiumPolycarbonate.title
            - click:
                identifier: us.mappings.item.continue
      - sleep:
          duration: 2000            
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.anythingToAdd
            - identifier: us.mappings.item.noAddOn
            # - identifier: us.mappings.item.antiReflective
            # - identifier: us.mappings.item.withBlueLightFilter
      - if:
          condition: ${add-ons} == 'No add-ons'
          then:
            - log: Selecting 'No add-ons'
            - click:          
                identifier: us.mappings.item.noAddOn
      - if:
          condition: ${add-ons} == 'Backside anti-reflective'
          then:
            - log: Selecting 'Backside anti-reflective'
            - click:          
                identifier: us.mappings.item.antiReflective
      - if:
          condition: ${add-ons} == 'BlueLightFilter'
          then:
            - log: Selecting 'BlueLightFilter '
            - click:          
                identifier: us.mappings.item.withBlueLightFilter                

      - click:
          identifier: us.mappings.item.continue
      - sleep:
          duration: 2000           
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.reviewYourSelection
            - identifier: us.mappings.item.verifyFramesText
            - identifier: us.mappings.item.verifyLensesText
            - identifier: us.mappings.item.verifySubTotalTitle
            # - identifier: us.mappings.item.verifyAddPrescriptionCTA
            # - identifier: us.mappings.item.review.addToCartButton
      
  - name: us.functions.item.visionItem.AddPrescription
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.verifyAddPrescriptionCTA
          position: center      
      - click:
          identifier: us.mappings.item.verifyAddPrescriptionCTA

      - if:
          condition: ${name} == 'PatientA'
          then:
            - log: Selecting 'PatientA - Native Vision'
            - if:
                identifier:
                  present:
                    - identifier:  us.mappings.visionItem.prescriptionDefaultName   
                then:
                  - click:          
                      identifier: us.mappings.visionItem.prescriptionDefaultName    
                  - click:
                      identifier: us.mappings.item.privacyPolicy
                  - click:
                      identifier: us.mappings.item.continue
                  - enterText:
                      identifier: us.mappings.visionItem.addPatient.dob
                      string: ${dob}
                      pressEnter: true  
                  - hideKeyboard: true
                  - click:
                      identifier: us.mappings.item.privacyPolicy                 
                  - click:
                      identifier: us.mappings.item.continue
                else:
                  - enterText:
                      identifier: us.mappings.visionItem.addPatient.firstName
                      string: VisionA              
                  - enterText:
                      identifier: us.mappings.visionItem.addPatient.lastName
                      string: Vision
                  - hideKeyboard: true  
                  - enterText:
                      identifier: us.mappings.visionItem.addPatient.dob
                      string: ${dob}   
                      pressEnter: true  
                  - hideKeyboard: true  
                  - click:
                      identifier: us.mappings.item.privacyPolicy                 
                  - click:
                      identifier: us.mappings.item.continue

      - if:
          condition: ${name} == 'PatientB'
          then:
            - log: Selecting 'PatientB - Vision Test'
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.visionItem.addPrescription.addPatient
                then:
                  - click:          
                      identifier: us.mappings.visionItem.addPrescription.addPatient
            - enterText:
                identifier: us.mappings.visionItem.addPatient.firstName
                string: Vision              
            - enterText:
                identifier: us.mappings.visionItem.addPatient.lastName
                string: Visionio
            - enterText:
                identifier: us.mappings.visionItem.addPatient.dob
                string: ${dob}   
                pressEnter: true  
            - hideKeyboard: true  
            - click:
                identifier: us.mappings.item.privacyPolicy                 
            - click:
                identifier: us.mappings.item.continue                                    

      - click:
          identifier: us.mappings.visionItem.addPrescriptionLink
      - executeFunction:
         name: us.functions.item.addVisionPDImage     

      - if: 
          identifier:
            present: 
              - identifier: us.mappings.item.verifyAddPrescriptionCTA     
          then:
            - log: Failed to add prescription image, retrying...
            - click:
                identifier: us.mappings.item.verifyAddPrescriptionCTA   
            - sleep:
               duration: 4000
            - click:          
                identifier: us.mappings.visionItem.prescriptionDefaultName    
            - click:
                identifier: us.mappings.item.privacyPolicy
            - click:
                identifier: us.mappings.item.continue
            - enterText:
                identifier: us.mappings.visionItem.addPatient.dob
                string: ${dob}
                pressEnter: true  
            - hideKeyboard: true                   
            - click:
                identifier: us.mappings.item.continue
            - click:
                identifier: us.mappings.visionItem.addPrescriptionLink
            - executeFunction:
                name: us.functions.item.addVisionPDImage                               

      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.addAPrescription.replaceImage 
      - log: Successfully added prescription image              
      - click:
          identifier: us.mappings.item.continue
      - click:
          identifier: us.mappings.visionItem.termsAndConditionChechBox          
      - click:
          identifier: us.mappings.visionItem.manuallyEnterPDLink
      - if:
          identifier:
            present:
              - identifier: us.mappings.visionItem.PDDropdown
          then:
            - click:
                identifier: us.mappings.visionItem.PDDropdown
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.visionItem.PDDropdownOptions
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
                  - name: scrollLimit
                    string: 10
            - click:
                identifier: us.mappings.visionItem.PDDropdownOptions
          else:
            - sleep:
                duration: 2000
            - enterText:
                identifier: us.mappings.visionItem.prescriptionPD
                string: ${PD}
                clickFirst: true
                pressEnter: true
            - hideKeyboard: true                                                   
      - click:
          identifier: us.mappings.item.continue
      - sleep:
         duration: 3000  
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.onboarding.technicalErrorDismissButton
          then:
            - click:
                identifier: us.mappings.visionItem.prescriptionPDText 
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.verifyWeHaveYourMeashurementsHeader
          then:
            - click:
                identifier: us.mappings.item.continue
      # - sleep:
      #    duration: 3000                  
      # - click:    
      #     identifier: us.mappings.visionItem.prescriptionPDText            
      # - click:
      #     identifier: us.mappings.item.continue                              
      # - sleep:
      #    duration: 4000     
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.item.continue
      #     then:
      #       - click:
      #           identifier: us.mappings.item.continue               
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.item.verifyWeHaveYourMeashurementsHeader

  - name: us.functions.item.autoShip.itemSubscription.ATC
    platform: android
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.link
          then:
            - log: "The item subscription overlay is not Visible, Scrolling Down!!!"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.petrx.autoship.subscription.howItWorks.link
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.petrx.autoship.subscriptionOverlay
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.subscriptionRadioButton
            - identifier: us.mappings.item.petrx.autoship.subscriptionInfoText
            - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.link
      - click:
          identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.link
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.howItWorks.title
            - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.itemTitle1
            - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.itemTitle2
            - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.itemTitle3
            - identifier: us.mappings.item.petrx.autoship.subscription.howItWorks.termsLink
      - click:
          identifier: us.mappings.search.pdp.close
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.subscriptionRadioButton
      - click:
          identifier: us.mappings.item.petrx.autoship.subscriptionRadioButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subscribe.subscribeButton
      - click:
          identifier: us.mappings.subscribe.subscribeButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.setupSubscriptionTitle
            - identifier: us.mappings.item.petrx.autoship.subscription.itemName
            - identifier: us.mappings.item.petrx.autoship.subscription.itemImage
            - identifier: us.mappings.item.petrx.autoship.subscription.count
            - identifier: us.mappings.search.SBA.setup.subscription.DecrementStepper
            - identifier: us.mappings.search.SBA.setup.subscription.IncrementStepper
            - identifier: us.mappings.item.petrx.autoship.subscription.freqIcon
            - identifier: us.mappings.item.petrx.autoship.subscription.freqHeader
            - identifier: us.mappings.item.petrx.autoship.subscription.freqSubHeader
      - click:
          identifier: us.mappings.item.addSubscriptionToCart
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.subscriptionOverlay
            - identifier: us.mappings.search.SBA.DecrementStepper
            - identifier: us.mappings.search.SBA.IncrementStepper
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.pdp.close
          then:
            - log: "The PDP close button exists and clicking on it !!!"
            - click:
                identifier: us.mappings.search.pdp.close
          else:
            - log: "The PDP close button does not exists !!!"

  - name: us.functions.item.autoShip.subscription.placeOrder
    platform: android
    flow:
      - verifyIdentifier:
            present:
              - identifier: us.mappings.item.petrx.autoship.autoDelivery.onReviewOrderPage
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reviewOrder.addPetVetButton
            - name: direction
              string: down   
            - name: scrollPosition
              string: center
      - verifyIdentifier:
            present:
              - identifier: us.mappings.reviewOrder.addPetVetButton
      - click:
          identifier: us.mappings.reviewOrder.addPetVetButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.subscription.editPetVetInfo.title                          
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.petrx.autoship.subscription.selectPetDropdown
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.petrx.autoship.subscription.selectPetDropdown
      - click:
          identifier: us.mappings.item.petrx.autoship.subscription.selectPetDropdown
      - click:
          identifier: us.mappings.item.petrx.autoship.subscription.firstPetName                    
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.petrx.autoship.subscription.selectVetDropdown
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.petrx.autoship.subscription.selectVetDropdown
      - click:
          identifier: us.mappings.item.petrx.autoship.subscription.selectVetDropdown
      - click:
          identifier: us.mappings.item.petrx.autoship.subscription.selectVetName
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.petrx.autoship.subscription.second.selectPetDropdown
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.petrx.autoship.subscription.second.selectPetDropdown
            - click:
                identifier: us.mappings.item.petrx.autoship.subscription.second.selectPetDropdown
            - click:
                identifier: us.mappings.item.petrx.autoship.subscription.secondPetName
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.item.petrx.autoship.subscription.second.selectVetDropdown
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.item.petrx.autoship.subscription.second.selectVetDropdown
            - click:
                identifier: us.mappings.item.petrx.autoship.subscription.second.selectVetDropdown
            - click:
                identifier: us.mappings.item.petrx.autoship.subscription.selectVetName
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.reviewOrder.SaveButton
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.petrx.autoship.addPetVet.successMessage
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.petrx.autoship.addPetVet.successMessage                             
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.petrx.autoship.addPetVet.successMessage 
      - if:
          condition: ${signatureRequired} == true
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reviewOrder.petrx.autoship.subscription.agreeAndSignCta
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reviewOrder.petrx.autoship.subscription.agreeAndSignCta
            - click:
                identifier: us.mappings.reviewOrder.petrx.autoship.subscription.agreeAndSignCta
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signatureRequiredTitle
                  - identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signatureImage
                  - identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signaturecheckbox
            - click:
                identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signaturecheckbox
            - click:
                identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signatureRequired.agreeAndSignCta
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reviewOrder.petrx.autoship.subscription.signatureImage
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.item.petrx.autoship.subscription.termsText 
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.item.petrx.autoship.subscription.termsText 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.petrx.autoship.subscription.termsText
                  - identifier: us.mappings.item.petrx.autoship.subscription.termsTitle        
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.item.petrx.autoship.subscription.termsCheckBox
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.item.petrx.autoship.subscription.termsCheckBox
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.petrx.autoship.subscription.termsCheckBox
            - click:
                identifier: us.mappings.item.petrx.autoship.subscription.termsCheckBox
      - scroll:
          direction: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.confirmCvv.cvvTitle
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.reviewOrder.confirmCvv.cvvPutField
            - click:
                identifier: us.mappings.reviewOrder.confirmCvv.cvvPutField
            - enterText:    
                identifier: us.mappings.reviewOrder.confirmCvv.cvvPutField
                string: 111
                pressEnter: true
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reviewOrder.clickPlaceOrder
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reviewOrder.clickPlaceOrder
            - click:
                identifier: us.mappings.reviewOrder.clickPlaceOrder
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reviewOrder.clickPlaceOrder
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reviewOrder.clickPlaceOrder
            - click:
                identifier: us.mappings.reviewOrder.clickPlaceOrder           
      - sleep:
          duration: 30000
      - if:
          identifier:
            present:
              - identifier: us.mappings.typage.yourorderisconfirmed
          then:
            - click:
                identifier: us.mappings.typage.yourorderisconfirmedCloseButton

  - name: us.functions.searchpage.verifyBadgeSLA
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.searchpage.deliveryBadgeSLA
          position: center

  - name: us.functions.searchpage.verifyBadgeSLA
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.searchpage.deliveryBadgeSLA
          position: center

  # Verify free delivery with w+ and delivery SLA on item page 
  - name: us.functions.item.verifyFreeDeliveryWithWalmartPlus
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.wplus.itempage.freeDeliveryWithWalmartPlus
          position: center
      
      - click: 
         identifier: us.mappings.wplus.itempage.freeDeliveryWithWalmartPlus
   
      - if:
          condition: ${item} == 'sharedItem'
          then:
             - verifyIdentifier:
                  present:
                    - identifier: us.mappings.itemPage.deliveryBadgeSLA
                    # - identifier: us.mappings.itemPage.deliveryTag
      - if:
          condition: ${item} == 'frozenItem'
          then:
             - verifyIdentifier:
                  present:
                    - identifier: us.mappings.itemPage.frozenItemBadgeSLA

  - name: us.functions.item.increaseToMaxQty
    platform: ios
    flow: 
      - verifyIdentifier: 
          present:
            - identifier: us.mappings.item.Quantityincrement
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.item.Quantityincrement
            - log: $i          

  - name: us.functions.item.verifyToastMessageMOQ
    platform: ios
    flow: 
      - if:
          condition: ${type} == 'explicit pickup'
          then: 
            - executeFunction:
                name: us.functions.cart.verifyMultiOrderQtyBottomSheet
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.item.toastMessage
      - log: checking whether shipping fulfillment is selected
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.switching.fulfillment.shippingText
            - name: direction
              string: down   
            - name: scrollPosition
              string: center 
      # - scroll:
      #     direction: down
      #     untilIdentifier: us.mappings.item.switching.fulfillment.shippingText
      #     position: center
      - verifyIdentifier:
          value:
            - identifier: us.mappings.item.switching.fulfillment.shippingText
              equals: 1
      - log: Shipping fulfillment is selected
  
  - name: us.functions.item.SelectOtherILCintentForMOQ
    platform: ios
    flow:
      - if:
          condition: ${type} == 'implicit delivery'
          then:
            - click:
                identifier: us.mappings.item.switching.fulfillment.deliverystoreText
            - log: Delivery is selected and item is reduced 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.ItemUpdateMessage
            - log: Item quantity is updated
            - sleep:
                duration: 5000
            - click: 
                identifier: us.mappings.item.ItemUpdateMessageCloseCTA       
      - sleep:
          duration: 5000 
      - if:
          condition: ${type} == 'Explicit pickup'
          then:
            - click:
                identifier: us.mappings.item.switching.fulfillment.pickupText
            - log: Pickup is selected and item is reduced 
      - sleep:
          duration: 5000     

  - name: us.functions.item.increaseAndVerifyMOQ
    platform: ios
    flow: 
      - click: 
          identifier: us.mappings.item.IncrementItemQuantity
      - executeFunction:
          name: us.functions.cart.verifyMultiOrderQtyBottomSheet
      - click: 
          identifier: us.mappings.item.decreaseItemQuantity              
                    
  - name: us.functions.item.autoShip.itemSubscription.notAvailableForRestrictedState
    platform: android
    flow:
      - loop:
          begin: 1
          end: 6
          mode: increment
          flow:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.item.petrx.autoship.subscriptionInfoText
            - scroll:
                direction: down
                scrollLimit: 1

  - name: us.functions.item.autoShip.itemSubscription.notAvailableForRestrictedState
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 6
          mode: increment
          flow:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.item.petrx.autoship.subscriptionInfoText
            - scroll:
                direction: down
                scrollLimit: 1
      
  # Verify free delivery with w+ and delivery SLA on item page 
  - name: us.functions.item.verifyFreeDeliveryWithWalmartPlus
    platform: android
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.wplus.itempage.freeDeliveryWithWalmartPlus
          position: center
      - click: 
          identifier: us.mappings.wplus.itempage.freeDeliveryWithWalmartPlus

      - if:
          condition: ${item} == 'sharedItem'
          then:
             - verifyIdentifier:
                  present:
                    - identifier: us.mappings.itemPage.deliveryBadgeSLA
                    # - identifier: us.mappings.itemPage.deliveryTag
      - if:
          condition: ${item} == 'frozenItem'
          then:
             - verifyIdentifier:
                  present:
                    - identifier: us.mappings.itemPage.frozenItemBadgeSLA

  - name: us.functions.item.increaseToMaxQty
    platform: android
    flow: 
      - verifyIdentifier: 
          present:
            - identifier: us.mappings.amend.item.quanity.incrementButton
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.amend.item.quanity.incrementButton
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.search.wantMoreItemText 
                then:
                  - break: true
            - log: $i  

  - name: us.functions.item.SelectOtherILCintentForMOQ
    platform: android
    flow:
      - if:
          condition: ${type} == 'implicit delivery'
          then:
            - click:
                identifier: us.mappings.item.switching.fulfillment.deliverystoreText
            - log: Delivery is selected and item is reduced 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.ItemUpdateMessage
            - log: Item quantity is updated
            - click: 
                identifier: us.mappings.item.ItemUpdateMessageCloseCTA       
      - sleep:
          duration: 5000 
      - if:
          condition: ${type} == 'Explicit pickup'
          then:
            - click:
                identifier: us.mappings.item.switching.fulfillment.pickupText
            - log: Pickup is selected and item is reduced 
      - sleep:
          duration: 5000

  - name: us.functions.item.verifyToastMessageMOQ
    platform: android
    flow: 
      - if:
          condition: ${type} == 'explicit pickup'
          then: 
            - executeFunction:
                name: us.functions.cart.verifyMultiOrderQtyBottomSheet
      - log: checking whether shipping fulfillment is selected
      - sleep:
          duration: 5000    
      - verifyIdentifier:
          contentDescription:
            - identifier: us.mappings.item.IlcShippingTile
              contains: selected         
      - log: Shipping fulfillment is selected                   
                    
  - name: us.functions.item.addToCartBasics
    platform: ios  
    flow:
      - executeFunction:
          name: us.functions.item.validateAndClickAddToCartButton
      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://home

  - name: us.functions.item.visionItem.verifySearchPage
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.badging.shipping      
            - identifier: us.mappings.search.prescriptionAvailable.icon
            - identifier: us.mappings.search.prescriptionAvailable.text
            - identifier: us.mappings.search.item.optionsBtn
      - log: Verified delivery fulfillment and PD icon & text on vision item search page   
      - click:
          identifier: us.mappings.search.item.optionsBtn
      - log: Navigating to vision item page           
      - sleep:
          duration: 3000          

  - name: us.functions.item.addVisionPDImage
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.visionItem.verifyYourPrescriptionInfo
          then:
            - click:
                identifier: us.mappings.item.continue
      - verifyIdentifier:
          present:
            - identifier: us.mappings.visionItem.chooseExistingCTA           
      # - click:
      #     identifier: us.mappings.visionItem.chooseExistingCTA
      # - if: 
      #     identifier:
      #       present: 
      #         - identifier: us.mappings.item.addPrescription.accessPhotos.continue
      #     then:
      #       - click:
      #           identifier: us.mappings.item.addPrescription.accessPhotos.continue  
      - click:
          identifier: us.mappings.visionItem.takePhotoCTA
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.item.addPrescription.photos.allowAccess 
          then:
            - click:
                identifier: us.mappings.item.addPrescription.photos.allowAccess
      - click:
         identifier: us.mappings.visionItem.shutterButton
         wait: 5000
      - click:
          identifier: us.mappings.visionItem.shutterDoneButton
          wait: 2000
      # - click:
      #     identifier: us.mappings.visionItem.selectImagesFolder   
      # - sleep:
      #    duration: 10000                      
      # - click:
      #     identifier: us.mappings.visionItem.selectImage
      # - sleep:
      #    duration: 40000       

  - name: us.functions.item.sunglasses.nonprescriptionFlow
    platform: android
    flow:
      - scroll:
          untilIdentifier: us.mappings.visionItem.nonPrescriptionRadioBtn
          direction: down
          position: center
      - log: Selecting non-prescription radio button
      - click:
          identifier: us.mappings.visionItem.nonPrescriptionRadioBtn   
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifySeeHow
            - name: direction
              string: down   
            - name: scrollPosition
              string: center 
      - click:
          identifier: us.mappings.item.verifySeeHow
      - log: Verifying customize these frames content bottom sheet    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.arrivesWithinBusinessDays
            - identifier: us.mappings.item.selectYourFrameAndLenses
            - identifier: us.mappings.item.walmart+BottomTrayCloseButton
            - identifier: us.mappings.item.framesSheetGotIt  
      - click:
          identifier: us.mappings.item.framesSheetGotIt
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.IlcShippingTile
            - name: direction
              string: down   
            - name: scrollPosition
              string: center   
      - click:
          identifier: us.mappings.item.IlcShippingTile                     
      - scroll:
          untilIdentifier: us.mappings.item.free90daysReturn
          direction: down
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.free90daysReturn
          then:
            - log: "Return policy is displayed"
          else:
            - log: "Return policy is not displayed"                   
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.item.verifyFSAandHSA 
      #     then:
      #       - log: FSA and HSA is not displayed as the item is non-prescription item 
      #     else:  
      #       - failTest:
      #            message: "DATA_FAILURE - ${env} - FSA and HSA is displayed for non-prescription item "
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.addToCartButton 
      - log: Customize lenses flow is not displayed as the item is non-prescription item     
                              
  - name: us.functions.item.sunglasses.prescriptionFlow
    platform: android
    flow:
      - scroll:
          untilIdentifier: us.mappings.visionItem.prescriptionRadioBtn
          direction: down
          position: center
      - log: Selecting prescription radio button
      - click:
          identifier: us.mappings.visionItem.prescriptionRadioBtn  
      - click:
          identifier: us.mappings.item.IlcShippingTile  
      - scroll:
          untilIdentifier: us.mappings.item.free90daysReturn
          direction: down
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.free90daysReturn
          then:
            - log: "Return policy is displayed"
          else:
            - log: "Return policy is not displayed"                                             
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectLensesCTA 
      - log: Customize lenses flow is displayed                      

  - name: us.functions.item.sunglasses.nonprescriptionFlow
    platform: ios
    flow:
      - scroll:
          untilIdentifier: us.mappings.visionItem.nonPrescriptionRadioBtn
          direction: down
          position: center
      - log: Selecting non-prescription radio button
      - click:
          identifier: us.mappings.visionItem.nonPrescriptionRadioBtn  
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.verifySeeHow
            - name: direction
              string: down   
            - name: scrollPosition
              string: center 
      - click:
          identifier: us.mappings.item.verifySeeHow
      - log: Verifying customize these frames content bottom sheet    
      - verifyIdentifier:
          timeout: 70000
          present:
            - identifier: us.mappings.item.arrivesWithinBusinessDays
            - identifier: us.mappings.item.selectYourFrameAndLenses
            - identifier: us.mappings.item.lensCustomizationBottomTrayCloseButton
            - identifier: us.mappings.item.framesSheetGotIt  
      - click:
          identifier: us.mappings.item.framesSheetGotIt                
      - scroll:
          untilIdentifier: us.mappings.item.free90daysReturns
          direction: down
          position: center
          scrollLimit: 5
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.free90daysReturns
          then:
            - log: "Return policy is displayed"
          else:
            - log: "Return policy is not displayed"                 
      # - if:
      #     identifier:
      #       notPresent:
      #         - identifier: us.mappings.item.verifyFSAandHSA 
      #     then:
      #       - log: FSA and HSA is not displayed as the item is non-prescription item 
      #     else:  
      #       - failTest:
      #            message: "DATA_FAILURE - ${env} - FSA and HSA is displayed for non-prescription item "
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.addToCartButton 
      - log: Customize lenses flow is not displayed as the item is non-prescription item     
                              
  - name: us.functions.item.sunglasses.prescriptionFlow
    platform: ios
    flow:
      - scroll:
          untilIdentifier: us.mappings.visionItem.prescriptionRadioBtn
          direction: down
          position: center
      - log: Selecting prescription radio button
      - click:
          identifier: us.mappings.visionItem.prescriptionRadioBtn  

          # already validated in previous function
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.item.free90daysReturns
      #       - name: direction
      #         string: down   
      #       - name: scrollPosition
      #         string: center              
      # - if:
      #     identifier:
      #       present:
      #         - identifier: us.mappings.item.free90daysReturns
      #     then:
      #       - log: "Return policy is displayed"
      #     else:
      #       - log: "Return policy is not displayed"                                 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectLensesCTA 
      - log: Customize lenses flow is displayed                            

  - name: us.functions.item.visionItem.selectLenses.verifyNavigations
    platform: android
    flow:
      - storeIn:
          key: executionStage
          value: Transactions               
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.verifySelectLensesCTA
          position: center                        
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectLensesCTA
      - click: 
          identifier: us.mappings.item.verifySelectLensesCTA
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectYourLensesTitle   
            - identifier: us.mappings.item.verifySingleVisionLense                
            - identifier: us.mappings.item.continue
            - identifier: us.mappings.item.selectLensCloseButton             
      - click: 
          identifier: us.mappings.item.verifySingleVisionLense
      - click: 
          identifier: us.mappings.item.continue
      - log: Successfully navigated to next screen by selecting 'Continue' 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifyWhatTypesOfLesesYouNeed     
            - identifier: us.mappings.item.selectLensBackButton
            - identifier: us.mappings.item.iTooltip
      - log: Lens demo i tooltip is displayed           
      - click: 
          identifier: us.mappings.item.iTooltip
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.lenseDemoTitle    
            - identifier: us.mappings.item.lenseDemoGotIt 
            - identifier: us.mappings.item.lenseDemoCloseBtn
      - log: Lens demo bottom sheet is displayed             
      - click: 
          identifier: us.mappings.item.lenseDemoGotIt 
      - log: '< is displayed'
      - click: 
          identifier: us.mappings.item.selectLensBackButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectYourLensesTitle 
      - log: Successfully navigated to previous screen by selecting '<'
      - click: 
          identifier: us.mappings.item.selectLensCloseButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.verifySelectLensesCTA 
      - log: Successfully navigated to item page by selecting 'X'

#Verify Change Button available for Store and Click Change Store button on Item Page
  - name : us.functions.item.changeStore
    platform: ios
    flow:
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.pause.clickOnChangeButton
              - name: direction
                string: down
              - name: scrollPosition
                string: center 
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillmentContainerView
          then:  
              - storeIn:
                  key: fulfillmentContainerView
                  value: true
              - log: Fullfilments are in container
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.pause.clickOnChangeButton   
              - click:    
                  identifier: us.mappings.pause.clickOnChangeButton
              - executeFunction:
                    name: us.functions.utils.scrollIfNotVisible
                    params:
                      - name: identifier
                        string: us.mappings.home.selectNeighborhoodMarketRadioButton
                      - name: direction
                        string: down
                      - name: scrollPosition
                        string: center
              - click: 
                  identifier: us.mappings.home.selectNeighborhoodMarketRadioButton
              - click: 
                  identifier: us.mappings.gic.selectStore.save.button # us.mappings.home.selectStoreSaveButton
                  wait: 3000
              - log: Selected the Neighborhood Market Store

# Select Out of Stock Store and Select back again In Stock store
  - name : us.functions.item.verifyOutOfStockStoreAndSelectInStock
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.outOfStockForPickupInStore.txt
            - name: direction
              string: up
            - name: scrollPosition
              string: center      
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.outOfStockForPickupInStore.txt
            - identifier: us.mappings.item.checkAvailableForPickUpNearBy.btn
      - click:
          identifier: us.mappings.item.checkAvailableForPickUpNearBy.btn  
      - verifyIdentifier:
         timeout: 50000
         present: 
              - identifier: us.mappings.item.selectAvailableStore.radioBtn
      - click: 
          identifier: us.mappings.item.selectAvailableStore.radioBtn
      - click: 
          identifier: us.mappings.gic.selectStore.save.button #us.mappings.home.selectStoreSaveButton
          wait: 3000       
      - log: Selected the Store which items are in stock

  #Verify Change Button available for Store and Click Change Store button on Item Page
  - name : us.functions.item.changeStore
    platform: android
    flow:
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.marketplace.sellerTitle.parent
              - name: direction
                string: down
      - click:
          identifier: us.mappings.item.selectPickup.fulfillment
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillmentContainerView
          then:  
              - storeIn:
                  key: fulfillmentContainerView
                  value: true
              - log: Fullfilments are in container
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.item.changeStore.btn  
              - click:    
                  identifier: us.mappings.item.changeStore.btn
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.tipping.custom.numpad.doneButton
                  then:
                    - click:
                        identifier: us.mappings.tipping.custom.numpad.doneButton
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.home.selectNeighborhoodMarketRadioButton
                    - name: direction
                      string: down
              - click: 
                  identifier: us.mappings.home.selectNeighborhoodMarketRadioButton
                  coordinates: 50%, 50%
              - click: 
                  identifier: us.mappings.gic.selectStore.save.button
                  coordinates: 50%, 50%
                  wait: 1000
              - log: Selected the Neighborhood Market Store
              - executeFunction:
                  name: us.functions.utils.handleTechnicalErrorPopup

# Select Out of Stock Store and Select back again In Stock store
  - name : us.functions.item.verifyOutOfStockStoreAndSelectInStock
    platform: android
    flow:
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.item.fulfillmentContainerView
              - name: direction
                string: down
              - name: scrollPosition
                string: center
      - click:
          identifier: us.mappings.item.pickupNotAvailable
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.outOfStockForPickupInStore.txt
            - identifier: us.mappings.item.checkAvailableForPickUpNearBy.btn
      - click:
          identifier: us.mappings.item.checkAvailableForPickUpNearBy.btn  
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: us.mappings.item.selectAvailableStore.radioBtn
      - click:
          identifier: us.mappings.item.selectAvailableStore.radioBtn
          coordinates: 50%, 50%
      - if:
          identifier:
            present:
              - identifier: us.mappings.tipping.custom.numpad.doneButton
          then:
            - click:
                identifier: us.mappings.tipping.custom.numpad.doneButton          
      - click: 
          identifier: us.mappings.gic.selectStore.save.button
          coordinates: 50%, 50%
          wait: 3000
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup             
      - log: Selected the Store which items are in stock
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.fulfillmentContainerView
          scrollLimit: 3


 # Verify Pickup from nearby Store text available and select pick up fulfillment
  - name : us.functions.item.pickup.nearby.store
    platform: ios
    flow:
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.item.deliveryTo.txt
              - name: direction
                string: down
              - name: scrollPosition
                string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliveryTo.txt
      - if: 
                condition: ${selectfulfillment} == 'pickup'
                then:
                  - click:
                      identifier: us.mappings.item.switching.fulfillment.pickupText

  # Verify Pickup from nearby Store text available and select pick up fulfillment
  - name : us.functions.item.pickup.nearby.store
    platform: android
    flow:
      - executeFunction:
            name: us.functions.utils.scrollIfNotVisible
            params:
              - name: identifier
                string: us.mappings.item.deliveryTo.txt
              - name: direction
                string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliveryTo.txt
      - if: 
                condition: ${selectfulfillment} == 'pickup'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.item.selectPickup.fulfillment
                  - click:
                      identifier: us.mappings.item.selectPickup.fulfillment
                      wait: 3000

  # In PAC screen Scroll left and right p13N ads and select add to cart
  - name: us.functions.item.validatePACScreenAndSelectItemFromPACToATC
    platform: android
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
          params:
            - name: skipPostAddToCartSteps
              string: true
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.carePlans.declineButton
          then:
            - click:
                identifier: us.mappings.carePlans.declineButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.pacScreenCarouselView
          then:
            - log : Scroll carousel view
            - scroll:
                direction: left
                scrollLimit: 2
                withinIdentifier: us.mappings.home.p13nCarouselView
                position: center
            - scroll:
                direction: right
                scrollLimit: 2
                withinIdentifier: us.mappings.home.p13nCarouselView
                position: center
          else:
            - log : Scroll stop carousel view
            - break: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.carousel.options.btn
          then:
            - log : Carousel view clicking on item
            - click:
                identifier: us.mappings.item.carousel.options.btn
          else:
            - log : No carousel view present
            - break: true
#If Product grid view is present
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.pacproductgridview
          then:
            - log : inside product view
            - click:
                identifier: us.mappings.item.pacproductgridview_item1
          else:
            - log : Breaking product view
            - break: true
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.ad.SponsoredAd.ATCbutton
          then:
            - click:
                identifier: us.mappings.item.ad.SponsoredAd.ATCbutton
          else:
            - log : Breaking Ads View
            - break: true
            - executeFunction:
                name: us.functions.item.addItemToCart
                params:
                  - name: skipPostAddToCartSteps
                    string: true
            - if:
                identifier:
                  timeout: 5000
                  present:
                    - identifier: us.mappings.carePlans.declineButton
                then:
                  - click:
                      identifier: us.mappings.carePlans.declineButton
                else:
                  - log : Breaking Ads View
                  - break: true
     #View cart on PAC if present
      - if:
          identifier:
            present:
                   - identifier: us.mappings.item.viewCartBtnOnPAC
          then:
            - click:
                identifier: us.mappings.item.viewCartBtnOnPAC
          else:
            - log : cart Btn on pac not available navigating to cart
            - verifyIdentifier:
                   present:
                     - identifier: us.mappings.item.closeButton
            - click:
                  identifier: us.mappings.item.closeButton
            - executeFunction:
                      name: us.functions.global.navigation.toCartFromNavBar


# In Cart page Scroll left and right p13N ads and select add to cart
  - name: us.functions.item.validatep13NadsOnCartPageAndSelectItem
    platform: android
    flow:
      - executeFunction:
          name: us.functions.cart.scrollToTopOfCart
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.p13nCarouselTitleCartPage
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - scroll:
          direction: left
          scrollLimit: 2                            
          withinIdentifier: us.mappings.home.p13nCarouselView
          position: center
      - scroll:
          direction: right
          scrollLimit: 2                            
          withinIdentifier: us.mappings.home.p13nCarouselView
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.ad.SponsoredAd.ATCbutton
          then:
            - click:
                identifier: us.mappings.item.ad.SponsoredAd.ATCbutton
          else:
            - click:
                identifier: us.mappings.item.carousel.options.btn
            - executeFunction:
                name: us.functions.item.addItemToCart
                params:
                  - name: skipPostAddToCartSteps
                    string: true
            - if:
                identifier:
                  timeout: 5000
                  present:
                    - identifier: us.mappings.carePlans.declineButton
                then:
                  - click:
                      identifier: us.mappings.carePlans.declineButton       
      - executeFunction:
          name: us.functions.item.postAddToCartSteps

# In PAC screen Scroll left and right p13N ads and select add to cart
  - name: us.functions.item.validatePACScreenAndSelectItemFromPACToATC
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.item.addItemToCart
          params:
            - name: skipPostAddToCartSteps
              string: true
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.carePlans.declineButton
          then:
            - click:
                identifier: us.mappings.carePlans.declineButton
      - verifyIdentifier:
          timeout: 60000
          present:
            - identifier: us.mappings.item.PACScreen
            - identifier: us.mappings.item.pacScreenCarouselView
      - scroll:
          direction: left
          scrollLimit: 2                            
          withinIdentifier: us.mappings.item.p13nCarouselViewScroll
          position: center
      - scroll:
          direction: right
          scrollLimit: 2                            
          withinIdentifier: us.mappings.item.p13nCarouselViewScroll
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.p13n_CarouselView_ATC
          then:
            - click:
                identifier: us.mappings.item.p13n_CarouselView_ATC
          else:
            - click:
                identifier: us.mappings.item.carousel.options.btn
            - executeFunction:
                name: us.functions.item.addItemToCart
                params:
                  - name: skipPostAddToCartSteps
                    string: true
            - if:
                identifier:
                  timeout: 5000
                  present:
                    - identifier: us.mappings.carePlans.declineButton
                then:
                  - click:
                      identifier: us.mappings.carePlans.declineButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.postAddToCartButton
          then:
            - click:
                identifier: us.mappings.cart.postAddToCartButton
            - verifyIdentifier:
                timeout: 5000
                notPresent:
                  - identifier: us.mappings.cart.postAddToCartButton
          else:
            - verifyIdentifier:
                timeout: 80000
                present:
                  - identifier: us.mappings.cart.postViewCartButton
            - click:
                identifier: us.mappings.cart.postViewCartButton
            - verifyIdentifier:
                timeout: 5000
                notPresent:
                  - identifier: us.mappings.cart.postViewCartButton
  
  # In Cart page Scroll left and right p13N ads and select add to cart
  - name: us.functions.item.validatep13NadsOnCartPageAndSelectItem
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.p13nCarouselTitleCartPage
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.p13n_CarouselView_ATC
          then:
            - click:
                identifier: us.mappings.item.p13n_CarouselView_ATC
          else:
            - click:
                identifier: us.mappings.item.carousel.options.btn
            - executeFunction:
                name: us.functions.item.addItemToCart
                params:
                  - name: skipPostAddToCartSteps
                    string: true
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.carePlans.declineButton
            - click:
                identifier: us.mappings.carePlans.declineButton          
            - executeFunction:
                name: us.functions.item.postAddToCartSteps
# Set up subscription from item page
  - name: us.function.item.setUpsubscription
    platform: ios
    flow:
     - click:
        identifier: us.mappings.item.subscribeOption    
     - verifyIdentifier:
         present:
           - identifier: us.mappings.item.setupSubscription
     - click:
        identifier: us.mappings.item.setupSubscription
     - click:
        identifier: us.mappings.item.setupSubscription.agreeCheckbox
        
    # # Adding validation for FTC legal requorements initiative - will enable when the code is in teflon
    #  - verifyIdentifier:
    #     present:
    #       - identifier: us.mappings.item.setupSubscription.greyAlertMessage
    #       - identifier: us.mappings.item.setupsubscription.verifyIAgreeButton
     - click:
        identifier: us.mappings.subs.addSubscriptionToCartButton
     - click:
        identifier: us.mappings.item.setupSubscription.addSubcriptionToDelivery  
     - click:
        identifier: us.mappings.subscribe.gotItButton       
     - click:
        identifier: us.mappings.item.closeItemDetailsPage
        
# Verify the EDC New Delivery Icon
  - name: us.functions.item.verifyNewDeliveryIcon
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.newEDCDeliveryIcon
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.newEDCDeliveryIcon

# Verify the EDC New Delivery Icon
  - name: us.functions.item.verifyNewDeliveryIcon
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.newEDCDeliveryIcon
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.newEDCDeliveryIcon
            
# Select one time purchase option
  - name: us.functions.item.selectOnetimePurchase
    platform: ios
    flow:
        - scroll:
            direction: down
            # untilIdentifier: us.mappings.item.onetimePurchaseOption
        - if:
            identifier:
              present:
                - identifier: us.mappings.item.onetimePurchaseOption
            then:
              - click:
                  identifier: us.mappings.item.onetimePurchaseOption
              - log: "one time purchase option is present"
            else:
              - log: "one time purchase option is NOT present"

# Select one time purchase option
  - name: us.functions.item.selectOnetimePurchase
    platform: android
    flow:
        - scroll:
            direction: down
            # untilIdentifier: us.mappings.item.onetimePurchaseOption
        - if:
            identifier:
              present:
                - identifier: us.mappings.item.onetimePurchaseOption
            then:
              - click:
                  identifier: us.mappings.item.onetimePurchaseOption
              - log: "one time purchase option is present"
            else:
              - log: "one time purchase option is NOT present"

  # Add Drone Delivery eligible item from Drone landing page
  - name: us.functions.item.droneLandingPage.addDroneReadyItems
    platform: android
    flow:
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.item.droneLandingPage.addressBottomSheet
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.droneImage
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.droneTitle
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.eligibleAddress
                  - identifier: us.mappings.item.droneLanding.addressBottomSheet.startShopping
            - click:
                identifier: us.mappings.item.droneLanding.addressBottomSheet.startShopping
      - if:
          identifier:
            timeout: 5000
            present:
              - identifier: us.mappings.item.droneLandingPage.banner
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.droneLandingPage.header 
                  - identifier: us.mappings.item.droneLandingPage.description
                  - identifier: us.mappings.item.droneLandingPage.resultsHeader
                  - identifier: us.mappings.item.droneLandingPage.resultsPriceDisclaimer
                  - identifier: us.mappings.item.droneLandingPage.disclaimerIcon
                  - identifier: us.mappings.item.droneLandingPage.itemList
            - log:
                message: Drone Landing Page loaded successfully!
                color: GREEN_BOLD
            - try:
                flow:
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: us.mappings.item.droneLandingPage.addItemButton
                  - click:
                      identifier: us.mappings.item.droneLandingPage.addItemButton
                  - verifyIdentifier:
                      timeout: 5000
                      present:
                        - identifier: us.mappings.item.droneLandingPage.itemQuantityStepper.present
                  - log:
                      message: Added first drone item to the cart successfully!
                      color: GREEN_BOLD
                catch:
                  flow:
                    - failTest:
                        message: "Add Drone item button is not clickable."    
          else:
            - log:
                message: Drone Landing Page failed to load.
                color: RED

  # Major Appliance Day 0 Automation
  - name: us.functions.item.majorAppliance.itemPage
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.deliverydateavailablemessage
            - name: direction
              string: down
            - name: scrollPosition
              string: center    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliverydateavailablemessage
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.deliveryAndSetupOptionsModule
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.sellerAndRxoInfo
            - identifier: us.mappings.item.deliveryAndSetupOptionsModule

  # Major Appliance Day 0 Automation
  - name: us.functions.item.majorAppliance.itemPage
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.deliveryAndSetupOptionsModule
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliverydateavailablemessage
            - identifier: us.mappings.item.sellerAndRxoInfo
            - identifier: us.mappings.item.deliveryAndSetupOptionsModule

  - name: us.functions.item.majorAppliance.deliveryoptions
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliveryOptions
            - identifier: us.mappings.item.AddedToCartMessage
            - identifier: us.mappings.item.deliveryOptionsItemContinueButton
            - identifier: us.mappings.item.RXOacknolwdegementMessage
      - if:
          condition: ${DeliveryAndInstallation} == true
          then:
              - click:
                  identifier: us.mappings.item.deliveryAndInsatllationRadioButton

      - if:
          condition: ${RoomOfChoice} == true
          then:
              - click:
                  identifier: us.mappings.item.RoomOfChoiceRadioButton

      - if:
          condition: ${DoorStepDelivery} == true
          then:
              - click:
                  identifier: us.mappings.item.DoorStepDeliveryRadioButton

      - if:
          condition: ${HaulAway} == true
          then:
              - click:
                  identifier: us.mappings.item.HaulAwayCheckBox

      - click:
          identifier: us.mappings.item.deliveryOptionsItemContinueButton

  - name: us.functions.item.majorAppliance.deliveryoptions
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.deliveryOptions
            - identifier: us.mappings.item.AddedToCartMessage
            - identifier: us.mappings.item.deliveryOptionsItemContinueButton
            - identifier: us.mappings.item.RXOacknolwdegementMessage
      - if:
          condition: ${DeliveryAndInstallation} == true
          then:
              - click:
                  identifier: us.mappings.item.deliveryAndInsatllationRadioButton

      - if:
          condition: ${RoomOfChoice} == true
          then:
              - click:
                  identifier: us.mappings.item.RoomOfChoiceRadioButton

      - if:
          condition: ${DoorStepDelivery} == true
          then:
              - click:
                  identifier: us.mappings.item.DoorStepDeliveryRadioButton

      - if:
          condition: ${HaulAway} == true
          then:
              - click:
                  identifier: us.mappings.item.HaulAwayCheckBox

      - click:
          identifier: us.mappings.item.deliveryOptionsItemContinueButton

  # Validate item page for GEP flow
  - name: us.functions.item.validateItemPageDetial
    platform: android
    flow: 
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.gepflow01.shippingAndImportFee
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.gepflow01.shippingAndImportFee

      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.gepFlow01.shipToAddressPresent   
      # - click:
      #     identifier: us.mappings.global.closeButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.gepflow01.shippingAndImportFee
          then:
          - click:      
              identifier: us.mappings.item.gepflow01.shippingAndImportFee
          - verifyIdentifier:
             present:
               - identifier: us.mappings.item.gepFlow01.shipImportFeeScreen
          - click:
              identifier: us.mappings.cart.storePopUPCloseButton

# Local Market place Day 0 Automation

  - name: us.functions.item.localMarketPlace.itemPageValidations
    platform: android
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.localmarketPlace.fulfillmentContainer
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if: 
          condition: ${fulfillment} == 'Delivery'
          then:
            - click:
                identifier: us.mappings.item.localmarketPlace.delivery
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.deliveryTilewithSLA
                  - identifier: us.mappings.item.localmarketPlace.fulfilledByWalmart
                  - identifier: us.mappings.item.localmarketPlace.deliveryCharges
                  - identifier: us.mappings.item.localmarketPlace.addressSelector
                  - identifier: us.mappings.item.localmarketPlace.w+signUpModule
            - click:
                identifier: us.mappings.item.localmarketPlace.addressSelector
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.address
            - click:
                identifier: us.mappings.item.localmarketPlace.addressClose
      - if: 
          condition: ${fulfillment} == 'Pickup'
          then:
            - click:
                identifier: us.mappings.item.localmarketPlace.pickup     
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.pickupTilewithSLA
                  - identifier: us.mappings.item.localmarketPlace.pickupAtStore
                  - identifier: us.mappings.item.localmarketPlace.pickupAddress
                  - identifier: us.mappings.item.localmarketPlace.pickupStoreChangeButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.localmarketPlace.soldLocallyBy
            - identifier: us.mappings.item.localmarketPlace.returnPolicy
      # - click:
      #     identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerCTA
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerInfo
      # - click:
      #     identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerinfoClose

  - name: us.functions.item.localMarketPlace.itemPageValidations
    platform: ios
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.localmarketPlace.fulfillmentContainer
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if: 
          condition: ${fulfillment} == 'Delivery'
          then:
            - click:
                identifier: us.mappings.item.localmarketPlace.delivery
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.deliveryTilewithSLA
                  - identifier: us.mappings.item.localmarketPlace.fulfilledByWalmart
                  - identifier: us.mappings.item.localmarketPlace.deliveryCharges
                  - identifier: us.mappings.item.localmarketPlace.addressSelector
                  # - identifier: us.mappings.item.localmarketPlace.w+signUpModule
            - click:
                identifier: us.mappings.item.localmarketPlace.addressSelector
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.address
            - click:
                identifier: us.mappings.item.localmarketPlace.addressClose
      - if: 
          condition: ${fulfillment} == 'Pickup'
          then:
            - click:
                identifier: us.mappings.item.localmarketPlace.pickup     
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.localmarketPlace.pickupTilewithSLA
                  - identifier: us.mappings.item.localmarketPlace.pickupAtStore
                  - identifier: us.mappings.item.localmarketPlace.pickupAddress
                  # - identifier: us.mappings.item.localmarketPlace.pickupStoreChangeButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.localmarketPlace.soldLocallyBy
            - identifier: us.mappings.item.localmarketPlace.returnPolicy
      # - click:
      #     identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerCTA
      # - verifyIdentifier:
      #     present:
      #       - identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerInfo
      # - click:
      #     identifier: us.mappings.item.localmarketPlace.soldLocallyBy.sellerinfoClose
  
  - name: us.functions.item.validateItemPageDetial
    platform: ios
    flow: 
      - scroll:
          direction: down
          untilIdentifier: us.mappings.item.gepflow01.shippingAndImportFee
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.gepflow01.shippingAndImportFee

      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.gepFlow01.shipToAddressPresent
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.gepflow01.shippingAndImportFee
          then:
          - click:      
              identifier: us.mappings.item.gepflow01.shippingAndImportFee
          - verifyIdentifier:
             present:
               - identifier: us.mappings.item.gepFlow01.shipImportFeeScreen
          - verifyIdentifier:
              present:
                - identifier: us.mappings.item.gepFlow01.verifyShipToColoumbiaText
          - verifyIdentifier:
              present:
                - identifier: us.mappings.item.gepFlow01.verfiyShupAndImportFee
          - click:
              identifier: us.mapping.item.postItemAddToCartViewOverlay.closeButton


  - name: us.functions.item.verifyAddToCartAndBuyNowButtonIsNotPresent
    platform: android
    flow:
      - if:
          identifier:
           notPresent:
              - identifier: us.mappings.item.addToCartButton
              - identifier: us.mappings.buyNow.buyNowButton
          then:
            - log: "Both ATC and BuyNow options are not visible"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.verifyAddToCartAndBuyNowButtonIsNotPresent
    platform: ios
    flow:
      - if:
          identifier:
           notPresent:
              - identifier: us.mappings.item.addToCartButton
              - identifier: mx.mappings.ea.pdp.buyNowButton
          then:
            - log: "Both ATC and BuyNow options are not visible"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.validateCustomeAmount
    platform: android
    flow:
      - if:
          identifier:
            present:
             - identifier: us.mappings.item.customeEgiftcardAmountLabel
          then:
            - click:
               identifier: us.mappings.item.customeEgiftcardAmountLabel

      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.customeEgiftcardAmountTitle
      - click:
            identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.validateCustomeAmount
    platform: ios
    flow:
      - if:
          identifier:
            present:
             - identifier: us.mappings.item.customeEgiftcardAmountLabel
          then:
            - click:
               identifier: us.mappings.item.customeEgiftcardAmountLabel

      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.customeEgiftcardAmountTitle
      - click:
            identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.verifyAddToCartAndBuyNowButtonIsNotPresent
    platform: android
    flow:
      - if:
          identifier:
           notPresent:
              - identifier: us.mappings.item.addToCartButton
              - identifier: us.mappings.buyNow.buyNowButton
          then:
            - log: "Both ATC and BuyNow options are not visible"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.continueButton

  - name: us.functions.item.clickOnComtinue
    platform: android
    flow:
       - if:
          identifier:
            present:
             - identifier: us.mappings.item.eGiftCardcontinueButton
          then:
            - click:
               identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.clickOnComtinue
    platform: ios
    flow:
       - if:
          identifier:
            present:
             - identifier: us.mappings.item.eGiftCardcontinueButton
          then:
            - click:
               identifier: us.mappings.item.eGiftCardcontinueButton

  - name: us.functions.item.verifyReceiptantDEtails
    platform: android
    flow:
       - if:
          identifier:
            present:
             - identifier: us.mappings.item.giftCardDeatilsLabel
             - identifier: us.mappings.item.receiptantEmailslabel
          then:
            - click:
               identifier: us.mappings.item.addToCartButton
              
  - name: us.functions.item.verifyReceiptantDeatilsEditableorNot
    platform: android
    flow:
    - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.eGiftCardreceiptantEditlink
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.eGiftCardreceiptantEditlink
    - click: 
        identifier: us.mappings.reviewOrder.egiftCardModalContinueBtn

  - name: us.functions.item.verifyReceiptantDeatilsEditableorNot
    platform: ios
    flow:
    - if:
          identifier:
            notPresent:
              - identifier: us.mappings.item.eGiftCardreceiptantEditlink
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.item.eGiftCardreceiptantEditlink
    - click: 
        identifier: us.mappings.reviewOrder.egiftCardModalContinueBtn

  - name: us.functions.item.verifygIFTcardDetailsInItemPage
    platform: android
    flow:
        - scroll:
            direction: down
            untilIdentifier: us.mappings.item.eGiftCardreceiptantEmail
        - if:
            identifier:
              present:
                - identifier:  us.mappings.item.eGiftCardreceiptantEmail
                - identifier:  us.mappings.item.eGiftCardQty
                - identifier:  us.mappings.item.eGiftCardPersonalisedMessage
            then:
              - click:
                  identifier: us.mappings.item.eGiftCardAddToCartBtn

  - name: us.functions.item.verifygIFTcardDetailsInItemPage
    platform: ios
    flow:
        - scroll:
            direction: down
            untilIdentifier: us.mappings.item.eGiftCardreceiptantEmail
        - if:
            identifier:
              present:
                - identifier:  us.mappings.item.eGiftCardreceiptantEmail
                - identifier:  us.mappings.item.eGiftCardQty
                - identifier:  us.mappings.item.eGiftCardPersonalisedMessage
            then:
              - click:
                  identifier: us.mappings.item.eGiftCardAddToCartBtn
             
  # function for adding email at custmize gift card for android
  - name: us.functions.item.addEmailToCustomizePopUP
    platform: android  
    flow:
      - if:
          identifier:
            present:  
              - identifier: us.mappings.digitalDelivery.cartPage.ContinueButton                 
          then:                        
            - click:
                identifier: us.mappings.digitalDelivery.cartPage.ContinueButton
            - executeFunction:
                name: us.functions.item.enterEmailToCustomizePopUP


             
  # function for adding email at custmize gift card for android
  - name: us.functions.item.enterEmailToCustomizePopUP
    platform: android  
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:  
              - identifier: us.mappings.digitalDelivery.customizeGiftPage.emailIdField                
          then:                        
            - click:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.emailIdField
            - enterText:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.emailIdField
                string: $custEmail
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.continueButtonAfterEmailEntry
            - sleep:
                duration: 2000
                
  # function for adding email at custmize gift card for android
  - name: us.functions.item.addEmailToCustomizePopUP
    platform: ios
    flow:
      - if:
          identifier:
            present:  
              - identifier: us.mappings.digitalDelivery.cartPage.ContinueButton                 
          then:                        
            - click:
                identifier: us.mappings.digitalDelivery.cartPage.ContinueButton
            - executeFunction:
                name: us.functions.item.enterEmailToCustomizePopUP


             
  # function for adding email at custmize gift card for android
  - name: us.functions.item.enterEmailToCustomizePopUP
    platform: ios
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:  
              - identifier: us.mappings.digitalDelivery.customizeGiftPage.giftPageHeading               
          then:                        
            - click:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.emailIdField
            - enterText:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.emailIdField
                string: $custEmail
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:
                      identifier: us.mappings.default.keyboardDoneButton
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.digitalDelivery.customizeGiftPage.continueButtonAfterEmailEntry
            - sleep:
                duration: 2000

  - name: us.functions.item.addCustomisationAmount
    platform: android
    flow:
        - scroll:
            direction: down
            untilIdentifier: us.mappings.item.fixedCardAmount
        - if:
            identifier:
              present:
                - identifier: us.mappings.item.customAmountTextBox
            then:
             - enterText:
                      identifier: us.mappings.item.customAmountTextBox
                      string: $customeAmount  
        - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.item.cardAmount


  - name: us.functions.item.addCustomisationAmount
    platform: ios
    flow:
        - scroll:
            direction: down
            untilIdentifier: us.mappings.item.fixedCardAmount
        - if:
            identifier:
              present:
                - identifier: us.mappings.item.customAmountTextBox
            then:
             - enterText:
                      identifier: us.mappings.item.customAmountTextBox
                      string: $customeAmount
        - verifyIdentifier:
                timeout: 0
                present:
                  - identifier: us.mappings.item.cardAmount


  - name: us.functions.item.verifyMQDDiscountLabel
    platform: android
    flow:
        - scroll:
            direction: down
            untilIdentifier: us.mappings.item.MQDL.label
            position: center
            timeout: 500000  
        - verifyIdentifier:
            present:
            - identifier: us.mappings.item.MQDL.label


      

          


