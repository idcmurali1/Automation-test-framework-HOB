inherit: 'job:///glass-mobile-app-automation/looper-base:.looper.yml'

gitShallowDepth: 10

branches:
  - spec: development
    scheduling: concurrent

    triggers:
      - push:
          manualOnly: true

      - manual:
          name: Upload iOS  B2b Development Latest
          call: upload_build_to_sauce_labs(env_ios_b2b_development_latest)

      # iOS
      - manual:
          name: Upload iOS Development Latest
          call: upload_build_to_sauce_labs(env_ios_development_latest)

      - cron:
          spec: 5 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_development_latest)

      - manual:
          name: Upload iOS Development Latest - RDC
          call: upload_build_to_sauce_labs(env_ios_development_latest_rdc)

      - cron:
          spec: 7 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_development_latest_rdc)

      - manual:
          name: Upload iOS by branch and app version
          call: update_by_app_branch_ios(APP_BRANCH = 'glass-qa-intel-nightly-sim')

      - cron:
          spec: 0 0-23 * * *
          call: update_by_app_branch_ios(APP_BRANCH = 'glass-qa-intel-nightly-sim')

      # iOS ARM
      - manual:
          name: Upload iOS Development Latest - ARM
          call: upload_build_to_sauce_labs(env_ios_arm_development_latest)

      - cron:
          spec: 5 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_arm_development_latest)

      # Android
      - manual:
          name: Upload Android Development Latest
          call: upload_build_to_sauce_labs(env_android_development_latest)

      - cron:
          spec: 5 0-23 * * *
          call: upload_build_to_sauce_labs(env_android_development_latest)

      - manual:
          name: Upload Android by branch and app version
          call: update_by_app_branch_android(APP_BRANCH = 'us-development')

      - cron:
          spec: 0 0-23 * * *
          call: update_by_app_branch_android(APP_BRANCH = 'us-development')

      - pr: disabled

  - spec: us/release-latest
    scheduling: concurrent

    triggers:
      - push:
          manualOnly: true

      # iOS
      - manual:
          name: Upload iOS Release Latest
          call: upload_build_to_sauce_labs(env_ios_release_latest)

      - cron:
          spec: 10 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_release_latest)

      - manual:
          name: Upload iOS Release Latest - RDC
          call: upload_build_to_sauce_labs(env_ios_release_latest_rdc)

      - cron:
          spec: 15 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_release_latest_rdc)

      - manual:
          name: Upload iOS by branch and app version
          call: update_by_app_branch_ios(APP_BRANCH = 'glass-release-candidate-sim')

      - cron:
          spec: 5 7,19 * * *
          call: update_by_app_branch_ios(APP_BRANCH = 'glass-release-candidate-sim')

      # iOS ARM
      - manual:
          name: Upload iOS Release Latest - ARM
          call: upload_build_to_sauce_labs(env_ios_arm_release_latest)

      - cron:
          spec: 10 0-23 * * *
          call: upload_build_to_sauce_labs(env_ios_arm_release_latest)

      # Android
      - manual:
          name: Upload Android Release Latest
          call: upload_build_to_sauce_labs(env_android_release_latest)

      - cron:
          spec: 10 0-23 * * *
          call: upload_build_to_sauce_labs(env_android_release_latest)

      - manual:
          name: Upload Android by branch and app version
          call: update_by_app_branch_android(APP_BRANCH = 'us-RC')

      - cron:
          spec: 5 7,19 * * *
          call: update_by_app_branch_android(APP_BRANCH = 'us-RC')

      - pr: disabled

envs:
  global:
    variables:
      MARKET: us
      SLACK_CHANNEL: r2-glass-test-result
      SLACK_TEST_RUN_MESSAGE: "${TEST_RUN_STATUS} *- Upload Sauce Labs Build*\n>>> *Branch*: ${TRIGGER_BRANCH}\n
        *Platform*: ${APP_PLATFORM}\n
        *App Location on Sauce Labs*: storage:filename=${SAUCE_FILE_NAME}\n
        *Build Link*: ${BUILD_URL}"
      TEST_PLAN_PASSED: ":white_check_mark: *Build Success*"
      TEST_PLAN_FAILED: ":x: *Build Failure*"

  # iOS
  env_ios:
   variables:
     APP_PLATFORM: ios
     SAUCE_FILE_NAME: glass-${APP_BRANCH}-${APP_VERSION}.zip
     FILE_TYPE: zip

  env_ios_development_latest:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: glass-development-latest.zip
      FILE_TYPE: zip
      APP_BRANCH: glass-qa-intel-nightly-x86_64-sim

  env_ios_release_latest:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: glass-release-latest.zip
      FILE_TYPE: zip
      APP_BRANCH: glass-release-candidate-x86_64-sim

  env_ios_arm_development_latest:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: ios-arm-development-latest.zip
      FILE_TYPE: zip
      APP_BRANCH: glass-qa-nightly-arm64-sim

  env_ios_arm_release_latest:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: ios-arm-release-latest.zip
      FILE_TYPE: zip
      APP_BRANCH: glass-release-candidate-arm64-sim

  env_ios_b2b_development_latest:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: glass-development-b2b-latest.zip
      FILE_TYPE: zip
      APP_BRANCH: b2b-glass-qa-nightly-arm64-sim
      B2B_APP: true

  env_ios_development_latest_rdc:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: glass-development-latest.ipa
      FILE_TYPE: ipa
      APP_BRANCH: glass-qa-nightly

  env_ios_release_latest_rdc:
    variables:
      APP_PLATFORM: ios
      SAUCE_FILE_NAME: glass-release-latest.ipa
      FILE_TYPE: ipa
      APP_BRANCH: glass-release-candidate-ipa

  # Android
  env_android:
    variables:
      APP_PLATFORM: android
      SAUCE_FILE_NAME: glass-${APP_BRANCH}-${APP_VERSION}.apk
      FILE_TYPE: apk

  env_android_development_latest:
    variables:
      APP_PLATFORM: android
      SAUCE_FILE_NAME: glass-development-latest.apk
      FILE_TYPE: apk
      APP_BRANCH: us-development

  env_android_release_latest:
    variables:
      APP_PLATFORM: android
      SAUCE_FILE_NAME: glass-release-latest.apk
      FILE_TYPE: apk
      APP_BRANCH: us-RC

flows:
  download_build:
    - shell (name Download App Build): |
        sh us/scripts/download_build_looper.sh

  download_b2b_build:
    - shell (name Download App Build): |
        sh us/us-b2b/scripts/download_build_looper.sh

  upload_build:
    - shell (name Upload Build to Sauce Labs): |
        sh us/scripts/upload_build_looper.sh

  upload_build_to_sauce_labs:
    - node(label = linux, isolation = except_project, ws = exclusive):
        try:
          # - declare(APP_BRANCH)
          - declare(APP_VERSION)
          # - call: get_app_branch
          - if: $APP_VERSION
            then:
              - shell (Using manually specified APP_VERSION):
                  echo $APP_VERSION
            else:
              - call: get_app_version
          - (name Environment dump) printenv|sort
          - if: $B2B_APP
            then:
              - call: download_b2b_build
            else:
              - call: download_build
          - call: upload_build
          - var(TEST_RUN_STATUS = $TEST_RUN_PASSED)
          - call: post_slack_test_run
        catch:
          - var(TEST_RUN_STATUS = $TEST_RUN_FAILED)
          - call: post_slack_test_run
          - shell: exit 1

  update_by_app_branch_ios:
    call: upload_build_to_sauce_labs(env_ios)

  update_by_app_branch_android:
    call: upload_build_to_sauce_labs(env_android)

parameters:
  - APP_VERSION: {type: string, defaultValue: "", label: "Optional: Upload specific app version"}

