functions:
  - name: us.functions.functional.utils.placeOrder.enablePaymentByPass
    platform: ios
    flow:
      #Enable dummy payment through debug panel
      - executeFunction:
          name: unified.us.functions.functional.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://debugPanel
      - executeFunction:
          name: us.functions.functional.utils.debugPanel.enablePaymentByPass

  - name: us.functions.functional.utils.debugPanel.enablePaymentByPass
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.functional.debugPanel.ThankYouPageSettings
      - sleep:
          duration: 1000
      - click:
          identifier: us.mappings.functional.debugPanel.ThankYouPageSettings
      - sleep:
          duration: 1000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.functional.debugPanel.placeOrderPaymentByPassToggle

      - click:
          identifier: us.mappings.functional.debugPanel.placeOrderPaymentByPassToggle

      - click:
          identifier: us.mappings.functional.debugPanel.back

      - click:
          identifier: us.mappings.functional.debugPanel.back

      - sleep:
          duration: 1000

  - name: us.functions.functional.utils.validateElementValue
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
              - verifyIdentifier:
                  value:
                    - identifier: ${identifierToVerify}
                      contains: ${identifierValueToVerify}
          else:
            - if:
                condition: ${toVerifyContent} == "true"
                then:
                   - verifyIdentifier:
                      contentDescription:
                        - identifier: ${identifierToVerify}
                          contains: ${identifierValueToVerify}
                else:
                  - verifyIdentifier:
                      text:
                        - identifier: ${identifierToVerify}
                          contains: ${identifierValueToVerify}

  - name: us.functions.functional.util.clickKeyboardDone
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:
                      identifier: us.mappings.default.keyboardDoneButton

  - name: us.functions.functional.utils.addItemToCart
    platform: ios
    flow:
        # Search for the item
        - executeFunction:
            name: us.functions.search.searchItem
            params:
              - name: searchTerm
                string: ${searchTerm}

        - click:
            identifier: us.mappings.search.firstItem
            wait: 5000

        # Add item to cart
        - verifyIdentifier:
            present:
              - identifier: us.mappings.functional.item.addToCartButton
        - click:
            identifier: us.mappings.functional.item.addToCartButton
            wait: 5000
        
        # Deal with PAC Bottomsheet Popup
        - executeFunction:
            name: us.functions.functional.utils.closePAC

        # Increment stepper until desired number of items
        - loop:
            begin: 1
            end: ${expectedItemCount}
            flow:
              - click:
                  identifier: us.mappings.orderDetails.addItem
                  wait: 3000

        # Close item details
        - if:
            identifier:
              present:
                - identifier: us.mappings.item.productDetails
            then:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.closeButton
                  then:
                    - click:
                        identifier: us.mappings.item.closeButton

        # Verify cart icon has correct count
        - verifyIdentifier:
            label:
              - identifier: us.mappings.navBar.cartIconWithCount
                contains: Your cart contains ${expectedItemCount}

  - name: us.functions.functional.utils.closePAC
    platform: ios
    flow:
        - loop:
            begin: 0
            end: 3
            flow:
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.functional.postAddToCart.header
                    then:
                      - click:
                          identifier: us.mappings.functional.postAddToCart.close
                      - break: true
                    else:
                      - sleep:
                          duration: 3000

  - name: us.functions.functional.utils.optOutTextMessage
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.functional.checkout.reviewOrder.OptinCheckboxTextboxChecked
          then:
            - click:
                identifier: us.mappings.functional.checkout.reviewOrder.getTextCheckBox

  - name: us.functions.functional.utils.incrementItemUntilMax
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.functional.quantityStepper.incrementButton
      - loop:
          begin: 0
          end: 10
          storeIndex: i
          flow: 
            - if:
                condition: $i == 9
                then:
                  - failTest:
                      message: "Failed to increment item quantity to max quantity"
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.functional.quantityStepper.incrementButton.enabled
                then:
                  - click:
                      identifier: us.mappings.functional.quantityStepper.incrementButton
                else:
                  - break: true
          wait: 3

  - name: us.functions.functional.utils.validateMaxQuantity
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.functional.quantityStepper.incrementButton.disabled
          label:
            - identifier: us.mappings.functional.quantityStepper.text
              contains: "Max"

############################## Android ###################################
  - name: us.functions.functional.utils.placeOrder.enablePaymentByPass
    platform: android
    flow:
      - executeFunction:
          name: unified.us.functions.functional.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://debugPanel
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.functional.debugPanel.placeOrderPaymentBypass
            - name: direction
              string: down
            - name: scrollLimit
              string: 8
      - click:
          identifier: us.mappings.functional.debugPanel.placeOrderPaymentBypass

      - verifyIdentifier:
          present:
            - identifier: us.mappings.functional.debugPanel.placeOrderPaymentBypass

      - click:
          identifier: us.mappings.functional.debugPanel.placeOrderPaymentBypass

      - executeFunction:
          name: us.functions.global.navigation.backNavigation

      - executeFunction:
          name: us.functions.global.navigation.backNavigation

      - sleep:
          duration: 1000

  - name: unified.us.functions.functional.bookslot.changeOrReserve
    flow:
      - click:
          identifier: us.mappings.functional.cart.reserveOrChangeSlot

  - name: unified.us.functions.functional.bookslot.reserveASlot
    flow:
      - log: Bookslot for ${tab}
      - if:
          condition: ${tab} == 'delivery'
          then:
            - click:
                identifier: us.mappings.functional.bookslot.deliveryFromStoreTab
      - if:
          condition: ${tab} == 'pickup'
          then:
            - click:
                identifier: us.mappings.functional.bookslot.pickup
      - click:
          identifier: us.mappings.functional.bookslot.daySelector
      - click:
          identifier: us.mappings.functional.bookslot.slotSelector
      - click:
          identifier: us.mappings.functional.bookslot.reserveButton
    
  - name: unified.us.functions.functional.global.navigation.goToDeepLink
    flow:
      - log: Open deep link
      - log: $deepLinkUrl
      - verifyValue:
          identifier: $deepLinkUrl
          contains: "walmart://"
      - openLink: ${deepLinkUrl}
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.functional.global.navigation.openDeepLink
      - sleep:
          duration: 5000

  - name: unified.us.functions.functional.global.navigation.openDeepLink
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 3000
                present:
                  - identifier: Open in “Walmart”?
            - click:
                identifier: Open
          catch:
            flow:
              - log: Deeplink pop up not displayed

  - name: unified.us.functions.transactions.onboarding.navigateOnboardingToHome
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.global.onboarding.navigateOnboardingToHome
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.global.onboarding.nextButton
                then:
                  - verifyIdentifier:
                      timeout: 10000
                      present:
                        - identifier: us.mappings.global.onboarding.nextButton
                  - click:
                      identifier: us.mappings.global.onboarding.nextButton
                  - click:
                      identifier: us.mappings.global.onboarding.maybeLaterButton
                      wait: 2000
            - log: location screen loaded       
            - verifyIdentifier:
                timeout: 10000
                present:
                  - identifier: us.mappings.global.onboarding.locationScreenText
            - storeIn:
                key: testStarted
                value: true
            - click:
                identifier: us.mappings.global.onboarding.enterZipCodeButton
            - sleep:
                duration: 2000
            - enterText:
                identifier: us.mappings.global.onboarding.enterZipCodeField
                string: us.data.onboarding.zipcode
            - click:
                identifier: Search
            - executeFunction:
                name: unified.us.functions.home.handlePersonalizedScreen
            - executeFunction: # Handled iOS prod scripts that are failing
                name: unified.us.functions.home.toolTip