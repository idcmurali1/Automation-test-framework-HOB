# Validate bag fee opt in / opt out module - saved bag preference opt in - opt out for bags in checkout and place order

general:
  platform: ios
  tags: C2714081, prod-functional-checkout
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2714081

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      - log: End Before test

      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: "R2_SUBFLOW_PRE_TRANSACTION"
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Validate bag fee opt in / opt out module - saved bag preference opt in - opt out for bags in checkout and place order
    endTestOnFailure: true
    flow:
      - log: Starting test "Validate bag fee opt in / opt out module - saved bag preference opt in - opt out for bags in checkout and place order"

      # Navigate onboarding to home
      - executeFunction:
          name: us.functions.global.onboarding.navigateOnboardingToHome

      # Navigate to sign in page
      - executeFunction:
          name: us.functions.home.navigateHomeToSignIn

      # Sign in with default account
      - executeFunction:
          name: us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: us.data.prod.checkout.bagfee.optin.ios.email
            - name: password
              string: us.data.prod.checkout.bagfee.optin.ios.password

      - executeFunction:
          name: us.functions.global.navigation.accountToHome

      #Enable dummy payment through debug panel
      - executeFunction:
          name: us.functions.functional.utils.placeOrder.enablePaymentByPass

      # Go to cart and remove items in cart
      - click:
          identifier: us.mappings.navBar.cartIcon

      - executeFunction:
          name: us.functions.cart.removeAllCartItems

      - executeFunction:
          name: us.functions.cart.removeUnavailableItemsFromCart

      # Search item and add to cart
      - executeFunction:
          name: us.functions.search.addItemtoCart
          params:
            - name: searchTerm
              string: us.data.checkout.bagfee.scPickupDelivery.item
            - name: expectedItemCount
              string: 1

      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: "R2_SUBFLOW_TRANSACTION"
      # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Go to cart
      - click:
          identifier: us.mappings.navBar.cartIcon

      - sleep:
          duration: 3000


      # # Go to book slot
      - executeFunction:
          name: us.functions.selectBookingSlot
          params:
            - name: tab
              string: pickup
            - name: page
              string: cart
            - name: slotDay
              string: tomorrow
            - name: slotIndex
              string: 3

      # Continue to checkout or create new order
      - executeFunction:
          name: us.functions.cart.continueToCheckoutOrNewOrder

      # Verify saved bag preference of opt in
      - executeFunction:
            name: us.functions.functional.checkout.reviewOrder.verifySavedBagPreferenceOfOptInandOptOut
            params:
            - name: savedBagPreferenceTitle
              string: I want my items in bags
            - name: savedBagPreferenceSubTitle
              string: I’ll pay a 10¢ fee per bag.

      # scroll up To BagFee Module
      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.bagOptInViewTitle

      # Verify no bag fee in POS section
      - executeFunction:
            name: us.functions.functional.checkout.reviewOrder.verifyOptOutOrOptInBagFeeInPOS
            params:
            - name: bagPreferenceTextIdentifier
              string: us.mappings.reviewOrder.verifyCheckoutSkipBagFeeText
            - name: bagPreferenceRadioButtonIdentifier
              string: us.mappings.reviewOrder.verifyCheckoutSkipBagFeeRadioButton
            - name: bagPreferenceText
              string: I’ll bring my own reusable bags

      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.paymentMethod.label

      - executeFunction:
          name: us.functions.checkout.placeOrder
          params:
            - name: ebtExists
              string: false

      #Validate order confirmation page
      - executeFunction:
          name: us.functions.orderConfirmation.orderCreationValidation
      - executeFunction:
          name: us.functions.orderConfirmation.getOrderNumber

      - log: Order number ${orderNo}

      - storeIn:
           key: testStatus
           value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps
