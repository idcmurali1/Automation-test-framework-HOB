# Verifying FC unscheduled delivery checkout flow
general:
  tags: C2737145, unified-prod-functional-checkout
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2737145

scenarios:
  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      # Set environment
      - executeFunction:
          name: us.function.utils.getEnvironmentValue
      # Set platform
      - executeFunction:
          name: functions.utils.setPlatformInfo   
      - log: End Before test

  - name: Verifying FC unscheduled delivery checkout flow for Multi Quantity Discount Item
    endTestOnFailure: true
    flow:
      - log: Starting test "Verifying FC unscheduled delivery checkout flow for Multi Quantity Discount Item"

     #Onboarding Steps
      - executeFunction:
          name: unified.us.functions.global.onboarding.navigateOnboardingToHome

      #Navigate to Signin
      - executeFunction:
          name: unified.us.functions.home.navigateHomeToSignIn

      # Signin to the account
      - executeFunction:
          name: unified.us.functions.global.authentication.signInAccountWithParams
          params:
            - name: android.email
              string: us.data.prod.checkout.fc.android.email5
            - name: android.password
              string: us.data.prod.checkout.fc.android.password
              # TODO: Should create a production user account for iOS.
            - name: ios.email
              string: us.data.prod.checkout.fc.ios.email
            - name: ios.password
              string: us.data.prod.checkout.fc.ios.password
    
      # Enable dummy payment through debug panel
      - executeFunction:
          name: us.functions.functional.utils.placeOrder.enablePaymentByPass

      #Navigate to Home tab
      - executeFunction:
          name: unified.us.functions.global.navigation.accountToHome

      # Select Delivery intent from GIC
      - executeFunction:
          name: unified.us.functions.gic.expandIfCollapsed
      - executeFunction:
          name: unified.us.functions.gic.setFulfillment
          params:
            - name: option
              string: Shipping

      # Navigate to cart
      - executeFunction:
          name: unified.us.functions.global.navigation.toCartFromNavBar

      - executeFunction:
          name: unified.us.functions.cart.removeAllCartItems

      - executeFunction:
          name: unified.us.functions.global.navigation.backNavigation

      - executeFunction:
          name: unified.us.functions.functional.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: us.data.checkout.fc.MQDItem

      - executeFunction:
          name: unified.us.functions.item.addItemToCart

      - executeFunction:
          name: unified.us.functions.item.postAddToCartSteps

      - executeFunction:
          name: unified.us.functions.global.navigation.toCartFromNavBar

      - executeFunction:
          name: us.functions.functional.cart.validateMQDFlow
          params:
            - name: mqdQuantityValue
              string: 2

      - executeFunction:
          name: us.functions.cart.switchBetweenPickUpAndShipping
          params:
            - name: fulfillmentType
              string: shipping

      - executeFunction:
          name: unified.us.functions.cart.continueToCheckoutOrNewOrder

      - verifyIdentifier:
          present:
            - identifier: us.mappings.functional.checkout.reviewOrder.itemDetailsSection.itemImages
              occurrences: 1

      - executeFunction:
          name: us.functions.functional.checkout.reviewOrder.fcModule.validateItemDetailsModuleForMQD
          params:
            - name: mqdQuantityValue
              string: 2

      - executeFunction:
          name: us.functions.functional.checkout.reviewOrder.validatePosTotals
          params:
            - name: itemCount
              string: 2

      - scroll:
          direction: up
          untilIdentifier: us.mappings.reviewOrder.paymentMethod.label

      - executeFunction:
          name: us.functions.functional.checkout.placeOrder

      #Validate order confirmation page
      - executeFunction:
          name: us.functions.functional.checkout.thankyou.verifyMQDOrderDetails
          params:
            - name: mqdQuantityValue
              string: 2

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: us.functions.utils.afterSteps