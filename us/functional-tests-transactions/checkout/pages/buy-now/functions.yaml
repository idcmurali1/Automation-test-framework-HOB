functions:
  # NOTE Moved these functions to this new file as part of refactoring, functionality to be updated with latest
  # during unified test automation. Update to support both platforms
  - name: us.functions.functional.buyNow.addCVV
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.buyNow.payWithField
          then:
            - click:
                identifier: us.mappings.buyNow.payWithField
      - if:
          identifier:
            present:
              - identifier: us.mappings.buyNow.cVVTextField
          then:
            - enterText:
                identifier: us.mappings.buyNow.cVVTextField
                string: ${CVV}
            - click:
                identifier: Done
      - click:
          identifier: us.mappings.functional.paymentsOptionsContinueButton
          wait: 5000

  - name: us.functions.functional.buynow.validateBuynowData
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.buyNow.buyNowButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.buyNow.titleNavigationBar
                label:
                  - identifier: us.mappings.buyNow.titleNavigationBar
                    contains: "Buy now"

      - executeFunction:
          name: us.functions.functional.buynow.validatePromiseDate
          params:
            - name: fulfillmentType
              string: ${fulfillmentType}

      - log: Pay with ${Address}
      - verifyIdentifier:
          label:
            - identifier: us.mappings.buyNow.deliverToAddress
              contains: ${Address}

      - log: Pay with ${payWith}
      - verifyIdentifier:
          label:
            - identifier: us.mappings.buyNow.payWithField
              contains: ${payWith}

      - getString:
          identifier: us.mappings.buynow.estTotal.includesBelowMinFee.string
          attribute: label
          storeIn: subTotalValue
      - log: SubTotal Value ${subTotalValue}
      - executeNode:
          file: us/e2e-tests/helpers/splitString.js
          args:
            - value: ${subTotalValue}
            - value: 'Estimated Total '
            - value: split
          getResponse:
            storeIn: subTotalValue
      - executeNode:
          file: us/e2e-tests/helpers/splitString.js
          args:
            - value: ${subTotalValue}
            - value: '  Includes'
            - value: split
            - value: before
          getResponse:
            storeIn: subTotalValue

      - log: Formatted sub total ${subTotalValue}

      - executeNode:
          file: us/functional-tests-transactions/helpers/validatePrice.js
          args:
            - value: ${subTotalValue}
          getResponse:
            storeIn: isSubtotalValid
      - log: isSubtotalValid ${isSubtotalValid}
      - if:
          condition: ${isSubtotalValid} != true
          then:
            - failTest:
                message: "Subtotal value is not displayed"
          else:
            - log: Subtotal amount is displayed

  - name: us.functions.functional.buynow.validatePromiseDate
    flow:
      - getString:
          identifier: us.mappings.buyNow.arrivingText
          attribute: label
          storeIn: promiseDateTimeText
      - log: Promise date ${promiseDateTimeText}
      - executeNode:
          file: us/e2e-tests/helpers/splitString.js
          args:
            - value: ${promiseDateTimeText}
            - value: 'Arriving '
            - value: split
          getResponse:
            storeIn: promiseDateTimeText
      - log: Formatted Promise date ${promiseDateTimeText}
      - executeNode:
          file: us/functional-tests-transactions/helpers/validatePromiseDateTimeText.js
          args:
            - value: ${fulfillmentType}
            - value: ${promiseDateTimeText}
          getResponse:
            storeIn: isValidPromiseDate
      - log: Promise date displayed is in right format ${isValidPromiseDate}
      - if:
          condition: ${isValidPromiseDate} != true
          then:
            - failTest:
                message: "Promise date displayed is not in right format"