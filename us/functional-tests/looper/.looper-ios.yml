inherit: 'job:///glass-mobile-app-automation/looper-base:.looper.yml'

gitShallowDepth: 10

branches:
  - spec: development
    scheduling: concurrent

    triggers:
      - pr: disabled
      - push:
          manualOnly: true

# Run E2E flows on Prod on development build
      - manual:
          name: Run Functional Cart Flows- All
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-development-latest.zip', APP_BUILD_BRANCH = 'development-latest', TEST_TAGS = 'fn-test', DEPENDENCY_PROFILE = 'looper-prod')

      - manual:
          name: Run Functional Checkout Flows- All
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-development-latest.zip', APP_BUILD_BRANCH = 'development-latest', TEST_TAGS = 'prod-functional-checkout', DEPENDENCY_PROFILE ='looper-prod-checkout-release')

      - cron:
          spec: "0 9 * * *"
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-development-latest.zip', APP_BUILD_BRANCH = 'development-latest', TEST_TAGS = 'prod-functional-checkout', DEPENDENCY_PROFILE = 'looper-prod-checkout-release')

  - spec: us/release-latest
    scheduling: concurrent

    triggers:
      - pr: disabled
      - push:
          manualOnly: true

      - manual:
          name: Run Functional Cart Flows- All
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-release-latest.zip', APP_BUILD_BRANCH = 'release-latest', TEST_TAGS = 'fn-test', DEPENDENCY_PROFILE = 'looper-prod')

      - manual:
          name: Run Functional Checkout Flows- All
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-release-latest.zip', APP_BUILD_BRANCH = 'release-latest', TEST_TAGS = 'prod-functional-checkout', DEPENDENCY_PROFILE = 'looper-prod-checkout-release')

      - cron:
          spec: "0 15 * * 3-7"
          call: run_prod_regression_flows(SAUCE_APP = 'storage:filename=glass-release-latest.zip', APP_BUILD_BRANCH = 'release-latest', TEST_TAGS = 'prod-functional-checkout', DEPENDENCY_PROFILE = 'looper-prod-checkout-release')


envs:
  global:
    variables:
      MARKET: us
      APP_PLATFORM: ios
      SKIP_SLACK_TEST_RUN: all
      SLACK_CHANNEL: checkout-ios-r2-automation-run
      SLACK_TEST_RUN_MESSAGE: "*Branch*: ${TRIGGER_BRANCH}\n
                    *App Build*: ${SAUCE_APP}\n
                    *Build Link*: ${BUILD_URL}\n
                    *Report Link*: ${REPORT_URL}"
      EMAIL_TO: checkout_ios_r2_test@email.wal-mart.com
      EMAIL_SUBJECT: Apps iOS E2E Test complete - Build ${BUILD_ID}
      EMAIL_MESSAGE: "Hi Team, \n
                       Build details can be found at: ${BUILD_URL}\n
                       Test execution report results: ${REPORT_URL}\n
                       Thanks, Checkout Team."
  env_ios_prod_parameters:
    variables:
      DEPENDENCY_FILE_NAME: us/functional-tests/dependencies/ios/ios-default.yaml
      GLASS_ENV: production
      MAPPING_LABELS: production
      USE_TEST_REPORT: true
      THREADS: 25


flows:
  run_prod_regression_flows:
    try:
      - parallel(failsafe):
          - call: run_prod_regression_base(POST_TO_ES = true, TEST_SESSION_ID = '%{(Math.abs(new(java.util.Random).nextInt()) % 100000000 + 1)}')
          - var(TEST_RUN_STATUS = $TEST_RUN_PASSED)
    catch:
      - var(TEST_RUN_STATUS = $TEST_RUN_FAILED)
      - shell: exit 1
    finally:
      - call: post_report_to_slack_channel
      - call: post_email

  post_report_to_slack_channel:
    try:
      - slack.postMessage:
          iconEmoji: ":test:"
          message: $SLACK_TEST_PLAN_MESSAGE
          channelId: $SLACK_CHANNEL
          attachments:
            - fallback: ${BUILD_URL}
              actions:
                - type: "button"
                  text: "Report URL"
                  url: $REPORT_URL
    catch:
      - shell (name Slack Test Plan Step Failed): |
          echo "Slack Test Plan Step Failed - $flowErrorMessage"

  run_tests:
    - call: build(env_ios_prod_parameters)

  run_prod_regression_base:
    - call: build(env_ios_prod_parameters)  

parameters:
  - SAUCE_APP_FILE_NAME: {type: string, defaultValue: "storage:filename=", label: "OPTIONAL: Add file name of the feature build uploaded to sauce labs"}

