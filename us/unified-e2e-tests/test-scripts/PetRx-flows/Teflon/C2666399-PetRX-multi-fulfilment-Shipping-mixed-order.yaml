# Non-amendable
general:
  tags: C2666399, unified-teflon-e2e, PetRx, unified-p0-ecomm-teflon-e2e
  inherit:
    filesRunAll:
      - us-errors-helpers.yaml
  testCaseId: C2666399
  metadata:
    - name: scenarioId
      string: PV001

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:

      #Get Environment Values and Setting Platform
      - executeFunction:
          name: unified.us.function.utils.getEnvironmentValueAndSetPlatformInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Main
    endTestOnFailure: true
    flow:

      - log: Start Main

      # Astro clear cart
      - if:
          condition: ${platform} == 'Android'
          then:
          - executeFunction:
              name: unified.us.functions.utils.astro.clearCart
              params:
                - name: email
                  string: us.data.android.flowPetRX.email
          - storeIn:
              key: email
              value: us.data.android.flowPetRX.email                   

      - if:
          condition: ${platform} == 'iOS'
          then:
          - executeFunction:
              name: unified.us.functions.utils.astro.clearCart
              params:
                - name: email
                  string: us.data.ios.flowPetRX.muliti.email
          - storeIn:
              key: email
              value: us.data.ios.flowPetRX.muliti.email  

      # Navigate onboarding to home
      - executeFunction:
          name: unified.us.functions.global.onboarding.navigateOnboardingToHome

      # Navigate to the account menu from where the user can sign in to the app
      - executeFunction:
          name: unified.us.functions.home.navigateHomeToSignIn

      # User signs in to the account
      - executeFunction:
          name: unified.us.functions.global.authentication.signInAccount
          params:
            - name: email
              string: ${email}
            - name: password
              string: us.data.ios.flowPetRX.password    

      - executeFunction:
          name: unified.us.functions.global.navigation.accountToHome
  
      - executeFunction:
          name: unified.us.functions.home.rateDriverPopup

      - executeFunction:
          name: unified.us.functions.gic.expandIfCollapsed

      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.home.gic.module.sanJoseZipcode
          then:
            - executeFunction:
                name: unified.us.functions.home.changeStore
                params:
                  - name: zipcode
                    string: 95122 
                  - name: storeName
                    string: San Jose Supercenter  
                  - name: storeOnly
                    string: true
 
      - executeFunction:
          name: unified.us.functions.gic.expandIfCollapsed

      - executeFunction:
          name: unified.us.functions.gic.setFulfillment
          params:
            - name: option
              string: Shipping

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
##**From here code to test only pharmacy & FC items

        #Fetch stock available items using fetch API, Petrx
          ## Add petrx items to cart , Make sure Petrx store is always set to 32144
         # refer for petRx item list https://confluence.walmart.com/pages/viewpage.action?spaceKey=CDMPIDO&title=RCTSTAMPS-8350+NEW+PETRX+ITEMS

      # adding petrx virtual pack items 
      - executeFunction:
          name: unified.us.functions.utils.fetchFromDataList
          params:
            - name: email
              string: ${email}
            - name: itemType
              string: FC_DELIVERY
            - name: storeId
              string: 32144
            - name: itemList
              string: us.data.flow.petRx.itemLists 

      - executeFunction:
          name: unified.us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: ${deeplinkURl}

      - executeFunction:
          name: unified.us.functions.item.addItemToCart

      # Fetch stock available non-petRx items using fetch API
      - executeFunction:
          name: unified.us.functions.utils.fetchFulcrumAvailableItem
          params:
            - name: itemType
              string: FC_DELIVERY
            - name: store
              string: 32144
            - name: backupItem
              string: 967762968
      - storeIn:
          key: item1
          value: $itemFetched

      - executeFunction:
          name: us.functions.global.navigation.goToDeepLink
          params:
            - name: deepLinkUrl
              string: walmart://item/$item1                 

      - executeFunction:
          name: unified.us.functions.item.addItemToCart

      - executeFunction:
           name: unified.us.functions.global.navigation.toCartFromNavBar

      # Verify cart
      - executeFunction:
          name: unified.us.functions.cart.verifyCardDetails
          params:
            - name: fulfillmentText
              string: Shipping

    # Continue to checkout
      - executeFunction:
          name: unified.us.functions.cart.continueToCheckout

# Add Pet and Vet details
      - executeFunction:
          name: unified.us.functions.checkout.AddPetVet
      - executeFunction:
          name: unified.us.functions.checkout.SelectPetVet
      - executeFunction:
          name: unified.us.functions.home.closeWPlusPromotionPopUpIfDisplayed   

      - executeFunction:
          name: unified.us.functions.checkout.reviewOrder.verifyCardDetails
          params:
            - name: fulfillmentText
              string: Shipping    
  
      - executeFunction:
          name: unified.us.functions.checkout.placeOrder

      #Validate order confirmation page
      - executeFunction:
          name: unified.us.functions.orderConfirmation.getOrderNumber

      - log: ${orderNo}

      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    flow:
      - executeFunction:
          name: unified.us.functions.utils.afterSteps
