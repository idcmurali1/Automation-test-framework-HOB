general:
  tags: C2664825, us-golden-flows, unified-teflon-e2e, unified-p1-ecomm-teflon-e2e
  inherit:
    filesRunAll:
     - us-errors-helpers.yaml
  testCaseId: C2664825
  metadata:
    - name: scenarioId
      string: EC018

scenarios:

  - name: Before
    before: true
    endTestOnFailure: true
    flow:
      # Get Environment and set platform values
      - executeFunction:
          name: unified.us.function.utils.getEnvironmentValueAndSetPlatformInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_POST_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    flow:
      - log: Start Main

  # Get timestamp
      - getTimestamp:
          asDate: false
          storeIn: timestamp

      - storeIn:
          key: customerEmail
          value: wmtuser${timestamp}@walmart.com

      - storeIn:
          key: password
          value: E2epassword$ 

  # Create Accountusing astro api
      - executeFunction:
          name: unified.us.functions.utils.astro.createAccount
          params:
            - name: payload
              string: us.data.flow030.createAccountPayload

      - sleep:
          duration: 10000

#***************************************************************************************************************

 # Astro - Create order and move order to pick complete status for subs

 #***************************************************************************************************************
      

       # Fetch stock available items using fetch API
      - executeFunction:
          name: unified.us.functions.utils.fetchFulcrumAvailableItem
          params:
             - name: itemType
               string: STORE_SCHEDULED_PICKUP
             - name: store
               string: 32144
             - name: itemFilter
               string: substitution #subsallowed
             
      - storeIn:
          key: item1
          value: $itemFetched

    # Subtitution item
      - storeIn:
          key: item3
          value: us.data.substitute.item

      - executeFunction:
          name: unified.us.functions.utils.astro.createOrder
          params:
            - name: payload
              string: us.data.subAcceptFlow.createOrderPayload

      - executeFunction:
          name: unified.us.functions.utils.astro.subs.setOrderStatus
          params:
            - name: payload
              string: us.data.subRejectFlow.subs
            - name: orderNo
              string: ${orderNo}
            - name: orderType
              string: STORE_SCHEDULED_PICKUP
            - name: status
              string: PO Pick Complete

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      - log: 'R2_SUBFLOW_PRE_TRANSACTION'
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

      # Navigate onboarding to home
      - executeFunction:
          name: unified.us.functions.global.onboarding.navigateOnboardingToHome

      # Navigate to sign in page
      - executeFunction:
          name: unified.us.functions.home.navigateHomeToSignIn

      # Signin
      - executeFunction:
          name: unified.us.functions.global.authentication.signInAccount
          params:
              - name: email
                string: ${customerEmail}
              - name: password
                string: $password

      - executeFunction:
            name: unified.us.functions.global.navigation.goToDeepLink
            params:
              - name: deepLinkUrl
                string: walmart://orders/$orderNo

  # Navigate to accept your subs flow
      - executeFunction:
          name: unified.us.functions.subs.acceptRejectYourSubs 

      - executeFunction:
            name: unified.us.functions.global.navigation.goToDeepLink
            params:
              - name: deepLinkUrl
                string: walmart://orders/$orderNo

      - executeFunction:
         name: unified.us.functions.subs.verifyAfterReject
       
      - storeIn:
          key: testStatus
          value: passed

  - name: After
    after: true
    useTestConfigErrors: false
    flow:
      - executeFunction:
          name: unified.us.functions.utils.afterSteps


