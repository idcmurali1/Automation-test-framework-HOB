functions:
  - name: unified.us.functions.reserveSlot.fcormpselectaddressandcontinue
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.bookslot.AddAddressTitle
          then:
            - click:
                wait: 5000
                identifier: us.mappings.cart.bookslot.AddAddressButton
            - sleep:
                duration: 4000
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.selectAddressTitle
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.addressselectionButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.bookslot.AddAddressButton
                then:
                  - click:
                      identifier: us.mappings.cart.bookslot.AddAddressButton
                  - sleep:
                      duration: 5000
            - sleep:
                duration: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.addressOverlay.saveAddress
                then:
                  - click:
                      identifier: us.mappings.cart.addressOverlay.saveAddress
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.selectAddress.rightAddress
          then:
            - click:
                identifier: us.mappings.cart.selectAddress.rightAddress

  - name: unified.us.functions.slotDataSetUp
    flow:
      - if:
          condition: ${slotDay} == null
          then:
            - storeIn:
                key: slotDay
                value: today
      - if:
          condition: ${slotIndex} == null
          then:
            - storeIn:
                key: slotIndex
                value: 2
      - if:
          condition: ${timeSlot} == null
          then:
            - storeIn:
                key: timeSlot
                value: generic

  - name: unified.us.functions.selectDayForSlotDisplay
    flow:
      - sleep:
          duration: 6000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.daySelection
          then:
            - failTest:
                message: "ENV_FAILURE - ${env} - Day selection section not loaded in tab ${tab} on booking slot page"
      - executeFunction:
          name: unified.us.functions.daySlotInitialSetUp
      - if:
          condition: ${slotDay} == 'today'
          then:
            - click:
                identifier: us.mappings.reserveSlot.todaySlots
            - executeFunction:
                name: unified.us.functions.checkSlotAvailability
          else:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.futureDaySlots
                then:
                  - scroll:
                      direction: left
                      untilIdentifier: us.mappings.reserveSlot.futureDaySlots
                      withinIdentifier: us.mappings.reserveSlot.daySelectionView
                      position: center
                      scrollLimit: 2
            - click:
                identifier: us.mappings.reserveSlot.futureDaySlots
            - executeFunction:
                name: unified.us.functions.checkSlotAvailability
            - log: "Skipping the FutureDaySlots selection"
      - log: ------ Slot day selection completed ------

  - name: unified.us.functions.daySlotInitialSetUp
    flow:
      - log: Identifying day for slot selection
      - if:
          condition: ${slotDay} == 'today'
          then:
            - try:
                flow:
                  - if:
                      condition: ${platform} == 'iOS'
                      then:
                        - verifyIdentifier:
                            label:
                              - identifier: us.mappings.reserveSlot.todaySlots
                                notContains: full
                        - log: Slot's available for today

                  - if:
                      condition: ${platform} == 'Android'
                      then:
                        - verifyIdentifier:
                            contentDescription:
                              - identifier: us.mappings.reserveSlot.todaySlots
                                notContains: Full
                        - log: Slot's available for today
                catch:
                  flow:
                    - log: Today's slot is full, setting to tomorrow
                    - storeIn:
                        key: slotDay
                        value: tomorrow
      - if:
          condition: ${slotDay} == 'tomorrow'
          then:
            - storeIn:
                key: slotDayIndex
                value: 1
            - storeIn:
                key: slotDayIndexAlt
                value: 2
          else:
            - if:
                condition: ${slotDay} != 'today' && ${slotDay} != 'tomorrow'
                then:
                  - storeIn:
                      key: slotDayIndex
                      value: 2
                  - storeIn:
                      key: slotDayIndexAlt
                      value: 3

  - name: unified.us.functions.checkSlotAvailability
    flow:
      - loop:
          begin: 1
          end: 3
          storeIndex: i
          mode: increment
          flow:
            - try:
                flow:
                  - verifyIdentifier:
                      enabled:
                        - identifier: us.mappings.reserveSlot.allTimeSlots
                          value: true
                  - log: Slots are available on the selected day
                  - break: true
                catch:
                  flow:
                    - storeIn:
                        key: slotDayIndex
                        value: ${i}
                    - log: Switching slot day to check slot availability
                    - click:
                        identifier: us.mappings.reserveSlot.futureDaySlots

  - name: unified.us.functions.slotDataReset
    flow:
      - storeIn:
          key: skipSlotPage
          value: false
      - storeIn:
          key: unscheduled
          value: false
      - storeIn:
          key: wplusUser
          value: "null"
      - storeIn:
          key: page
          value: "null"
      - storeIn:
          key: skipReserve
          value: false
      - storeIn:
          key: optimize
          value: false

  - name: unified.us.functions.selectBookingSlotSkipIfNotRequired
    flow:
      - executeFunction:
          name: unified.us.functions.cart.scrollToTopOfCart
      - try:
          flow:
            - if:
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.cart.fulfillmentSection.fulfillmentTime
                          contains: us.data.cart.textAfter
            - if:
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.cart.slot
                          contains: us.data.cart.textAfter
            - log: Unscheduled slot already selected, skipping slot selection
            # Function to reset data
            - executeFunction:
                name: unified.us.functions.slotDataReset
          catch:
            flow:
              - executeFunction:
                  name: unified.us.functions.selectBookingSlot

  - name: unified.us.functions.cart.shopSimilarSplitCart
    flow:
      - if:
          condition: ${shopsimilar} == 'pickup'
          then:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.shopSimilarForPickup
                  - name: direction
                    string: down
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.cart.shopSimilarForPickup
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.ReplaceCTA
                  - name: direction
                    string: down
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.cart.ReplaceCTA
            - sleep:
                duration: 3000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.replacementAddedLabel
                  - name: direction
                    string: up
            - click:
                identifier: us.mappings.cart.replacementAddedLabel
            - log: Item is replaced
            - sleep:
                duration: 5000
      - if:
          condition: ${shopsimilar} == 'delivery'
          then:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.shopSimilarForDelivery
                  - name: direction
                    string: down
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.cart.shopSimilarForDelivery
            - sleep:
                duration: 5000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.ReplaceCTA
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.cart.ReplaceCTA
            - sleep:
                duration: 3000
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.cart.replacementAddedLabel
                  - name: direction
                    string: up
            - click:
                identifier: us.mappings.cart.replacementAddedLabel
            - log: Item is replaced
            - sleep:
                duration: 5000

  - name: unified.us.functions.selectBookingSlot
    flow:
      - storeIn:
          key: executionStage
          value: Transactions
      - if:
          condition: ${platform} == 'iOS'
          then:
            - storeIn:
                key: slotIndex
                value: 1
            - storeIn:
                key: slotIndex2
                value: 3
            - if:
                condition: ${wplusUser} == null && ${timeSlot} == null
                then:
                  - storeIn:
                      key: optimize
                      value: true
            - if:
                condition: ${timeSlot} == null
                then:
                  - storeIn:
                      key: timeSlot
                      value: generic
            # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
            - executeFunction:
                name: us.functions.loadBookingSlotScreenBasics
          else:
            - if:
                condition: ${wplusUser} == null && ${timeSlot} == null && ${rxpd} == null
                then:
                  - storeIn:
                      key: optimize
                      value: true
            # Function to load slot booking page either for Home/Cart page or automatically loaded during checkout
            - executeFunction:
                name: us.functions.loadBookingSlotScreen
      # Skips further steps if review page is loaded for unscheduled item
      - if:
          condition: ${skipSlotPage} || ${skipReserve}
          then:
            - log: Slot booking functionality skipped for unscheduled pickup
            - storeIn:
                key: skipReserve
                value: false
            - storeIn:
                key: optimize
                value: false
          else:
            - if:
                condition: ${platform} == 'Android'
                then:
                  # Skips Day selection for unscheduled item
                  - if:
                      condition: ${timeSlot} == 'unscheduled' || ${timeSlot} == 'expressSlot'
                      then:
                        - log: Skipping slot day selection process
                      else:
                        # Function to setup required default data for slot booking selection
                        - executeFunction:
                            name: us.functions.slotDataSetUp
                        # Function to select appropriate day for slot booking
                        - executeFunction:
                            name: us.functions.selectDayForSlotDisplay
            # Wplus details validation/optIn section
            - if:
                condition: ${wplusUser} == 'optIn' || ${wplusUser} == 'optOut'
                then:
                  - executeFunction:
                      name: us.functions.wplus.reserveSlot.optInOrOutWPlusMembership
            - if:
                condition: ${platform} == 'Android'
                then:
                  - if:
                      condition: ${wplusUser} == 'validate'
                      then:
                        - executeFunction:
                            name: us.functions.wplus.reserveSlot.validateWPlusDetails
                  # Function to select appropriate slot time
                  - executeFunction:
                      name: us.functions.selectTimeSlot
                  # Function to save selected time slot
                  - executeFunction:
                      name: us.mappings.confirmSlotSelection
            - if:
                condition: ${platform} == 'iOS'
                then:
                  - if:
                      condition: ${slotDay} != null && ${slotDay} != 'today' && ${timeSlot} == 'generic'
                      then:
                        - storeIn:
                            key: slotDayIndex
                            value: 1
                        - storeIn:
                            key: slotDayIndexAlt
                            value: 2
                        - click:
                            identifier: us.mappings.reserveSlot.futureDaySlots
                  # Function to select appropriate slot time
                  - executeFunction:
                      name: us.functions.selectTimeSlotBasics
                  # Function to save selected time slot
                  - executeFunction:
                      name: us.mappings.confirmSlotSelectionBasics
      # Function to reset data
      - executeFunction:
          name: us.functions.slotDataReset

  - name: unified.us.functions.deliveryAddress.addAddress
    flow:
      - log: "Here in this flow to add address"
      - if:
          condition: ${addAddressForBuyNowFlow}
          then:
            - log: Adding address on Buy Now overlay
            - click:
                identifier: us.mappings.buyNow.deliverToAddress
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.account.deliveryAddress.addNewAddress
                then:
                  - click:
                      identifier: us.mappings.account.deliveryAddress.addNewAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.add.title
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - executeFunction:
          name: unified.us.functions.deliveryAddress.addAddress.stretAddress
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - sleep:
          duration: 1000
      - if:
          condition: ${platform} == 'iOS'
          then:
            - click:
                identifier: Done
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.accounts.address.pageTitle
          then:
            - click:
                identifier: us.mappings.selectAddress.backbutton

  - name: unified.us.functions.reserveTime.verifyhotchickenResrtictedTime
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - executeFunction:
          name: us.functions.selectTabForSlotBooking
      - sleep: 
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow

# workaround done as the restricted slot was  displayed only when app is restarted(Bug raised:https://jira.walmart.com/browse/CEPG-194142)
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
          then:
            - click:
                identifier: us.mappings.global.closeButton
            - terminateApp: true
            - executeFunction:
                name: us.functions.global.navigation.goToDeepLink
                params:
                  - name: deepLinkUrl
                    string: walmart://home
            - executeFunction:
                name: us.functions.global.navigation.toCartFromNavBar
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
            - click:
                identifier: us.mappings.cart.sc.noSlotBooked.reserveTime
            - executeFunction:
                name: us.functions.selectDayForSlotDisplay
                params:          
                  - name: slotDay
                    string: tomorrow
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - click:
          identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - if:
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: timeslot
                value: 9am-10am
          else:
            - storeIn:
                key: timeslot
                value: 9am to 10am
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.9amto10amSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.9amto10amSlot
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.itemIneligibleSlot
          
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto1pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: timeslot
                value: 12pm-1pm
          else:
            - storeIn:
                key: timeslot
                value: 12pm to 1pm 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.12pmto1pmSlot
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.reserveSlot.itemIneligibleSlot
      - click:
          identifier: us.mappings.reserve.slot.button
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.itemUpdatesForIneligibleSlot
      - click:
          identifier: us.mappings.reserveSlot.oos.itemUpdates.gotItButton
      - sleep:
          duration: 2000
      - if:
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.cart.unavailableAlert.oosheader
                then:
                  - click:
                      identifier: us.mappings.cart.unavailableAlert.oosheader.saveallforlater

  #Verify ineligible slots and choose normal timeslot(3pm to 4pm)
  - name: unified.us.functions.reserveTime.verify7amTo10amRestrictedSlots
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - executeFunction:
          name: us.functions.selectTabForSlotBooking
          params:
          - name: tab
            string: pickup          
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:
            - name: slotDay
              string: tomorrow
      - verifyIdentifier:
          timeout: 9000
          present:
            - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - click:
          identifier: us.mappings.reserveSlot.ineligibleItemsWarning
      - if:
          condition: ${platform} == 'Android'
          then:
            - storeIn:
                key: timeslot
                value: 9am-10am
          else:
            - storeIn:
                key: timeslot
                value: 9am to 10am 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.9amto10amSlot
            - identifier: us.mappings.reserveSlot.itemIneligibleSlot
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.3pmto4pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.3pmto4pmSlot
      - click:
          identifier: us.mappings.reserveSlot.continueButton

  - name: unified.us.functions.deliveryAddress.addAddress.stretAddress
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.streetAddress
            - sleep:
                duration: 3000
            # Accept share precise location pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
            # Accept location permission pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.shareLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.shareLocation
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - enterText:
                identifier: us.mappings.deliveryAddress.add.streetAddress
                string: ${streetAddress}
      # Enter street Address
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      # Handling Address suggestion if displayed
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:
                      identifier: us.mappings.default.keyboardDoneButton
                  - sleep:
                      duration: 2000
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - sleep:
                duration: 1000
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
      - log: Street address entry completed


 # Book scheduled pickup slot
  - name: unified.us.functions.reserveSlot.curbsidePickup.bookThirdDaySlot
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.utils.handleTechnicalErrorPopup
            - if:
                identifier:
                  timeout: 10000
                  present:
                    - identifier: us.mappings.addressOverlayTile.close
                then:
                  - click:
                      wait: 5000
                      identifier: us.mappings.addressOverlayTile.close
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.title
                    
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.title
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.tab
                  - click:
                      wait: 5000
                      identifier: us.mappings.reserveSlot.curbsidePickup.tab
                  - executeFunction:
                      name: us.functions.utils.handleTechnicalErrorPopup
                else:
                  - log: Skipping reserve slot step

            - log: ${slotTime}
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.thirdSlot
                then:
                    - scroll:
                        direction: down
                        untilIdentifier: us.mappings.reserveSlot.thirdSlot
                        position: center
                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.thirdSlot
                else:
                    - log: 'Switching tomorrow for reserve a slot'
                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.selectThirdDay
                    - scroll:
                        direction: down
                        untilIdentifier: us.mappings.reserveSlot.Slot
                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.Slot
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.saveButton
                then:
                  - click:
                      wait: 5000
                      identifier: us.mappings.reserveSlot.saveButton
                else:
                  - log: "continue to checkout"
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.continueButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.popup.technicalError
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.handleTechnicalErrorPopup
                  - click:
                      wait: 3000
                      identifier: us.mappings.reserveSlot.continueButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.riskOnly.confirmEligibilityButton
                then:
                  - click:
                      wait: 5000
                      identifier: us.mappings.reserveSlot.riskOnly.confirmEligibilityButton

            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.reserveSlot.saveButton

      - if:
          condition: ${platform} == 'iOS'
          then:
            - if:
                identifier:
                  timeout: 10000
                  present:
                    - identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
                then:
                  - click:
                      wait: 5000
                      identifier: us.mappings.reserveSlot.scheduledDelivery.closeAddAddressButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.title
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.title
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.tab
                  - click:
                      wait: 5000
                      identifier: us.mappings.reserveSlot.curbsidePickup.tab
                else:
                  - log: Skipping reserve slot step

            - log: ${slotTime}
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.thirdSlot
                then:

                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.thirdSlot
                else:
                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.selectThirdDay

                    - click:
                        wait: 3000
                        identifier: us.mappings.reserveSlot.thirdSlot
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.saveButton
                  - identifier: us.mappings.reserveSlot.saveButton.detailLabel

            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.saveButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.confirmButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.confirmButton
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.reserveSlot.saveButton
                else:
                  - verifyIdentifier:
                      notPresent:
                        - identifier: us.mappings.reserveSlot.saveButton

  # Function to set/reset store in bookslot page
  # [mandatory] ${store} - Store to be set [default 32144]
  - name: unified.us.functions.reserveSlot.changeStore
    flow:
      - if:
          condition: ${store} == null
          then:
            - storeIn:
                key: store
                value: 32144
      - if:
          condition: ${store} == 32144
          then:
            - storeIn:
                key: zipcode
                value: 95122
      - if:          
          condition: ${store} == 5509
          then:
            - storeIn:
                key: zipcode
                value: 95035

      - if:
          condition: ${store} == 32137
          then:
            - storeIn:
                key: zipcode
                value: 80212  
                                  
      - if:
          condition: ${errorHandle}
          then:
            - log: Handling change store
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.reserveSlot.pickup.changeStoreLink
            - click:
                identifier: us.mappings.reserveSlot.pickup.changeStoreLink
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.selectStoreTextField
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.zipcodeClearButton
          then:
            - click:
                identifier: us.mappings.home.zipcodeClearButton
      - enterText:
          identifier: us.mappings.home.selectStoreTextField
          string: ${zipcode}
          pressEnter: true
      - sleep:
          duration: 2000
      - executeFunction:
          name: unified.us.functions.reserveSlot.handleErrorAfterChangeStore
      - click: 
          identifier: us.mappings.home.storeRadioButton
      - click: 
          identifier: us.mappings.gic.selectStore.save.button
      - if:
          condition: ${platform} == 'iOS'
          then:
            - storeIn:
                key: errorHandle
                value: false

  - name: unified.us.functions.reserveSlot.handleErrorAfterChangeStore
    flow:
        - loop:
            begin: 1
            end: 5
            storeIndex: index
            mode: increment
            flow:
              - if:
                  identifier:
                    present:
                      - identifier:  us.mappings.reserveSlot.selectStoreError
                  then:
                      - click:
                          identifier: us.mappings.reserveSlot.selectStoreRetryBtn
              - if: 
                    identifier:
                      present:
                        - identifier: us.mappings.home.storeRadioButton
                    then: 
                        - break: true
  
   # Book scheduled delivery slot for today when account has address
  - name: unified.us.functions.reserveSlot.scheduledDelivery.bookSlot
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      #Remove if condition after Resolution of Incident: INC45995425
      - if:
          condition: ${platform} == 'iOS'
          then:
            - click:
                wait: 5000
                identifier: us.mappings.reserveSlot.scheduledDelivery.tab
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.thirdSlot
          then:
            - log: "todays slot was available"
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot
          else:
            - log: "tomorrows slots available"
            - click:
                identifier: us.mappings.reserveSlot.selectTomorrow
                wait: 3000
            - executeFunction:
                name: us.functions.reserveSlot.reserveThirdSlot

  - name: unified.us.functions.reserveTime.PickupInsteadReserveTime
    flow:
      - click:
          identifier: us.mappings.orderDetails.customeroptionpickup
      - sleep:
          duration: 7000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reservePickup.title
      - if:
          condition: ${oderType} == 'expressOrder'     
          then: 
            - verifyIdentifier:
                present:
                 - identifier: us.mappings.reserveSlot.messageBanner  
            - getString:
                identifier: us.mappings.reserveSlot.messageBanner
                attribute: ${attribute}
                storeIn: reserveSlotMessageBanner   
            - log: Reserve slot new message banner '${reserveSlotMessageBanner}' is displayed             
      - executeFunction:
          name: us.functions.selectDayForSlotDisplay
          params:
            - name: slotDay
              string: 'today' 
      - executeFunction:
          name: us.functions.selectTimeSlot  
          params:
            - name: slotIndex
              string: 2
            - name: timeSlot
              string: generic
      - click:
          identifier: us.mappings.reservePickup.confirmPickupCTA  
      - sleep:
          duration: 10000   

  - name: unified.us.mappings.confirmSlotSelection
    flow:
      - storeIn:
          key: buttonType
          value: 'null'
      - if: 
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.reserveSlot.continueButton
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton
                else: 
                  - executeFunction:
                      name: us.functions.reserveSlot.selectDeliverySlotAgain
          else:    
            - click:
                identifier: us.mappings.reserveSlot.continueButton

      # Reload timeslot details if Refresh message is displayed on click on Save button          
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.refreshTimeSlot
          then:
            - click:
                identifier: us.mappings.reserveSlot.refreshTimeSlot
            - sleep:
                duration: 5000
            - click:
                identifier: us.mappings.reserveSlot.continueButton
      - if: 
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.itemUpdatesTitle
                then:
                  - click:
                      identifier: us.mappings.cart.itemUpdatesContinueButton
                      wait: 5000  
      - if: 
            condition: ${platform} == 'iOS'
            then:
            - executeFunction:
                name: unified.us.functions.cart.handleItemUpdatesBottomTray

      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - if: 
            condition: ${platform} == 'iOS'
            then:
              - executeFunction:
                  name: us.functions.cart.continueMissingAnythingScreen
              - executeFunction:
                  name: us.functions.reserveSlot.fcormpselectaddressandcontinue      
      - if: 
          condition: ${platform} == 'Android'
          then: 
            - if:
                condition: ${buttonType} == 'Okay' || ${buttonType} == 'OK'
                then:
                  - click:
                      identifier: us.mappings.reserveSlot.continueButton
            - storeIn:
                key: buttonType
                value: 'null'
            - log: ------ Slot selection saved ------
      - if: 
            condition: ${platform} == 'iOS'
            then:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.reserveSlot.continueButton
                  then:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Selected time slot saving operation failed"

  - name: unified.us.functions.selectTimeSlot
    flow:
      # Express slot selection section
      - if:
          condition: ${timeSlot} == 'expressSlot'
          then:
            - log: ------Selecting express time slot------
            - try:
                flow:
                  - click:
                      identifier: us.mappings.reserveSlot.expressSlot
                  - sleep:
                      duration: 1000
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Express slot not displayed"
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: unified.us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true

            - if:
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      value:
                        - identifier: us.mappings.reserveSlot.expressSlot
                          contains: selected
            - if:
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      checked:
                        - identifier: us.mappings.reserveSlot.expressSlot
                          value: true

      # Unscheduled slot selection section
      - if:
          condition: ${timeSlot} == 'unscheduled'
          then:
            - log: ------Selecting unscheduled time slot------
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                  - click:
                      identifier: us.mappings.reserveSlot.curbsidePickup.unscheduled.banner
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - Unscheduled slot not displayed"
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: unified.us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
      # Wplus preferred slot selection section
      - if:
          condition: ${timeSlot} == 'wplusPreferred'
          then:
            - log: ------Selecting wplus preferred time slot-----

            # - if:
            #     identifier:
            #       notPresent:
            #         - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
            #     then:
            #       # Select 'tomorrow', if no wplus Preferred Time slots are displayed for 'today'
            #       - executeFunction:
            #           name: us.functions.selectDayForSlotDisplay
            #           params:
            #             - name: slotDay
            #               string: 'tomorrow'

            - try:
                flow:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.wplusPreferredTimeSlot
                        - name: direction
                          string: down
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                  - click:
                      identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                catch:
                  flow:
                    - failTest:
                        message: "ENV_FAILURE - ${env} - wplusPreferred slot not displayed"
            - sleep:
                duration: 1000
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: unified.us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - if:
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      value:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                          contains: selected
            - if:
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      checked:
                        - identifier: us.mappings.reserveSlot.wplusPreferredTimeSlot
                          value: true

      # Generic slot selection section
      - if:
          condition: ${timeSlot} == 'generic'
          then:
            # Generic slot selection section
            - log: ------Selecting general time slot------
            # When no slots are displayed for 'today'
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveSlot.rxIneligibleSlot
                then:
                  - scroll:
                      direction: down
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.reserveSlot.timeSlot
                  - name: direction
                    string: down           
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.timeSlot
                then:
                  # Select 'tomorrow', if no slots are displayed for 'today'
                  - executeFunction:
                      name: us.functions.selectDayForSlotDisplay
                      params:
                        - name: slotDay
                          string: 'tomorrow'
                else:
                  - try:
                      flow:
                        # Check if today's slots displayed are available for selection
                        - verifyIdentifier:
                            enabled:
                              - identifier: us.mappings.reserveSlot.timeSlotRadioButton
                                value: true
                        - log: Required time slot is available for selection
                        - executeFunction:
                            name: unified.us.functions.utils.scrollIfNotVisible
                            params:
                              - name: identifier
                                string: us.mappings.reserveSlot.timeSlot
                              - name: direction
                                string: down
                              - name: limit
                                string: 2
                      catch:
                        flow:
                          # If today's slots displayed are disabled for selection
                          - log: Required time slot is unavailable for selection, switching to next day
                          - executeFunction:
                              name: us.functions.selectDayForSlotDisplay
                              params:
                                - name: slotDay
                                  string: 'tomorrow'
            - click:
                identifier: us.mappings.reserveSlot.timeSlot
            - sleep:
                duration: 1000

            - if:
                 condition: ${platform} == 'Android'
                 then:
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.cart.saveAddress
                      then:
                        - log: "Save Addrees Overlay displayed"
                        - click:
                            identifier: us.mappings.cart.saveAddress
                        - log: "Selected exoiting address"
            
            # Handle just when store selection window is lauched on click on timeslot
            - executeFunction:
                name: unified.us.functions.reserveSlot.changeStoreHandlingIfRequired
                params:
                  - name: store
                    string: 32144
                  - name: errorHandle
                    string: true
            - if:
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      value:
                        - identifier: us.mappings.reserveSlot.timeSlotRadioButton
                          contains: selected
            - if:
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      checked:
                        - identifier: us.mappings.reserveSlot.timeSlotRadioButton
                          value: true

      # Evergreen slot selection
      - if:
          condition: ${timeSlot} == 'evergreen'
          then:
            # Evergreen slot selection section
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveTime.3hours.or.less
                then:
                  - log: "3 hours or less is displayed on the Delivery from store page."
                  - click:
                      identifier: us.mappings.reserveTime.3hours.or.less
                  - log: "The Evergreen slot is selected Successfully"
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserve.slot.button

                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Evergreen slots (3 hours or less) are NOT displayed on the Delivery tab"
      - if:
          condition: ${timeSlot} == 'nonIneligibleSlot'
          then: 
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.reserveSlot.withoutIneligibleSlot
                        - name: direction
                          string: down
                  - log: "IneligibleSlot are displayed."                
                  - click:
                      identifier: us.mappings.reserveSlot.withoutIneligibleSlot
                  - sleep:
                      duration: 1000
                else:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - IneligibleSlot are not selected"
      - log: ------ Slot time selection completed ------

  - name: unified.us.functions.reserveSlot.changeStoreHandlingIfRequired
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.selectStoreTextField
            - log: Setting store again as it is displayed while time slot selection
            - executeFunction:
                name: unified.us.functions.reserveSlot.changeStore
          catch:
            flow:
              - log: Set store window not displayed, skipping store set process
# Signup Inhome via Bookslot
  - name: unified.us.funtions.inHome.bookSlot.signUpTrialInHome
    flow:    
      - verifyIdentifier:
          label: 
            - identifier: us.mappings.inHome.bookSlot.verifyTipFreeDeliveriryLabel
              contains: Want tip-free delivery for a whole month?
      - verifyIdentifier:
          label: 
            - identifier: us.mappings.inHome.bookSlot.verifyInHomeTrialSignUpLink
              contains: Start InHome 30-day free trial
      - click:
          identifier: us.mappings.inHome.bookSlot.verifyInHomeTrialSignUpLink
      - scroll:
          direction: down
      - if:
          condition: ${platform} == 'Android'
          then:
            - click:
                identifier:  us.mappings.inHome.bookSlot.activateInHomeIagree
      - if:
          condition: ${platform} == 'ios'
          then:
            - click:
                identifier:  us.mappings.inHome.bookslot.checkBox
      - click:
          identifier: us.mappings.inHome.bookSlot.clickInHomeTrialSignUpButton


# Validate Signup Inhome bottomsheet details
  - name: unified.us.funtions.inHome.bookSlot.verifyInhomeSignUpBottomSheet
    flow:
        - sleep:
            duration: 3000
        - if:
            identifier:
                present:
                  - identifier : us.mappings.inHome.bookSlot.verifyInHomeSignupSuccessMsg
            then: 
                - verifyIdentifier:
                    label: 
                      - identifier: us.mappings.inHome.bookSlot.verifyInHomeSignupSuccessMsg
                        contains: Welcome! We’re ready to tackle your to-dos
                - verifyIdentifier:
                     label: 
                      - identifier: us.mappings.inHome.bookSlot.verifyInHomeBottomSheetLabel
                        contains: Enjoy your free 30-day membership of InHome
            else:
                - verifyIdentifier:
                    label: 
                      - identifier: us.mappings.inHome.bookSlot.verifyInHomeSignupBottomSheeMsg
                        contains: Save a trip to the store – enjoy free and easy grocery delivery
        - click:
           identifier: us.mappings.wplus.inHome.membership.closeAlert      
        - verifyIdentifier:
            text:
            - identifier: us.mappings.inHome.bookSlot.verifyTipFreeDeliveryLabelAfterSignUp
              contains: InHome delivery
        - click: 
            identifier: us.mappings.inHome.bookSlot.clickInfoIcon
        - verifyIdentifier:
            text:
            - identifier: us.mappings.inHome.bookSlot.verifyInHomeTitle
              contains: InHome delivery
        - click:
            identifier: us.mappings.inHome.bookSlot.clickCloseIcon
  
  - name: unified.us.functions.selectBookingSlot.MBC
    flow:
      - log: Slot booking from the banner for Scheduled Delivery.
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
          then:
            - click:
                identifier: us.mappings.cart.timeSlotSelectionViewChevronRight
            - sleep:
                duration: 1000
            - click:
                identifier: us.mappings.cart.selectRandomSlotMBC

#RXPD AmendGroceryToRXItem
  - name: unified.us.functions.reserveTime.amendGroceryToRxItem
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.title
      - click:                
          identifier: us.mappings.reserveSlot.deliveryTab.selected
      - sleep: 
          duration: 3000
      - executeFunction:
          name: unified.us.functions.selectDayForSlotDisplay
          params:          
            - name: slotDay
              string: tomorrow
      - storeIn:
          key: timeslot
          value: 12pm-2pm
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveslot.12pmto2pmSlot
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveslot.12pmto2pmSlot
      - click:
          wait: 2000
          identifier: us.mappings.reserveslot.12pmto2pmSlot
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.continueButton

  - name: unified.us.functions.deliveryAddress.addAddress.onGIC
    flow:
      - executeFunction:
          name: us.functions.gic.expandIfCollapsed
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.button
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.button
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.gic.addAddressTitle
      - enterText:
          identifier: us.mappings.deliveryAddress.add.firstName
          string: ${firstName}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.lastName
          string: ${lastName}
      - click:
          identifier: us.mappings.deliveryAddress.add.streetAddress
      - if:
          identifier:
            present:
              - identifier: us.mappings.home.gic.addAddress.shareLocationConsent
          then:
            - click:
                identifier: us.mappings.home.gic.addAddress.shareLocationConsent
      - enterText:
          identifier: us.mappings.deliveryAddress.add.streetAddress
          string: ${streetAddress}
      # Handling Address suggestion if displayed
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
          then:
            - click:
                identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
            - sleep:
                duration: 5000
          else:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - enterText:
                identifier: us.mappings.deliveryAddress.add.state
                string: ${state}
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
      - enterText:
          identifier: us.mappings.deliveryAddress.add.phoneNumber
          string: ${phoneNumber}
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.selectAddress.continueButton
          then:
            - click:
                identifier: us.mappings.selectAddress.continueButton
      - click:
          identifier: us.mappings.home.gic.expandedIcon

  - name: unified.us.functions.reserveTime.localFinds.BYODSeller
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.reserveSlot.changeButton
            - name: direction
              string: up
            - name: scrollPosition
              string: center    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.changeButton
      - click:
          identifier: us.mappings.reserveSlot.changeButton
      - sleep:
          duration: 3000                     
      - verifyIdentifier:
          present:
            - identifier: us.mappings.reserveSlot.BYOD.title
            - identifier: us.mappings.reserveSlot.BYOD.customerInfo
            - identifier: us.mappings.reserveSlot.BYOD.storeAddress
            - identifier: us.mappings.reserveSlot.BYOD.changeCTA
            - identifier: us.mappings.reserveSlot.BYOD.deliveringFromByodSeller
      - click:
          identifier: us.mappings.reserveSlot.BYOD.slotDaySelection
      - click:
          identifier: us.mappings.reserveSlot.BYOD.slotSelection
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.reserveSlot.BYOD.reserveButton
      - log: clicked on Reserve button
      - sleep:
          duration: 3000             

  - name: unified.us.functions.deliveryAddress.addAOrEditGdiInstructions
    flow:
      - log: "Click Edit button on address page"
      - click:
          identifier: us.mappings.gdiInstructions.addressEditButton # us.mappings.global.editButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.edit.title
      - if:
          identifier:
            present:
              - identifier: us.mappings.default.keyboardDoneButton
          then:
            - click:
                identifier: us.mappings.default.keyboardDoneButton
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.gdiInstructions.editGdiInstructionsButton
            - name: direction
              string: down
      - click:
                identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.gdiInstructions.propertyType.clear
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.propertyType
            - identifier: us.mappings.gdiInstructions.houseType
            - identifier: us.mappings.gdiInstructions.apartmentType
            - identifier: us.mappings.gdiInstructions.businessType
            - identifier: us.mappings.gdiInstructions.otherType
            - identifier: us.mappings.gdiInstructions.dropOffType
            - identifier: us.mappings.gdiInstructions.frontDoor
            - identifier: us.mappings.gdiInstructions.backDoor
            - identifier: us.mappings.gdiInstructions.noPreference
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.subTitle
            - identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
            - identifier: us.mappings.gdiInstructions.deliveryNotesSubTitle
            - identifier: us.mappings.gdiInstructions.yourDeliveryAddressSubTitle
            - identifier: us.mappings.gdiInstructions.gdiAddressValue
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
            - identifier: us.mappings.paymentMethod.addPayment.overlay.saveButton
      - sleep:
          duration: 5000
      - if:
          condition: ${verifyDropOffOptionsForHouse}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
            - sleep:
                duration: 1500
            - click:
                identifier: us.mappings.gdiInstructions.houseType
            - log: "Verifying the dropOff location options for type House!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.garageDoorOption
      - if:
          condition: ${verifyDropOffOptionsForApartment}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.apartmentType
                wait: 3000
            - log: "Verifying the dropOff location options for type Apartment!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  # - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.mailRoomOrStaffOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
      - if:
          condition: ${verifyDropOffOptionsForBusiness}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.businessType
                wait: 3000
            - log: "Verifying the dropOff location options for type Business!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
                  # - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.mailRoomOrStaffOption
      - if:
          condition: ${verifyDropOffOptionsForOther}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.otherType
                wait: 3000
            - log: "Verifying the dropOff location options for type Other!!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOff.frontDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.backDoorOption
                  - identifier: us.mappings.gdiInstructions.dropOff.sidePorchOption
                  - identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - click:
                identifier: us.mappings.gdiInstructions.dropOff.buildingReceptionOption
            - sleep:
                duration: 3000
      - if:
          condition: ${addGdiInstructionsForHouseType}
          then:
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.clear
            - click:
                identifier: us.mappings.gdiInstructions.propertyType.withParam
                wait: 3000
            - log: "Adding GDI Instruction options for type House!!!"
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.dropOffType.withParam
                then:
                  - log: "${dropOffType} GDI instructions option is Not visible, scrolling right!!!"
                  - scroll:
                      direction: right
                      untilIdentifier: us.mappings.gdiInstructions.dropOffType.withParam
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.gdiInstructions.dropOffType.withParam
            - click:
                identifier: us.mappings.gdiInstructions.dropOffType.withParam
                wait: 3000
            - if:
                condition: ${addGateCode}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.gateOrCallBoxCode.editBox
                      string: ${gateCode}
                  # - goBack: true
            - if:
                condition: ${addDeliveryNotes}
                then:
                  - enterText:
                      identifier: us.mappings.gdiInstructions.deliveryNotes.editBox
                      string: ${deliveryNotes}
                  # - goBack: true
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.PetPickerWheelDone1
                then:
                  - log: inside done
                  - click:
                      identifier: us.mappings.reviewOrder.PetPickerWheelDone1
      - click:
          identifier: us.mappings.global.saveButton #us.mappings.buyNow.addAddress.save.button
      - sleep:
          duration: 5000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.gdiInstructions.savedDeliveryInstructions
          then:
            - log: "Saved GDI instructions option is Not visible, scrolling down!!!"
            - sleep:
                duration: 2000
            - scroll:
                direction: down
                untilIdentifier: us.mappings.gdiInstructions.savedDeliveryInstructions
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.savedDeliveryInstructions
      - click:
          identifier: us.mappings.buyNow.addAddress.save.button
      - if:
          identifier:
            present:
              - identifier: us.mappings.buyNow.navigateback
          then:
            - click:
                identifier: us.mappings.buyNow.navigateback
      - if:
          identifier:
            present:
              - identifier: us.mappings.navigateBack.button
          then:
            - click:
                identifier: us.mappings.navigateBack.button


  - name: unified.us.functions.deliveryAddress.verifySavedGdiInstructions
    flow:
      - log: "Inside the ${entryPoint} - Touch Point for GDI Flow"
      - if:
          condition: ${touchPointGIC}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.home.gic.module.parent.addAddressButton
                then:
                  - log: "Add Address FE Default button is present and clicked !!!"
                  - click:
                      identifier: us.mappings.home.gic.module.parent.addAddressButton
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions
            - storeIn:
                key: touchPointGIC
                value: false                
      - if:
          condition: ${touchPointBookSlotOnGIC}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.bookSlot.fourth
                then:
                  - log: "Slots are available and selecting the slot!!!"
                  - click:
                      identifier: us.mappings.bookSlot.fourth
            - click:
                identifier: us.mappings.bookSlot.changeCta.button
            - click:
                identifier: us.mappings.cart.addAddress
            - sleep:
                duration: 3000
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions 
            - storeIn:
                key: touchPointBookSlotOnGIC
                value: false  
      - if:
          condition: ${touchPointItemPage}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.itempage.change.address
                then:
                  - log: "Add Address FE Default button is present and clicked !!!"
                  - click:
                      identifier: us.mappings.itempage.change.address
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions                      
            - storeIn:
                key: touchPointItemPage
                value: false
      - if:
          condition: ${touchPointCart}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.editSlot.bookslotLink
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down-2!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.editSlot.bookslotLink
            - click:
                identifier: us.mappings.editSlot.bookslotLink
            - sleep:
                duration: 10000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.addAddress
                then:
                  - click:
                      identifier: us.mappings.cart.addAddress
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions                               
            - storeIn:
                key: touchPointCart
                value: false
        
      - if:
          condition: ${touchPointCheckout}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.reviewOrder.deliveryInstructions.editbutton
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down-3!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.reviewOrder.deliveryInstructions.editbutton
            - click:
                identifier: us.mappings.reviewOrder.deliveryInstructions.editbutton
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions            
            - storeIn:
                key: touchPointCheckout
                value: false
      - if:
          condition: ${touchPointODP}
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gic.editDeliveryInstructions.link
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down-2!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.gic.editDeliveryInstructions.link
            - click:
                identifier: us.mappings.gic.editDeliveryInstructions.link
            - sleep:
                duration: 10000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.addAddress
                then:
                  - click:
                      identifier: us.mappings.cart.addAddress
            - executeFunction:
                name: unified.us.functions.verifySavedGdiInstructions

  - name: unified.us.functions.verifySavedGdiInstructions
    flow:
      - log: "Validating GDI Instruction in ${entryPoint}"
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsAddressEdit
          then:
            - click:
                identifier: us.mappings.item.SubsAddressEdit
      - if:
          condition: ${touchPointCheckout}
          then:
            - log: "Skipping edit GDI instructions options !!!!"
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.default.keyboardDoneButton
                then:
                  - click:
                      identifier: us.mappings.default.keyboardDoneButton
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
                then:
                  - log: "Edit GDI instructions option is Not visible, scrolling down-4!!!"
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - click:
                identifier: us.mappings.gdiInstructions.editGdiInstructionsButton
            - log: "Clicked in GDI Instructions Edit button and now on GDI edit panel!!!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.gdiInstructions.propertyType.selected
            - identifier: us.mappings.gdiInstructions.dropOffType.selected
            - identifier: us.mappings.gdiInstructions.adjustPin.button
            - identifier: us.mappings.gdiInstructions.adjustPinTextOption
      - click:
          identifier: us.mappings.global.saveButton
      - log: "Saved the edit GDI Instructions bottom sheet!!!!"
      - sleep:
          duration: 10000 
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.saveButton
          then:
            - click:
                identifier: us.mappings.global.saveButton
            - log: "Clicked Save button on the edit address sheet -1!!!!"
          else:
            - log: "No Save Option"           
      - if:
          condition: ${touchPointCart} || ${touchPointBookSlotOnGIC}
          then: 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.saveAddress
                then:
                  - click:
                      identifier: us.mappings.cart.saveAddress
                  - log: "Clicked add address"
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserve.slot.button
                then:
                  - click:
                      identifier: us.mappings.reserve.slot.button
                  - log: "Clicked Save button on the edit address sheet -2!!!!"

  - name: unified.us.functions.reserveSlot.verifyIneligibleWarningMessage
    flow:
      - if: 
          condition: ${platform} == 'iOS'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.cart.startNewOrderButton
                then:
                  - click:
                      identifier: us.mappings.cart.startNewOrderButton
                  - click:
                      identifier: us.mappings.editSlot.thirdDay
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
                  - click:
                      identifier: us.mappings.reserveSlot.backButton
      - if: 
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: us.functions.cart.scrollToTopOfCart
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reserveTime.button.on.cartPage
                then:
                  - click:
                      identifier: us.mappings.reserveTime.button.on.cartPage
                  - click:
                      identifier: us.mappings.editSlot.thirdDay
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.reserveSlot.ineligibleItemsWarning
                          contains: Some items in your cart are ineligible for pickup at certain times.
                  - click:
                      identifier: us.mappings.reserveSlot.goBackButton

  - name: unified.functions.reserveSlot.optInWplusAndSelectRegularSlot
    flow:
      - executeFunction:
          name: unified.functions.cart.navigateToBookSlot
      - executeFunction:
          name: unified.functions.wplus.reserveSlot.optInWplus     
      - executeFunction:
          name: unified.functions.reserveSlot.selectRegularSlot
      - executeFunction:
          name: unified.functions.reserveATime.tapOnReserveButton
  
  - name: unified.functions.reserveSlot.selectRegularSlot
    flow:
        - loop:
            begin: 1
            end: 7
            storeIndex: index
            mode: increment
            flow:
              - executeFunction:
                  name: unified.functions.reserveATime.tapBookSlotDateBtn
              - executeFunction:
                  name: unified.functions.reserveATime.checkSlotAvailability
              - if: 
                    condition: ${isSlotAvailable}
                    then: 
                        - executeFunction:
                            name: unified.functions.reserveATime.selectThirdSlot
                        - break: true
  



  ##########################Single Step Functions###########################
  - name: unified.functions.reserveATime.tapBookSlotDateBtn
    flow:
      - click:
          identifier: us.mappings.reserveSlot.dateSelection
  
  - name: unified.functions.reserveATime.checkSlotAvailability
    flow:
      - storeIn:
          key: isSlotAvailable
          value: false
      - if:
          identifier:
            present:
              - identifier: us.mappings.reserveSlot.firstSlot
          then: 
            - storeIn:
                key: isSlotAvailable
                value: true

  - name: unified.functions.reserveATime.selectThirdSlot
    flow:
      - click:
          identifier: us.mappings.editSlot.thirdSlot 
  
  - name: unified.functions.reserveATime.tapOnReserveButton
    flow:
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.reserve.slot.button