functions:
  - name: unified.us.functions.search.searchItem
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.tabBar.search
                then:
                  - scroll:
                      direction: up
      # Click on search tab in sticky bar
#      - if:
#          condition: ${platform} == 'Android'
#          then:
#            - if:
#                identifier:
#                  present:
#                    - identifier: us.mappings.home.searchBarClearText
#                then:
#                  - click:
#                      identifier: us.mappings.home.searchBarClearText
#          else:
#            - verifyIdentifier:
#                present:
#                  - identifier: us.mappings.tabBar.search
#            - click:
#                identifier: us.mappings.tabBar.search
#                doubleClick: true
#                wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.searchBar
      - click:
          identifier: us.mappings.home.searchBar
          wait: 3000
      - sleep:
          duration: 3000
      - enterText:
          identifier: us.mappings.home.searchBar
          string: ${searchTerm}
          clickFirst: true
          pressEnter: true
      # Clear filters if any applied
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.clearAllFilters
          then:
            - click:
                identifier: us.mappings.search.clearAllFilters
                wait: 3000      
      # - executeFunction:
      #     name: unified.us.functions.home.closeWPlusPromotionPopUpIfDisplayed  
      - executeFunction:
         name: unified.us.functions.search.closeEasyWaytoGetOrderPopup  
      # Scroll to first search result and verify display
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.firstItem 
            - name: direction
              string: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.firstItem
          then:
            - log: "successfully found an item for the above search criterion"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - No item found for the searched keyword"

  - name: unified.us.functions.search.applyGiftFilter
    flow:
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - sleep:
          duration: 4000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.search.filterfacet.gifting
          position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.filterfacet.giftCollapsedButton
          then:
            - click:
                identifier: us.mappings.search.filterfacet.giftCollapsedButton
                wait: 1000
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.filterfacet.sortAndFilter.giftingSection.giftEligibleButton
            - name: direction
              string: down
            - name: scrollLimit
              string: 2
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.giftingSection.giftEligibleButton
          wait: 5000
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.search.filterfacet.brand.viewResultsButton
      - sleep:
          duration: 10000

  # Click on First Item
  - name: unified.us.functions.search.clickOnFirstItem 
    flow:
      - if:
          condition: ${noAds} == null && ${excludeSponsored} == null && ${subFilter} == null
          then:
            - executeFunction:
                name:  unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.firstItemFromSearchResult
                  - name: direction
                    string: down
            - click:
                identifier: us.mappings.search.firstItemFromSearchResult
          else:
            - if:
                condition: ${noAds} || ${excludeSponsored}
                then:
                  - if:
                      condition: ${platform} == 'iOS'
                      then:
                        - executeFunction:
                            name: unified.us.functions.utils.scrollIfNotVisible
                            params:
                              - name: identifier
                                string: us.mappings.search.excludeSponsoredFromSearchResult
                              - name: direction
                                string: down
                              - name: scrollPosition
                                string: center
                              - name: scrollLimit
                                string: 10
                        - click:
                            identifier: us.mappings.search.excludeSponsoredFromSearchResult
                      else:
                        - loop:
                            begin: 0
                            end: 10
                            flow:
                              - if:
                                  identifier:
                                    present:
                                      - identifier: us.mappings.search.sponsoredTitle
                                  then:
                                    - scroll:
                                        direction: down
                                    - if:
                                        identifier:
                                          timeout: 3000
                                          notPresent:
                                            - identifier: us.mappings.search.sponsoredTitle
                                        then:
                                          - scroll:
                                              direction: down
                                          - break: true
                        - click:
                           identifier: us.mappings.search.firstItemFromSearchResult
                else:
                  - if:
                      condition: ${subFilter} != null
                      then:
                        - executeFunction:
                            name: unified.us.functions.utils.scrollIfNotVisible
                            params:
                              - name: identifier
                                string: us.mappings.search.subFilterItemsFromSearchResult
                              - name: direction
                                string: down
                              - name: scrollPosition
                                string: center
                              - name: scrollLimit
                                string: 10
                        - click:
                            identifier: us.mappings.search.subFilterItemsFromSearchResult
      - executeFunction:
          name: unified.us.functions.search.verifyItemPageOpened
      - storeIn:
          key: subFilter
          value: 'null'
      - storeIn:
          key: noAds
          value: 'null'
      - storeIn:
          key: excludeSponsored
          value: 'null'


  - name: unified.us.functions.search.verifyItemPageOpened
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 300000
                present:
                  - identifier: us.mappings.item.brandNameTitle
          catch:
            flow:
              - failTest:
                  message: "ENV_FAILURE - ${env} - Item page load error"

  # [mandatory] ${searchresultsconditions} - Restored: Premium /Restored: Good/Restored: Like New/Restored: Fair.... [Required for identifying multiple conditions for the same original identifiers to be validated]
  - name: unified.us.functions.marketplace.search.restored.validations
    flow:
      - log: -----------${searchresultsconditions} section validation start-----------
      - if:
          condition: ${searchresultsconditions} == null
          then:
            - log: Skipping searchresultsconditions validation as none mentioned
          else:
            - storeIn:
                key: type
                value: ${searchresultsconditions}
            - log: Validating fulfillment section ${type}
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.conditions.restored.item
                  - name: direction
                    string: down 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.itemDescription.conditionLabel
                  - identifier: us.mappings.search.conditions.restored.item
                  - identifier: us.mappings.search.firstItemFromSearchResult
            - log: Validated ${type} label
      - storeIn:
          key: searchresultsconditions
          value: 'null'    

  - name: unified.us.functions.search.addFitmentDetails
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.fitmentDetailsChangeButton
            - name: direction
              string: up  
      - if: 
          identifier:
            present: 
              - identifier: us.mappings.search.fitmentDetailsChangeButton
          then:
              - click:
                  identifier: us.mappings.search.fitmentDetailsChangeButton
              - sleep:
                  duration: 2000
              - if:
                  condition: ${platform} == 'iOS'
                  then:
                    - if:
                        identifier:
                          visible:
                            - identifier: us.mappings.search.removeVehicleButton
                              value: "true"
                        then:
                          - click:
                              identifier: us.mappings.search.removeVehicleButton
                          - storeIn:
                              key: oldFitmentScreen
                              value: true

              - if:
                  condition: ${platform} == 'Android'
                  then:
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.search.removeVehicleButton
                        then:
                          - click:
                              identifier: us.mappings.search.removeVehicleButton
                          - storeIn:
                              key: oldFitmentScreen
                              value: true        

              - if:
                  condition: ${oldFitmentScreen} != true
                  then:
                    - loop:
                        begin: 0
                        end: 5
                        flow:
                          - click:
                              identifier: us.mappings.search.editVehicleButton
                          - click:
                              identifier: us.mappings.search.newRemoveVehicleButton
                          - click:
                              identifier: us.mappings.search.removeVehicleConfirmation
                          - sleep:
                              duration: 3000
                          - if: 
                              identifier:
                                present: 
                                  - identifier: us.mappings.search.fitmentDetailsChangeButton
                              then:
                                - click:
                                    identifier: us.mappings.search.fitmentDetailsChangeButton
                              else:
                                - break: true
      - sleep:
          duration: 4000
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.search.addVehicleButton
                then: 
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.search.addVehicleButton
                  - click:
                      identifier:  us.mappings.search.addVehicleButton
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.viewSubstitutionPopUpCloseButton
                then:
                  - click:
                      identifier: us.mappings.reviewOrder.viewSubstitutionPopUpCloseButton
                      coordinates: 50% , 50%                  
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.fitment.addFitmentDetailsPage
                  - name: direction
                    string: up
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitment.addFitmentDetailsPage
            - click:
                identifier:  us.mappings.search.fitment.selectYeardropdown
            - sleep:  
                duration: 2000
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${year}  
            - click:
                identifier: done  
            - click:
                identifier:  us.mappings.search.fitment.selectMakedropdown
                wait: 3000
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${make}
            - click:
                identifier: done 
            - click:
                identifier:  us.mappings.search.fitment.selectModeldropdown
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${model} 
            - click:
                identifier: done 
            - click:
                identifier:  us.mappings.search.fitment.selectSubmodeldropdown
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${submodel} 
            - click:
                identifier: done
            - click:
                identifier:  us.mappings.search.fitment.selectTireSizedropdown   
            - click:
                identifier: done
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.fitment.viewResultButton
                  - name: direction
                    string: down
            - click:
                identifier:  us.mappings.search.fitment.viewResultButton           
      - if:
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.search.fitment.selectYeardropdown
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.search.addVehicleButton
                  - click:
                      identifier: us.mappings.search.addVehicleButton
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.fitment.addFitmentDetailsPage
                        - name: direction
                          string: up  
                else:
                  - storeIn: 
                      key: scopeRequired
                      value: true

            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitment.addFitmentDetailsPage
            - click:
                identifier:  us.mappings.search.fitment.selectYeardropdown  
            - click:
                identifier:  us.mappings.search.fitment.year  
            - click:
                identifier:  us.mappings.search.fitment.selectMakedropdown
                wait: 3000

            - if:
                condition: ${scopeRequired}
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.fitment.make
                        - name: direction
                          string: down  
                        - name: identifierScope
                          string: us.mappings.search.fitment.listView
                else:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.fitment.make
                        - name: direction
                          string: down               
            - click:
                identifier:  us.mappings.search.fitment.make 
            - click:
                identifier:  us.mappings.search.fitment.selectModeldropdown 
            - if:
                condition: ${scopeRequired}
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.fitment.model
                        - name: direction
                          string: down  
                        - name: identifierScope
                          string: us.mappings.search.fitment.listView
                else:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.fitment.model
                        - name: direction
                          string: down    
            - click:
                identifier:  us.mappings.search.fitment.model
            - click:
                identifier:  us.mappings.search.fitment.selectSubmodeldropdown  
            - click:
                identifier:  us.mappings.search.fitment.submodel
            - scroll:
                    direction: down
                    untilIdentifier: us.mappings.search.fitment.selectTireSizedropdown
            - click:
                identifier:  us.mappings.search.fitment.selectTireSizedropdown  
            - click:
                identifier:  us.mappings.search.fitment.tireSize
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.fitment.viewResultButton
                  - name: direction
                    string: down
            - sleep:
                duration: 5000 
            - click:
                identifier:  us.mappings.search.fitment.viewResultButton
            - sleep:
                duration: 5000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.fitment.viewResultButton 
                then:
                  - click:
                      identifier: us.mappings.search.fitment.viewResultButton

  
  - name: unified.us.functions.search.changeFitmentDetails
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.fitmentDetailsChangeButton
          then:
            - click:
                identifier: us.mappings.search.fitmentDetailsChangeButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.fitment.addVehicle
          then:
            - click:
                identifier: us.mappings.search.fitment.addVehicle                 
      - sleep:
          duration: 3000                    
      - if:
          condition: ${platform} == 'iOS'
          then:
            - click:
                identifier: us.mappings.search.fitment.selectYeardropdown
                wait: 3000
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel
                string: ${year}
            - click:
                identifier: done 
            - click:
                identifier:  us.mappings.search.fitment.selectMakedropdown
                wait: 3000   
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${make}
            - click:
                identifier: done 
            - click:
                identifier:  us.mappings.search.fitment.selectModeldropdown
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${model} 
            - click:
                identifier: done  
            - scroll:
                direction: down
            - click:
                identifier:  us.mappings.search.fitment.selectSubmodeldropdown
            - enterText:
                identifier: us.mappings.search.fitment.pickerWheel 
                string: ${submodel} 
            - click:
                identifier: done
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.fitment.selectTireSizedropdown
                then:               
                  - click:
                      identifier:  us.mappings.search.fitment.selectTireSizedropdown
                  - click:
                      identifier: done   
            - click:
                identifier:  us.mappings.search.fitment.viewResultButton
            - sleep:
                duration: 3000
            - loop:
                begin: 0
                end: 3
                mode: increment
                storeIndex: i
                flow:
                  - log: $i
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.search.fitmentWidgetNeedMoreInfo
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
                            then:
                              - click:
                                  identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
                        - click:
                            identifier:  us.mappings.search.fitment.selectSubmodeldropdown
                        - enterText:
                            identifier: us.mappings.search.fitment.pickerWheel 
                            string: ${submodel} 
                        - click:
                            identifier: done
                        - click:
                            identifier:  us.mappings.search.fitment.selectTireSizedropdown
                        - click:
                            identifier: done
                        - sleep:
                            duration: 2000
                        - click:
                            identifier: us.mappings.search.fitment.viewResultButton
                        - sleep:
                            duration: 5000
                      else:
                        - break: true

      - if:
          condition: ${platform} == 'Android'
          then:
            - click:
                identifier: us.mappings.search.fitment.selectYeardropdown
            - storeIn:
                key: year
                value: ${year}
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.fitment.year 
                then:
                  - click:
                      identifier: us.mappings.search.fitment.year
                      wait: 3000
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.search.fitment.year 
                  - click:
                      identifier: us.mappings.search.fitment.year
                      wait: 3000
            - sleep:
                duration: 5000
            - click:
                identifier:  us.mappings.search.fitment.selectMakedropdown
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.fitment.make
                  - name: direction
                    string: down  
            - click:
                identifier:  us.mappings.search.fitment.make
                wait: 3000
            - sleep:
                duration: 5000
            - click:
                identifier:  us.mappings.search.fitment.selectModeldropdown  
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.search.fitment.model
                  - name: direction
                    string: down
            - click:
                identifier:  us.mappings.search.fitment.model
                wait: 3000
            - sleep:
                duration: 5000
            - click:
                identifier:  us.mappings.search.fitment.selectSubmodeldropdown
            - click:
                identifier:  us.mappings.search.fitment.submodel
                wait: 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.fitment.selectTireSizedropdown
                then:
                  - click:
                      identifier:  us.mappings.search.fitment.selectTireSizedropdown
                  - sleep:
                      duration: 3000            
                  - click:
                      identifier:  us.mappings.search.fitment.tireSize
            - sleep:
                duration: 3000 
            - click:
                identifier:  us.mappings.search.fitment.viewResultButton
            - sleep:
                duration: 5000
            - if:
                condition: ${scrollRequired} == true
                then:
                  - scroll:
                      direction: down
                  - storeIn:
                      key: scrollRequired
                      value: false
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.item.verifyFitmentWeNeedMoreInforMessage
                then:
                  - click:
                      identifier: us.mappings.item.verifyFitmentAddmoreInfoCTA
                      wait: 3000
                  - sleep:
                      duration: 4000
                  - if: 
                      identifier:
                        present: 
                          - identifier: us.mappings.search.fitment.selectSubmodeldropdown 
                      then:
                        - click:
                            identifier:  us.mappings.search.fitment.selectSubmodeldropdown  
                        - click:
                            identifier:  us.mappings.search.fitment.submodel
                        - click:
                            identifier:  us.mappings.search.fitment.selectTireSizedropdown
                        - sleep:
                            duration: 3000            
                        - click:
                            identifier:  us.mappings.search.fitment.tireSize
                        - sleep:
                            duration: 3000  
                  - click:
                      identifier: us.mappings.search.fitment.viewResultButton 
                  - sleep:
                      duration: 3000
                  - loop:
                      begin: 0
                      end: 6
                      storeIndex: j
                      flow:               
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.search.fitment.viewResultButton 
                            then:
                              - click:
                                  identifier: us.mappings.search.fitment.viewResultButton
                            else:
                              - break: true


  - name: unified.us.functions.search.validateFitmentDetails
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.fitmentIcon
            - name: direction
              string: up 
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.fitmentStatusMessage
          then:
            - log: "Fitment status message properly displayed"
          else:
            - click:
                identifier: us.mappings.home.searchBarSelected 
                wait: 3000
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.wplus.earlyaccessScreen.productListHeader
            - sleep:
               duration: 3000
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitmentStatusMessage
                  - identifier: us.mappings.search.fitmentDetailsChangeButton    
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitmentIcon
                  - identifier: us.mappings.search.fitmentDetails  

  - name: unified.us.functions.search.applyRetailerFilter
    flow:
      - sleep:
          duration: 4000
      - click: 
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.search.filterfacet.retailerFilterButton
          then:
            - log: "The Retailer filter option is NOT visible, Scrolling down !!!"
            - scroll:
                direction: down
                untilIdentifier: us.mappings.search.filterfacet.retailerFilterButton
                position: center
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.filterfacet.retailerCollapsedButton
          then:
            - click:
                identifier: us.mappings.search.filterfacet.retailerCollapsedButton
            - log: "The Retailer filter option is Collapsed, clicked on Expand button !!!"
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.filterfacet.retailerExpandedButton
          else:
            - log: "The Retailer filter option is already expanded !!!"
      - if: 
          condition: ${option} == 'Walmart'
          then:
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.search.filterfacet.walmartSellerCollapsedButton
                then:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.search.filterfacet.walmartSellerCollapsedButton
            - click: 
                identifier: us.mappings.search.filterfacet.walmartSellerCollapsedButton
          else:
              - if:
                  condition: ${option} == 'Pro-Sellers'
                  then:
                   - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.search.filterfacet.walmartMpSellerCollapsedButton
                        - name: direction
                          string: down
                        - name: scrollPosition
                          string: center
                   - click: 
                       identifier: us.mappings.search.filterfacet.proSellerCollapsedButton
                  else:
                      - if:
                          condition: ${option} == 'Marketplace-Sellers-fulfilled-by-Walmart'
                          then:
                            - executeFunction:
                                name: unified.us.functions.utils.scrollIfNotVisible
                                params:
                                  - name: identifier
                                    string: us.mappings.search.filterfacet.walmartMpSellerCollapsedButton
                                  - name: direction
                                    string: down
                                  - name: scrollPosition
                                    string: center
                            - click: 
                                identifier: us.mappings.search.filterfacet.walmartMpSellerCollapsedButton
      - sleep:
          duration: 10000
      - click: 
          identifier: us.mappings.search.filterfacet.retailer.viewResultsButton
          wait: 5000
      - sleep:
          duration: 5000                          
        
  - name: unified.us.functions.search.preOrderItems
    flow:  
      - loop:
          each: ${preOrderItems}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: unified.us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items

              - sleep: 
                  duration: 5000  
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.search.producttile.preorderLabel
                  then:
                    - executeFunction:
                        name: unified.us.functions.search.validatepreOrderItemDetails   
                    - storeIn:
                        key: preOrder
                        value: true                            
                    - break: true
      - if:
          condition: ${preOrder} != true
          then:
            - failTest:
                message: "FAILURE - ${env} - No preorder items present"

  - name: unified.us.functions.search.validatepreOrderItemDetails
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.producttile.preorderLabel
            - identifier: us.mappings.search.preorderCTA
            - identifier: us.mappings.search.preorderItem.releaseDateLabel
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.search.producttile.preorderLabel
                    equals: Preorder
            - getString:
                identifier: us.mappings.search.preorderItem.releaseDateLabel
                attribute: text
                storeIn: ReleaseDateText
      - log: Verified fulfillment options on search page - '$ReleaseDateText'


  - name: unified.us.functions.search.backOrderItem
    flow:
      - if: 
          condition: ${platform} == 'iOS' 
          then: 
            - loop:
                each: ${backOrderItem}
                storeElement: item
                storeIndex: itemIndex
                flow:
                    - executeFunction:
                        name: unified.us.functions.search.searchItem
                        params:
                          - name: searchTerm
                            string: $item
                    - storeIn:
                        key: backOrderItem
                        value: $item             
                    - sleep:
                        duration: 5000  
                    - if:
                        identifier:                   
                          label:
                              - identifier: us.mapings.search.backorderedLabel
                                contains: On backorder
                        then:
                          - log: "The back order badge validated on search page"
                          - storeIn:
                                key: backOrder
                                value: true
                          - break: true                
      - if:
          condition: ${platform} == 'Android'
          then:
              - loop:
                  each: ${backOrderItem}
                  storeElement: item
                  storeIndex: itemIndex
                  flow:
                      - executeFunction:
                          name: unified.us.functions.search.searchItem
                          params:
                            - name: searchTerm
                              string: $item
                      - storeIn:
                          key: backOrderItem
                          value: $item             
                      - sleep:
                          duration: 5000  
                      - if:
                          identifier:
                              present:
                                  - identifier: us.mapings.search.backorderedLabel
                          then:
                            - log: "The back order badge validated on search page"
                            - storeIn:
                                key: backOrder
                                value: true
                            - break: true
      - if:
          condition: ${backOrder} != true
          then:
            - failTest:
                message: "FAILURE - ${env} - No backOrder items present"


  - name: unified.us.functions.search.ad.validateSBAAd
    flow:
      - sleep:
          duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.ad.sba_brandView
          then:
            - log: sponsored_brand_amplifier(sba) ads available
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - sponsored_brand_amplifier(sba) ad is not present"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.ad.sba_brandLogo
            - identifier: us.mappings.search.ad.sba_brandPrimaryText
            - identifier: us.mappings.search.ad.sba_brandSecondaryText
            - identifier: us.mappings.search.ad.sbaProducts

      - executeFunction:
                name: unified.us.functions.search.sort.applyRetailerFilter

      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.ad.sba_brandLogo
            - identifier: us.mappings.search.ad.sba_brandPrimaryText
            - identifier: us.mappings.search.ad.sba_brandSecondaryText
            - identifier: us.mappings.search.ad.sbaProducts
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.ad.sbaProductRatings
                  - identifier: us.mappings.search.ad.sbaProductReviews
                text:
                  - identifier: us.mappings.search.ad.sba_brandSecondaryText 
                    contains: us.data.sbaAd.prod.textSponsored
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
               label:
                  - identifier: us.mappings.search.ad.sba_brandSecondaryText 
                    contains: us.data.sbaAd.prod.textSponsored
      - click:
          identifier: us.mappings.search.ad.sba_brandLogo
      - sleep: 
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.firstItem
      - goBack: true


  - name: unified.us.functions.search.ad.validateSBAItems 
    flow:
      - sleep: 
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.SBA.FirstItemTile
      - scroll:
          direction: left
          withinIdentifier: us.mappings.search.ad.sbaProducts
          scrollLimit: 1
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.SBA.OtherItemTiles 

  - name: unified.us.functions.search.ad.verifySBAAdAfterApplyingFilter
    flow:
      - sleep:
          duration: 5000
      - click: 
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - sleep:
          duration: 3000
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
          then:
            - click: 
                identifier: us.mappings.search.filterfacet.sortandFilter.sortBy
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
      - click: 
          identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.applyButton
          wait: 8000
      - scroll:
          direction: up
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.SBA.FirstItemTile
            - identifier: us.mappings.search.SBA.OtherItemTiles

  - name: unified.us.functions.search.ad.verifySBAATC
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.search.ad.sba_brandLogo
      - verifyIdentifier:
            present: 
              - identifier: us.mappings.search.SBA.ATCButton
      - log: 'Add Button present'
      - click:
          identifier: us.mappings.search.SBA.ATCButton
      - sleep:
          duration: 4000
      - click:
          identifier: us.mappings.search.SBA.ATCButton                 
      - click:
          identifier: us.mappings.search.SBA.IncrementStepper
      - click:
          identifier: us.mappings.search.SBA.FirstItemTile
      - verifyIdentifier:
          timeout: 60000
          present:
          - identifier: us.mappings.item.itemDetailsView

   # Verify and Apply Retailer filter
  - name: unified.us.functions.search.sort.applyRetailerFilter
    flow:
      - click:
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - sleep: 
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.search.filterfacet.retailerCollapsedButton
          scrollLimit: 10
          position: center
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.search.filterfacet.retailerCollapsedButton
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.search.filterfacet.sortAndFilter.retailerSection.walmartButton
          then:            
              - click: 
                  identifier: us.mappings.search.filterfacet.retailerCollapsedButton
                  wait: 3000
      - verifyIdentifier:
          timeout: 3000
          present:
            - identifier: us.mappings.search.filterfacet.sortAndFilter.retailerSection.walmartButton
      - click: 
          identifier: us.mappings.search.filterfacet.sortAndFilter.retailerSection.walmartButton
          wait: 3000      
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.applyButton
          wait: 2000

  - name: unified.us.functions.search.clickSortandFilterApplied
    flow:
      - verifyIdentifier:
          timeout: 40000
          present:
            - identifier: us.mappings.search.filterfacet.pillSortAndFilter.sortingApplied
      - click:
          identifier: us.mappings.search.filterfacet.pillSortAndFilter.sortingApplied

  - name: unified.us.functions.search.skyline_Ad_onItemPage_retry
    flow:
      - loop:
          each: ${adItems}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: unified.us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items
              - sleep: 
                  duration: 5000  
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.item.ad.skylineLogo 
                  then:
                    - log: 'Skyline ad is present'
                    - executeFunction:
                        name: unified.us.functions.search.validateSkylineAd
                    - storeIn:
                        key: skylinead
                        value: true                            
                    - break: true
      - if:
          condition: ${skylinead} != true
          then:
            - failTest:
                message: "FAILURE - ${env} - No skyline ad present for five items"

      # - executeFunction:
      #     name: unified.us.functions.item.closeItemPage

  # Function to close prompt pop up if displayed
  - name: unified.us.functions.search.promptGotItButton 
    flow: 
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.prompt.gotItButton
          then:
            - click: 
                identifier: us.mappings.search.prompt.gotItButton
            - log: Prompt to user was present!  
          else:
            - log: Prompt to user was not present!

  - name: unified.us.functions.search.validateSkylineAd
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.ad.skylineLogo
            - identifier: us.mappings.search.ad.skylineSponsoredText
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
               label:
                  - identifier: us.mappings.search.ad.skylineSponsoredText
                    contains: us.data.sbaAd.prod.textSponsored
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
               text:
                  - identifier: us.mappings.search.ad.skylineSponsoredText
                    contains: us.data.sbaAd.prod.textSponsored
      - click:
          identifier: us.mappings.item.ad.skylineLogo
      - sleep:
          duration: 3000    
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.wplus.earlyaccessScreen.productListHeader
          then:
            - verifyIdentifier:
                 present:
                  - identifier: us.mappings.search.ad.skylineCarouselHeading 
          else:         
            - click:
                identifier: us.mappings.wplus.earlyaccessScreen.productListHeader

  - name: unified.us.functions.search.verifyFitmentDetailsWithDifferentFulfillmentType
    flow:
      - scroll:
          direction: up
      - executeFunction:
          name: unified.us.functions.gic.changeFulfillment
          params:
            - name: option
              string: ${option}      
      - executeFunction:
          name: unified.us.functions.search.addMoreInfoWidget
      - if:
          condition: ${available}
          then:         
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitmentWidget
          else:
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.search.fitmentWidget

  - name: unified.us.functions.search.addMoreInfoWidget
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.search.fitment.viewResultButton
                then:
                  - click:
                      identifier: us.mappings.search.fitment.viewResultButton
                  - sleep:
                      duration: 2000                  
      - if:
          condition: ${platform} == 'Android'
          then:
            - if: 
                identifier:
                  present: 
                    - identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
                then:
                  - click:
                      identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
                      wait: 3000
                  - click:
                      identifier: us.mappings.search.addMoreInfoSaveButton
                else:
                  - if:
                      identifier:
                        present: 
                          - identifier: us.mappings.search.fitment.viewResultButton 
                      then:
                        - click:
                            identifier: us.mappings.search.fitment.viewResultButton   
                            
  - name: unified.us.function.sfs.searchPageVerifyBadge
    flow:
      - loop:
          begin: 0
          end: 2
          storeIndex: i
          flow:
            - log: $i
            - if: 
                identifier:
                  notPresent: 
                    - identifier: us.mappings.search.sfs.2DayBadge
                then:
                  - log: 'Badge not present trying ${i} time'
                  - executeFunction:
                      name: unified.us.functions.search.searchItem
                      params:
                        - name: searchTerm
                          string: ${searchTerm}
                else:
                    - log: 'Badge found'
                    - break: true
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.search.sfs.2DayBadge

  - name: unified.us.functions.search.localMarketPlaceLandingPageValidations
    flow:
      - if:
          identifier:
            notPresent: 
              - identifier: us.mappings.tabBar.search
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.searchBarSelected
            - click:
                identifier: us.mappings.home.searchBarSelected
          else: 
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.tabBar.search
            - click:
                wait: 3000
                identifier: us.mappings.tabBar.search
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.searchBarSelected
            - click:
                identifier: us.mappings.home.searchBarSelected 
                wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.searchBarSelected
      - if:
          condition: ${platform} == 'Android'
          then:
            - enterText:
                identifier: us.mappings.home.searchBarSelected
                string: ${searchTerm}
                pressEnter: true
          else: 
            - executeFunction:
                name: unified.us.functions.search.searchItem
                params:
                 - name: searchTerm
                   string: ${searchTerm}
      - sleep:
          duration: 3000
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.home.searchBar.typeaheadStorePlacement4
            - name: direction
              string: down          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.searchBar.typeaheadStorePlacement4
            # - identifier: us.mappings.home.searchBar.typeaheadStorePlacement7 Needs to be updated once feature is stable 
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.localMarketPlace.localItemCarouse.item1
            - identifier: us.mappings.search.localMarketPlace.localItemCarouse.item2
      - if: 
          condition: ${fulfillment} == 'Delivery'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.localMarketPlace.localItemCarousel.deliverySLA.item1
                  - identifier: us.mappings.search.localMarketPlace.localItemCarousel.deliverySLA.item2
      # - if: 
      #     condition: ${fulfillment} == 'Pickup'
      #     then:
      #       - verifyIdentifier:
      #           present:
      #             - identifier: us.mappings.search.localMarketPlace.localItemCarousel.pickupSLA
      - click:
          identifier: us.mappings.home.searchBar.typeaheadStorePlacement4
          wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.localMarketPlace.localItemCarousel.sellerInfoCTA.infopage

  - name: unified.us.functions.search.searchOilChangeInstallationService
    flow:      
      # Verify, click and enter search text in search field
      - verifyIdentifier:
          present:
            - identifier: us.mappings.home.searchBarSelected
      - click:
          identifier: us.mappings.home.searchBarSelected
          wait: 3000
      - enterText:
          identifier: us.mappings.home.searchBarSelected
          string: ${searchTerm}
          pressEnter: false
      - click:
          identifier: us.mappings.search.acc.autoserviceoilchange
      - sleep:
          duration: 10000

  - name: unified.us.functions.services.acc.schedulingService.clickOnScheduleAppoinment
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.services.acc.selectVehicle.scheduleAppoinment
            - name: direction
              string: down
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.services.acc.selectVehicle.scheduleAppoinment
          catch:
            flow:
              - failTest:
                  message: "ENV_FAILURE - ${env} - Schedule Appoinment button missing"
      - sleep:
          duration: 5000
      - click: 
          identifier: us.mappings.services.acc.selectVehicle.scheduleAppoinment  
 
  - name: unified.us.functions.search.verifyFitmentSponseredFitsYourVehicle
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.verifyStatusFitmentGoodFitMessage
          then:
            - log: Good Fit message displayed
          else:
            - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.verifyStatusFitmentGoodFitMessage
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
      - if:
          condition: ${platform} == 'iOS'
          then:              
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.item.verifyStatusFitmentGoodFitMessage
                    contains: This tire is a good fit
      - if:
          condition: ${platform} == 'Android'
          then:              
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.item.verifyStatusFitmentGoodFitMessage
                    contains: This tire is a good fit 

  # click on sort and filter applied button
  - name: unified.us.functions.search.clickSortandFilterWhenTwoFiltersApplied
    flow:
      - verifyIdentifier:
          timeout: 40000
          present:
            - identifier: us.mappings.search.filterfacet.pillSortAndFilter.sortingAppliedForTwoFilters
      - click:
          identifier: us.mappings.search.filterfacet.pillSortAndFilter.sortingAppliedForTwoFilters

  # Verify all badges when options are selected
  - name: unified.us.functions.search.verifyBadgingSLA
    flow:
      - if:
          condition: ${option} == 'Shipping'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.badging.shipping
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.search.badging.sla
                  - sleep:
                      duration: 4000
          else: 
              - if:
                  condition: ${option} == 'Pickup'
                  then:
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.search.badging.pickup
                        then:
                          - verifyIdentifier:
                              present:
                                - identifier: us.mappings.search.badging.sla
                          - sleep:
                              duration: 4000
                  else:    
                      - if:
                          condition: ${option} == 'Delivery'
                          then:
                            - if:
                                identifier:
                                  present:
                                    - identifier: us.mappings.search.badging.delivery
                                then:
                                  - verifyIdentifier:
                                      present:
                                        - identifier: us.mappings.search.badging.sla
                                  - sleep:
                                      duration: 4000
                          else:
                              - if:
                                  condition: ${option} == 'noIntent'
                                  then:
                                      - if:
                                          identifier:
                                            present:
                                              - identifier: us.mappings.search.badging.pickup
                                              - identifier: us.mappings.search.badging.delivery
                                              - identifier: us.mappings.search.badging.shipping
                                          then:
                                            - verifyIdentifier:
                                                present:
                                                  - identifier: us.mappings.search.badging.sla
                                            - sleep:
                                                duration: 4000

  # Clear Instore  filter
  - name: unified.us.functions.search.clearInstoreFilter
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.choice.inStore.filter
          then:
            - scroll:
                direction: up
                untilIdentifier: us.mappings.choice.inStore.filter
      - click:
          identifier: us.mappings.choice.inStore.filter
          wait: 1000

  # Apply and verify Instore filter
  - name: unified.us.functions.search.applyAndVerifyInStoreFilter
    flow:
      - scroll:
          direction: up
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.choice.inStore.filter
          then:
            - scroll:
                direction: left
                untilIdentifier: us.mappings.choice.inStore.filter
                withinIdentifier: us.mappings.search.searchShelf.filterPillContainer
                position: center
      - click:
          identifier: us.mappings.choice.inStore.filter
          wait: 7000     
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.searchShelf.verifyInstoreFilterResults
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - sleep:
          duration: 5000
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                timeout: 4000
                present:
                  - identifier: us.mappings.search.searchShelf.verifyInstoreFilterResults
          else:        
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.search.searchShelf.verifyInstoreFilterResults
                then:
                    - failTest:
                        message: "FAILURE - ${env} - 'In stock' label is not present"

  # clear sort and filter applied 
  - name: unified.us.functions.search.clearSortandFilterApplied
    flow:
      - verifyIdentifier:
          timeout: 30000
          present:
            - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.clearAll
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.sort.clearAll
          wait: 1000     
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.applyButton
      
      - verifyIdentifier:
          timeout: 40000
          present:
            - identifier: us.mappings.search.filterfacet.pillSortnFilter

  # Navigate to sortandfilterpill
  - name: unified.us.functions.search.verifySortandFilterPage
    flow: 
      - if:
          condition: ${platform} == 'iOS'
          then: 
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.search.sortBy.priceLow
                then:
                  - scroll:
                      direction: up
                      untilIdentifier: us.mappings.search.filterfacet.pillSortnFilter
          else:
            - verifyIdentifier:
                present: 
                  - identifier: us.mappings.search.filterfacet.pillSortnFilter
      - click: 
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - sleep: 
          duration: 2000  
      - if:
          condition: ${platform} == 'iOS'
          then: 
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
                then:
                  - click: 
                      identifier: us.mappings.search.filterfacet.sortByCollapsedButton
          else:
            - click: 
                identifier: us.mappings.search.filterfacet.sortandFilter.sortBy
      - sleep: 
          duration: 2000  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.filterfacet.sortAndFilter.pagetitle
            - identifier: us.mappings.search.filterfacet.sortAndFilter.closeButton
            - identifier: us.mappings.search.filterfacet.sortAndFilter.applyButton

  # Verify and Apply best Match filter
  - name: unified.us.functions.search.sort.applybestMatchFilter
    flow:
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
      - click: 
          identifier: us.mappings.search.filterfacet.sortAndFilter.sort.bestMatchRadioButton
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
                timeout: 30000
                present:
                  - identifier: us.mappings.search.filterfacet.sortAndFilter.sort.clearAll
      - click:
          identifier: us.mappings.search.filterfacet.sortAndFilter.applyButton
          wait: 8000

  - name: unified.us.functions.search.closeHowDoYouWantYourOrderBottomTray
    flow:
      - try:
          flow:
            - verifyIdentifier:
                timeout: 5000
                present:
                  - identifier: us.mappings.search.howDoYouWantYourOrderBottomTray
            - click:
                identifier: us.mappings.search.howDoYouWantYourOrderBottomTrayCloseButton
          catch:
            flow:
              - log: How do you want pop up not displayed

  - name: unified.us.functions.search.acc.schedulingService.accVehicleModule
    flow: 
      - if:
          identifier:
            present:
              - identifier: us.mappings.services.acc.tireInstallationOption.chooseYourTires
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.services.acc.tireInstallationOption.topRecommendations
            - scroll:
                direction: down
                untilIdentifier: us.mappings.services.acc.tireInstallationOption.ShopMoreTiresButton
            - click:
                identifier:  us.mappings.services.acc.tireInstallationOption.ShopMoreTiresButton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitmentWidget 
                  - identifier: us.mappings.search.accVehicleName 
            - if: 
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.search.accVehicleName 
                          contains: ${vehicleName}
            - if: 
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.search.accVehicleName 
                          contains: ${vehicleName}   
          else:
            - executeFunction:
                name: unified.us.functions.search.closeHowDoYouWantYourOrderBottomTray
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.fitmentWidget 
                  - identifier: us.mappings.search.accVehicleName 
                  - identifier: us.mappings.search.fitmentWidgetNeedMoreInfo
                  - identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
            - if: 
                condition: ${platform} == 'iOS'
                then:
                  - verifyIdentifier:
                      label:
                        - identifier: us.mappings.search.accVehicleName 
                          contains: ${vehicleName}
            - if: 
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      text:
                        - identifier: us.mappings.search.accVehicleName 
                          contains: ${vehicleName}               
            - log: Vehicle added and displayed are same
            - click:
                identifier: us.mappings.search.fitmentWidgetAddMoreInfoButton
            - sleep:
                duration: 3000
            #adding additional vehicle details
            - if: 
                condition: ${platform} == 'iOS'
                then:
                  - click:
                      identifier:  us.mappings.search.fitment.selectSubmodeldropdown
                  - click:
                      identifier: done
                  - click:
                      identifier:  us.mappings.search.fitment.selectTireSizedropdown
                  - click:
                      identifier: done
            - if: 
                condition: ${platform} == 'Android'
                then:
                    - click:
                        identifier:  us.mappings.search.fitment.selectSubmodeldropdown
                    - click:
                        identifier:  us.mappings.search.fitment.submodel
                        wait: 3000
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.search.fitment.selectTireSizedropdown
                        then:
                          - click:
                              identifier:  us.mappings.search.fitment.selectTireSizedropdown
                          - sleep:
                              duration: 3000 
                  #CEPG-201373 : on resolution of the ticket, need to add the identifier for Tire Size           
                          - click:
                              identifier:  us.mappings.search.accVehicleInfo   
            - sleep:
                duration: 2000 
            - click:
                identifier: us.mappings.search.fitment.viewResultButton

  - name: unified.us.functions.item.mp.wfs.proSeller.atc
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.orderDetails.marketplace.text.3P_ProSeller
          position: center
      - log: finished scrolling....
      - verifyIdentifier: 
          present: 
            - identifier: us.mappings.orderDetails.marketplace.text.3P_ProSeller      
      - sleep: 
           duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.fulfillment.showShippingDeliveryPickup.button
          then:
            - click: 
                identifier: us.mappings.item.fulfillment.showShippingDeliveryPickup.button
            - log: Fulfillment options field was suppressed.    
          else:
            - log: Fulfillment options field is not suppressed.           
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.orderDetails.sellerReviewsStars.module 
            - identifier: us.mappings.orderDetails.marketplace.text.3P_ProSeller            
            - identifier: us.mappings.item.3P_ProSeller_WFS              
            - identifier: us.mappings.orderDetails.sellerReviewsStars
            - identifier: us.mappings.orderDetails.sellerReviewsStars.count 
      - click:
          identifier: us.mappings.marketplace.viewSellerInfoLink
          coordinates: 30%,50% 
      - log: Coordinates were clicked
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.marketplace.contactSellerName
          then:
            - log: View seller info page loaded
          else:
            - executeFunction:
                name: us.functions.item.mp.clickSellerNameLinkUsingCoOrdinates
      - verifyIdentifier: 
          present: 
            - identifier: us.mappings.marketplace.contactSellerName 
            - identifier: us.mappings.orderDetails.marketplace.button.contactSeller
            - identifier: us.mappings.item.marketplace.contactSellerPhoneNumber
      - click:  
          identifier: us.mappings.storeMaps.backButton
      - executeFunction:
          name: us.functions.item.addItemToCart

  - name: unified.us.functions.search.redirectTerms
    flow: 
      - if: 
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.gic.changeFulfillment
                params:
                  - name: option
                    string: Shipping 
      - loop:
          each: ${redirectTermsItems}
          storeElement: items
          flow:
            - executeFunction:
                name: unified.us.functions.search.searchItem
                params:
                  - name: searchTerm
                    string: $items
            - sleep: 
                duration: 5000  
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.firstItem
                then:
                  - log: Item is present 
                else: 
                  - failTest:
                      message: "FAILURE - ${env} - Items not found"
            - executeFunction:
                name: unified.us.functions.search.clickOnFirstItem
                params:
                  - name: noAds
                    string: true                
            - executeFunction:
                name: unified.us.functions.item.addItemToCart

  - name: unified.us.functions.search.validateItemTile
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.productTile.optionsButton
            - identifier: us.mappings.myItems.itemTile.productTitle
      - if: 
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                text:
                  - identifier: us.mappings.myItems.itemTile.productTitle
                    contains: Gift Card
      - if: 
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
                label:
                  - identifier: us.mappings.myItems.itemTile.productTitle # us.mappings.search.productTitle
                    contains: Gift Card


  - name: unified.us.functions.search.nonConfigBundleItem
    flow: 
      - if:
          condition: ${platform} == 'iOS'
          then:
            - storeIn:
                key: itempresent
                value: false
            - executeFunction:
                name: unified.us.functions.gic.changeFulfillment
                params:
                  - name: option
                    string: Shipping 
            - loop:
                each: ${nonConfigBundleItem}
                storeElement: items
                storeIndex: itemIndex
                flow:
                    - click:
                        identifier: us.mappings.tabBar.search
                        doubleClick: true
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.home.searchBar
                    - click:
                        identifier: us.mappings.home.searchBar
                        wait: 3000
                    - enterText:
                        identifier: us.mappings.home.searchBar
                        string: ${items}
                        pressEnter: true
                    - executeFunction:
                        name: unified.us.functions.search.closeHowDoYouWantYourOrderBottomTray  
                    - if:
                        identifier:
                          present:
                            - identifier: us.mappings.search.zeroResultsMessage
                        then:
                          - log: No search result for item - $items
                        else:
                          - if:
                              identifier:
                                notPresent:
                                  - identifier: us.mappings.search.outOfStockBadge
                              then:
                                - log: nonConfigBundleItem is in stock
                                - executeFunction:
                                    name: us.functions.search.clickOnFirstItem  
                                - storeIn:
                                    key: itempresent
                                    value: true                            
                                - break: true
            - if:
                condition: ${itempresent} != true
                then:
                  - failTest:
                      message: "FAILURE - ${env} - No bundle item present"

      - if:
          condition: ${platform} == 'Android'
          then:
            - loop:
                each: ${nonConfigBundleItem}
                storeElement: items
                storeIndex: itemIndex
                flow:             
                    - executeFunction:
                        name: unified.us.functions.search.searchItem
                        params:
                          - name: searchTerm
                            string: $items
                    - sleep: 
                        duration: 2000   
                    - if:
                        identifier:
                          notPresent:
                            - identifier: us.mappings.search.zeroResultsMessage
                        then:
                          - if:
                              identifier:
                                notPresent:
                                  - identifier: us.mappings.cart.outofStockError 
                              then:
                                - log: nonConfigBundleItem is in stock
                                - executeFunction:
                                    name: unified.us.functions.search.clickOnFirstItem      
                                - verifyIdentifier:
                                    present:
                                        - identifier: us.mappings.item.productNameTileGeneric
                                - scroll:
                                    direction: down
                                    untilIdentifier: us.mappings.item.productNonConfigBundleView
                                    scrollLimit: 3
                                - if:
                                    identifier:
                                      present:
                                        - identifier: us.mappings.item.productNonConfigBundleView
                                    then: 
                                      - break: true
                                    else:                              
                                      - executeFunction:
                                          name: unified.us.functions.item.closeItemPage
                                    
  # Checking Pickup eligible item
  - name: unified.us.functions.search.addPickupEligibleItemToCart
    flow: 
      - executeFunction:
          name: unified.us.functions.search.verifyPickupBadge 

  - name: unified.us.functions.search.verifyPickupBadge
    flow: 
      - if:
          condition: ${platform} == 'iOS' 
          then:
              - verifyIdentifier:
                  label:
                    - identifier: us.mappings.search.pickupORShippingAvailableBadge
                      contains: pickup
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.pickupBadge

  # Add item to favorites
  - name: unified.us.functions.search.addItemToFavorites
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.searchResultsText
            - name: direction
              string: up
            - name: scrollPosition
              string: center  
      - if:
          condition: ${platform} == 'Android' 
          then:      
              - if:
                  identifier:
                    present: 
                      - identifier: us.mappings.search.firstProduct
                  then:
                    - click:
                        identifier: us.mappings.search.firstItemHeartIcon
                    - log: Added first item to favorites    
                    - click:
                        identifier: us.mappings.search.firstProduct 
                        wait: 3000              
                  else: 
                    - executeFunction:
                        name: unified.us.functions.utils.scrollIfNotVisible
                        params:
                          - name: identifier
                            string: us.mappings.search.secondProduct
                          - name: direction
                            string: down
                          - name: scrollPosition
                            string: center    
                    - click:
                        identifier: us.mappings.search.secondItemHeartIcon
                    - log: Added second item to favorites    
                    - click:
                        identifier: us.mappings.search.secondProduct 
                        wait: 3000
      - if:
          condition: ${platform} == 'ios'
          then: 
              - if:
                  identifier:
                    present: 
                      - identifier: us.mappings.search.firstProduct
                  then:
                    - verifyIdentifier:
                        label:
                           - identifier: us.mappings.search.firstItemHeartIcon
                             contains: Add to favorites   
                    - click:
                        identifier: us.mappings.search.firstItemHeartIcon
                    - log: Added first item to favorites
                    - click:
                        identifier: us.mappings.search.firstProduct
                        wait: 3000
                  else: 
                    - executeFunction:
                        name: unified.us.functions.utils.scrollIfNotVisible
                        params:
                          - name: identifier
                            string: us.mappings.search.secondProduct
                          - name: direction
                            string: down
                          - name: scrollPosition
                            string: center   
                    - verifyIdentifier:
                        label:
                           - identifier: us.mappings.search.secondItemHeartIcon
                             contains: Add to favorites   
                    - click:
                        identifier: us.mappings.search.secondItemHeartIcon
                    - log: Added second item to favorites
                    - click:
                        identifier: us.mappings.search.secondProduct
                        wait: 3000
                     
# Validate back order badge on Search
  - name: unified.us.functions.searchResults.verifyBackorderBadgePresent
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - verifyIdentifier:
                label:
                  - identifier: us.mapings.search.backorderedLabel
                    contains: On backorder
            - log: "Backorder Label is present as expected"
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                text:
                  - identifier: us.mapings.search.backorderedLabel
                    contains: On backorder 
            - log: "Backorder Label is present as expected"
        
  - name: unified.us.functions.search.verifyMultiQtyDiscountLabel
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.multiqtydiscountlabel
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.multiqtydiscountlabel
                position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.multiqtydiscountlabel
        
  - name: unified.us.functions.item.increaseToMaxQty
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.amend.item.quanity.incrementButton
          then:
            - scroll:
                direction: down
                position: center
                scrollLimit: 2
      - verifyIdentifier: 
          present:
            - identifier: us.mappings.amend.item.quanity.incrementButton
      - loop:
          begin: 0
          end: ${maxQty}
          storeIndex: i
          mode: increment
          flow:
            - click:
                identifier: us.mappings.amend.item.quanity.incrementButton
            - if:
                identifier:
                  present: 
                    - identifier: us.mappings.search.wantMoreItemText 
                then:
                  - break: true
            - log: $i
            
  - name: unified.us.functions.cart.verifyMQDDisocuntAppliedorNot
    flow:
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.cart.verifySavingsappliedLabel
            - identifier: us.mappings.cart.verifyStrikeThroughPrice
 
  - name: unified.us.functions.search.ibottaRewardsItem
    flow:
      - loop:
          each: ${ibottaRewardsItem}
          storeElement: items
          storeIndex: itemIndex
          flow:
              - executeFunction:
                  name: us.functions.search.searchItem
                  params:
                    - name: searchTerm
                      string: $items
              - storeIn:
                  key: ibottaRewardsItem
                  value: $items                       
              - sleep:
                  duration: 5000                      
              - if:
                  identifier:
                    notPresent:
                      - identifier: us.mappings.cart.outofStockError 
                  then:
                    - log: ibottaRewardsItem is in stock
                    - break: true 
  
  - name: unified.us.functions.search.pdp.addUnclippedRewardItemToCart
    flow:
      - executeFunction:
          name: us.functions.search.pdp.validatePdpPage
      - scroll:
          position: center
          direction: down
          untilIdentifier: us.mappings.search.rewardsCheckBox
      - click:
          identifier: us.mappings.search.addToCartButton
      - sleep:
          duration: 8000

  - name: unified.us.functions.search.navigateToRewardEligibleItemPage    
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.walmartCash.onboardingViewCloseButton
          then:
            - click:
                identifier:  us.mappings.account.walmartCash.onboardingViewCloseButton
      - sleep:
          duration: 7000 
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.rewardsCarousel
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: scrollLimit
              string: 3
      - click:
          identifier: us.mappings.search.rewardsCarousel
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.rewardsCheckBox
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: scrollLimit
              string: 3
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.rewardsCheckBox
            - log: Checkbox is present
          catch:
            flow:
              - storeIn:
                  key: checkboxNotFound
                  value: true
              - log: checkboxNotFound is ${checkboxNotFound}
      - if: 
          condition: ${checkboxNotFound}
          then: 
            - executeFunction:
                  name: unified.us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.search.rewardsAddedItem
                    - name: direction
                      string: down
                    - name: scrollPosition
                      string: center 
            - executeFunction:
                name: unified.us.functions.item.verifyReward.mustBuy        
            - click:
                identifier: us.mappings.search.rewardsAddedItem
          else:   
              - executeFunction:
                  name: unified.us.functions.item.verifyReward.mustBuy                         
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.search.rewardsCheckBox
              - click:
                  identifier: us.mappings.search.rewardsCheckBox

  - name: unified.us.functions.search.applyRewardsEligibleFilter
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.filterfacet.pillSortnFilter
            - name: direction
              string: up
      - click:
          identifier: us.mappings.search.filterfacet.pillSortnFilter
      - try:
          flow:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.search.filterfacet.rewardsEligibleCollapsedButton
                then:
                  - click:
                      identifier: us.mappings.search.filterfacet.rewardsEligibleCollapsedButton
                else:
                  - scroll:
                      direction: down
                      untilIdentifier: us.mappings.search.filterfacet.rewardsEligibleCollapsedButton
                  - click:
                      identifier: us.mappings.search.filterfacet.rewardsEligibleCollapsedButton
            - click:
                wait: 5000
                identifier: us.mappings.search.filterfacet.rewardsEligibledButton
          catch:
            flow:
              - log: Rewards Eligible Collapsed Button is not present in the filter panel
      - sleep:
          duration: 5000
      - click:
          identifier: us.mappings.search.filterfacet.viewResultsButton
          wait: 5000
      # Handle how do you want pop up
      - executeFunction:
          name: unified.us.functions.search.closeHowDoYouWantYourOrderBottomTray

  - name: unified.us.functions.search.verifyAddToRewardCheckboxandClipReward
    flow:
      - sleep:
          duration: 7000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.search.rewardsCheckBox
          scrollLimit: 4
      - try:
          flow:         
            - verifyIdentifier: 
                present:
                  - identifier: us.mappings.search.rewardsCheckBox      
            - click:
                identifier: us.mappings.search.rewardsCheckBox
                wait: 3000
          catch:
            flow:
              - log: unable to find reward checkbox and hence checking for reward added item
              - executeFunction:
                  name: unified.us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.search.rewardsAddedItem
                    - name: direction
                      string: up
      - verifyIdentifier: 
          present:
              - identifier: us.mappings.search.rewardsAddedItem
      - click:
          identifier: us.mappings.search.rewardsAddedItem
      - sleep:
          duration: 3000
      - executeFunction:
          name: unified.us.functions.item.verifyReward.mustBuy

  - name: unified.us.functions.search.navigateToRewardEligibleItemsSection  
    flow:
      - sleep:
          duration: 3000 
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.search.rewardsCheckBox.GetCashOffer
            - name: direction
              string: down
            - name: scrollPosition
              string: center
            - name: scrollLimit
              string: 4
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.rewardsCheckBox.GetCashOffer
            - log: Checkbox is present
          catch:
            flow:
              - storeIn:
                  key: checkboxNotFound
                  value: true
              - log: checkboxNotFound is ${checkboxNotFound}

  - name: unified.us.functions.search.goToToRewardEligibleItemsPage  
    flow:
      - try:
          flow:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.search.rewardsCheckBox
            - log: Checkbox is present
          catch:
            flow:
              - storeIn:
                  key: checkboxNotFound
                  value: true
              - log: checkboxNotFound is ${checkboxNotFound}
      - if: 
          condition: ${checkboxNotFound}
          then: 
              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.search.rewardsCheckBox.seeItemLink
                    - name: direction
                      string: down
                    - name: scrollPosition
                      string: center        
              - click:
                  identifier: us.mappings.search.rewardsCheckBox.seeItemLink
              - sleep:
                 duration: 4000

              - executeFunction:
                  name: us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.search.rewards.productName
                    - name: direction
                      string: down
                    - name: scrollPosition
                      string: center
                    - name: scrollLimit
                      string: 3        
              - verifyIdentifier:
                  present:
                    - identifier: us.mappings.search.rewards.productName
                    - identifier: us.mappings.search.rewards.rewardClippingCheckbox              
              - click:
                  identifier: us.mappings.search.rewards.productName
              - sleep:
                  duration: 3000

  - name: unified.us.functions.search.closeEasyWaytoGetOrderPopup  
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.search.easyWayToGetOrderPopupTitle
          then:
            - click:
                identifier: us.mappings.search.easyWayToGetOrderPopupGotItButton

  - name: unified.us.functions.pause.cart.verifyDeliveryFromStoreCharge
    flow :
        - if:
            identifier:
                present:
                - identifier: us.mappings.cart.navBarTitle
            then:
            - log: Cart is displayed. Verify delivery from store fulfillment fee.
            - verifyIdentifier:
                present:
                - identifier: us.mappings.cart.fulfillmentFee
            - scroll:
                direction: down
                position: center
                untilIdentifier: us.mappings.cart.subTotalItemCount
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.cart.fulfillmentFee.desc

  - name: unified.us.functions.pause.reviewOrder.verifyDeliveryFromStoreCharge
    flow :
        - if:
            identifier:
                present:
                - identifier: us.mappings.reviewOrder.navBarTitle
            then:
            - log: Review Order is displayed. Verify delivery from store fulfillment fee POS
            - scroll:
                      direction: down
                      position: center
                      untilIdentifier: us.mappings.reviewOrder.deliveryFromStore.pos.fee
            - verifyIdentifier:
                    present:
                     - identifier: us.mappings.reviewOrder.deliveryFromStore.pos.feeValue

  - name: unified.us.functions.wplus.reviewOrder.splash.clickConfirmBtn
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.splash.legalCheck
          then:
            - click:
                identifier: us.mappings.reviewOrder.splash.legalCheck
                wait: 1000
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.splash.confirmBtn
          then:
            - click:
                identifier: us.mappings.reviewOrder.splash.confirmBtn
                wait: 1000

  - name: unified.us.functions.wplus.reviewOrder.verifyDeliveryFeesWaivedOff
    flow:
      - scroll:
          direction: down
          untilIdentifier: us.mappings.cart.zeroDeliveryFeesW+
          position: center

      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.reviewOrder.pos.freeDeliveryFromStoreText
            - identifier: us.mappings.wplus.reviewOrder.mixedOrder.pos.oldThresholdValue
            - identifier: us.mappings.wplus.reviewOrder.mixedOrder.pos.thresholdValue

   
