functions:

  - name: unified.us.functions.subs.SubscriptionSelectItempage 
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then: 
            - executeFunction:
                name: unified.us.functions.subs.subscription.Subsfrequency
          else:
            - executeFunction:
                name: unified.us.functions.subs.SubscriptionEnableItempage

  #Subscription Regular Item Frequency Details
  - name: unified.us.functions.subs.subscription.Subsfrequency
    flow:
      - sleep:
          duration: 3000
      - scroll:
         direction: down
         untilIdentifier: us.mappings.item.itemPrice
         position: center
         scrollLimit: 3
      # - executeFunction:
      #     name: us.functions.utils.scrollIfNotVisible
      #     params:
      #       - name: identifier
      #         string: us.mappings.item.itemPrice
      #       - name: direction
      #         string: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsFrequency
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.SubsFrequency
            - click: 
                identifier: us.mappings.item.SubsFrequency                                                                
                wait: 1000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.item.SubsFrequency.GetitEvery
            - click: 
                identifier: us.mappings.item.SubsFrequency.GetitEvery                                                               
                wait: 1000
            - if: 
                condition: ${subsfrequency} != null
                then:      
                  - scroll:
                      direction: right 
                      withinIdentifier: us.mappings.item.subsriptionFrequency.section
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.item.subsriptionFrequency
                        - name: direction
                          string: left     
                        - name: identifierScope
                          string: us.mappings.item.subsriptionFrequency.section
                  # - scroll:
                  #     direction: left
                  #     scrollLimit: 1                            
                  #     withinIdentifier: us.mappings.item.subsriptionFrequency.section
                  #     untilIdentifier: us.mappings.item.subsriptionFrequency.3month
                  #     position: center  
                  - click:
                      identifier: us.mappings.item.subsriptionFrequency
                else:
                  - click:
                      identifier: us.mappings.item.subsriptionFrequency.mostCommon
            - click:
                identifier: us.mappings.subscribe.subscribeButton
                wait: 1000          


  - name: unified.us.functions.subs.SubscriptionEnableItempage
    flow: 
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.earlyAccessBanner
          then:
            - click:
                identifier: us.mappings.item.earlyAccessBannerCloseBTN
      - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.subscribeRadiobutton
                  - name: direction
                    string: down                     
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.subscribeRadiobutton
      - executeFunction:
                name: us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.oneTimeSubscribe
                  - name: direction
                    string: down    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.oneTimeSubscribe  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subs.subscriptionPriceLabel   
      - getString:
          identifier: us.mappings.subs.subscriptionPriceLabel 
          storeIn: subsPrice 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${subsPrice}
          getResponse:
            storeIn: subscriptionPriceAmount
      - log: Subscribe to auto delivery amount - ${subscriptionPriceAmount}
      - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.subs.normalPriceLabel
                  - name: direction
                    string: down   
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subs.normalPriceLabel 
      - getString:
          identifier: us.mappings.subs.normalPriceLabel 
          storeIn: normalPrice 
      - executeNode:
          file: us/e2e-tests/helpers/splitPayment.js
          args:
            - value: ${normalPrice}
          getResponse:
            storeIn: normalPriceAmount
      - log: one time purchase amount - ${normalPriceAmount}            
      - if: 
          condition:  ${subscriptionPriceAmount} == ${normalPriceAmount}  
          then:
            - log:
                message: "Both prices are same"
                color: CYAN_BOLD
      - sleep:
          duration: 2000                
      - click: 
          identifier: us.mappings.item.subscribeRadiobutton
          wait: 1000
      - if: 
          condition: ${subsfrequency} != null
          then:  
            - scroll:
                direction: right 
                withinIdentifier: us.mappings.myItems.reorder.subscriptionFREQ
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.item.subsriptionFrequency
                  - name: direction
                    string: left     
                  - name: identifierScope
                    string: us.mappings.myItems.reorder.subscriptionFREQ
            - click:
                identifier: us.mappings.item.subsriptionFrequency
          else:
            - click:
                identifier: us.mappings.item.subsriptionFrequency.mostCommon
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPageInWalmart
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subscribe.subscribeButton
      - click: 
          identifier: us.mappings.subscribe.subscribeButton
      - sleep:
          duration: 4000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.reorder.subscriptionFREQ
           # - identifier: us.mappings.ibottaRewards.subscriptionItems.quantity1
      - sleep:
          duration: 2000


  - name: unified.us.functions.sub.validateTheSubscriptionFrequencyInCartPage
    flow:
      - sleep:
          duration: 3000
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.subs.subscriptionFrequency
            - name: direction
              string: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.subs.subscriptionFrequency
          then:
            - log: "Selected frequency of subscription is displayed as expected"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - The subscription frequency should be shown but is not"

  - name: unified.us.functions.orderConfirmation.navigateToSubscriptionPage
    flow:
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.orderDetails.item.details.chevron
      - scroll:
          direction: down
          untilIdentifier: us.mappings.orderConfirmation.mangeSubscriptionNowCTA
          position: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderConfirmation.mangeSubscriptionNowCTA
      - click:
          identifier: us.mappings.orderConfirmation.mangeSubscriptionNowCTA
      - log: Navigated to Subscription Mnanagement page from Order Confirmation page
      - sleep:
          duration: 3000

  - name: unified.us.functions.subs.subscription.navigateToManagesubsPage
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                present: 
                - identifier: us.mappings.manageSubscription.subscriptionManagePageCTA
            - click:
                identifier: us.mappings.manageSubscription.subscriptionManagePageCTA
            - sleep:
                duration: 4000
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscription.subscriptionPageTitle
                  - identifier: us.mappings.subscription.subscriptionFreq
                  - identifier: us.mappings.subscription.subscriptionDeliveryDay
            - click:
                identifier: us.mappings.subscription.subscriptionPageNavigation
            - sleep:
                duration: 5000

  - name: unified.us.functions.subs.subscription.skipSubscription
    flow:
      - verifyIdentifier:
          present:
           - identifier: us.mappings.item.SubsManageSubscriptions.selectedFerquency
           - identifier: us.mappings.item.SubsManageSubscriptions.nextDeliveryInfo        
      - verifyIdentifier:
          present:
           - identifier: us.mappings.item.SubsManageSubscriptions.manageSubPageTitle
           - identifier: us.mappings.item.SubsManageSubscriptions.currentFrequency
           - identifier: us.mappings.item.SubsManageSubscriptions.nextDeliveryDate
           - identifier: us.mappings.item.SubsManageSubscriptions.cardDetails
           - identifier: us.mappings.item.SubsManageSubscriptions.editFrequenyButton
           - identifier: us.mappings.item.SubsManageSubscriptions.editItemsButton
           - identifier: us.mappings.item.SubsManageSubscriptions.subscribedItemQuantity
           - identifier: us.mappings.item.SubsManageSubscriptions.unsubscribeButton
           - identifier: us.mappings.item.SubsManageSubscriptions.skipButton
      - click:
          identifier: us.mappings.item.SubsManageSubscriptions.skipButton
          wait: 2000 
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.subscribe.skipSubscriptionPopupYesSkipButton
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscribe.skipSubscriptionPopupTitle
                  - identifier: us.mappings.subscribe.skipSubscriptionPopupNeverMindButton
            - click:
                identifier: us.mappings.subscribe.skipSubscriptionPopupYesSkipButton
            - sleep:
               duration: 3000  
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.subscribe.subscriptionUpdateSuccessMessage 
                then:
                  - log: "Subscription skipped Successfully"
                else: 
                  - failTest:
                      message: "FAILURE - ${env} - Subscription Updated Message Not Displayed for Skiping Subscription"
      - log: "Subscription Skipped Successfully"


  - name: unified.us.functions.subs.changeFrequencySubscription
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsManageSubscriptions.editFrequenyButton
          then:
            - click:
                identifier: us.mappings.item.SubsManageSubscriptions.editFrequenyButton
            - sleep:
                duration: 2000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscribe.frequencyChangeWindowTitle
            - click:
                identifier: us.mappings.subscribe.threeWeekSubscription
                wait: 1000
            - if:
                condition: ${platform} == 'iOS'
                then:
                  - click:
                      identifier: us.mappings.subs.updateSubscriptionFrequencyButton
                      wait: 2000
                else:
                  - click:
                      identifier: us.mappings.subs.addSubscriptionToCartButton
                      wait: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.checkout.verifySubscriptionTermsBottomSheet
                then:
                  - if:
                      condition: ${platform} == 'iOS'
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.checkout.verifySubscriptionTermsBottomSheet
                            then:
                              - click:
                                  identifier: us.mappings.checkout.subscriptionBootomSheet.veifyIAgreeButton
                      else:
                        - executeFunction:
                            name: us.functions.subs.validateNewUISubscriptioTermsPageAndAccept 
            - sleep:
               duration: 3000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.subscribe.frequencyChangeSuccessMessage
                then:
                  - log: "Frequency Changed Successfully"  
                else:
                  - failTest:
                      message: "ENV_FAILURE - Subscription Frequency not updated" 

#Subscription Item Quantity change function
  - name: unified.us.functions.subs.changeSubscriptionItemQuantity
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsManageSubscriptions.editItemsButton
          then:
            - click:
                identifier: us.mappings.item.SubsManageSubscriptions.editItemsButton
            - sleep:
                duration: 4000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscribe.manageSubscription.editPageTitle
                  - identifier: us.mappings.subscribe.manageSubscription.quantityIncreaseButton
            - click:
                identifier: us.mappings.subscribe.manageSubscription.quantityIncreaseButton
                wait: 1000
            - click:
                identifier: us.mappings.subscribe.manageSubscription.updateSubscriptionButton
                wait: 2000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.checkout.verifySubscriptionTermsBottomSheet # us.mappings.subscribe.manageSubscription.termsAndConditionsPopUP
                then:
                  - if:
                      condition: ${platform} == 'iOS'
                      then:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.checkout.verifySubscriptionTermsBottomSheet
                            then:
                              - click:
                                  identifier: us.mappings.checkout.subscriptionBootomSheet.veifyIAgreeButton
                      else:
                        - executeFunction:
                            name: us.functions.subs.validateNewUISubscriptioTermsPageAndAccept         
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.subscribe.frequencyChangeSuccessMessage
                then:
                  - log: "Item Quantity Updated Successfully"  
                else:
                  - failTest:
                      message: "ENV_FAILURE - Subscription Item Count not updated"  

# Cancel subscription
  - name: unified.us.functions.subs.cancelNormalSubscriptions
    flow:
      - sleep:
          duration: 3000    
      - click: 
          identifier: us.mappings.item.SubsManageSubscriptions.unsubscribeButton 
          wait: 1000  
      - sleep:
          duration: 2000 
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.SubsManageSubscriptions.unsubscribeConfirmationPopup
          then:
            - click: 
                identifier: us.mappings.item.cancelsubs.cancelsubsreason
                wait: 2000
            - click: 
                identifier: us.mappings.item.cancelsubs.yesUnsubscribeButton
      - sleep:
          duration: 4000                                                
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.cancelsubs.browseSubscriptionButton
          then:
            - log: "Unsubscribed Subscription Successfully"

# Set up subscription from item page
  - name: unified.us.functions.item.setUpsubscription
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.item.subscribeOption
            - name: direction
              string: down
            - name: scrollPosition
              string: center    
      - click:
          identifier: us.mappings.item.subscribeOption    
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.setupSubscription
      - click:
          identifier: us.mappings.item.setupSubscription
      - if:
          identifier:
            present:
              - identifier: us.mappings.item.setupSubscription.agreeCheckbox
          then:
            - click:
                identifier: us.mappings.item.setupSubscription.agreeCheckbox          
           # # Adding validation for FTC legal requirements initiative - will enable when the code is in teflon
           #  - verifyIdentifier:
           #     present:
           #       - identifier: us.mappings.item.setupSubscription.greyAlertMessage
           #       - identifier: us.mappings.item.setupsubscription.verifyIAgreeButton
            - click:
               identifier: us.mappings.item.setupSubscription.getItDeliveredTomorrow
            - click:
               identifier: us.mappings.item.setupSubscription.addSubcriptionToDelivery  

# Navigate to Subscription page on Account
  - name: unified.us.functions.account.navigateToSubscriptionPage
    flow:
      - scroll:
          untilIdentifier: us.mappings.account.subscriptionsAndPlans
          direction: down
          position: center
      - click: 
          identifier: us.mappings.account.subscriptionsAndPlans
          wait: 1000
      - click: 
          identifier: us.mappings.subscription.itemsubs      

  #Click Subscribed items 
  - name: unified.us.functions.subs.selectSubscribedItem
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.SubsManageSubscriptions.selectFirstSubscribedItem
      - click:
          identifier: us.mappings.item.SubsManageSubscriptions.selectFirstSubscribedItem
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.popup.technicalError
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.popup.okButton
            - click:
                identifier: us.mappings.popup.okButton
      - sleep:
          duration: 3000           

  #Edit and existing Subscription based on New UI
  - name: unified.us.functions.subs.editExistingSubscriptionNewUI
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: us.mappings.item.SubsManageSubscriptions.editItemsButton
          wait: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subscribe.manageSubscription.editPageTitle
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.subscribe.manageSubscription.maxTextLabel
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscribe.manageSubscription.quantityIncreaseButton
                  - identifier: us.mappings.subscribe.manageSubscription.quantityDecreaseButton
            - sleep:
                duration: 2000
      - if:     
           condition: ${platform} == 'iOS'           
           then:
             - if:
                 identifier:
                    present:
                      - identifier: us.mappings.amend.item.quanity.incrementButton
                    visible:
                      - identifier: us.mappings.amend.item.quanity.incrementButton
                        value: "true"
                 then:
                    - click:
                        identifier: us.mappings.amend.item.quanity.incrementButton
                 else:
                    - click:
                        identifier: us.mappings.myItems.reorder.subscription.stepper.decrementBtn      
      - if:     
           condition: ${platform} == 'Android'           
           then:
             - if:
                 identifier:
                    present:
                      - identifier: us.mappings.amend.item.quanity.incrementButton
                    enabled:
                      - identifier: us.mappings.amend.item.quanity.incrementButton
                        value: true
                 then:
                    - click:
                        identifier: us.mappings.amend.item.quanity.incrementButton
                 else:
                    - click:
                        identifier: us.mappings.myItems.reorder.subscription.stepper.decrementBtn           
      - click:
          identifier: us.mappings.subscribe.manageSubscription.updateSubscriptionButton     
          wait: 3000                
      - if:
          identifier:
            present:
              - identifier: us.mappings.checkout.subscriptionBootomSheet.veifyIAgreeButton
          then:
            - click:
                identifier: us.mappings.checkout.subscriptionBootomSheet.veifyIAgreeButton   
      - if:
          identifier:
            present:
              - identifier: us.mappings.subscribe.subscriptionUpdateSuccessMessage 
          then:
              - log: "Subscription Quantity updated Successfully"
          else: 
              - failTest:
                  message: "FAILURE - ${env} - Subscription Quantity Not updated Successfully"                                                        

  #Edit Subscription Frequency 
  - name: unified.us.functions.subs.editFrequencySelection
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.SubsManageSubscriptions.editFrequenyButton
      - click:
          identifier: us.mappings.item.SubsManageSubscriptions.editFrequenyButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subscribe.manageSubscription.twoWeekFrequency         
            - identifier: us.mappings.subscribe.manageSubscription.threeWeekFrequency 
      - if:
          identifier:
            present:
              - identifier: us.mappings.subscribe.manageSubscription.twoWeekSelectedFrequency
          then:
            - click:
                identifier: us.mappings.subscribe.manageSubscription.threeWeekFrequency 
      - if:
          identifier:
            present:
              - identifier: us.mappings.subscribe.manageSubscription.threeWeekSelectedFrequency
          then:
            - click:
                identifier: us.mappings.subscribe.manageSubscription.twoWeekFrequency   
      - sleep:
          duration: 2000          
      - click:
          identifier: us.mappings.subscribe.manageSubscription.updateButtonForFrequency
      - sleep:
          duration: 4000 
      - click:
          identifier: us.mappings.checkout.subscriptionBootomSheet.veifyIAgreeButton
      - if:
          identifier:
              present:
                - identifier: us.mappings.subscribe.subscriptionUpdateSuccessMessage 
          then:
              - log: "Subscription Quantity updated Successfully"
          else: 
              - failTest:
                  message: "FAILURE - ${env} - Subscription Quantity Not updated Successfully"            

  #Confirm Subscription Frequency 
  - name: unified.us.functions.subs.confirmFrequencySelection
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopup
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupCloseBTN
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupBackBTN
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupMessage
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupConfirmBTN
            - identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupNoThanksBTN
      - click:
          identifier: us.mappings.subscribe.manageSubscription.confirmFreqChangePopupConfirmBTN
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.popup.technicalError
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.popup.okButton
            - click:
                identifier: us.mappings.popup.okButton
      - sleep:
          duration: 3000          



