functions:
  - name: unified.us.functions.account.naviagteToMenuItems
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.menuSettingsButton
          then:
            - if:
                condition: ${menuItemName} == 'Wallet' || ${menuItemName} == 'Addresses'
                then:
                  - click:
                      identifier: us.mappings.account.menuSettingsButton
                  - sleep:
                      duration: 3000
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.account.menuItemName
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - executeFunction:
          name: unified.us.functions.account.validateMenuItemPresent
      - click:
          identifier: us.mappings.account.menuItemName
          wait: 1000
      - storeIn:
          key: altMenuItemName
          value: "null"

  - name: unified.us.functions.account.validateMenuItemPresent
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.menuItemName
          then:
            - log: Validate  ${menuItemName} menu button successful
          else:
            - failTest:
                message: "FAILURE - ${env} - ${menuItemName} Button Missing "

  # verify track order
  - name: unified.us.functions.account.nonsignin.verify.trackOrder
    flow:
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Track order
      - verifyIdentifier:
          present:
            - identifier: us.mappings.global.authentication.emailField
      - click:
          identifier: us.mappings.global.closeButton

  - name: unified.us.functions.account.wplusVerify
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.walmartPlusLogo
      - goBack: true

  # verify Purchase History
  - name: unified.us.functions.account.verify.purchaseHistory
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.onboarding.toolTip
          then:
            - click:
                identifier: us.mappings.global.onboarding.toolTipCloseButton
                coordinates: 50%, 50%
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Purchase history
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.purchaseHistory.viewAllOrders
          then:
            - click:
                identifier: us.mappings.account.purchaseHistory.viewAllOrders
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderHistory.title
      - goBack: true

  # Verify Start free trial
  - name: unified.us.functions.account.wplus.startTrialVerify
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.account.naviagteToMenuItems
                params:
                  - name: menuItemName
                    string: WplusNonMemberBannerView.walmartPlusButton
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.account.naviagteToMenuItems
                params:
                  - name: menuItemName
                    string: Start your free 30-day trial
                  - name: altMenuItemName
                    string: Explore new benefits and more
            - storeIn:
                key: altMenuItemName
                value: "null"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.account.startFreeTrial.text
      - goBack: true

  # verify Walmart Cash
  # [optional] ${hasCashActivity} - Boolean - To verify cash activity. Currently verifies only the link, can be extended if needed.
  - name: unified.us.functions.account.verify.walmartCash
    flow:
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Walmart Cash
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.walmartCash.onboardingViewCloseButton
          then:
            - click:
                identifier: us.mappings.account.walmartCash.onboardingViewCloseButton
                
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.walmartCash.Header
            - identifier: us.mappings.homePage.walmartCashBanner.titleHeader

      - if:
          condition: ${hasCashPending}
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.homePage.walmartCashBanner.totalWalmartCashPendingTextAndAmount
            
      - if:
          condition: ${hasCashActivity}
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.homePage.walmartCashBanner.viewActivity

      - goBack: true

  # Verify Walmart Cash Dashboard
  - name: unified.us.functions.account.verify.walmartCashDashboard
    flow:
      - click:
          identifier:  us.mappings.homePage.walmartCashBanner.viewActivity

      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: us.mappings.ibotta.cashDashboard.currentCashBalance
            - identifier: us.mappings.ibotta.seeTransactionsLink
            - identifier: us.mappings.ibotta.cashDashboardCashTransaction
            - identifier: us.mappings.ibotta.cashDashboard.cashTransactionText

      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.ibotta.pieChartCTAs
            - name: direction
              string: down
              
      - verifyIdentifier:
          present:
            - identifier: us.mappings.ibotta.pieChart
            - identifier: us.mappings.ibotta.dashboard.30days
            - identifier: us.mappings.ibotta.dashboard.90days
            - identifier: us.mappings.ibotta.dashboard.lifetime
            - identifier: us.mappings.ibotta.cashDashboardCashTransaction
    
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.ibotta.dashBoard.badge
            - name: direction
              string: down

      - verifyIdentifier:
          present:
            - identifier: us.mappings.ibotta.dashBoard.badgeOne

  # verify Reorder
  - name: unified.us.functions.account.verify.reorder
    flow:
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Reorder
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.messageLabel
      - executeFunction:
          name: unified.us.functions.global.navigation.toTab
          params:
            - name: tabName
              string: Account

  # verify Pets
  - name: unified.us.functions.account.verify.pets
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.account.pets
            - name: direction
              string: down
      - click:
          identifier: us.mappings.account.pets
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.myPets.petsHeader
      - sleep:
          duration: 2000
      - goBack: true

  # Verify Wallet
  - name: unified.us.functions.account.settings.verify.Wallet
    flow:
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Wallet
      - verifyIdentifier:
          present:
            - identifier: us.mappings.accounts.wallet.title
      - goBack: true

  # Verify Passkey
  - name: unified.us.functions.account.settings.verify.passkey
    flow:
      - sleep:
          duration: 3000
      - scroll:
          direction: up
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Passkeys
            - name: altMenuItemName
              string: Face ID & passkeys
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.settings.Passkey.createNewPasskey.button
      - goBack: true

  # Verify addresses
  - name: unified.us.functions.account.settings.verify.addresses
    flow:
      - sleep:
          duration: 3000
      - scroll:
          direction: up
      - executeFunction:
          name: unified.us.functions.account.naviagteToMenuItems
          params:
            - name: menuItemName
              string: Addresses
      - verifyIdentifier:
          present:
            - identifier: us.mappings.accounts.address.title 
  
  - name: unified.us.functions.account.navigateToWalmartPlusBenefits
    flow:
      - sleep:
          duration: 2000
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.walmartplus
          then:
            - log: The walmartPlus CTA displayed
          else: 
            - scroll:
                direction: down
                untilIdentifier: us.mappings.account.walmartplus
                timeout: 4000
      - click:
          identifier: us.mappings.account.walmartplus
          #doubleClick: true
      - sleep:
          duration: 5000
      - if:
            condition: ${platform} == 'Android'
            then:
              - executeFunction:
                   name: us.functions.wplus.handle.viewFullScreen
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.reelsScreen.close
          then:
            - goBack: true
            - scroll:
                direction: down
            - scroll: 
                direction: up
            - click:
                identifier: us.mappings.wplus.reelsScreen.close
            - sleep:
                duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.signup.claimOffersNowCTA
          then:
            - click: 
                identifier: us.mappings.wplus.signup.claimOffersNowCTA
                wait: 5000       
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.openWalmartPlusPage
          then:
            - click:
                identifier: us.mappings.wplus.openWalmartPlusPage
                doubleClick: true
            - sleep:
                duration: 5000 
      - if:
         identifier:
            present:
               - identifier: us.mappings.wplus.RafPopupScreen
         then:
            - click:
                identifier: us.mappings.wlus.membershipBottomsheetClose

  - name: unified.us.functions.account.verifyChatbot
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.accountHeader
      - scroll:
          direction: down
          untilIdentifier: us.mappings.account.cuntomerSerevice
          position: center
      - click:
          identifier: us.mappings.account.cuntomerSerevice
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.HelpCenterText
      - scroll:
          direction: down
          untilIdentifier: us.mappings.account.cuntomerSerevice.verifyContactUs
      - click:
          identifier: us.mappings.account.cuntomerSerevice.verifyContactUs
      - sleep:
          duration: 3000
      - if:
          condition: ${platform} == 'Android'
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.home.signInAnotherWay
                then:
                  - executeFunction:
                      name: us.functions.home.signInAnotherWay
      - if:
          identifier:
            present:
              - identifier: us.mappings.global.authentication.emailField
          then:
            - log: Sign in required
            - executeFunction:
                name: unified.us.functions.global.authentication.signInAccountWithParams
                params:
                  - name: android.email
                    string: us.data.prod.chatbotflow.android.email
                  - name: android.password
                    string: us.data.prod.chatbotflow.android.password
                  - name: ios.email
                    string: us.data.ios.prod.C2671453.email
                  - name: ios.password
                    string: us.data.ios.prod.C2671453.password
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.chatBot
      - log: chatbot launched
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.chatBotAnOrder
            - identifier: us.mappings.account.chatBotReturnOrRefund
            - identifier: us.mappings.account.chatBotBillingOrCharges
            - identifier: us.mappings.account.chatBotSendButton

  - name: unified.us.functions.wplus.validateECOrIOBModule
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.account.wplusModuleLimitedTimePromoSubHeading
          then:
            - executeFunction:
                name: unified.us.functions.wplus.validateECModule
            - executeFunction:
                name: unified.us.functions.wplus.validateBenefitsCTA
            - executeFunction:
                name: unified.us.functions.wplus.validateGetTheAppOption
            - executeFunction:
                name: unified.us.functions.wplus.validateHaveItShipped
            - executeFunction:
                name: unified.us.functions.wplus.validateSetUpHomeEntertainment

          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.wplus.account.wplusModuleHeader
            - executeFunction:
                name: unified.us.functions.wplus.validateBenefitsCTA
            - executeFunction:
                name: unified.us.functions.wplus.validateFSNMOption
            - executeFunction:
                name: unified.us.functions.wplus.validateFDFSOption

  - name: unified.us.functions.wplus.validateECModule
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.account.wplusModuleLimitedTimePromoSubHeading
            - identifier: us.mappings.wplus.account.wplusModuleGetTheApp
            - identifier: us.mappings.wplus.account.wplusModuleHaveItShipped
            - identifier: us.mappings.wplus.account.wplusModuleAtHomeEntertainment

  - name: unified.us.functions.wplus.validateBenefitsCTA
    flow:
      - executeFunction:
          name: us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.wplus.account.seeAllBenefitsButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center

      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.account.seeAllBenefitsButton
      - click:
          identifier: us.mappings.wplus.account.seeAllBenefitsButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.benefits.title

      - log: "Benefits CTA exists and user is navigated to Benefits screen successfully"
      - goBack: true

  - name: unified.us.functions.wplus.validateGetTheAppOption
    flow:
      - click:
          identifier: us.mappings.wplus.account.wplusModuleGetTheApp
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.downloadTheAppButton
      - click:
          identifier: us.mappings.ibottaRewards.walmartCash.infoSheet.closeButton

  - name: unified.us.functions.wplus.validateHaveItShipped
    flow:
      - click:
          identifier: us.mappings.wplus.account.wplusModuleHaveItShipped
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.startShoppingButton
      - click:
          identifier: us.mappings.ibottaRewards.walmartCash.infoSheet.closeButton

  - name: unified.us.functions.wplus.validateSetUpHomeEntertainment
    flow:
      - click:
          identifier: us.mappings.wplus.account.wplusModuleAtHomeEntertainment
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.getStartedButton
      - click:
          identifier: us.mappings.ibottaRewards.walmartCash.infoSheet.closeButton

  - name: unified.us.functions.wplus.validateFSNMOption
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.account.fsnmTask
            - identifier: us.mappings.wplus.account.fsnmBenefitTitle

      - click:
          identifier: us.mappings.wplus.account.fsnmTask

        # closing any seasonal offer banners
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.dealsBottomSheet
          then:
            - click:
                identifier: us.mappings.wplus.dealsBottomSheet

      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.resultsForSavingsHeader

      - log: "User is navigated to FSNM screen as expected"
      - goBack: true

  - name: unified.us.functions.wplus.validateFDFSOption
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.wplus.account.fdfsBenefitTitle
            - identifier: us.mappings.wplus.account.fdfsTask

      - click:
          identifier: us.mappings.wplus.account.fdfsTask

      # There is a open bug (CEPG-273735) where we not seeing "Shop Groceries" header
      # Veryfying "Shop essentials" instead of "Shop Groceries"
      - if:
          identifier:
            present:
              - identifier: us.mappings.browse.fdfsScreen.sectionHeading
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.browse.fdfsScreen.sectionHeading
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.browse.fdfsScreen.shopMemberpicks

      - log: "User is navigated to FDFS screen as expected"
      - goBack: true

  - name: unified.us.functions.account.removeAddress
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.cancellation.editItem.removeLink
          then:
            - click:
                identifier: us.mappings.cancellation.editItem.removeLink
                wait: 1000
            - sleep:
                duration: 2000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.account.removeAddressButton
            - click:
                identifier: us.mappings.account.removeAddressButton
                wait: 1000
            - sleep:
                duration: 5000
          else:
            - log: No existing address that has to be removed


  - name: unified.us.functions.account.addAddress
    flow:            
      - if:
          identifier:
            present:
              - identifier: us.mappings.deliveryAddress.add.firstName
          then:
            - log: "Address screen already loaded"
          else:
            - click:
                identifier: us.mappings.account.deliveryAddress.addNewAddress 
            - sleep:
               duration: 2000
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.deliveryAddress.add.title
      - if: 
          condition: ${firstName} != null
          then:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.firstName
                string: ${firstName}
                clearField: true
                clickFirst: true
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      - if: 
          condition: ${lastName} != null
          then:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.lastName
                string: ${lastName}
                clearField: true
                clickFirst: true 
                pressEnter: true
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if: 
                condition: ${streetAddress} != null
                then:
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.streetAddress
                      string: ${streetAddress}
                  # Handling Address suggestion if displayed
                  - sleep:
                      duration: 2000
                  - if:
                      condition: ${skippingSuggestion}
                      then:
                        - log: skipping Suggestion list
                      else:
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.deliveryAddress.addressSuggestionList.firstAddress
                            then:
                              - click:
                                  identifier: us.mappings.deliveryAddress.addressSuggestionList.firstAddress
                              - storeIn:
                                  key: skippingSuggestion
                                  value: false
                  - if:
                      condition: ${skippingSuggestion}
                      then:
                        - storeIn: 
                            key: skippingSuggestion
                            value: false
                        - executeFunction:
                            name: unified.us.functions.utils.dismissKeyboard
                        - if: 
                            condition: ${state} != null
                            then:
                              - click:
                                  identifier: us.mappings.deliveryAddress.add.state
                              - enterText:
                                  identifier: us.mappings.deliveryAddress.add.statePickerWheel
                                  string: ${state}
                              - executeFunction:
                                  name: unified.us.functions.utils.dismissKeyboard
                        - if: 
                            condition: ${city} != null
                            then:
                              - enterText:
                                  identifier: us.mappings.deliveryAddress.add.city
                                  string: ${city}
                                  clearField: true
                                  clickFirst: true              
                              - executeFunction:
                                  name: unified.us.functions.utils.dismissKeyboard
                        - if: 
                            condition: ${zipcode} != null
                            then:
                              - enterText:
                                  identifier: us.mappings.deliveryAddress.add.zipcode
                                  string: ${zipcode}
                                  clearField: true
                                  clickFirst: true              
                              - executeFunction:
                                  name: unified.us.functions.utils.dismissKeyboard                                                
          else:
            - if: 
                condition: ${streetAddress} != null
                then:
                # Accept share precise location pop up if displayed
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                # Accept location permission pop up if displayed
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.shareLocation
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.shareLocation
                        - click:
                            identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                  - click:
                      identifier: us.mappings.deliveryAddress.add.streetAddress
                  # Accept share precise location pop up if displayed
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                  # Accept location permission pop up if displayed
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.streetAddress
                      string: ${streetAddress}
                      pressEnter: true
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
                      then:
                        - storeIn:
                            key: cityState
                            value: ${city}, ${state}
                        - if:
                            identifier:
                              present:
                                - identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                            then:
                              - click:
                                  identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                              - sleep:
                                  duration: 2000
                            else:
                              - click:
                                  identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
                      else:
                        - if: 
                            condition: ${state} != null
                            then:
                              - click:
                                  identifier: us.mappings.addDeliveryAddress.stateDropdown 
                              - enterText:
                                  identifier: us.mappings.addDeliveryAddress.stateDropdown 
                                  string: ${state}
                                  clearField: true
                                  clickFirst: true
                              - if: 
                                  condition: ${city} != null
                                  then:
                                    - enterText:
                                        identifier: us.mappings.deliveryAddress.add.city
                                        string: ${city}
                                        clearField: true
                                        clickFirst: true              
                                    - executeFunction:
                                        name: unified.us.functions.utils.dismissKeyboard
                              - if: 
                                  condition: ${zipcode} != null
                                  then:
                                    - enterText:
                                        identifier: us.mappings.deliveryAddress.add.zipcode
                                        string: ${zipcode}
                                        clearField: true
                                        clickFirst: true
                                    - executeFunction:
                                        name: unified.us.functions.utils.dismissKeyboard
                  - executeFunction:
                      name: unified.us.functions.utils.dismissKeyboard
      - if: 
          condition: ${phoneNumber} != null
          then:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.phoneNumber
                string: ${phoneNumber}
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      - click:
          identifier: us.mappings.deliveryAddress.add.saveButton


  - name: unified.us.functions.account.invaildAddress.addAddress
    flow:
      - executeFunction:
          name: unified.us.functions.account.addAddress
      - verifyIdentifier:
          present:
            - identifier: us.mappings.deliveryAddress.invalidZipCodeMessage
      - log: Incorrect Zip Code. Valid zip code should be a 5-digit number
      - click: 
          identifier: us.mappings.global.closeButton


  # Add Delivery address
  - name: unified.us.functions.account.deliveryAddress.addAddress
    flow:
        - if:
            identifier:
              present:
                - identifier: us.mappings.account.deliveryAddress.addAddress
            then:
              - log: "Add Address Screen loaded"

        - click:
            identifier: us.mappings.account.deliveryAddress.addAddress 
 
        - verifyIdentifier:
           present:
            - identifier: us.mappings.deliveryAddress.add.title

   # Start entering First and Last name
        - enterText:
            identifier: us.mappings.deliveryAddress.add.firstName
            string: ${firstName}
      
        - click:
            identifier: us.mappings.deliveryAddress.add.lastName
        - enterText:
            identifier: us.mappings.deliveryAddress.add.lastName
            string: ${lastName}      

   # Add address on Android and handle share location and autosuggestion 
        - if:
            condition: ${platform} == 'Android'
            then:
            - goBack: true

            - click:
                identifier: us.mappings.deliveryAddress.add.streetAddress
            - sleep:
                duration: 3000
            # Accept share precise location pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
            # Accept location permission pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.shareLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.shareLocation
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - enterText:
                identifier: us.mappings.deliveryAddress.add.streetAddress
                string: ${streetAddress}
            - goBack: true
            - sleep:
                duration: 3000
            # Wait and validate if address suggestion is displayed or not
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
                then:
                  - storeIn:
                      key: cityState
                      value: ${city}, ${state}
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                        - sleep:
                            duration: 2000
                      else:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
                # Enter city, state and pin manually if address suggestion is not displayed
                else:
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.city
                      string: ${city}
                  - goBack: true
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.state
                      string: ${state}
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.zipcode
                      string: ${zipcode}
                  - goBack: true
       
   # Add address on iOS and handle autosuggestion        
        - if:
            condition: ${platform} == 'iOS'
            then:
              - enterText:
                  identifier: us.mappings.deliveryAddress.add.streetAddress
                  string: ${streetAddress}
              # Handling Address suggestion if displayed
              - sleep:
                  duration: 10000
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
                  then:
                    - click:
                        identifier: Done
                    - scroll:
                        direction: up
                    - sleep:
                        duration: 5000
              - enterText:
                  identifier: us.mappings.deliveryAddress.add.city
                  string: ${city}
              - click:
                  identifier: Done
              - click:
                  identifier: us.mappings.deliveryAddress.add.state
              - enterText:
                  identifier: us.mappings.deliveryAddress.add.statePickerWheel
                  string: ${state}
              - click:
                  identifier: Done
              - scroll:
                  direction: down

              - click:
                  identifier: us.mappings.deliveryAddress.add.zipcode
              - enterText:
                  identifier: us.mappings.deliveryAddress.add.zipcode
                  string: ${zipcode}
              - click:
                  identifier: Done   

   #  Add phone number
        - click:
            identifier: us.mappings.deliveryAddress.add.phoneNumber
        - enterText:
            identifier: us.mappings.deliveryAddress.add.phoneNumber
            string: ${phoneNumber}

        - if:
            condition: ${platform} == 'Android'
            then:
            - goBack: true 

        - if:
            condition: ${platform} == 'iOS'
            then:
            - click:
               identifier: Done       

    # Click save and handle popups
        - if:
            condition: ${addDeliveryInstructions}
            then:
              - executeFunction:
                  name: us.functions.reviewOrder.editDeliveryInstructions

        - click:
           identifier: us.mappings.deliveryAddress.add.saveButton    
 
        - if:
            identifier:
              present:
                - identifier: us.mappings.deliveryAddress.streetAddressUpdatedLabel
            then:
              - click:
                  identifier: us.mappings.deliveryAddress.add.saveButton
        - if:
            identifier:
              present:
                - identifier: us.mappings.deliveryAddress.continueButton
            then:
              - click:
                  identifier: us.mappings.deliveryAddress.continueButton                

# Edit address (First, last name and Address only)
  - name: unified.us.functions.deliveryAddress.editAddress
    flow:
      - if:
          condition: ${clickEdit}
          then:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.selectAddress.editbutton
                then:
                  - click:
                      identifier: us.mappings.selectAddress.editbutton
       #  Update First and last name
      - click:
          identifier: us.mappings.deliveryAddress.add.firstName
      - enterText:
           identifier: us.mappings.deliveryAddress.add.firstName
           string: ${firstName}
      - click:
          identifier: us.mappings.deliveryAddress.add.lastName
      - enterText:
           identifier: us.mappings.deliveryAddress.add.lastName
           string: ${lastName}
   # Update address on Android and handle share location and autosuggestion
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
            - click:
               identifier: us.mappings.deliveryAddress.add.streetAddress
            - sleep:
                duration: 3000
          # Accept share precise location pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.sharePreciseLocation
          # Accept location permission pop up if displayed
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.allowLocationPermission
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.shareLocation
                then:
                  - click:
                      identifier: us.mappings.deliveryAddress.add.shareLocation
                  - click:
                      identifier: us.mappings.deliveryAddress.add.allowLocationPermission
            - enterText:
                identifier: us.mappings.deliveryAddress.add.streetAddress
                string: ${streetAddress}
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
            - sleep:
                duration: 3000
          # Wait and validate if address suggestion is displayed or not
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
                then:
                  - storeIn:
                      key: cityState
                      value: ${city}, ${state}
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                      then:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.addressSuggestionOption
                        - sleep:
                            duration: 2000
                      else:
                        - click:
                            identifier: us.mappings.deliveryAddress.add.addressSuggestionLink
              # Enter city, state and pin manually if address suggestion is not displayed
                else:
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.city
                      string: ${city}
                  - executeFunction:
                      name: unified.us.functions.utils.dismissKeyboard
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.state
                      string: ${state}
                  - enterText:
                      identifier: us.mappings.deliveryAddress.add.zipcode
                      string: ${zipcode}
                  - executeFunction:
                      name: unified.us.functions.utils.dismissKeyboard
  # Update address on iOS and handle autosuggestion
      - if:
          condition: ${platform} == 'iOS'
          then:
            - enterText:
                identifier: us.mappings.deliveryAddress.add.streetAddress
                string: ${streetAddress}
            # Handling Address suggestion if displayed
            - sleep:
                duration: 10000
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.deliveryAddress.add.addressSuggestionList
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.dismissKeyboard
                  - scroll:
                      direction: up
                  - sleep:
                      duration: 5000
            - enterText:
                identifier: us.mappings.deliveryAddress.add.city
                string: ${city}
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
            - click:
                identifier: us.mappings.deliveryAddress.add.state
            - enterText:
                identifier: us.mappings.deliveryAddress.add.statePickerWheel
                string: ${state}
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
            - scroll:
                direction: down
            - click:
                identifier: us.mappings.deliveryAddress.add.zipcode
            - enterText:
                identifier: us.mappings.deliveryAddress.add.zipcode
                string: ${zipcode}
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      # Scroll down and click save
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.deliveryAddress.add.saveButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
           identifier: us.mappings.deliveryAddress.add.saveButton
           wait: 5000
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.saveAddressCTA
          then:
            - click:
                identifier: us.mappings.cart.saveAddressCTA   


  - name: unified.us.functions.account.addresses.removeAddress
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.address.removeLinkButton
          then:               
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.address.removeLinkButton
            - click:
                identifier: us.mappings.address.removeLinkButton
                wait: 1000      
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.address.removeLinkButton
            - click:
                identifier: us.mappings.address.removeLinkButton
                wait: 1000
            - sleep:
                duration: 5000    
          else:
            - log: No existing address that has to be removed


  - name: unified.us.functions.verifyRegistryAddToCart
    flow:   
      - sleep:
          duration: 5000     
      - executeFunction:
          name: unified.us.functions.global.navigation.goToAccountFromTabBar
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.account.Registry
            - name: direction
              string: down
            - name: scrollPosition
              string:  center
      - click:
          identifier: us.mappings.account.Registry
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.goToRegistryButton #not in android
          then:
            - click:
                identifier: us.mappings.account.goToRegistryButton #not in android
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.FindRegistryCTA
            - identifier: us.mappings.account.createRegistryCTA 
            - identifier: us.mappings.account.BabyRegistry
      - click:
          identifier: us.mappings.account.registryDetails
      - click:
          identifier: us.mappings.account.registryDetailsProductTileView
      - verifyIdentifier:
          timeout: 120000
          present:
            - identifier: us.mappings.itemPage.itemName
      - executeFunction:
          name: unified.us.functions.item.addItemToCart

  #red dot notification
  - name: unified.us.functions.account.reddotnotification
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.allCaughtUp0newMessages
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.account.allCaughtUp0newMessages
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.redDotNotificationsHeader
            - identifier: us.mappings.account.redDotNotificationsDescription
    
# Verify No searchbox in Purchase history
  - name: unified.us.functions.orderHistory.serachBar.SearchYourPurchasesTextbox
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.purchaseHistoryButton
          then:
            - click:
                identifier: us.mappings.account.purchaseHistoryButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderHistory.serachBar.SearchYourPurchasesTextbox
      - log:  SearchYourPurchasesTextbox is present 


    #Verify no orders present in purchase history
  - name: unified.us.functions.orderHistory.VerifyNoOrders    
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.orderHistory.viewDetailsButton 
      - log:   No orders present in purchase history

  # sign 0ut from Account page
  - name:  unified.us.functions.account.signOutAccount
    flow:
      - sleep:
          duration: 5000
      - scroll:
          direction: down
          untilIdentifier: us.mappings.account.signOutButton
          position: center

      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.signOutButton
      - sleep:
          duration: 5000
      - click:
          identifier: us.mappings.account.signOutButton          

      - try:
          flow: 
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.account.signOutButton
          catch:
            flow:
              - scroll:
                  direction: up
                  untilIdentifier: us.mappings.account.signInButton
                  position: center
              - sleep:
                  duration: 2000
              - verifyIdentifier:
                  notPresent:
                    - identifier: us.mappings.account.signOutButton      

  - name: unified.us.functions.orderHistory.searchOrder
    flow:
      # - click:
      #     identifier: us.mappings.orderHistory.searchBar
      #     wait: 3000    
      - enterText:
          identifier: us.mappings.orderHistory.searchBar
          string: ${orderNo}
          clickFirst: true
          pressEnter: true   
      - sleep:
          duration: 5000
      - hideKeyboard: true                                

  - name: unified.us.functions.orderHistory.clickOnViewDetails
    flow:
        - sleep:
            duration: 5000
        - scroll:
            direction: down
        - verifyIdentifier:
            present:
              - identifier: us.mappings.orderHistory.viewDetailsButton
        - click:
            identifier: us.mappings.orderHistory.viewDetailsButton
        - sleep:
            duration: 3000

  - name: unified.us.functions.orderDetails.verifyOrdersPresentScheduledPickUp
    flow:
     - if:
          identifier:
            present:
              - identifier: us.mappings.yourOrders.scheduledPickup
          then:
            - log: "Scheduled pick up order present"
          else:
            - failTest:
                message: "ENV_FAILURE - ${env} - Expected Scheduled Pick up order but not found"

  - name: unified.us.functions.orderDetails.verifyOdpForPickup
    flow:
      - executeFunction:
          name: unified.us.functions.orderDetails.verifyOrdersPresentScheduledPickUp  

      - if:
            condition: ${platform} == 'Android'
            then:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.orderDetails.itemsContainer.expandableButton
                  then:
                    - click:
                        identifier: us.mappings.orderDetails.itemsContainer.expandableButton
  
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.orderDetails.addressViewTitleLabel
            - identifier: us.mappings.orderDetails.pickupPersonText

      # - if:
      #       condition: ${platform} == 'iOS'
      #       then:
      #         - executeFunction:
      #             name: unified.us.functions.orderDetails.expandItemDetails
      #         - verifyIdentifier:
      #             present: 
      #               - identifier: us.mappings.orderDetails.productImage  

      - if:
            condition: ${platform} == 'Android'
            then:
              - executeFunction:
                  name: unified.us.functions.utils.scrollIfNotVisible
                  params:
                    - name: identifier
                      string: us.mappings.orderDetails.itemDescription 
                    - name: direction
                      string: down  
              - verifyIdentifier:
                  present: 
                    - identifier: us.mappings.orderDetails.itemDescription   
                    - identifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItem 
              - scroll:
                  direction: up
                  untilIdentifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItem                 

  - name: unified.us.function.orderDetails.verifyPaymentMethod
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.orderDetails.paymentMethodTitle
            - name: direction
              string: down
            - name: scrollPosition
              string: center  

      - if:
            condition: ${platform} == 'iOS'
            then:
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.orderdetails.payAtPickUpTitle
                  then:
                    - verifyIdentifier:
                        present: 
                          - identifier:  us.mappings.orderdetails.payAtPickUpTitle 
                  else:
                    - verifyIdentifier:
                        label:
                          - identifier: us.mappings.orderDetails.cardNumber
                            contains: Ending in

      - if:
            condition: ${platform} == 'Android'
            then:
              - verifyIdentifier:
                  present: 
                    - identifier:  us.mappings.orderDetails.giftCardDetails
                    - identifier:  us.mappings.orderDetails.giftCardIcon

  - name: unified.us.functions.orderDetails.verifyPaymentDetails
    flow:
      - verifyIdentifier:
          present: 
            - identifier: us.mappings.orderDetails.taxValue
            - identifier: us.mappings.orderDetails.subtotalValue
            - identifier: us.mappings.orderDetails.totalText            

  - name: unified.us.functions.global.account.verifyAccountpage
    flow:         
      - sleep:
          duration: 5000  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.purchaseHistoryButton   
      - scroll:
          direction: down
          untilIdentifier: us.mappings.account.signOutButton
          position: center                       
      - scroll:
            direction: up 

  - name: unified.us.function.orderDetails.addToCart
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.orderDetails.reorderButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center  
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderDetails.reorderButton
      - click:
          identifier: us.mappings.orderDetails.reorderButton
      - sleep:
          duration: 3000      
     
      - if:
          condition: ${fulfillmentText}  ==  'Shipping'
          then:
            - executeFunction:
                name: unified.us.functions.cart.continueToCheckoutOrNewOrder            
      
      - if:
          condition: ${fulfillmentText}  ==  'Pickup'
          then:
            - executeFunction:
                name: unified.us.functions.cart.switchBetweenPickUpAndShipping
                params:
                  - name: fulfillmentType
                    string: pickup
            - executeFunction:
                name: unified.us.functions.selectBookingSlot
                params:
                  - name: tab
                    string: pickup
                  - name: slotDay
                    string: tomorrow
                  - name: page
                    string: cart
            - executeFunction:
                name: unified.us.functions.cart.continueToCheckout
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.reviewOrder.navBarTitle
                then:
                  - log: Checkout page already loaded, skipping slot selection
      
      - if:
          condition: ${fulfillmentText}  ==  'Delivery'
          then:
            - executeFunction:
                name: unified.us.functions.cart.switchBetweenPickUpAndShipping
                params:
                  - name: fulfillmentType
                    string: pickup
            - executeFunction:
                name: unified.us.functions.selectBookingSlot
                params:
                  - name: tab
                    string: delivery      
                  - name: page
                    string: cart
                  - name: slotDay
                    string: tomorrow
            - executeFunction:
                name: unified.us.functions.cart.continueToCheckout

      - if:
          identifier:
            present:
              - identifier: us.mappings.cart.missingAnything.headerText
          then:
            - click:
                identifier: us.mappings.cart.missingAnything.ContinueButton
      - sleep:
          duration: 2000

  # Navigate from Accounts to List page
  - name: unified.us.functions.account.navigateToList
    flow:     
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.accounts.listButton
            - name: direction
              string: down
            - name: scrollPosition
              string: center     
      - click:
          identifier: us.mappings.accounts.listButton
          wait: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.accounts.list.listCardLabel
              timeout: 30000

  # Verify favorite items list
  - name: unified.us.functions.account.list.verifyFavoriteItems
    flow:     
      - click:
           identifier: us.mappings.accounts.list.listCardLabel
           wait: 3000    
      - sleep:
          duration: 2000
      - loop:
          begin: 1
          end: 4
          mode: increment
          storeIndex: index
          flow:    
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.accounts.list.favoriteItem
                  - name: direction
                    string: down
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.accounts.list.favoriteItem
            - log: Verified ${index}th index item on the favorites list
 
  # Remove items from favorites list
  - name: unified.us.functions.account.list.removeAllFavoriteItems
    flow:  
      - loop:
          begin: 1
          end: 3
          mode: increment
          storeIndex: index
          flow:            
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.accounts.list.removeItem
            - click:
                identifier: us.mappings.accounts.list.removeItem
            - click:
                identifier: us.mappings.accounts.list.confirmRemoveItem                
            - log: Removed ${index}th index item from the favorites list   
      - verifyIdentifier:
           present:
             - identifier: us.mappings.accounts.list.removeItemFromFavorites
      - click:
           identifier: us.mappings.accounts.list.removeItemFromFavorites
      - click:
          identifier: us.mappings.accounts.list.confirmRemoveItem
      - log: Removed all items from favorites list    
  - name: unified.us.functions.wplus.nonmember.PhoneRecycleFailedError.BottomSheet
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mapping.wplus.PhoneRecycleFailedError.BottomSheet.title
            - identifier: us.mapping.wplus.PhoneRecycleFailedError.BottomSheet.subtitleLabel
            - identifier: us.mapping.wplus.PhoneRecycleFailedError.BottomSheet.activateButton
            - identifier: us.mapping.wplus.PhoneRecycleFailedError.BottomSheet.noThanksButton
      - click:
          identifier: us.mapping.wplus.PhoneRecycleFailedError.BottomSheet.activateButton
          wait: 5000
      - scroll:
          direction: down
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
          then:
            - click: 
                identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox       
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.wPlusSignUpSplash.startPaidWPlus
          then:
            - click:
                identifier: us.mappings.wplus.wPlusSignUpSplash.startPaidWPlus
      - sleep:
         duration: 10000
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.welcomeSplash.title
          then:
            - click:
                identifier: us.mappings.global.closeButton

  - name: unified.us.functions.wplus.startFree30daysTrailMembership
    flow:

      - if:
            condition: ${platform} == 'iOS'
            then:         
                - verifyIdentifier:
                    present:
                      - identifier: us.mappings.wplus.signup.selectPlan.annual 
                      - identifier: us.mappings.wplus.signup.selectPlan.monthly 
                - if: 
                    condition: ${tenure} == 'annual'
                    then:
                      - click: 
                          identifier: us.mappings.wplus.signup.selectPlan.annual
                      - log: 'Annual Plan selected'
                    else:
                      - click: 
                          identifier: us.mappings.wplus.signup.selectPlan.monthly
                      - log: 'Monthly Plan selected'  
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wplus.wPlusSignUpSplash.noPaymentMethodLabel
                    then:
                      - click: 
                          identifier: us.mappings.wplus.paymentmethod.addCardButton
                          wait: 8000

                      - executeFunction:
                          name: unified.us.functions.account.paymentMethod.addCardDetailsAndAddress
                          params:
                            - name: firstName
                              string: us.data.flow005.payment.firstName
                            - name: lastName
                              string: us.data.flow005.payment.lastName
                            - name: number
                              string: us.data.flow005.payment.creditCard
                            - name: expirationMonth
                              string: us.data.flow005.payment.expirationMonth
                            - name: expirationYear
                              string: us.data.flow005.payment.expirationYear
                            - name: cvv
                              string: us.data.flow005.payment.cvv
                            - name: streetAddress
                              string: us.data.flow005.streetAddress
                            - name: city
                              string: us.data.flow005.city
                            - name: state
                              string: us.data.flow005.state
                            - name: zipcode
                              string: us.data.flow005.zipcode
                            - name: phoneNumber
                              string: us.data.flow005.phoneNumber
                - scroll:
                    direction: down
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                    then:
                      - click: 
                          identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox 
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                    then:
                      - click:
                          identifier: us.mappings.wlus.switchToOriginalApp.startShopping

                - click:
                    identifier: us.mappings.wplus.start30dayfreetrialBtn
                    
                - verifyIdentifier:
                    timeout: 20000
                    present:
                      - identifier: us.mappings.wplus.membershipBottomsheetTitle
                      - identifier: us.mappings.wlus.membershipBottomsheetClose
                #Close Welcome Bottom Sheet
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wlus.membershipBottomsheetClose
                    then:  
                        - click:
                            identifier: us.mappings.wlus.membershipBottomsheetClose
                        - log: "Welcome to Walmart Screen Displayed" 
                    else:
                      - log: "Welcome to Walmart Screen not Displayed" 

      - if:
            condition: ${platform} == 'Android'
            then:
              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.wplus.signup.selectPlan.annual 
                    - identifier: us.mappings.wplus.signup.selectPlan.monthly 
              - if: 
                  condition: ${tenure} == 'annual'
                  then:
                    - click: 
                        identifier: us.mappings.wplus.signup.selectPlan.annual
                    - log: 'Annual Plan selected'
                  else:
                    - click: 
                        identifier: us.mappings.wplus.signup.selectPlan.monthly
                    - log: 'Monthly Plan selected'  

              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wplus.paymentmethod.addCardButton
                  then:
                      - click:
                          identifier: us.mappings.wplus.paymentmethod.addCardButton
                          wait: 8000

                      - executeFunction:
                          name: us.functions.account.paymentMethod.addCardDetails
                          params:
                            - name: firstName
                              string: us.data.flow005.payment.firstName
                            - name: lastName
                              string: us.data.flow005.payment.lastName
                            - name: number
                              string: us.data.flow005.payment.creditCard
                            - name: expiration
                              string: us.data.flow005.payment.expiration
                            - name: cvv
                              string: us.data.flow005.payment.cvv
                            - name: streetAddress
                              string: us.data.flow005.streetAddress
                            - name: city
                              string: us.data.flow005.city
                            - name: state
                              string: us.data.flow005.state
                            - name: zipcode
                              string: us.data.flow005.zipcode
                            - name: phoneNumber
                              string: us.data.flow005.phoneNumber
              - scroll:
                  direction: down
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                  then:
                    - click: 
                        identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox 
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                  then:
                    - click:
                        identifier: us.mappings.wlus.switchToOriginalApp.startShopping

              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                  then:
                    - click:
                        identifier: us.mappings.wlus.switchToOriginalApp.startShopping

              - click:
                  identifier: us.mappings.wplus.Start30dayfreetrialBtn

              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.search.rewards.bottomSheetCloseButton
              # Membership Welcome Bottom Sheet
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.search.rewards.bottomSheetCloseButton
                  then:
                    - click:
                        identifier: us.mappings.search.rewards.bottomSheetCloseButton
                  else:
                    - log: Membership Welcome Bottom Sheet Not Disaplyed

  - name: unified.us.functions.petRx.AutoRefill
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.petRx.managePrescriptions.pageTitle
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.petRx.autoRefill.button
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.petRx.autoRefill.button
          then:
            - failTest:
                  message: "ENV_FAILURE - ${env} - Existing issue: INC45291800 - Subscribe to auto-delivery link is missing in Pet Prescriptions page"
      - click:
          identifier: us.mappings.petRx.autoRefill.button
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.petRx.autoRefill.subscribeNow.address
            - identifier: us.mappings.item.SubsPayment
            - identifier: us.mappings.petRx.autoRefill.subscribeNow.quantityFrequency
            - identifier: us.mappings.petRx.autoRefill.subscriptionsCheckbox
            - identifier: us.mappings.subscribe.subscribeNowButton
      - click:
          identifier: us.mappings.petRx.autoRefill.subscribeNow.address
      - log: "Clicked on the Subscription Address button!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.item.SelectAddressScreenTitle
            - identifier: us.mappings.reserveSlot.addressselectionButton
      - click:
          identifier: us.mappings.item.backButton
      - log: "Verified that the Subscription Address button is editable and click on Back Chevron!!"
      - click:
          identifier: us.mappings.item.SubsPayment
      - log: "Clicked on the Subscription Payment button!!"
      - verifyIdentifier:
          present:
            - identifier: us.mappings.petRx.autoRefill.paymentMethods.pageTitle
            - identifier: us.mappings.item.SubsPayment.Selectcard
      - if:
          identifier:
            present:
              - identifier: us.mappings.reviewOrder.confirmCvv.cvvField
          then:
            - click:
                identifier: us.mappings.reviewOrder.confirmCvv.cvvField            
            - enterText:
                identifier: us.mappings.reviewOrder.confirmCvv.cvvField
                string: 111
            - click:
                identifier: us.mappings.default.keyboardDoneButton
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.saveButton
            - sleep:
                duration: 4000
            - click:
                identifier: us.mappings.item.SubsPayment
            - verifyIdentifier:
                timeout: 100000
                present:
                  - identifier: us.mappings.paymentMethod.addPayment.overlay.title
          else:
            - verifyIdentifier:
                timeout: 100000
                present:
                  - identifier: us.mappings.paymentMethod.addPayment.overlay.title
      - click:
          identifier: us.mappings.item.backButton
      - log: "Verified that the Subscription Payment button is editable and click on Back Chevron!!"
      - if:
          identifier:
            present:
              - identifier: us.mappings.petRx.autoRefill.subscription.selectEligibleAddress
          then:
            - click:
                identifier: us.mappings.petRx.autoRefill.subscription.selectEligibleAddress
                wait: 2000
            - click:
                identifier: us.mappings.petRx.autoRefill.subscription.eligibleAddressForPetRx
                wait: 3000
            - click:
                identifier: us.mappings.cart.saveAddress
            - verifyIdentifier:
                notPresent:
                  - identifier: us.mappings.petRx.autoRefill.subscription.selectEligibleAddress
            - log: "Selected a Eligible address for the PetRX"
      - click:
          identifier: us.mappings.petRx.autoRefill.subscriptionsCheckbox
      - click:
          identifier: us.mappings.subscribe.subscribeNowButton
      - sleep:
          duration: 5000
      - if:
          identifier:
            present:
              - identifier: us.mappings.ibottaRewards.subscriptionConfirmationTitle
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.subscribe.verifyConfirmationMessage
                  - identifier: us.mappings.subscribe.gotItButton
                  - identifier: us.mappings.item.SubsManageSubscriptions
      - click:
          identifier: us.mappings.subscribe.gotItButton
      - sleep:
          duration: 2000

  - name: unified.us.functions.petRx.AutoRefill.cancelSubscription
    flow:
      - click:
          identifier: us.mappings.petRx.autoRefill.subscribedQuantityLink
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.petRx.autoRefill.subscription.editButton
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.petRx.autoRefill.subscription.editButton
      - verifyIdentifier:
          present:
            - identifier: us.mappings.petRx.autoRefill.subscription.editButton
      - click:
          identifier: us.mappings.petRx.autoRefill.subscription.editButton
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.petRx.autoRefill.cancelSubscriptionButton
          wait: 1000
      - click:
          identifier: us.mappings.petRx.autoRefill.cancelSubscriptionReason.radioButton
          wait: 1000
      - click:
          identifier: us.mappings.subscribe.cancelMySubscriptionButton
      - sleep:
          duration: 3000
      

  - name: unified.us.functions.account.paymentMethod.addCardDetailsAndAddress
    flow:
      - log: "Here in this flow to add address"
      - if:
          condition: ${addpaymentForBuyNowFlow}
          then:
            - log: Adding Payment on Buy Now overlay
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.buyNow.payWithField
            - click:
                identifier: us.mappings.buyNow.payWithField
            - sleep:
                duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.paymentMethod.addPayment.overlay.title
      - enterText:
          identifier: us.mappings.paymentMethod.addPayment.overlay.cardNumberField
          string: ${number}
      - click:
            identifier: us.mappings.paymentMethod.creditCard.editFirstNameField
      - enterText:
          identifier: us.mappings.paymentMethod.creditCard.editFirstNameField
          string: ${firstName}
      - click:
            identifier: us.mappings.paymentMethod.creditCard.editLastNameField
      - enterText:
          identifier: us.mappings.paymentMethod.creditCard.editLastNameField
          string: ${lastName}
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      - click:
          identifier: us.mappings.paymentMethod.addPayment.overlay.securityCodeField
      - enterText:
          identifier: us.mappings.paymentMethod.addPayment.overlay.securityCodeField
          string: ${cvv}
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard         
      - click:
          identifier: us.mappings.paymentMethod.addPayment.overlay.expiry
      - sleep:
          duration: 3000
      - enterText:
          identifier: us.mappings.paymentMethod.addPayment.overlay.expiry
          string: ${expirationYear}
          clearField: false
          clickFirst: false
      - if:
          condition: ${platform} == 'iOS'
          then:
            - scroll:
                direction: down
                untilIdentifier: us.mappings.paymentMethod.addPayment.overlay.expiry.pickerWheelMonthDecember
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.expiry.pickerWheelMonthDecember
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
      - click:
          identifier: us.mappings.paymentMethod.addPayment.overlay.phoneNumberField
      - enterText:
          identifier: us.mappings.paymentMethod.addPayment.overlay.phoneNumberField
          string: ${phoneNumber}
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.utils.dismissKeyboard
            
              # If the Address is already present then we will skip adding new address.
      - if:
          identifier:
            present:
              - identifier: us.mappings.paymentMethod.addPayment.overlay.AddressField
          then:
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.AddressField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.AddressField
                string: ${streetAddress}
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cityTextField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.cityTextField
                string: ${city}
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.stateField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.stateField
                string: ${state}
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.zipCodeTextField
            - enterText:
                identifier: us.mappings.paymentMethod.addPayment.overlay.zipCodeTextField
                string: ${zipcode}
            - click:
                identifier: us.mappings.payment.add.saveCard
            - sleep:
                duration: 10000
            - click:
                identifier: us.mappings.buyNow.navigateback
            - sleep:
                duration: 2000
          else:   
            - click:
                identifier: us.mappings.paymentMethod.addPayment.overlay.saveButton
            - sleep:
                duration: 10000   

            - if:
                condition: ${addpaymentForBuyNowFlow}
                then:          
                  - click:
                      identifier: us.mappings.buyNow.navigateback
      - log: "Here in this flow to add payment"
      - if:
          condition: ${addpaymentForBuyNowFlow}
          then:
            - log: Added Payment on Buy Now overlay

  - name: unified.us.functions.wplus.accountTab.yourTrialEndsMsg
    flow:
      - if:
            condition: ${platform} == 'iOS'
            then:
              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.wplus.walmartPlusTileHeader
                    - identifier: us.mappings.wplus.walmartPlusSeeAllBenefits
              - click:
                  identifier: us.mappings.wplus.walmartPlusSeeAllBenefits
                  wait: 10000
      - if:
            condition: ${platform} == 'Android'
            then:
              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.wPlus.account.seeAllYourWplusBenefitsButton
              - click:
                  identifier: us.mappings.wPlus.account.seeAllYourWplusBenefitsButton
                  wait: 10000

# Click on Wplus Banner as a Non Member and Member - Account Page
  - name: unified.us.functions.wplus.account.navigateToWalmartPlus
    flow:
      - scroll:
          direction: up
      - verifyIdentifier:
          timeout: 20000
          present:
            - identifier: us.mappings.account.yourOrdersButton

      - if:
          identifier:
            present:
              - identifier: us.mappings.account.walmartplusNonMem
          then:
            - click:
                identifier: us.mappings.account.walmartplusNonMem

            - sleep:
                duration: 5000

            - log: Clicked MLP - Enroll Wplus Banner as Non Member
          
          else:

            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.wPlus.account.seeAllYourWplusBenefitsButton
                then:
                  - scroll: 
                      direction: down
                      untilIdentifier: us.mappings.wPlus.account.seeAllYourWplusBenefitsButton
                      scrollLimit: 2
                      position: center

            - click:
                identifier: us.mappings.wPlus.account.seeAllYourWplusBenefitsButton

            - sleep:
                duration: 5000

            - log: Clicked on Membership See All Benefits Banner

      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.RafPopupScreen
          then:
            - click:
                identifier: us.mappings.wlus.membershipBottomsheetClose
      - if:
          identifier:
            present:
              - identifier: us.mappings.wplus.reelsScreen
          then:
            - goBack: true
            - scroll:
                direction: down
            - scroll: 
                direction: up
            - click:
                identifier: us.mappings.wplus.reelsScreen.close

  # Create Account
  - name: unified.us.functions.global.authentication.createAccountFlow
    flow:
      - storeIn:
          key: email1
          value: "identity-testuser${timestamp}@walmart.com"
      - storeIn:
          key: astroPhoneNum
          value: ${__randomUSPhone:512}
      - storeIn:
          key: astroPhoneNumber
          value: 1${astroPhoneNum}
      - click:
          identifier: us.mappings.tabBar.account
      - click:
          identifier: us.mappings.account.signInButton
      - if:
          identifier:
            present:
              - identifier: us.mappings.authentication.signIn.anotherWayText
          then:
            - log: "The Sign-in another way pop-up is displayed, dismissing it."
            - verifyPresent:
                identifier: us.mappings.authentication.signIn.anotherWayText
            - verifyPresent:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
            - click:
                identifier: us.mappings.authentication.signIn.anotherWayPopUp.dismiss
                wait: 3000
          else:
            - log: "The Sign-in another way pop-up not displayed. Proceeding further."
      - if: # Added solution for DCT updated 2/1/22
          identifier:
            present:
              - identifier: us.mappings.global.authentication.signIn.button_forgot_password
          then:
            - click:
                identifier: us.mappings.global.authentication.signIn.button_forgot_password
            - click:
                identifier: us.mappings.global.authentication.signIn.button_forgot_password.goBack
                wait: 3000
          else:
            - log: the forgot pwd button is not present, DCT test step skipped.
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.createAccount.emailTextField
          then:
            - enterText:
                identifier: us.mappings.account.createAccount.emailTextField
                string: ${email1}
                pressEnter: true
            - click:
                identifier: us.mappings.global.authentication.signIn.continueButton
          else:
            - click:
                identifier: us.mappings.global.authentication.createAccountButton
      - verifyPresent:
          identifier: us.mappings.account.createAccount.firstNameTextField
      - enterText:
          identifier: us.mappings.account.createAccount.firstNameTextField
          string: TestFirst
          pressEnter: true
      - enterText:
          identifier: us.mappings.account.createAccount.lastNameTextField
          string: TestLast
          pressEnter: true
      # mandateOTP flow check
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.createAccount.phoneNumberTextField
          then:
            - if:
                condition: "!${skipPhoneNumber}"
                then:
                  - log: "Inside the Enter phoneNumber condition"
                  - enterText:
                      identifier: us.mappings.account.createAccount.phoneNumberTextField
                      string: $astroPhoneNum
                      pressEnter: true
                  - enterText:
                      identifier: us.mappings.account.createAccount.passwordTextField
                      string: E2epassword$
                      pressEnter: true
                  - sleep:
                      duration: 5000
                  #Check for the Email OTP flow and verify the same.
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.account.emailOtpVerificationPage
                      then:
                        # Call to fetch the OTP from customer's Email.
                        - log: "Call to fetch the OTP from customer's Email."
                        - executeFunction:
                            name: unified.us.functions.authentication.verifyEmailOTP
                            params:
                              - name: customerEmail
                                string: ${email1}
                  #Check for the Phone OTP flow and verify the same.
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.account.phoneOtpVerificationPage
                      then:
                        # Call to fetch the OTP from customer's Phone.
                        - log: "Call to fetch the OTP from customer's Phone."
                        - executeFunction:
                            name: unified.us.functions.authentication.verifyPhoneOTP
                            params:
                              - name: astroEmail
                                string: ${email1}
                              - name: astroPhoneNumber
                                string: ${astroPhoneNumber}
                else:
                  - log: "Skipping to Enter the Phone Number"
                  - if:
                      identifier:
                        present:
                          - identifier: us.mappings.account.createAccount.emailTextField
                      then:
                        - enterText:
                            identifier: us.mappings.account.createAccount.emailTextField
                            string: ${email}
                            pressEnter: true
                  - enterText:
                      identifier: us.mappings.account.createAccount.passwordTextField
                      string: E2epassword$
                      pressEnter: true
                  - click:
                      identifier: us.mappings.global.authentication.signIn.continueButton
                  - sleep:
                      duration: 5000
                  - click:
                      identifier: us.mappings.item.closeitemSubscriptionpage
                  - break: true
          else:
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.account.createAccount.emailTextField
                then:
                  - enterText:
                      identifier: us.mappings.account.createAccount.emailTextField
                      string: ${email}
                      pressEnter: true
            - enterText:
                identifier: us.mappings.account.createAccount.passwordTextField
                string: E2epassword$
                pressEnter: true
            - click:
                identifier: us.mappings.global.authentication.createAccountButton
            - sleep:
                duration: 5000
      - executeFunction:
          name: us.functions.utils.handleTechnicalErrorPopup
      - verifyNotPresent:
          identifier: us.mappings.global.authentication.createAccountButton
      - executeFunction:
          name: us.functions.utils.handleCartMergePopup
      - storeIn:
          key: email
          value: ${email1}
                

  - name: unified.us.functions.wplus.splash.startFree30daysTrailMembership
    flow:

      - if:
            condition: ${platform} == 'iOS'
            then:         
                - verifyIdentifier:
                    present:
                      - identifier: us.mappings.inHome.bookSlot.clickInHomeTrialSignUpButton


                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wplus.wPlusSignUpSplash.noPaymentMethodLabel
                    then:
                      - click: 
                          identifier: us.mappings.wplus.paymentmethod.addCardButton
                          wait: 8000

                      - executeFunction:
                          name: unified.us.functions.account.paymentMethod.addCardDetailsAndAddress
                          params:
                            - name: firstName
                              string: us.data.flow005.payment.firstName
                            - name: lastName
                              string: us.data.flow005.payment.lastName
                            - name: number
                              string: us.data.flow005.payment.creditCard
                            - name: expirationMonth
                              string: us.data.flow005.payment.expirationMonth
                            - name: expirationYear
                              string: us.data.flow005.payment.expirationYear
                            - name: cvv
                              string: us.data.flow005.payment.cvv
                            - name: streetAddress
                              string: us.data.flow005.streetAddress
                            - name: city
                              string: us.data.flow005.city
                            - name: state
                              string: us.data.flow005.state
                            - name: zipcode
                              string: us.data.flow005.zipcode
                            - name: phoneNumber
                              string: us.data.flow005.phoneNumber
                - scroll:
                    direction: down
                - scroll:
                    direction: down
                - scroll:
                    direction: down
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                    then:
                      - click: 
                          identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox 
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                    then:
                      - click:
                          identifier: us.mappings.wlus.switchToOriginalApp.startShopping

                - click:
                    identifier: us.mappings.inHome.bookSlot.clickInHomeTrialSignUpButton
                    
                - verifyIdentifier:
                    timeout: 20000
                    present:
                      - identifier: us.mappings.wplus.membershipBottomsheetTitle
                      - identifier: us.mappings.wlus.membershipBottomsheetClose
                #Close Welcome Bottom Sheet
                - if:
                    identifier:
                      present:
                        - identifier: us.mappings.wlus.membershipBottomsheetClose
                    then:  
                        - click:
                            identifier: us.mappings.wlus.membershipBottomsheetClose
                        - log: "Welcome to Walmart Screen Displayed" 
                    else:
                      - log: "Welcome to Walmart Screen not Displayed" 

      - if:
            condition: ${platform} == 'Android'
            then:
              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.search.rewards.clickStart30DayFreetrial


              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wplus.paymentmethod.addCardButton
                  then:
                      - click:
                          identifier: us.mappings.wplus.paymentmethod.addCardButton
                          wait: 8000

                      - executeFunction:
                          name: us.functions.account.paymentMethod.addCardDetails
                          params:
                            - name: firstName
                              string: us.data.flow005.payment.firstName
                            - name: lastName
                              string: us.data.flow005.payment.lastName
                            - name: number
                              string: us.data.flow005.payment.creditCard
                            - name: expiration
                              string: us.data.flow005.payment.expiration
                            - name: cvv
                              string: us.data.flow005.payment.cvv
                            - name: streetAddress
                              string: us.data.flow005.streetAddress
                            - name: city
                              string: us.data.flow005.city
                            - name: state
                              string: us.data.flow005.state
                            - name: zipcode
                              string: us.data.flow005.zipcode
                            - name: phoneNumber
                              string: us.data.flow005.phoneNumber
              - scroll:
                  direction: down
                  untilIdentifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                  position: center
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox
                  then:
                    - click: 
                        identifier: us.mappings.wplus.splashPage.IagreeTermsAndConditionCheckBox 
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                  then:
                    - click:
                        identifier: us.mappings.wlus.switchToOriginalApp.startShopping

              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.wlus.switchToOriginalApp.startShopping
                  then:
                    - click:
                        identifier: us.mappings.wlus.switchToOriginalApp.startShopping

              - click:
                  identifier: us.mappings.wplus.Start30dayfreetrialBtn

              - verifyIdentifier:
                  timeout: 20000
                  present:
                    - identifier: us.mappings.search.rewards.bottomSheetCloseButton
              # Membership Welcome Bottom Sheet
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.search.rewards.bottomSheetCloseButton
                  then:
                    - click:
                        identifier: us.mappings.search.rewards.bottomSheetCloseButton
                  else:

#Add Product Reviews
  - name: unified.us.functions.orderHistory.carousel.addProductReview
    flow:
    - if:
        identifier:
          present:
            - identifier: us.mappings.orderHistory.carousel.verifyReviewHeader
        then:
          - click:
              identifier: us.mappings.orderHistory.carousel.clickFirstItem
        else:
          - log: "ENV_FAILURE: Product review carousel is not appearing on purchase history"
    - sleep:
        duration: 5000
    - if:
        identifier:
          present:
            - identifier: us.mappings.orderHistory.carousel.firstProduct.verifyOverallRating
        then:
          - click:
              identifier: us.mappings.orderHistory.carousel.rateProduct
          - sleep:
              duration: 3000
          - click:
              identifier: us.mappings.orderHistory.carousel.clickContinue
          - if:
              condition: ${platform} == 'Android'
              then:
                - verifyIdentifier:
                    text:
                      - identifier: us.mappings.orderHistory.carousel.clickSubmitReviewCTA
                        contains: Skip
                - click:
                    identifier: us.mappings.orderHistory.carousel.clickSubmitReviewCTA

                - verifyIdentifier:
                    text:
                      - identifier: us.mappings.orderHistory.carousel.clickSubmitReviewCTA
                        contains: Submit item review
                - click:
                    identifier: us.mappings.orderHistory.carousel.clickSubmitReviewCTA
                - log: Product review submitted
                - sleep:
                    duration: 5000
          - if:
              condition: ${platform} == 'iOS'
              then:
                - verifyIdentifier:
                    label:
                      - identifier: us.mappings.orderHistory.carousel.clickReviewCTA
                        contains: Skip
                - click:
                    identifier: us.mappings.orderHistory.carousel.clickReviewCTA

                - verifyIdentifier:
                    label:
                      - identifier: us.mappings.orderHistory.carousel.clickReviewCTA
                        contains: Submit item review
                - click:
                    identifier: us.mappings.orderHistory.carousel.clickReviewCTA
                - log: Product review submitted
                - sleep:
                    duration: 5000

          - verifyIdentifier:
              present:
                - identifier: us.mappings.orderHistory.carousel.verifyThankyouMsg
          - log: Thank you message validated after submitting the product review

  - name: unified.us.functions.account.verify.walmartCashPage
    flow:
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.account.navigateToCashCenterLink
                  - name: direction
                    string: down
                  - name: scrollPosition
                    string: center
            - sleep:
                duration: 2000
            - click:
                identifier: us.mappings.account.navigateToCashCenterLink
          else:
            - executeFunction:
                name: unified.us.functions.global.navigation.goToDeepLink
                params:
                  - name: deepLinkUrl
                    string: walmart://walmartcash            
      - sleep:
          duration: 3000
      - if:
          identifier:
            present:
              - identifier: us.mappings.account.walmartCash.onboardingViewCloseButton
          then:
            - click:
                identifier: us.mappings.account.walmartCash.onboardingViewCloseButton
                
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.walmartCash.Header
            - identifier: us.mappings.homePage.walmartCashBanner.titleHeader

      - if:
          condition: ${hasCashPending}
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.homePage.walmartCashBanner.totalWalmartCashPendingTextAndAmount
            
      - if:
          condition: ${hasCashActivity}
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.homePage.walmartCashBanner.viewActivity

  - name: unified.us.functions.wplus.account.convertTrailMemberToPaidMember
    flow:
      - scroll:
          direction: up
          untilIdentifier: us.mappings.benefits.title
          position: center
      - verifyIdentifier:
          timeout: 2000
          present:
            - identifier: us.mappings.benefits.title
      - scroll: 
          direction: down
          untilIdentifier: us.mappings.benefits.earlyAccess.tile
          position: center

      - click:
          identifier: us.mappings.benefits.earlyAccess.tile

      - verifyIdentifier:
          present:
            - identifier: us.mappings.benefits.earlyAccess.browseDealsButton 
      - click:
          identifier:  us.mappings.benefits.earlyAccess.learnmoreButton
      - click:
          identifier: us.mappings.wplus.benefitsTabEarlyAccessStartPaidMembershipButton
      
      - verifyIdentifier: 
          timeout: 10000
          present: 
            - identifier: us.mappings.wplus.annualTenurePlan
      - if: 
          condition: ${tenure} == 'annual'
          then:
            - click: 
                identifier: us.mappings.wplus.annualTenurePlan
            - log: 'Annual Plan selected'
          else:
            - click: 
                identifier: us.mappings.wplus.monthlyTenurePlan
            - log: 'Monthly Plan selected'    
      - scroll:
          direction: down
          untilIdentifier: us.mapppings.wplus.startYourPaidWplusMembership
      - click:  
          identifier: us.mapppings.wplus.startYourPaidWplusMembership 
          wait: 10000 
      - sleep:
          duration: 10000
      - click:
          identifier: us.mappings.wlus.membershipBottomsheetClose