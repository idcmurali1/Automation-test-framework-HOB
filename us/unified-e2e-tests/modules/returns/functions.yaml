functions:
  # ****************** Utility to validate ODP after initiating returns for an item ****************
  # -------------------------------------------- Params --------------------------------------------
  # [Mandatory] ${returnReviewText} - Return by mail / Return to Walmart store / Return scheduled for pickup / Return by drop-off at FedEx
  # [Mandatory] ${buttonText}       - View label / Show barcode / View instructions / Show QR
  # [Optional]  ${cardType}         - visa / Electronic Benefit Trasnfer / solutran / Gift Card
  # [Optional]  ${restrictedItem}   - true / false  [default 'false']
  # [Optional]  ${keepItItem}       - keepit / nonKeepit  [default 'nonKeepit']
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnODPValidation
    flow:
      - storeIn:
          key: executionStage
          value: Post-transactions
      - executeFunction:
          name: unified.us.functions.returns.requiredReturnDataSetup
      - verifyIdentifier:
          present:
            - identifier: us.mappings.orderDetails.orderNumber
      - sleep:
          duration: 5000
      - executeFunction:
          name: unified.us.functions.orderDetails.expandItemDetails
      - if:
          identifier:
            present:
              - identifier: us.mappings.return.odp.processingReturn
          then:
            - log: "Return still processing Waiting for 2 mins before refreshing odp"
            - sleep:
                duration: 100000
            # Deeplink into order details page
            - executeFunction:
                name: unified.us.functions.global.navigation.goToDeepLink
                params:
                  - name: deepLinkUrl
                    string: walmart://orders/$orderNo
            - executeFunction:
                name: unified.us.functions.orderDetails.expandItemDetails
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.return.odp.processingReturn
                then:
                  - failTest:
                      message: "ENV_FAILURE - ${env} - Return still processing after waiting "

      - if:
          condition: ${keepItItem} == 'keepit' || ${restrictedItem}
          then:
            - executeFunction:
                name: unified.us.functions.returns.returnNonGenericODPValidation
          else:
            - try:
                flow:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.return.odp.pendingMessage
                catch:
                  flow:
                    - sleep:
                        duration: 70000
                    - log: Refreshing ODP and verifying the pending message again
                    - scroll:
                        direction: up
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.return.odp.pendingMessage
            - if:
                condition: ${prerequisiteScrollRequired}
                then:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.return.odp.returnMethod.textLabel
                        - name: direction
                          string: up
                else:
                  - executeFunction:
                      name: unified.us.functions.utils.scrollIfNotVisible
                      params:
                        - name: identifier
                          string: us.mappings.return.odp.returnDetailsButton
                        - name: direction
                          string: down
            - verifyIdentifier: 
                present:
                  - identifier: us.mappings.return.odp.returnDetailsButton
                  - identifier: us.mappings.return.odp.returnMethod.textLabel
                  - identifier: us.mappings.return.odp.returnDetailsLink
            - if:
                condition: ${returnReviewText} != 'Return scheduled for pickup'
                then:
                  - verifyIdentifier: 
                      present:
                        - identifier: us.mappings.return.odp.pickupTime.textLabel
      - executeFunction:
          name: unified.us.functions.returns.returnODPPopupValidation
      - executeFunction:
          name: unified.us.functions.returns.returnODPReturnDetailsValidation
      - scroll:
          direction: up
          untilIdentifier: us.mappings.orderDetails.orderNumber

  # ********************************* Platform independent utility *********************************
  # Definition  : Data set up function used in utilities
  # Sub-utility : Used in [us.functions.returns.itemReturn] & [ us.functions.returns.returnODPValidation ]
  # Params      : NA
  - name: unified.us.functions.returns.requiredReturnDataSetup
    flow:
      - if:
          condition: ${returnType} == null
          then:
            - storeIn:
                key: returnType
                value: us.data.text.refund
      - if:
          condition: ${cardType} == null
          then:
            - storeIn:
                key: cardType
                value: skip
      - if:
          condition: ${tierMsgType} == null
          then:
            - storeIn:
                key: tierMsgValidation
                value: skip
      - if:
          condition: ${replacementType} == null
          then:
            - storeIn:
                key: replacementType
                value: slow
      - if:
          condition: ${keepItItem} == null
          then:
            - storeIn:
                key: keepItItem
                value: nonKeepit
      - if:
          condition: ${returnMethod} == 'Return at Walmart store'
          then:
            - storeIn:
                key: returnMethod
                value: 'Return to Walmart store'
      - if:
          condition: ${restrictedItem}
          then:
            - log: Restricted value set
          else:
            - storeIn:
                key: restrictedItem
                value: false

  # Definition  : To validate non generic details (restricted ...) in returns initiated ODP
  # Sub-utility : Used in [ us.functions.returns.returnODPValidation ]
  # Params      : Yes
  # -------------------------------------------- Params --------------------------------------------
  # [Mandatory] ${restrictedItem} - true / false
  # [Mandatory] ${keepItItem} - keepit / nonKeepit
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnNonGenericODPValidation
    flow:
      - if:
          condition: ${keepItItem} == 'keepit'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.marketplace.keepItText
          else:
            - if:
                condition: ${restrictedItem}
                then:
                  - verifyIdentifier: 
                      present:
                        - identifier: us.mappings.marketplace.pendingLabelUpdate

  # Definition  : To validate pop up displayed on click on label after return initiated
  # Sub-utility : Used in [ us.functions.returns.returnODPValidation ]
  # Params      : Yes
  # -------------------------------------------- Params --------------------------------------------
  # [Mandatory] ${returnReviewText} - Return by mail / Return to Walmart store / Return scheduled for pickup / Return by drop-off at FedEx
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnODPPopupValidation
    flow:   
      - if:
          condition: ${keepItItem} == 'keepit' || ${restrictedItem}
          then:
            - executeFunction:
                name: unified.us.functions.returns.returnNonGenericODPPopupValidation
          else:
            - click:
                identifier: us.mappings.return.odp.returnDetailsButton
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.return.odp.returnDetails.instructionHeading
            - if:
                condition: ${returnReviewText} == 'Return to Walmart store' || ${returnReviewText} == 'Devolver en una tienda Walmart'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.return.odp.returnDetails.returnProof
                        - identifier: us.mappings.return.odp.returnDetails.okayButton
                  - if:
                      condition: ${platform} == 'Android'
                      then:
                        - verifyIdentifier:
                            text:
                              - identifier: us.mappings.return.odp.returnDetails.instructionHeading
                                contains: us.data.odp.returnDetails.returnToWalmartStore.instructionHeading
                  - if:
                      condition: ${platform} == 'iOS'        
                      then:
                        - verifyIdentifier:
                            label:
                              - identifier: us.mappings.return.odp.returnDetails.instructionHeading
                                contains: us.data.odp.returnDetails.returnToWalmartStore.instructionHeading
                              - identifier: us.mappings.return.odp.returnDetails.popupTitle
                                contains: us.data.odp.returnDetails.returnToWalmartStore.popupTitle
                else:
                  - if:
                      condition: ${returnReviewText} == 'Return scheduled for pickup'
                      then:
                        - verifyIdentifier:
                            present:
                              - identifier: us.mappings.return.odp.returnDetails.viewInstructionTitle
                        - getString:
                            identifier: us.mappings.return.odp.returnDetails.instructionHeading
                            attribute: ${attribute}
                            storeIn: instructionHeaderText
                        - try:
                            flow:
                              - verifyValue:
                                  identifier: ${instructionHeaderText}
                                  contains: Pickup from home
                            catch:
                              flow:
                                - verifyValue:
                                    identifier: ${instructionHeaderText}
                                    contains: Schedule for pickup
                      else:
                        - if:
                            condition: ${returnReviewText} == 'Return by mail' || ${returnReviewText} == 'Devolver por correo'
                            then:
                              - verifyIdentifier:
                                  present:
                                    - identifier: us.mappings.return.odp.returnDetails.returnProof
                                    - identifier: us.mappings.return.odp.returnDetails.printLabelButton
                                  text:
                                    - identifier: us.mappings.return.odp.returnDetails.instructionHeading
                                      contains: us.data.odp.returnDetails.returnByMail.instructionHeading
      - goBack: true

  # Definition  : To validate non generic details (restricted ...) in returns ODP pop up window
  # Sub-utility : Used in [ us.functions.returns.returnODPPopupValidation ]
  # Params      : Yes
  # -------------------------------------------- Params --------------------------------------------
  # [Mandatory] ${restrictedItem} - true / false
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnNonGenericODPPopupValidation
    flow:
      - if:
          condition: ${restrictedItem}
          then:
            - click:
                identifier: us.mappings.return.odp.returnDetailsLink
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.marketplace.returnDetailRestrictedItemMessageValidation
                  - identifier: us.mappings.marketplace.pendingLabelUpdate
            - goBack: true

  # Definition  : To validate screen on click of Return details link after return initiated
  # Sub-utility : Used in [ us.functions.returns.returnODPValidation ]
  # Params      : Yes
  # -------------------------------------------- Params --------------------------------------------
  # [Optional] ${restrictedItem}  - true / false
  # [Optional] ${keepItItem}      - keepit / nonKeepit
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnODPReturnDetailsValidation
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.return.odp.returnDetailsLink
            - name: direction
              string: down
      - click:
          identifier: us.mappings.return.odp.returnDetailsLink
      - if:
          condition: ${keepItItem} == 'keepit' || ${restrictedItem}
          then:
            - executeFunction:
                name: unified.us.functions.returns.returnNonGenericODPReturnDetailsValidation
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.return.odp.returnDetailsLink.returnsTitle
                  - identifier: us.mappings.return.odp.returnDetailsLink.returnTypeText
            - if:
                condition: ${platform} == 'iOS'        
                then:
                  - verifyIdentifier: 
                      present:
                        - identifier: us.mappings.returns.returnReviewAndConfirmationScreen.itemDetails
            - if:
                condition: ${platform} == 'Android'
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItem
                        - identifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItemName
                        - identifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItemPrice
                        - identifier: us.mappings.return.refundReviewAndConfirmationScreen.returnItemQty
      - if:
          condition: ${cardType} != 'skip'
          then:
            - scroll:
                direction: down
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.returns.returnReviewAndConfirmationScreen.paymentDetails
      - goBack: true

  # Definition  : To validate non generic details (restricted ...) in return details page
  # Sub-utility : Used in [ us.functions.returns.returnODPReturnDetailsValidation ]
  # Params      : Yes
  # -------------------------------------------- Params --------------------------------------------
  # [Mandatory] ${restrictedItem} - true / false
  # [Mandatory] ${keepItItem}     - keepit / nonKeepit
  # -------------------------------------------- Params --------------------------------------------
  - name: unified.us.functions.returns.returnNonGenericODPReturnDetailsValidation
    flow:
      - if:
          condition: ${keepItItem} == 'keepit'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.marketplace.keepItText
          else:
            - if:
                condition: ${restrictedItem}
                then:
                  - verifyIdentifier:
                      present:
                        - identifier: us.mappings.marketplace.pendingLabelUpdate

  # ****************************** Utility to Cancel return initiated  *****************************
  # ************[Currently all items initiated for returns are cancelled in one go] ****************
  - name: unified.us.functions.returns.cancelReturn
    flow:
      - storeIn:
          key: executionStage
          value: Post-transactions
      - executeFunction:
          name: unified.us.functions.returns.initiateReturnCancellation
      - executeFunction:
          name: unified.us.functions.returns.submitReturnCancellation

  # Utility to initiate cancellation of already initiated returns for an order
  - name: unified.us.functions.returns.initiateReturnCancellation
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.returns.cancelReturn
            - name: direction
              string: down
      - verifyIdentifier:
          present:
            - identifier: us.mappings.returns.cancelReturn
      - click:
          identifier: us.mappings.returns.cancelReturn
      - sleep:
          duration : 5000

  # Definition  : To submit and confirm cancellation of return initiated
  # Sub-utility : Used in [ us.functions.returns.cancelReturn ]
  # Params      : NA
  - name: unified.us.functions.returns.submitReturnCancellation
    flow:
      - verifyIdentifier:
          present:
            - identifier: us.mappings.returns.cancelReturnTitle
            - identifier: us.mappings.returns.cancelReturnDescription
            - identifier: us.mappings.returns.cancelReturnItemsText
            - identifier: us.mappings.returns.cancelReturnConfirmationCta 
      - click:
          identifier: us.mappings.returns.cancelReturnConfirmationCta 
          wait: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.returns.cancelSuccessIcon
            - identifier: us.mappings.returns.cancelSuccessTitle
            - identifier: us.mappings.returns.cancelReturnDoneCta    
      - click:
          identifier: us.mappings.returns.cancelReturnDoneCta
          wait: 2000  
      - sleep:
          duration: 5000

  # *************** Utility to validate successful cancellation of returns initiated ***************
  - name: unified.us.functions.returns.validateReturnCancellation
    flow:
      - storeIn:
          key: executionStage
          value: Post-transactions
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.return.odp.pendingMessage
      - executeFunction:
          name: unified.us.functions.orderDetails.expandItemDetails
      - if:
          condition: ${prerequisiteScrollRequired}
          then:
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.returns.returnEligibleText
                  - name: direction
                    string: up
          else:
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                  - name: identifier
                    string: us.mappings.returns.returnEligibleText
                  - name: direction
                    string: down
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.return.odp.returnDetailsLink
      - scroll:
          direction: down
          untilIdentifier: us.mappings.returns.walletText
      - verifyIdentifier:
          notPresent:
            - identifier: us.mappings.returns.cancelReturn  