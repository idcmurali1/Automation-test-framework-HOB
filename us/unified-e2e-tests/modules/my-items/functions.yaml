functions:

# Function to delete Existing list in my items page
  - name: unified.us.functions.myItems.deleteExistingList
    # platform: android
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then:
            - sleep:
                duration: 5000
            - executeFunction:
                name: unified.us.functions.global.navigation.goToMyItemsFromTabBar  
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.myItems.listsTab
                then:
                  - verifyIdentifier:
                      present:
                          - identifier: us.mappings.myItems.listsTab
                else:
                  - executeFunction:
                      name: unified.us.functions.global.navigation.goToMyItemsFromTabBar  
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.myItems.listsTab
            - click:
                wait: 5000
                identifier: us.mappings.myItems.listsTab
      - if:
          condition: ${platform} == 'Android'
          then:
            - executeFunction:
                name: unified.us.functions.global.navigation.goToMyItemsFromTabBar 
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.myItems.listsTab
            - click:
                wait: 5000
                identifier: us.mappings.myItems.listsTab           
      - sleep:
          duration: 10000    
      - loop:
            begin: 0
            end: 3
            storeIndex: loop
            mode: increment
            flow:
              - log: $loop         
              - if:
                  identifier:
                    present:
                      - identifier: us.mappings.myItems.nonPrimaryList
                  then:
                    - verifyIdentifier:
                        present:
                          - identifier: us.mappings.myItems.nonPrimaryList
                    - click:
                        identifier: us.mappings.myItems.nonPrimaryList
                        wait: 5000
                    - verifyIdentifier:
                        present:
                            - identifier: us.mappings.myItems.settingButton
                    - click:
                        wait: 5000      
                        identifier: us.mappings.myItems.settingButton
                    - click:
                        identifier: us.mappings.myItems.deleteListSettings
                    - click:
                        identifier: us.mappings.myItems.deleteListConfirm
                    - sleep:
                        duration: 10000
                    - if:
                        condition: ${platform} == 'iOS'
                        then:
                          - verifyIdentifier:
                              present:
                                - identifier: us.mappings.myItems.deleteListAckMsg
                  else:
                    - log: "There is no other list apart from primary"    
      - sleep:
         duration: 2000

  - name: unified.us.functions.myItems.createNewList
    flow:
      - sleep:
          duration: 5000
      - click:
          identifier: us.mappings.myItems.createListBtn
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.enterListName
      - sleep:
          duration: 3000
      - click:
          identifier: us.mappings.myItems.enterListName
      - enterText:
          identifier: us.mappings.myItems.enterListName
          string: "ListTest"
      - sleep:
          duration : 3000 
      - click:
          identifier: us.mapping.myItems.newListCreateBtn
      - if:
          condition: ${platform} == 'iOS'
          then:
            - sleep:
                duration: 3000  
            - goBack: true
      - sleep:
          duration : 5000           
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.verifyNewSList

  - name: unified.us.functions.myItems.addToListandCart
    flow:
      - sleep:
          duration: 5000
      - executeFunction:
          name: unified.us.functions.global.navigation.accountToHome 

      - executeFunction:
          name: unified.us.functions.search.searchItem
          params:
            - name: searchTerm
              string: us.data.prod.gic.sharedItem6
      - verifyIdentifier:
          present:
            - identifier: us.mappings.search.firstItem
      - click:
          identifier: us.mappings.search.firstItem
      - sleep:
          duration: 5000
      - verifyIdentifier:
          timeout: 100000
          present:
            - identifier: us.mappings.itemPage.itemName
      - executeFunction:
          name: us.functions.search.handleAccLdPopUp
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.itemPage.wplus.addToListOption
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - verifyIdentifier:
          present:
            - identifier: us.mappings.itemPage.wplus.addToListOption
      - click:
          identifier:  us.mappings.itemPage.wplus.addToListOption
      - sleep:
          duration: 3000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.secondaryListRadio
      - click:
          identifier: us.mappings.myItems.secondaryListRadio
      - click:
          identifier: us.mappings.accounts.wallet.saveButton
      - executeFunction:
          name: unified.us.functions.item.closeItemPage
      - executeFunction:
          name: unified.us.functions.global.navigation.goToMyItemsFromTabBar
      - executeFunction:
          name: unified.us.functions.myItems.addAnItemToList
          params:
            - name: searchTerm
              string: table    
      - sleep:
          duration: 5000                               
      - click:
          identifier: us.mappings.myItems.addToCartList   
      - sleep:
          duration: 3000             
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIconWithCount
      - click:
          identifier: us.mappings.myItems.saveRewardsBackBtn 


  - name: unified.us.functions.myItems.addItemToList
    flow:          
      - sleep:
          duration: 5000          
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
              - name: identifier
                string: us.mappings.itemPage.addToListOption
              - name: direction 
                string: down    
      - click:
          identifier:  us.mappings.itemPage.addToListOption
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.secondaryListRadio
      - click:
          identifier: us.mappings.myItems.secondaryListRadio
      - if:
          condition: ${platform} == 'Android'
          then:
            - click:
                identifier: us.mappings.myItems.wallet.saveButton
      - if:
          condition: ${platform} == 'iOS'
          then:
            - click:
                identifier: us.mappings.accounts.wallet.saveButton
    # added sleep for list page to close 
      - sleep:
          duration: 3000
      - executeFunction:
          name: unified.us.functions.item.closeItemPage    
      - sleep:
          duration: 2000                     

  - name: unified.us.functions.myItems.addItemToCart
    flow:    
      - sleep:
          duration: 5000
      - click:
          identifier: us.mappings.myItems.nonPrimaryList
      - sleep:
          duration: 3000          
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.newListItemAdded  # Verifying item added in new list
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.verifyNewSList
      - click:
          identifier: us.mappings.myItems.addToCartList
          wait: 3000
      - sleep:
          duration: 3000             
      - verifyIdentifier:
          present:
            - identifier: us.mappings.navBar.cartIconWithCount                     

  - name: unified.us.functions.myItems.addAnItemToList
    flow: 
      - click:
          identifier: us.mappings.myItems.verifyNewSList
      - executeFunction: 
          name: us.functions.myItems.listShareOption
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.addAnItemToListSearchText
      - click:
          identifier: us.mappings.myItems.addAnItemToListSearchText
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myItems.addAnItemToListSearchText
      - click:
          identifier: us.mappings.myItems.addAnItemToListSearchText
      - sleep:
          duration: 2000
      - enterText:
          identifier: us.mappings.myItems.addAnItemToListSearchText
          string: ${searchTerm}
      - sleep:
          duration: 2000
      - click:
          identifier: us.mappings.myItems.clickOnFirstResult
      - sleep:
          duration: 2000
      - goBack: true
      - if:
          condition: ${platform} == 'iOS'
          then: 
            - if:
                identifier:
                  present:
                    - identifier: us.mappings.myItems.cancelButtonSearchPage
                then:
                  - click:
                      identifier: us.mappings.myItems.cancelButtonSearchPage
      - if:
          identifier:
              present: 
                - identifier: us.mappings.account.registryDetails
          then:
              - log: Registry is not empty, removing Registry
      - click:
          identifier: us.mappings.myItems.findItem
      - scroll:
          direction: down
          untilIdentifier: us.mappings.myItems.scrollUntilAddToList
          position: center
          withinIdentifier: us.mappings.myItems.listsShopSimilarContainer
      - click:
          identifier: us.mappings.myItems.scrollUntilAddToList

  - name: unified.us.functions.myItems.verifyGuestMyItem 
    flow:    
      - verifyIdentifier:
          present:        
            - identifier: us.mappings.myItems.signInButton
            - identifier: us.mappings.myItems.messageLabel


#Signin from MyItemPage
  - name: unified.us.functions.myItems.clickSignInButton
    flow:
      - if:
          identifier:
            present:
              - identifier: us.mappings.myItems.mainHeader
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.myItems.signInButton
            - click:
                identifier: us.mappings.myItems.signInButton
                wait: 5000
          else:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.myItems.signInButton
            - click:
                identifier: us.mappings.myItems.signInButton
                wait: 5000

#Verify MyItem Page for Newuser
  - name: unified.us.functions.myItems.verifyNewUserMyItem 
    flow:
      - if:
          condition: ${platform} == 'iOS'
          then: 
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.home.searchBarSelected
                    - identifier: us.mappings.myItems.messageLabel
                label:
                    - identifier: us.mappings.myItems.messageLabel
                      equals: Everyday items you've bought will show here for quick and easy reordering
      - if:
          condition: ${platform} == 'Android'
          then: 
            - verifyIdentifier:
                present:
                - identifier: us.mappings.myItems.messageLabel
                - identifier: us.mappings.myItems.searchBar

                text:
                - identifier: us.mappings.myItems.messageLabel
                  equals: Everyday items you've bought will show here for quick and easy reordering

# Verify in My Items, main header and first item, for iOS
  - name: unified.us.functions.myItems.verifyPage
    flow:
      - if: 
          condition: ${platform} == 'ios'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.home.searchBarSelected
                  - identifier: us.mappings.myItems.removeItems
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.myItems.firstItem
      - if: 
          condition: ${platform} == 'Android'
          then:
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.myItems.searchBar
            - verifyIdentifier:
                present:
                  - identifier: us.mappings.myItems.firstItem


  - name: unified.us.functions.myItems.clickOnFirstItem
    flow:
      - if: 
          condition: ${platform} == 'ios'
          then:
            - sleep:
                duration: 10000
            - click:
                identifier: us.mappings.myItems.sortBy
                wait: 1000
            - if:
                identifier:
                    present:
                    - identifier: us.mappings.myItems.sortByOptions
                then:
                    - click:
                        identifier: us.mappings.myItems.sortByOptions
            - click:
                identifier: us.mappings.myItems.sortByFrequentlyBought
            - click:
                identifier: us.mappings.myItems.sortBy.confirmButton  
            - sleep:
                duration: 5000                  
            - verifyIdentifier:
                present:
                    - identifier: us.mappings.myItems.firstItem
            - click:
                identifier: us.mappings.myItems.firstItem
            - sleep:
                duration: 5000
      - if: 
          condition: ${platform} == 'Android'
          then:

            - if:
                condition: ${noAds} || ${excludeSponsored}
                then:
                    - if:
                        condition: ${excludeSponsored}
                        then:
                        - if:
                            identifier:
                                present:
                                - identifier: us.mappings.search.sponsoredTitle
                            then:
                                - scroll:
                                    direction: down
                                - if:
                                    identifier:
                                        notPresent:
                                        - identifier: us.mappings.search.sponsoredTitle
                                    then:
                                    - scroll:
                                        direction: down
                                    - break: true
                    - scroll:
                        direction: down
                        scrollLimit: 1
                    - scroll:
                        direction: down
                        untilIdentifier: us.mappings.search.titleOfFirstItemFromSearchResult
                    - click:
                        identifier: us.mappings.search.firstItem #us.mappings.search.firstItemFromSearchResult
                else:
                    - if:
                        condition: ${subFilter} != null
                        then:
                        - scroll:
                            direction: down
                            scrollLimit: 1
                        - executeFunction:
                            name: unified.us.functions.utils.scrollIfNotVisible
                            params:
                                - name: identifier
                                  string: us.mappings.search.subFilterItemsFromSearchResultATCButton
                                - name: direction
                                  string: down
                                - name: scrollPosition
                                  string: center
                        - click:
                            identifier: us.mappings.search.subFilterItemsFromSearchResult
                        else:
                        - if:
                            condition: ${excludeSponsored}
                            then:
                                - executeFunction:
                                    name: unified.us.functions.utils.scrollIfNotVisible
                                    params:
                                    - name: identifier
                                      string: us.mappings.search.excludeSponsoredFromSearchResult
                                    - name: direction
                                      string: down
                                    - name: scrollPosition
                                      string: center
                                    - name: scrollLimit
                                      string: 10
                                - scroll:
                                    direction: down
                                    scrollLimit: 1
                                - click:
                                    identifier: us.mappings.search.excludeSponsoredFromSearchResult 
                            else:
                                - if:
                                    identifier:
                                        notPresent:
                                        - identifier: us.mappings.search.secondItem
                                    then:
                                    - scroll:
                                        direction: down
                                        untilIdentifier: us.mappings.search.firstItem
                                        position: center
                                - click:
                                    identifier: us.mappings.search.firstItem
            - verifyIdentifier:
                timeout: 80000
                present:
                    - identifier: us.mappings.item.itemDetailsView
            - storeIn:
                key: subFilter
                value: 'null'
            - storeIn:
                key: noAds
                value: false
            - storeIn:
                key: excludeSponsored
                value: false

  - name: unified.us.functions.myItems.signin.addItemRegistry
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.myitems.addregistrylink
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - if:
          condition: ${platform} == 'iOS'
          then:
            - executeFunction:
                name: unified.us.functions.utils.scrollIfNotVisible
                params:
                    - name: identifier
                      string: us.mappings.itemPage.addToListOption
                    - name: direction 
                      string: down
                    - name: scrollPosition
                      string: center
      - click:
          identifier: us.mappings.myitems.addregistrylink
    #   - executeFunction:
    #       name: us.functions.global.authentication.signInAccount
      - sleep:
          duration: 5000

#add registry
  - name: unified.us.functions.myItems.Addregistry
    flow:
      - if:
          identifier:
            timeout: 50000
            present:
              - identifier: us.mappings.myitems.CreateNewRegistryLink   
          then:
            - click:
                identifier: us.mappings.myitems.CreateNewRegistryLink
      - if:
          identifier:
            present:
              - identifier: us.mappings.myitems.chooseRegistryButton   
          then:
            - click:
                identifier: us.mappings.myitems.chooseRegistryButton
      - sleep:
          duration: 2000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myitems.CreateNewRegistryWedding
            - identifier: us.mappings.myitems.CreateNewRegistryBaby 
            - identifier: us.mappings.myitems.CreateNewRegistryEvent
            - identifier: us.mappings.myitems.CreateNewRegistryForGoods
      - click:
          identifier: us.mappings.myitems.CreateNewRegistryBaby
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myitems.CreateRegistryTitle
            - identifier: us.mappings.myitems.CreateRegistry.TrackerView 
            #- identifier: us.mappings.myitems.CreateRegistry.CongratulationTitle
            - identifier: us.mappings.myitems.CreateRegistry.FirstName
            - identifier: us.mappings.myitems.CreateRegistry.LastName
      - enterText:
          identifier: us.mappings.myitems.CreateRegistry.FirstName
          string: Anai
      - enterText:
          identifier: us.mappings.myitems.CreateRegistry.LastName
          string: Irshu
          pressEnter: true
      - sleep:
          duration: 2000
      - executeFunction:
          name: unified.us.functions.utils.dismissKeyboard
      - scroll:
          direction: down
      - if:
          condition: ${platform} == 'iOS'
          then:
            - if :
                identifier:
                    present:
                    - identifier: us.mappings.myitems.CreateRegistry.registryName
                then:
                    - enterText:
                        identifier: us.mappings.myitems.CreateRegistry.registryName
                        string: $RegistryName
                        pressEnter: true
      - if:
          condition: ${platform} == 'Android'
          then:
            - if :
                identifier:
                    present:
                    - identifier: us.mappings.myitems.CreateRegistry.registryName
                then:
                    - enterText:
                        identifier: us.mappings.myitems.CreateRegistry.registryName
                        string: $RegistryName
                        pressEnter: true 
      - click:
          identifier: us.mappings.myitems.CreateRegistry.ContinueButton
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myitems.CreateRegistry.DateTitle 
            - identifier: us.mappings.myitems.CreateRegistry.DateInput
      - click:
          identifier: us.mappings.myitems.CreateRegistry.DateInput
      - click:
          identifier: us.mappings.myitems.CreateRegistry.SelectDate
          wait: 2000
      - click:
          identifier: us.mappings.myitems.CreateRegistry.ContinueButton
          #doubleClick: true
          wait: 1000
      - sleep:
          duration: 5000
      - verifyIdentifier:
          present:
            - identifier: us.mappings.myitems.CreateRegistry.ChooseAddress
      - click:
          identifier: us.mappings.myitems.CreateRegistry.ChooseAddress
      - if:
          condition: ${platform} == 'Android'
          then:
            - getString:
                identifier: us.mappings.myitems.CreateRegistry.customerAddress
                attribute: text
                storeIn: registryAddress     
          else:
            - getString:
                identifier: us.mappings.myitems.CreateRegistry.customerAddress
                attribute: label
                storeIn: registryAddress 
      - log: $registryAddress            
      - click:
          identifier: us.mappings.myitems.CreateRegistry.ContinueButton
      - click:
          identifier: us.mappings.myitems.CreateRegistry.CTAbutton
      - sleep:
          duration: 5000
      - goBack: true
      - sleep:
          duration: 10000
      - if :
          identifier:
            present:
              - identifier: us.mappings.item.closeScreen
          then:
            - click:
                identifier: us.mappings.item.closeScreen


#verify Registry
  - name: unified.us.functions.myItems.VerifyRegistry
    flow:  
      - if:
          identifier:
            notPresent:
              - identifier: us.mappings.tabBar.account
          then:
            - scroll:
                direction: up
      - executeFunction:
          name: unified.us.functions.global.navigation.goToAccountFromTabBar
      - executeFunction:
          name: unified.us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.account.Registry
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          identifier: us.mappings.account.Registry
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.FindRegistryCTA
            - identifier: us.mappings.account.createRegistryCTA 
            - identifier: us.mappings.account.BabyRegistry
      - click:
          identifier: us.mappings.account.registryDetails
      - sleep:
          duration: 5000
    #   - verifyIdentifier:
    #       present:
    #         - identifier: us.mappings.account.registryName
      - executeFunction:
          name: unified.us.functions.global.navigation.accountToHome
      - sleep:
          duration: 5000

#delete registry
  - name: unified.us.functions.myItems.deleteRegistry
    flow:
      - executeFunction:
          name: unified.us.functions.global.navigation.goToAccountFromTabBar
      - executeFunction:
          name: unified.us.functions.home.closeWPlusPromotionPopUpIfDisplayed
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.account.Registry
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          identifier: us.mappings.account.Registry
      - verifyIdentifier:
          present:
            - identifier: us.mappings.account.FindRegistryCTA
            - identifier: us.mappings.account.createRegistryCTA 
            - identifier: us.mappings.account.BabyRegistry
      - loop:
         begin: 0
         end: 5
         storeIndex: i
         flow:
           - log: $i
           - if:
               identifier:
                 present: 
                   - identifier: us.mappings.account.registryDetails
               then:
                 - log: Registry is not empty, removing Registry
                 - click:
                     identifier: us.mappings.account.registryDetails
                     wait: 3000
                 - if:
                    identifier:
                      present:
                        - identifier: us.mappings.myitems.myRegisteryTab
                    then:
                      - click:
                          identifier: us.mappings.myitems.myRegisteryTab
                      - sleep:
                          duration: 2000
                      - click:
                          identifier: us.mappings.account.deleteRegistry.settings
                      - sleep:
                          duration: 3000
                      - executeFunction:
                          name: unified.us.functions.utils.scrollIfNotVisible
                          params:
                            - name: identifier
                              string: us.mappings.account.deleteRegistry.DeleteRegistryLink
                            - name: direction
                              string: down
                            - name: scrollPosition
                              string: center
                      - click:
                          identifier: us.mappings.account.deleteRegistry.DeleteRegistryLink
                      - click:
                          identifier: us.mappings.account.deleteRegistry.confirmDeleteRegistry
                    else:
                      - break: true
               else:
                 - log: No Registries to Remove 
                 - break: true
      - if:
          condition: ${platform} == 'iOS'
          then:      
            - if:
                identifier:
                  notPresent:
                    - identifier: us.mappings.tabBar.search
                then:
                  - click: 
                      identifier: us.mappings.global.navigation.backNavigationToShop
                  - sleep:
                      duration: 2000   

  - name: unified.us.functions.myItems.signin.addItemToRegistryOptionSelect
    flow:
      - executeFunction:
          name: unified.us.functions.utils.scrollIfNotVisible
          params:
            - name: identifier
              string: us.mappings.myitems.addregistrylink
            - name: direction
              string: down
            - name: scrollPosition
              string: center
      - click:
          identifier: us.mappings.myitems.addregistrylink
      - sleep:
          duration: 5000
