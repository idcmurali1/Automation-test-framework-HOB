#======================================================================================================================
#    AUTHOR: Francisco Javier Ramírez Hernández (vn53vq4)
#   CREATED: May/20/2024
#  REVISION: ---
#
#  Copyright © 2024 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-dev-phase-ea-production-ios-016 #qaa-ea-sanity-production-ios-016, qaa-ea-sanity-production-ios
  #testCaseId: MXMOB-1649

scenarios:
#######################################################################################################################
#
#   CONFLUENCE TRACKING DASHBOARD:
#     https://confluence.walmart.com/display/MXGECMEX/MXMOB-QAA%3A+Tracking%3A+Test+Suite%3A+GlassMX+-+EA+-+Sanity+-+Production+-+Android
#
#   JIRA AUTOMATION TC:
#     https://jira.walmart.com/browse/MXMOB-1649
#
#   JIRA MANUAL TC:
#     https://jira.walmart.com/browse/MXMOB-1590
#
#   FLAGS USED: N/A
#
#######################################################################################################################

  - name: Before
    before: true
    flow:
      - executeFunction:
          name: mx.squad-reporting.setTestCaseName
          params:
            - name: testCaseName
              string: GMX_EA_Sanity_PROD_iOS_016
      - log:
          message: "WORKAROUND: RELAUNCHING APP TO FIX ISSUE REGARDING INTERNAL APP FLAGS"
          color: YELLOW
      - executeFunction:
          name: mx.functions.utils.relaunchApp
      - storeIn:
          key: EA_016_SUCCESSFUL_EXECUTION
          value: false
      - log: "BEFORE SCENARIO END"

#########################################################################################################################

  - name: Main
    flow:
      - log: "TEST START: QAA - EA - PRODUCTION SANITY - EA-016"
      # STEP 1: NAVIGATE THROUGH ONBOARDING AND SELECT EA BANNER - EA HOME IS DISPLAYED.
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 1: NAVIGATE THROUGH ONBOARDING AND SELECT EA BANNER."
            - name: squadNames
              string: CORE | QAA

      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.qaa.sanity.ea-016.zipCode
            - name: banner
              string: 'EA'

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 2: NAVIGATE TO ACCOUNT PAGE AND LOGIN EXISTING ACCOUNT
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 2: NAVIGATE TO ACCOUNT PAGE AND LOGIN EXISTING ACCOUNT"
            - name: squadNames
              string: CUSTOMER | QAA
      
      - executeFunction:
          name: mx.flows.od.login.navigateToAccountAndLogin
          params:
            - name: userEmail
              string: mx.data.qaa.sanity.ea-016.userEmail
            - name: userPassword
              string: mx.data.qaa.sanity.ea-016.userPassword
            - name: userName
              string: mx.data.qaa.sanity.ea-016.userNameiOS 

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 3: SEARCH AND ADD AN OUT OF STOCK PRODUCT TO CART FROM PDP
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 3: SEARCH AND ADD AN OUT OF STOCK PRODUCT TO CART FROM PDP"
            - name: squadNames
              string: PRE-PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
     
      - executeFunction:
          name: mx.flows.ea.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.sanity.ea-016.searchTerm1
              
      - executeFunction:
          name: mx.functions.ea.slp.openProductDetailsByName
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName1
     
      - sleep:
          duration: 4000
      
      - executeFunction:
          name: mx.functions.pdp.addToCart
      
      - executeFunction:
          name: mx.functions.ea.pdp.getProductPrice # RETURNS <-- ${returnedPrice}
      
      - storeIn:
          key: product1Price
          value: ${returnedPrice}
      
      - executeFunction:
          name: mx.functions.ea.pdp.tapClose
  #--------------------------------------------------------------------------------------------------------------------

      - storeIn:
          key: EA_016_IS_CART_EMPTY
          value: false

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 4: SEARCH FOR A SECOND PRODUCTAND ADD IT TO CART FROM PDP
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 4: SEARCH FOR A SECOND PRODUCT AND ADD IT TO CART FROM PDP"
            - name: squadNames
              string: PRE-PURCHASE | QAA
      
      - executeFunction:
          name: mx.flows.ea.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.sanity.ea-016.searchTerm2
      
      - executeFunction:
          name: mx.flows.ea.sort-and-filter.addSoldByFilterWithOptionFromSLP
          params:
            - name: soldByOption
              string: 'ByWalmart'
              
      - executeFunction:
          name: mx.functions.ea.slp.openProductDetailsByName
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
      
      - sleep:
          duration: 4000
      
      - executeFunction:
          name: mx.functions.pdp.addToCart
      
      - executeFunction:
          name: mx.functions.ea.pdp.getProductPrice # RETURNS <-- ${returnedPrice}
      
      - storeIn:
          key: product2Price
          value: ${returnedPrice}
      
      - storeIn:
          key: originalProduct2Price
          value: ${returnedOriginalPrice}
      
      - storeIn:
          key: returnedProduct2DiscountAmount
          value: ${returnedDiscountAmount}

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 5: INCREASE SECOND PRODUCT QUANTITY FROM PDP
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 5: INCREASE SECOND PRODUCT QUANTITY FROM PDP"
            - name: squadNames
              string: PRE-PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.pdp.increaseProductQuantityBy
          params:
            - name: quantity
              string: mx.data.qaa.sanity.ea-016.numberOfIncrements
            - name: ignoreClickException
              string: "true"
      
      - executeFunction:
          name: mx.functions.ea.pdp.getProductQuantity # <--RETURNS: ${returnedProductQuantity}
      
      - storeIn:
          key: returnedProductQuantity
          value : ${returnedProductQuantity}
          escapeQuotes: true
      
      - arithmetic:
          expression: ${returnedProductQuantity} - 1
          asInt: true
          storeIn: TC_EA_NumberOfDecrements
      
      - log:
          message: "The number of decrements is: ${TC_EA_NumberOfDecrements}"
          color: YELLOW_BOLD_BRIGHT
     
      - executeFunction:
          name: mx.functions.ea.pdp.tapClose
      
  # --------------------------------------------------------------------------------------------------------------------
      # STEP 6: GO TO CART
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 6: GO TO CART"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.top-menu.tapCartIcon
      
      - executeFunction:
          name: mx.functions.ea.cart.assertOOSMessage

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 7: OOS PRODUCT Details
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 7: VERIFY FOR PRODUCT DETAILS FOR PRODUCTS OUT OF STOCK"
            - name: squadNames
              string: PURCHASE | QAA
      
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.ea.cart.productIsNotAvailableSection
          wait: 1000
          position: center

      - executeFunction:
          name: mx.functions.ea.cart.assertOOSSectionIsDisplayed
      
      - executeFunction:
          name: mx.functions.ea.cart.assertOOSProductLabel
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName1

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 8: CLICK ON CONTINUE BUTTON (CART)
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 8: CLICK ON CONTINUE BUTTON (CART)"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.cart.tapContinue

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 9: ASSERT OSS PAGE DISPLAYED AND CLOSE IT
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 9: ASSERT REVIEW ORDER PAGE DISPLAYED"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.oos.assertPageDisplayed
      
      - executeFunction:
          name: mx.functions.ea.oos.assertOOSDisclaimerMessage
      
      - executeFunction:
          name: mx.functions.ea.oos.tapContinue

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 10: GET BACK TO CART AND REMOVE OSS PRODUCTS
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 10: GET BACK TO CART AND REMOVE OSS PRODUCTS"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.review-order.tapBack
      
      - sleep:
          duration: 4000
      
      - executeFunction:
          name: mx.functions.ea.review-order.almost-done-popup.tapExitPaymentIfDisplayed
      
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.ea.cart.productSavedForLaterHeaderSection
          wait: 1000
          position: center
      
      - executeFunction:
          name: mx.functions.ea.cart.deleteProductFromSavedForLaterByName
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName1
      
      - scroll:
          direction: up
          scrollLimit: 1
          wait: 1000
      
      - executeFunction:
          name: mx.functions.utils.closeBlackPopupIfDisplayed
      
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty
  
   # --------------------------------------------------------------------------------------------------------------------
      # STEP 11: VERIFY FOR PRODUCT DETAILS
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 11: VERIFY FOR PRODUCT DETAILS FOR PRODUCTS WITH STOCK"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.cart.expandProductListIfNotExpanded
      
      - executeFunction:
          name: mx.functions.ea.cart.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
            - name: direction
              string: "up"
      
      - executeFunction:
          name: mx.functions.ea.cart.assertProductQuantity
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
            - name: expectedQuantity
              string: ${returnedProductQuantity}
      
      - executeFunction:
          name: mx.functions.ea.cart.decreaseProductQuantityBy
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
            - name: quantity
              string: ${TC_EA_NumberOfDecrements}
            - name: direction
              string: "up"

      - executeFunction:
          name: mx.functions.ea.cart.getProductQuantity # <--RETURNS: ${returnedProductQuantity}
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
      
      - storeIn:
          key: TC_EA_currentProduct2Quantity
          value: ${returnedProductQuantity}
      
      - executeFunction:
          name: mx.functions.ea.cart.assertProductQuantity
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
            - name: expectedQuantity
              string: ${TC_EA_currentProduct2Quantity}
      
      - sleep:
          duration: 3000
      
      - executeFunction:
          name: mx.functions.ea.cart.assertProductsCountInSubtotalLabel
          params:
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.ea-016.finalProductsCount

      - arithmetic:
          expression: ${product2Price}
          storeIn: estimatedSubtotal
          asInt: true
          numberOfDecimalPlaces: 2
      
      - arithmetic:
          expression: ${estimatedSubtotal} + 54.00
          storeIn: estimatedTotal
          numberOfDecimalPlaces: 2
          asInt: true

      - executeFunction:
          name: mx.functions.ea.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${product2Price}

      - executeFunction:
          name: mx.functions.ea.cart.assertEstimatedTotalFromDetailsSection
          params:
            - name: expectedEstimatedTotal
              string: ${estimatedTotal}
      
      - executeFunction:
          name: mx.functions.ea.cart.tapContinue

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 12: REVIEW ORDER: INITIAL ASSERTIONS
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 12: REVIEW ORDER: INITIAL ASSERTIONS"
            - name: squadNames
              string: PURCHASE | QAA
      
      - scroll:
          direction: up
          scrollLimit: 1
          wait: 10000
      
      - executeFunction:
          name: mx.functions.ea.review-order.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.ea-016.deliveryMethod
      
      - executeFunction:
          name: mx.functions.ea.review-order.assertHomeAddressName
          params:
            - name: expectedHomeAddressName
              string: mx.data.qaa.sanity.ea-016.addressNameiOS
     
      - executeFunction:
          name: mx.functions.ea.review-order.assertHomeAddressByFullString
          params:
            - name: addressFullString
              string: mx.data.qaa.sanity.ea-016.fullStringAddressiOS
 
      - executeFunction:
          name: mx.functions.ea.review-order.assertProductsCountInDeliveryDetailsSection
          params:
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.ea-016.finalProductsCount
     
      - executeFunction:
          name: mx.functions.ea.review-order.openProductsDetailsPopup
        
      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertPopupDisplayed
      
      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2
      
      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.tapClose
  
  # --------------------------------------------------------------------------------------------------------------------
      # STEP 13: SELECT IN-STORE PAYMENT METHOD
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 13: SELECT IN-STORE PAYMENT METHOD"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: 'Payment'
      
      - executeFunction:
          name: mx.flows.ea.review-order.selectInStorePaymentMethod
      
      - executeFunction:
          name: mx.functions.ea.review-order.scrollUpToSection
          params:
            - name: sectionOption
              string: 'Delivery'
      
      - executeFunction:
          name: mx.functions.ea.review-order.getSingleDeliveryDate #--RETURNS--${returnedDeliveryDate}
      
      - storeIn:
          key: QAA_EA_016_REVIEW_ORDER_DELIVERY_DATE
          value: ${returnedDeliveryDate}
  
  # --------------------------------------------------------------------------------------------------------------------
      # STEP 14: FINAL REVIEW ORDER ASSERTIONS
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 14: FINAL REVIEW ORDER ASSERTIONS"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: 'PhoneNumber'
      
      - executeFunction:
          name: mx.flows.ea.review-order.enterCellphoneNumberIfNotDisplayed
          params:
            - name: userPhoneNumber
              string: mx.data.qaa.sanity.ea-016.phoneNumber
      
      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: 'Totals'

      - executeFunction:
          name: mx.functions.ea.review-order.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${estimatedSubtotal}
      
      - executeFunction:
          name: mx.functions.ea.review-order.assertDeliveryFee
          params:
            - name: expectedDeliveryFee
              string: mx.data.qaa.sanity.ea-016.deliveryFee
      
      - executeFunction:
          name: mx.functions.ea.review-order.assertEstimatedTotalFromButton
          params:
            - name: expectedEstimatedTotal
              string: ${estimatedTotal}
      
      - executeFunction:
          name: mx.functions.ea.review-order.assertEstimatedTotalFromDetailsSection
          params:
            - name: expectedEstimatedTotal
              string: ${estimatedTotal}
 
  # --------------------------------------------------------------------------------------------------------------------
      # STEP 15: TAP PLACE ORDER AND VALIDATE ORDER CONFIRMATION
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 15: TAP PLACE ORDER AND VALIDATE ORDER CONFIRMATION"
            - name: squadNames
              string: PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.review-order.tapPlaceOrder #--RETURNS--${returnedOrdereDate}-->
      - sleep:
          duration: 10000
      - storeIn:
          key: QAA_EA_016_ORDERED_DATE
          value: ${returnedOrderedDate}
      
      - executeFunction:
          name: mx.functions.utils.closeRateWalmartPopupIfDisplayed
     
      - executeFunction:
          name: mx.functions.ea.order-confirmation.assertPageDisplayed
      
      - executeFunction:
          name: mx.functions.ea.order-confirmation.assertTotal
          params:
            - name: expectedTotal
              string: ${estimatedTotal}
     
      - executeFunction:
          name: mx.functions.ea.order-confirmation.assertSingleDeliveryDate
          params:
            - name: expectedDeliveryDate
              string: ${QAA_EA_016_REVIEW_ORDER_DELIVERY_DATE}
      
      - executeFunction:
          name: mx.functions.ea.order-confirmation.assertProductsCount
          params:
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.ea-016.finalProductsCount
      
      - executeFunction:
          name: mx.functions.ea.order-confirmation.getOrderNumber # <--- RETURNS: ${returnedOrderNumber}
      
      - storeIn:
          key: tc_OrderNumber
          value: ${returnedOrderNumber}
    
  #--------------------------------------------------------------------------------------------------------------------
      - storeIn:
          key: EA_016_IS_CART_EMPTY
          value: true    
  # --------------------------------------------------------------------------------------------------------------------
      # STEP 16: NAVIGATE TO ACCOUNT AND VERIFY ORDER IN ORDERS HISTORY
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 16: NAVIGATE TO ACCOUNT AND VERIFY ORDER IN ORDERS HISTORY"
            - name: squadNames
              string: POST-PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.utils.closeRateWalmartPopupIfDisplayed
    
      - executeFunction:
          name: mx.functions.ea.order-confirmation.tapFindMoreProducts
        
      - executeFunction:
          name: mx.functions.ea.bottom-menu.tapAccount
      
      - executeFunction:
          name: mx.functions.ea.account.assertPageDisplayed
      
      - executeFunction:
          name: mx.functions.ea.account.openOrdersHistory
      
      - executeFunction:
          name: mx.functions.ea.orders-history.assertPageDisplayed

  # --------------------------------------------------------------------------------------------------------------------
      # STEP 17: OPEN ORDER DETAILS AND VALIDATE CORRECT INFORMATION
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 17: OPEN ORDER DETAILS AND VALIDATE CORRECT INFORMATION"
            - name: squadNames
              string: POST-PURCHASE | QAA
      
      - executeFunction:
          name: mx.functions.ea.orders-history.openOrderByPosition
          params:
            - name: position
              string: "1"
      
      - executeFunction:
          name: mx.functions.ea.order-details.assertProductDisplayed
      
      # Correct Order Opened Assertion...
      - executeFunction:
          name: mx.functions.ea.order-details.assertCorrectOrderDisplayed
          params:
            - name: expectedOrderNumber
              string: ${tc_OrderNumber}
      
      # Ordered Date Assertion...
      - executeFunction:
          name: mx.functions.ea.order-details.assertOrderedDate
          params:
            - name: expectedOrderedDate
              string: ${QAA_EA_016_ORDERED_DATE}
      
      # Delivery Method Assertion...
      - executeFunction:
          name: mx.functions.ea.order-details.assertDeliveryMethodForSingleDelivery
          params:
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.ea-016.deliveryMethod
      
      - executeFunction:
          name: mx.functions.ea.order-details.expandProductsDetailsIfNotExpandedForSingleDelivery
      
      # Product Assertions...
      - executeFunction:
          name: mx.functions.ea.order-details.assertProductDisplayed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-016.productName2

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductUnitPrice
          params:
            - name: expectedUnitPrice
              string: ${originalProduct2Price}

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductOrderedQuantity
          params:
            - name: expectedQuantity
              string: mx.data.qaa.sanity.ea-016.finalProductsCount

      - scroll:
          direction: down
          scrollLimit: 1

      # Totals Assertions...
      - executeFunction:
          name: mx.functions.ea.order-details.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${originalProduct2Price}
      - executeFunction:
          name: mx.functions.ea.order-details.assertDeliveryFee
          params:
            - name: expectedDeliveryFee
              string: mx.data.qaa.sanity.ea-016.deliveryFee
      - executeFunction:
          name: mx.functions.ea.order-details.assertTotal
          params:
            - name: expectedTotal
              string: ${estimatedTotal}
      - scroll:
          direction: down
          scrollLimit: 1
          wait: 1000
  
  #--------------------------------------------------------------------------------------------------------------------
      ## STEP 18: CANCEL ORDER - ORDER STATUS IS 'CANCELED'.
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 18: CANCEL ORDER."
            - name: squadNames
              string: POST-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.order-details.tapCancelOrder 
      
      - executeFunction:
          name: mx.functions.ea.order-details.cancel-order-popup.assertPopupDisplayed
      
      - executeFunction:
          name: mx.functions.ea.order-details.cancel-order-popup.selectFirstOption
      
      - executeFunction:
          name: mx.functions.ea.order-details.cancel-order-popup.tapConfirmCancelButton
  
  #--------------------------------------------------------------------------------------------------------------------
      - storeIn:
          key: EA_016_SUCCESSFUL_EXECUTION
          value: true
      
      - log: "TEST END: QAA - EA - PRODUCTION SANITY - EA-016"

  #####################################################################################################################

  - name: After
    after: true
    flow:
      - executeFunction:
          name: mx.squad-reporting.logTestCaseFailure
          params:
            - name: testCaseExecutionStatus
              string: ${EA_016_SUCCESSFUL_EXECUTION}
      - if:
          condition: ${EA_016_SUCCESSFUL_EXECUTION} != true
          then:
            - log:
                message: "Main Failed: Verifying if there's data to reset for the next execution..."
                color: CYAN
            # Empty Cart if not Empty.
            - if:
                condition: ${EA_016_IS_CART_EMPTY} == false
                then:
                  - log:
                      message: "Products remained in Cart, deleting products..."
                      color: CYAN
                  - executeFunction:
                      name: mx.flows.ea.after-scenario-exclusive.openCartAndDeleteAllProducts
                else:
                  - log:
                      message: "No Products were left in Cart, no need to empty it..."
                      color: CYAN
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: CYAN      
      - log: "AFTER SCENARIO END"