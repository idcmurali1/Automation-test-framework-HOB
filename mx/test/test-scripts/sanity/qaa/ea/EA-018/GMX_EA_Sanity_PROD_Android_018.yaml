#======================================================================================================================
#  AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
#  CREATED: Feb/08/2024
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-dev-phase-ea-production-android-018
  debug: true

scenarios:

#######################################################################################################################
#
#  CONFLUENCE TRACKING DASHBOARD:
#    https://confluence.walmart.com/display/MXGECMEX/MXMOB-QAA%3A+Tracking%3A+Test+Suite%3A+GlassMX+-+EA+-+Sanity+-+Production+-+Android
#
#  JIRA AUTOMATION TC:
#    https://jira.walmart.com/browse/MXMOB-1626
#
#  JIRA MANUAL TC:
#    https://jira.walmart.com/browse/MXMOB-1588
#
#  FLAGS USED: N/A
#
#######################################################################################################################

  - name: Main
    flow:
      - log: "TEST START: QAA - EA - PRODUCTION SANITY - OD-018"

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 1: Navigate through onboarding and select EA banner."
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 1: Navigate through onboarding and select EA banner."
            - name: squadNames
              string: CORE | QAA

      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: banner
              string: EA
            - name: zipCode
              string: mx.data.qaa.sanity.ea-018.zipCode

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 2: Search for a Product"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 2: Search for a Product"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.flows.ea.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.sanity.ea-018.firstProductName

      - executeFunction:
          name: mx.flows.ea.sort-and-filter.addSoldByFilterWithOptionFromSLP
          params:
            - name: soldByOption
              string: 'ByWalmart'

      - executeFunction:
          name: mx.functions.ea.slp.getProductPrice
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName

      - storeIn:
          key: firstProductPrice
          value: ${returnedPrice}

      - if:
         condition: ${returnedDiscountAmount} != 0.00
         then:
           - storeIn:
               key: firstDiscountAmount
               value: ${returnedDiscountAmount}
           - storeIn:
               key: firstOriginalPrice
               value: ${returnedOriginalPrice}
           - storeIn:
               key: firstProductDiscount
               value: 'true'
         else: 
           - storeIn:
                key: firstProductDiscount
                value: 'false'
           - storeIn:
               key: firstDiscountAmount
               value: '0.00'


      #----------------------------------------------------------------------------------------------------------------
      # "STEP 3: Open the product description page (PDP)"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 3: Open the product description page (PDP)"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.slp.openProductDetailsByName
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName

      - executeFunction:
          name: mx.functions.ea.pdp.assertPageDisplayed

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 4: Add product to Cart"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 4: Add product to Cart"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.pdp.addToCart

      - executeFunction:
          name: mx.functions.ea.pdp.assertAddedToCart

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 5: Close PDP"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 5: Close PDP"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.pdp.tapClose

      - executeFunction:
          name: mx.functions.ea.slp.assertPageDisplayed

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 6: Search for a second product"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 6: Search for a second product"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.flows.ea.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.sanity.ea-018.secondProductName

      - executeFunction:
          name: mx.flows.ea.sort-and-filter.addSoldByFilterWithOptionFromSLP
          params:
            - name: soldByOption
              string: 'ByWalmart'

      - executeFunction:
          name: mx.functions.ea.slp.getProductPrice
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName

      - storeIn:
          key: secondProductPrice
          value: ${returnedPrice}

      - if:
         condition: ${returnedDiscountAmount} != 0.00
         then:
           - storeIn:
               key: secondDiscountAmount
               value: ${returnedDiscountAmount}
           - storeIn:
               key: secondOriginalPrice
               value: ${returnedOriginalPrice}
           - storeIn:
               key: secondProductDiscount
               value: 'true'
         else: 
           - storeIn:
                key: secondProductDiscount
                value: 'false'
           - storeIn:
               key: secondDiscountAmount
               value: '0.00'
           - storeIn:
               key: secondOriginalPrice
               value: ${returnedOriginalPrice}

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 7: Open the product description page (PDP)"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 7: Open the product description page (PDP)"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.slp.openProductDetailsByName
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName

      - executeFunction:
          name: mx.functions.ea.pdp.assertPageDisplayed

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 8: Add product to Cart"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 8: Add product to Cart"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.pdp.addToCart

      - executeFunction:
          name: mx.functions.ea.pdp.assertAddedToCart

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 9: Go to Cart"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 9: Go to Cart"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.pdp.tapClose

      - executeFunction:
          name: mx.functions.ea.slp.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.top-menu.tapCartIcon

      - executeFunction:
          name: mx.functions.utils.closeBlackPopupIfDisplayed

      - executeFunction:
          name: mx.functions.ea.cart.assertPageDisplayed

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 10: Validate cart totals"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 10: Validate cart totals"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cart.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName
            - name: direction
              string: down

      - executeFunction:
          name: mx.functions.ea.cart.assertProductUnitPrice
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName
            - name: expectedUnitPrice
              string: ${firstProductPrice}

      - if:
          condition: ${firstProductDiscount} == true
          then:
            - executeFunction:
                name: mx.functions.ea.cart.assertProductOriginalPrice
                params:
                  - name: productName
                    string: mx.data.qaa.sanity.ea-018.firstProductName
                  - name: expectedOriginalPrice
                    string: ${firstOriginalPrice}

      - executeFunction:
          name: mx.functions.ea.cart.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName
            - name: direction
              string: down

      - executeFunction:
          name: mx.functions.ea.cart.assertProductUnitPrice
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName
            - name: expectedUnitPrice
              string: ${secondProductPrice}

      - if:
          condition: ${secondProductDiscount} == true
          then:
            - executeFunction:
                name: mx.functions.ea.cart.assertProductOriginalPrice
                params:
                  - name: productName
                    string: mx.data.qaa.sanity.ea-018.secondProductName
                  - name: expectedOriginalPrice
                    string: ${secondOriginalPrice}

      - if:
          condition: ${secondProductDiscount} == true || ${firstProductDiscount} == true
          then:
            - executeFunction:
                name: mx.functions.ea.cart.assertProductsCountInSubtotalLabelIfDiscountExist
                params:
                  - name: expectedProductsCount
                    string: mx.data.qaa.sanity.ea-018.totalProductsExpected
            - storeIn:
                key: isThereAnyDiscount
                value: 'true'
            - arithmetic:
                expression: ${firstDiscountAmount} + ${secondDiscountAmount}
                storeIn: totalDiscountAmount
                numberOfDecimalPlaces: 2
            - arithmetic:
                expression: ${firstOriginalPrice} + ${secondOriginalPrice}
                storeIn: subtotalOriginalPrice
                numberOfDecimalPlaces: 2
            - arithmetic:
                expression: ${firstProductPrice} + ${secondProductPrice}
                storeIn: subtotalAmmount
                numberOfDecimalPlaces: 2
          else:
            - executeFunction:
                name: mx.functions.ea.cart.assertProductsCountInSubtotalLabel
                params:
                  - name: expectedProductsCount
                    string: mx.data.qaa.sanity.ea-018.totalProductsExpected
            - storeIn:
                key: isThereAnyDiscount
                value: 'false'
            - arithmetic:
                expression: ${firstProductPrice} + ${secondProductPrice}
                storeIn: subtotalOriginalPrice
                numberOfDecimalPlaces: 2

      - executeFunction:
          name: mx.functions.ea.cart.scrollDownToSubTotalSection

      - executeFunction:
          name: mx.functions.ea.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${subtotalAmmount}

      - executeFunction:
          name: mx.functions.ea.cart.getDisplayedDeliveryFee

      - arithmetic:
          expression: ${subtotalAmmount} + ${returnedDeliveryFee}
          storeIn: estimatedTotal
          numberOfDecimalPlaces: 2

      - executeFunction:
          name: mx.functions.ea.cart.assertEstimatedTotalFromDetailsSection
          params:
            - name: expectedEstimatedTotal
              string: ${estimatedTotal}

      - executeFunction:
          name: mx.functions.ea.cart.assertEstimatedTotalFromButton
          params:
            - name: expectedEstimatedTotal
              string: ${estimatedTotal}

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 11: Continue purchase"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 11: Continue purchase"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cart.tapContinue

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 12: Login from checkout"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 12: Login from checkout"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.flows.od.login.loginFromPopup
          params:
            - name: userEmail
              string: mx.data.qaa.sanity.ea-018.userEmail
            - name: userPassword
              string: mx.data.qaa.sanity.ea-018.userPassword
      # NOTE: this "IF" conditional is added as workaround to continue the login after click on [Continue] button in cart 
      # TODO: please extract functions in  "ELSE" conditional after the bug is resolved
      - log:
          message: "NOTE: this 'IF' conditional is added as workaround to continue the login after click on [Continue] button in cart"
          color: YELLOW
      - log:
          message: "TODO: please extract functions in  'ELSE' conditional after the bug is resolved"
          color: YELLOW
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.ea.add-and-edit-address-form.pageTitle
          then:
            - executeFunction:
                name: mx.functions.utils.relaunchApp

            - executeFunction:
                name: mx.functions.prehome.tapEABanner

            - executeFunction:
                name: mx.functions.ea.home.assertPageLoaded

            - executeFunction:
                name: mx.functions.ea.top-menu.tapCartIcon

            - executeFunction:
                name: mx.functions.ea.cart.tapContinue

            - executeFunction:
                name: mx.flows.od.login.loginFromPopup
                params:
                  - name: userEmail
                    string: mx.data.qaa.sanity.ea-018.userEmail
                  - name: userPassword
                    string: mx.data.qaa.sanity.ea-018.userPassword
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.ea.add-and-edit-address-form.pageTitle
                then:
                    - executeFunction:
                        name: mx.functions.ea.add-and-edit-address-form.assertPageDisplayed
                    - executeFunction:
                        name: mx.functions.ea.add-and-edit-address-form.tapClose
          else:
            - executeFunction:
                name: mx.functions.ea.add-and-edit-address-form.assertPageDisplayed

            - executeFunction:
                name: mx.functions.ea.add-and-edit-address-form.tapClose

      - storeIn:
          key: EA_018_IS_CART_EMPTY
          value: "false"

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 13: Select Pick up in store"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 13: Select Pick up in store"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.utils.scrollToTop
          params:
            - name: elementAtTheTop
              string: mx.mappings.ea.cart.selectedHomeOrStoreAddress

      - executeFunction:
          name: mx.functions.ea.cart.tapSwitchToPickupDeliveryButton

      - executeFunction:
          name: mx.functions.ea.store-selector-popup.assertPopupDisplayed

      - executeFunction:
          name: mx.functions.ea.store-selector-popup.selectStoreByStoreName
          params:
            - name: storeName
              string: mx.data.qaa.sanity.ea-018.storeName

      - executeFunction:
          name: mx.functions.ea.store-selector-popup.getSelectedStoreAddress

      - executeFunction:
          name: mx.functions.ea.store-selector-popup.tapSave

      - executeFunction:
          name: mx.functions.ea.cart.getSingleDeliveryDate 

      - storeIn:
          key: cartReturnedDeliveryDate
          value: ${returnedDeliveryDate} 

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 14: Validate delivery fee not present
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 14: Validate delivery fee not present"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cart.scrollDownToSubTotalSection

      - executeFunction:
          name: mx.functions.ea.cart.assertDeliveryFeeNotCharged

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 15: Continue purchase"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 15: Continue purchase"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cart.tapContinue

      - executeFunction:
          name: mx.functions.ea.review-order.assertPageDisplayed

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 16: Verify order details at summary page"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 16: Verify order details at summary page"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.review-order.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: PickupDelivery

      - executeFunction:
          name: mx.functions.ea.review-order.assertStoreAddressByFullString
          params:
            - name: addressFullString
              string: ${returnedStoreAddress}

      - storeIn:
          key: pickupPersonFirstName
          value: mx.data.qaa.sanity.ea-018.userFirstName

      - storeIn:
          key: pickupPersonLastName
          value: mx.data.qaa.sanity.ea-018.userLastName

      - storeIn:
          key: pickupPersonName
          value: ${pickupPersonFirstName} ${pickupPersonLastName}

      - executeFunction:
          name: mx.functions.ea.review-order.assertPickupPerson

      - executeFunction:
          name: mx.functions.ea.review-order.openProductsDetailsPopup

      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertPopupDisplayed

      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertProductsCount
          params:
            - name: expectedProductsCount
              string: 2

      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName

      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.assertProductListed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName

      - executeFunction:
          name: mx.functions.ea.review-order.products-details-popup.tapClose

      - executeFunction:
         name: mx.functions.ea.review-order.assertProductsCountInDeliveryDetailsSection

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 17: Select Cashi as payment method"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 17: Select Cashi as payment method"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.review-order.scrollUpToSection
          params:
            - name: sectionOption
              string: "Payment"

      - executeFunction:
          name: mx.flows.ea.review-order.selectCashiPaymentMethod

      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: PhoneNumber

      - executeFunction:
          name: mx.flows.ea.review-order.enterCellphoneNumberIfNotDisplayed
          params:
            - name: userPhoneNumber
              string: 4427150066

      - executeFunction:
          name: mx.functions.ea.review-order.tapPlaceOrder

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 18: Cancel pay with Cashi"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 18: Cancel pay with Cashi"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cashi-payment.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.cashi-payment.tapCancelCashiPayment

      - executeFunction:
          name: mx.functions.ea.cashi-payment.cancel-popup.assertPageIsDisplayed

      - executeFunction:
          name: mx.functions.ea.cashi-payment.cancel-popup.tapCancelButton

      - executeFunction:
          name: mx.functions.ea.cart.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.cart.assertCashiPaymentCancellationMessage

      - executeFunction:
          name: mx.functions.ea.cart.scrollDownToSubTotalSection

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 19: Continue to Review Order page and select "pay at the store" as a new payment method."
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 19: Continue to Review Order page and select 'pay at the store' as a new payment method."
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.cart.tapContinue

      - executeFunction:
          name: mx.functions.ea.review-order.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: PhoneNumber

      - executeFunction:
          name: mx.functions.ea.review-order.scrollUpToSection
          params:
            - name: sectionOption
              string: Payment

      - executeFunction:
          name: mx.flows.ea.review-order.selectInStorePaymentMethod

      - executeFunction:
          name: mx.functions.ea.review-order.scrollUpToSection
          params:
            - name: sectionOption
              string: Delivery

      - executeFunction:
          name: mx.functions.ea.review-order.getSingleDeliveryDate #--RETURN--${returnedDeliveryDate}

      - storeIn:
         key: EA_018_REVIEW_ORDER_DELIVERY_DATE
         value: ${returnedDeliveryDate}

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 20: Complete purchase"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 20: Complete purchase"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: PhoneNumber

      - executeFunction:
          name: mx.flows.ea.review-order.enterCellphoneNumberIfNotDisplayed

      - executeFunction:
          name: mx.functions.ea.review-order.scrollDownToSection
          params:
            - name: sectionOption
              string: "Totals"

      - executeFunction:
          name: mx.flows.ea.review-order.assertTotals #--RETURNS--${returnedEstimatedTotal}-->
          params:
            - name: deliveryMethod
              string: PickupDelivery
            - name: expectedDeliveryFee
              string: 'null'
            - name: expectedSubtotal
              string: ${subtotalOriginalPrice}
            - name: assertDiscount
              string: ${isThereAnyDiscount}
            - name: assertDeliveryFee
              string: 'false'
            - name: expectedSavingsAmount
              string: ${totalDiscountAmount}

      - storeIn:
          key: EA_018_REVIEW_ORDER_TOTAL
          value: ${returnedEstimatedTotal}

      - executeFunction:
          name: mx.functions.ea.review-order.tapPlaceOrder

      - executeFunction:
          name: mx.functions.ea.order-confirmation.assertPageDisplayed

      - storeIn:
          key: EA_018_IS_CART_EMPTY
          value: "true"

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 21: Validate Order Confirmation information"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 21: Validate Order Confirmation information"
            - name: squadNames
              string: POST-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.order-confirmation.getOrderNumber #--RETURNS--${returnedOrderNumber}-->

      - storeIn:
          key: EA_018_ORDER_NUMBER
          value: ${returnedOrderNumber}

      - executeFunction:
          name: mx.flows.ea.order-confirmation.assertConfirmationForPickupDelivery
          params:
            - name: expectedTotal
              string: ${EA_018_REVIEW_ORDER_TOTAL}
            - name: expectedDeliveryDate
              string: ${EA_018_REVIEW_ORDER_DELIVERY_DATE}
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.ea-018.totalProductsExpected
            - name: addressFullString
              string: ${returnedStoreAddress}

      #----------------------------------------------------------------------------------------------------------------
      # "STEP 22: Verify Order listed in Orders List from Account menu"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 22: Verify Order listed in Orders List from Account menu"
            - name: squadNames
              string: POST-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.ea.order-confirmation.tapFindMoreProducts

      - sleep:
          duration: 10000

      - executeFunction:
          name: mx.functions.ea.bottom-menu.tapAccount

      - executeFunction:
          name: mx.functions.ea.account.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.account.openOrdersHistory

      - executeFunction:
          name: mx.functions.ea.orders-history.assertPageDisplayed

      - executeFunction:
          name: mx.functions.ea.orders-history.assertOrderDisplayed
          params:
            - name: orderNumber
              string: ${orderNumber}

      - executeFunction:
          name: mx.functions.ea.orders-history.assertOrderTotal
          params:
            - name: expectedTotal
              string: ${subtotalAmmount}

      - executeFunction:
          name: mx.functions.ea.orders-history.assertOrderDeliveryMethod
          params:
            - name: orderNumber
              string: ${orderNumber}
            - name: expectedDeliveryMethod
              string: PickupDelivery

      - executeFunction:
          name: mx.flows.ea.orders-history.assertOrder
          params:
            - name: orderNumber
              string: ${orderNumber}
            - name: expectedDeliveryMethod
              string: PickupDelivery
            - name: expectedTotal
              string: ${subtotalAmmount}
            - name: isMultipleDelivery
              string: 'false'
            - name: expectedOrderStatus
              string: mx.data.qaa.sanity.ea-018.expectedOrderStatus
            - name: expectedDeliveryDate
              string: ${returnedDeliveryDate}
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.ea-018.totalProductsExpected

      - executeFunction:
          name: mx.functions.ea.orders-history.openOrder
          params:
            - name: orderNumber
              string: ${orderNumber}

      - sleep:
          duration: 3000

      - executeFunction:
          name: mx.flows.ea.order-details.assertDetailsForPickupDelivery
          params:
            - name: expectedOrderNumber
              string: ${EA_018_ORDER_NUMBER}
            - name: expectedOrderedDate
              string: ${returnedOrderedDate}
            - name: expectedOrderStatus
              string: mx.data.qaa.sanity.ea-018.expectedOrderStatus
            - name: expectedDeliveryDate
              string: ${returnedDeliveryDate}
            - name: expectedStoreName
              string: mx.data.qaa.sanity.ea-018.storeName
            - name: addressFullString
              string: mx.data.qaa.sanity.ea-018.storeAddressForOrderDetails

      - executeFunction:
          name: mx.functions.ea.order-details.expandProductsDetailsIfNotExpandedForSingleDelivery

      - executeFunction:
          name: mx.functions.utils.positionElementAtTheTop
          params:
            - name: elementToPositionUp
              string: mx.mappings.ea.order-details.collapseProductDetailsSectionButton

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductDisplayed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.secondProductName

      - if:
          condition: ${secondProductDiscount} == true
          then:
            - storeIn:
                key: secondProductPrice
                value: ${secondOriginalPrice}

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductUnitPrice
          params:
            - name: expectedUnitPrice
              string: ${secondProductPrice}

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductOrderedQuantity
          params:
            - name: expectedQuantity
              string: 1

      - executeFunction:
          name: mx.functions.utils.positionElementAtTheTop
          params:
            - name: elementToPositionUp
              string: mx.mappings.ea.order-details.collapseProductDetailsSectionButton

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductDisplayed
          params:
            - name: productName
              string: mx.data.qaa.sanity.ea-018.firstProductName

      - if:
          condition: ${firstProductDiscount} == true
          then:
            - storeIn:
                key: firstProductPrice
                value: ${firstOriginalPrice}

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductUnitPrice
          params:
            - name: expectedUnitPrice
              string: ${firstProductPrice}

      - executeFunction:
          name: mx.functions.ea.order-details.assertProductOrderedQuantity
          params:
            - name: expectedQuantity
              string: 1

      - scroll:
          direction: down
          scrollLimit: 5
          untilIdentifier: mx.mappings.ea.order-details.cancelOrderButton

      - arithmetic:
          expression: ${firstProductPrice} + ${secondProductPrice}
          storeIn: orderDetailsSubTotal

      - executeFunction:
          name: mx.functions.ea.order-details.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${orderDetailsSubTotal}

      - if:
          condition: ${secondProductDiscount} == true || ${firstProductDiscount} == true
          then:
            - arithmetic:
                expression: ${firstDiscountAmount} + ${secondDiscountAmount}
                storeIn: expectedDiscount
            - executeFunction:
                name: mx.functions.ea.order-details.assertDiscount
                params:
                  - name: expectedDiscount
                    string: ${expectedDiscount}
          else:
            - executeFunction:
                name: mx.functions.ea.order-details.assertDiscount
                params:
                  - name: expectedDiscount
                    string: '0.00'

      - executeFunction:
          name: mx.functions.ea.order-details.assertDeliveryDiscount
          params:
            - name: expectedDeliveryDiscount
              string: '0.00'

      - executeFunction:
          name: mx.functions.ea.order-details.assertDeliveryFee
          params:
            - name: expectedDeliveryFee
              string: '0.00'

      - executeFunction:
          name: mx.functions.ea.order-details.assertTotal
          params:
            - name: expectedTotal
              string: ${subtotalAmmount}

      #----------------------------------------------------------------------------------------------------------------
      - log: "STEP 23 - Cancel Order"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 23 - Cancel Order"
            - name: squadNames
              string: POST-PURCHASE | QAA

      - executeFunction:
          name: mx.flows.ea.order-details.cancelOrderWithSetOption

      - storeIn:
          key: EA_018_SUCCESSFUL_EXECUTION
          value: true

      - log: "TEST END: QAA - EA - PRODUCTION SANITY - EA-018"

  #####################################################################################################################

  - name: Before
    before: true
    flow:
      - log: "BEFORE SCENARIO START: Initial Config..."
      - executeFunction:
          name: mx.squad-reporting.setTestCaseName
          params:
            - name: testCaseName
              string: GMX_EA_Sanity_PROD_Android_018
      - log:
          message: "WORKAROUND: RELAUNCHING APP TO FIX ISSUE REGARDING INTERNAL APP FLAGS"
          color: YELLOW
      - executeFunction:
          name: mx.functions.utils.relaunchApp
      - storeIn:
          key: EA_018_IS_CART_EMPTY
          value: "true"
      - storeIn:
          key: EA_018_SUCCESSFUL_EXECUTION
          value: "false"
      - log: "BEFORE SCENARIO END"

  #####################################################################################################################

  - name: After
    after: true
    flow:
      - log: "AFTER SCENARIO START: Test Data Reset..."
      - if:
          condition: ${EA_018_SUCCESSFUL_EXECUTION} != true
          then:
            - if:
                condition: ${EA_018_IS_CART_EMPTY} == false
                then:
                  - executeFunction:
                      name: mx.flows.ea.after-scenario-exclusive.relaunchAndNavigateToHomePage
                  - executeFunction:
                      name: mx.flows.ea.after-scenario-exclusive.navigateToAccountAndLoginIfNotLogged
                      params:
                        - name: userEmail
                          string:  mx.data.qaa.sanity.ea-018.userEmail
                        - name: userPassword
                          string: mx.data.qaa.sanity.ea-018.userPassword
                  - executeFunction:
                      name: mx.functions.ea.bottom-menu.tapHome
                  - executeFunction:
                      name: mx.flows.ea.after-scenario-exclusive.openCartAndDeleteAllProducts
                else:
                  - log:
                      message: "No Products were left in Cart, no need to empty it..."
                      color: CYAN
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: CYAN
      - log: "AFTER SCENARIO END"
