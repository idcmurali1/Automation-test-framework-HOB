#======================================================================================================================
#  AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
#  CREATED: Jun/12/2023
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-od-sanity-production-android-008, qaa-od-sanity-production-android
  testCaseId: MXMOB-1365

scenarios:

  - name: Before
    before: true
    flow:
      - log: "BEFORE SCENARIO START: Initial Config..."
      - log:
          message: "WORKAROUND: RELAUNCHING APP TO FIX ISSUE REGARDING INTERNAL APP FLAGS"
          color: YELLOW
      - executeFunction:
          name: mx.functions.utils.relaunchApp
      - storeIn:
          key: OD_008_SUCCESSFUL_EXECUTION
          value: false
      - executeFunction:
          name: mx.squad-reporting.setTestCaseName
          params:
            - name: testCaseName
              string: GMX_OD_Sanity_PROD_Android_008
      - log: "BEFORE SCENARIO END"
      
  #--------------------------------------------------------------------------------------------------------------------
  - name: Main
    flow:
      - log:
          message: TEST START - E2E REGRESSION - OD-008
          color: CYAN
 
    ## STEP 1: PRE-HOME SHOULD BE SHOWN AND STEP 2: HOME SCREEN IS DISPLAYED.
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 1: PRE-HOME SHOULD BE SHOWN AND STEP 2: HOME SCREEN IS DISPLAYED."
            - name: squadNames
              string: CORE | QAA
 
      # Navigate through onboarding to home as guest user.
      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.e2e-regression.od-008.zipCode
            - name: banner
              string: OD
 
    ## STEP 3: LOGIN AS REGISTERED USER VIA ACCOUNT PAGE.
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 3: LOGIN AS REGISTERED USER VIA ACCOUNT PAGE."
            - name: squadNames
              string: CUSTOMER | QAA
      
      - executeFunction:
          name: mx.flows.od.login.navigateToAccountAndLogin
          params:
            - name: userEmail
              string: mx.data.e2e-regression.od-008.userEmail
            - name: userPassword
              string: mx.data.e2e-regression.od-008.userPassword
            - name: userName
              string: mx.data.e2e-regression.od-008.userName

    # STEP 4: SEARCH AN ITEM
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 4: SEARCH AN ITEM"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.bottom-menu.tapHome

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-008.search.productName1

    ## STEP 5: ADD PRODUCT TO CART FROM PDP
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 5: ADD PRODUCT TO CART FROM PDP"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.slp.openFirstPDPListed

      - executeFunction:
          name: mx.functions.pdp.assertPageDisplayed

      - executeFunction:
          name: mx.functions.pdp.getPrice

      - storeIn:
          key: productPriceFromSLPPRoduct
          value: ${returnedProductPrice}

      - executeFunction:
          name: mx.functions.pdp.addToCart

      - storeIn:
          key: productNameFromSLPList
          value: ${returnedProductName}

      ## STEP 6: ADD PRODUCT TO CART FROM PDP CAROUSEL
      - executeFunction: #---------------------------------------------------------------------------------------------
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 6: ADD PRODUCT TO CART FROM PDP CAROUSEL"
            - name: squadNames
              string: PRE-PURCHASE | QAA

      - executeFunction: 
          name: mx.functions.pdp.scrollDownToFirstCarouselDisplayed

      - executeFunction:
          name: mx.functions.pdp.carousel.openAvailablePDP
          params:
            - name: carouselName
              string: mx.data.e2e-regression.od-008.pdp.carouselName

      - executeFunction:
          name: mx.functions.pdp.assertPageDisplayed

      - executeFunction:
          name: mx.functions.pdp.getPrice

      - storeIn:
          key: productPriceFromCarouselsPDP
          value: ${returnedProductPrice}

      - executeFunction:
          name: mx.functions.pdp.addToCart

      - executeFunction:
          name: mx.functions.pdp.assertAddedToCart

      - storeIn:
          key: OD_008_IS_CART_EMPTY
          value: false

      - storeIn:
          key: productNameFromCarouselsPDP
          value: ${returnedProductName}

      - executeFunction:
          name: mx.functions.pdp.tapClose

      ## STEP 7: OPEN CART
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 7: OPEN CART"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: "2"

      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon

      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty

      - executeFunction:
          name: mx.functions.utils.closeBlackPopupIfDisplayed

      - executeFunction:
          name: mx.functions.cart.assertProductListed
          params:
            - name: productName
              string: ${productNameFromSLPList}

      - executeFunction:
          name: mx.functions.cart.assertProductListed
          params:
            - name: productName
              string: ${productNameFromCarouselsPDP}

      - arithmetic:
          expression: ${productPriceFromSLPPRoduct} + ${productPriceFromCarouselsPDP}
          storeIn: expectedEstimatedTotal
          numberOfDecimalPlaces: 2

      - executeFunction:
          name: mx.functions.cart.assertEstimatedTotalFromBottom
          params:
            - name: expectedEstimatedTotal
              string: ${expectedEstimatedTotal}

      ## STEP 8: HIT "RESERVAR UN HORARIO"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 8: HIT 'RESERVAR UN HORARIO'"
            - name: squadNames
              string: PURCHASE | QAA

      - scroll:
          direction: up
          untilIdentifier: mx.mappings.cart.reserveSlotButton
          position: top

      - executeFunction:
          name: mx.functions.cart.tapReserveSlot

      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed

      ## STEP 9: SELECT "PICKUP" AND SELECT TIME SLOT FROM THE LATEST DAY DISPLAYED
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 9: SELECT 'PICKUP' AND SELECT TIME SLOT FROM THE LATEST DAY DISPLAYED"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.reserve-slot.tapPickupDeliveryMethod

      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed

      - executeFunction:
          name: mx.functions.reserve-slot.tapChange

      - executeFunction:
          name: mx.functions.store-selector-popup.assertPageDisplayed

      - executeFunction:
          name: mx.functions.store-selector-popup.selectFirstODStore

      - executeFunction:
          name: mx.functions.store-selector-popup.getSelectedStoreAddress

      - storeIn:
          key: returnedAddress
          value: ${returnedStoreAddress}

      - executeFunction:
          name: mx.functions.store-selector-popup.tapSave

      - executeFunction:
          name: mx.functions.reserve-slot.selectLastAvailableDateSlot

      - executeFunction:
          name: mx.functions.reserve-slot.selectLastAvailableTimeSlot  

      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedDaySlot
        
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlot

      - executeFunction:
          name: mx.functions.reserve-slot.tapReserve

      - getString:
          identifier: mx.mappings.cart.userShortAddress
          storeIn: storeNameSelected

      ## STEP 10: CONTINUE CHECKOUT
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 10: CONTINUE CHECKOUT"
            - name: squadNames
              string: PURCHASE | QAA

      - sleep:
          duration: 5000

      - executeFunction:
          name: mx.functions.cart.tapContinue

      - if:
          identifier:
              present:
                - identifier: mx.mappings.utils.something-went-wrong-popup.popupTitle
          then:
            - executeFunction:
                name: mx.functions.utils.something-went-wrong-popup.tapRetryIfPopupDisplayed

      - executeFunction:
          name: mx.functions.missing-something.continueWithoutSelectionIfPageDisplayed

      - sleep:
          duration: 3000

      - executeFunction:
          name: mx.functions.review-order.assertPageDisplayed

      - executeFunction:
          name: mx.functions.review-order.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.e2e-regression.od-008.review-order.deliveryMethod

      - executeFunction:
          name: mx.functions.review-order.tapAddDeliveryInstructions

      - executeFunction:
          name: mx.functions.general-comments-pop-up.assertPageDisplayed

      - executeFunction:
          name: mx.functions.general-comments-pop-up.enterTestOrderDisclaimer

      - executeFunction:
          name: mx.functions.general-comments-pop-up.tapSave

      # STEP 11: GO TO PAYMENT METHODS AND SELECT PAY AT DELIVERY
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 11: GO TO PAYMENT METHODS AND SELECT A 'PAY AT DELIVERY - CASH'"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.cart.scrollDownToMobileIcon
          
      - executeFunction:
          name: mx.functions.review-order.enterCellphoneNumber
          params:
            - name: userPhoneNumber
              string: mx.data.e2e-regression.od-008.review-order.phoneNumber

      - executeFunction:
          name: mx.functions.review-order.scrollDownToSection
          params:
            - name: sectionName
              string: Total

      ## STEP 12: ADD PROMOTIONAL COUPON
      - log: "STEP 12 SKIPPED, WE DON'T HAVE PROMOTIONAL COUPONS"

      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotalFromButton
          params:
            - name: estimatedTotalFromButton
              string: ${expectedEstimatedTotal}

      - executeFunction:
          name: mx.functions.review-order.scrollUpToSection
          params:
            - name: sectionName
              string: "Pickup"
      
      - executeFunction:
          name: mx.functions.review-order.getDeliverySlot

      - storeIn:
          key: tc_returnedDeliverySlot
          value: ${returnedDeliverySlot}

      ## STEP 13: PLACE ORDER
      - executeFunction: 
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 13: PLACE ORDER"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.review-order.tapPlaceOrder

      - storeIn:
          key: OD_008_IS_CART_EMPTY
          value: true
      
      - executeFunction:
          name: mx.functions.order-confirmation.assertPageDisplayed
        
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: "PickupDelivery"

      - executeFunction:
          name: mx.functions.order-confirmation.assertStoreAddressName
          params:
            - name: expectedStoreAddressName
              string: ${storeNameSelected}

      - executeFunction:
          name: mx.functions.order-confirmation.getOrderNumber

      ## STEP 14: HIT "DESCUBRIR MAS PRODUCTOS" BUTTON
      - executeFunction: #---------------------------------------------------------------------------------------------
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 14: HIT 'DESCUBRIR MAS PRODUCTOS' BUTTON"
            - name: squadNames
              string: PURCHASE | QAA

      - executeFunction:
          name: mx.functions.order-confirmation.tapFindMoreProducts

      - sleep:
          duration: 3000

      - executeFunction:
          name: mx.functions.home.scrollUpToLocationBanner

      - executeFunction:
          name: mx.functions.home.assertPageLoaded

      ## STEP 15: GO TO PROFILE SCREEN AND SELECT "PEDIDOS"
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 15: GO TO PROFILE SCREEN AND SELECT 'PEDIDOS'"
            - name: squadNames
              string: CUSTOMER | QAA

      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount

      - executeFunction:
          name: mx.functions.account.tapTrackOrder

      ## STEP 16: SELECT THE NEWEST PLACED ORDER
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 16: SELECT THE NEWEST PLACE ORDER"
            - name: squadNames
              string: POST-PURCHASE | QAA

      - executeFunction:
          name: mx.functions.orders-history.tapOrderDetailsByPosition
          params:
            - name: position
              string: mx.data.e2e-regression.od-008.order-history.lastOrder

      - executeFunction:
          name: mx.functions.order-details.assertCorrectOrderDisplayed
          params:
            - name: expectedOrderNumber
              string: ${returnedOrderNumber}

      - executeFunction:
          name: mx.functions.order-details.expandProductsDetailsIfNotExpanded

      - executeFunction:
          name: mx.functions.order-details.findProductInPage
          params:
            - name: productName
              string: ${productNameFromSLPList}

      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: productName
              string: ${productNameFromSLPList}
            - name: expectedSubtotal
              string: ${productPriceFromSLPPRoduct}

      - executeFunction:
          name: mx.functions.order-details.findProductInPage
          params:
            - name: productName
              string: ${productNameFromCarouselsPDP}

      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: productName
              string: ${productNameFromCarouselsPDP}
            - name: expectedSubtotal
              string: ${productPriceFromCarouselsPDP}

      - executeFunction:
          name: mx.functions.order-details.scrollToBottom

      - executeFunction:
          name: mx.functions.order-details.assertTotal
          params:
            - name: expectedTotal
              string: ${expectedEstimatedTotal}

      #----------------------------------------------------------------------------------------------------------------

      - storeIn:
          key: OD_008_SUCCESSFUL_EXECUTION
          value: true

      - log: "TEST END: QAA - OD - PRODUCTION SANITY - OD-008"

  - name: After
    after: true
    flow:
      - executeFunction:
          name: mx.squad-reporting.logTestCaseFailure
          params:
            - name: testCaseExecutionStatus
              string: ${OD_008_SUCCESSFUL_EXECUTION}
      - if:
          condition: ${OD_008_SUCCESSFUL_EXECUTION} != true
          then:
            - executeFunction:
                name: mx.flows.od.after-scenario-exclusive.emptyCart
                params:
                  - name: userEmail
                    string: mx.data.e2e-regression.od-008.userEmail
                  - name: userPassword
                    string: mx.data.e2e-regression.od-008.userPassword
                  - name: isCartEmpty
                    string: ${OD_008_IS_CART_EMPTY}
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: CYAN
      - log: "AFTER SCENARIO END"
