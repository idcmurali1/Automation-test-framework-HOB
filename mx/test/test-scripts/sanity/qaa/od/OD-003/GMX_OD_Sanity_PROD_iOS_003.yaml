#======================================================================================================================
#    AUTHOR: Isis Rojas Tolentino (vn53dge)
#   CREATED: May/9/2023
#  REVISION: ---
#
#  Copyright Â© 2023 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: batch-1-qaa-od-sanity-production-ios-003, batch-1-qaa-od-sanity-production-ios
  testCaseId: MXMOB-1390

scenarios:

  #####################################################################################################################
  #
  # TEST CASE DESCRIPTION:
  #
  #   Main Objectives:
  #     - Test Add and Increase quantity without exceeding pay at delivery threshold and validates pay at delivery can 
  #          be selected.
  #     - Test Add and Increase quantity to exceed pay at delivery threshold and validates pay at delivery can't be 
  #          selected.
  #     - Selects Pay at delivery cash option.
  #     - Place an Order with Home Delivery shipping method.
  #     - Pay Order at Delivery.
  #
  # Flags Used:
  #   N/A
  #
  #######################################################################################################################
  #
  # PRE-REQUISITES:
  #
  #   - Existing Account.
  #   - Existing Address (Near Walmart Toreo).
  #   - Store to be used: Toreo.
  #   - Products must have enough products quantity.
  #   - Exceed pay at delivery is above $3000.
  #
  #######################################################################################################################

  - name: Main
    flow:
      - log: 
          message: "TEST START - E2E REGRESSION - OD-003"
          color: CYAN
      
    # STEP 1-2: Navigate through Onboarding and select OD Banner ------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 1-2: NAVIGATE ONBOARDING AND SELECT OD BANNER."
            - name: squadNames
              string: CORE | QAA
      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.qaa.sanity.od-003.zipCode
            - name: banner
              string: "OD"

    # STEP 3: Login from Profile --------------------------------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 3: LOGIN FROM PROFILE."
            - name: squadNames
              string: CUSTOMER | QAA
      - executeFunction:
          name: mx.flows.od.login.navigateToAccountAndLogin
          params:
            - name: userEmail
              string: mx.data.qaa.sanity.od-003.userEmail
            - name: userPassword
              string: mx.data.qaa.sanity.od-003.userPassword
            - name: userName
              string: mx.data.qaa.sanity.od-003.userName
  # Changing store.....................................................................................................
      - log: "Step 3-A: Changing store (if necessary)..."
      - executeFunction:
          name: mx.functions.home.scrollUpToLocationBanner
      - if:
          identifier:
            present:
              - identifier: mx.mappings.delivery-method-selector.expandLocationBanner
          then:
            - executeFunction:
                name: mx.functions.delivery-method-selector.expandSelector
            - executeFunction:
                name: mx.functions.delivery-method-selector.tapPickupButtonIfNotSelected
            - executeFunction:
                name: mx.flows.od.delivery-method-selector.changeStoreFromSelector
                params:
                  - name: zipCode
                    string: mx.data.qaa.sanity.od-003.zipCode
                  - name: storeName
                    string: mx.data.qaa.sanity.od-003.storeName
            - executeFunction:
                name: mx.functions.delivery-method-selector.closeSelector
          else:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.home.selectedStoreButton # <--Selected Store--${selectedStore}--Set in 'Before' Scenario.
                then:
                  - log: "Desired Store already selected, execution will continue..."
                else:
                  - log: "Desired Store not selected, changing store..."
                  - executeFunction:
                      name: mx.functions.home.tapStoreSelector
                  - executeFunction:
                      name: mx.functions.store-selector-popup.assertPageDisplayed
                  - executeFunction:
                      name: mx.flows.od.store-selector-popup.quickChangeStoreFromPopup
                      params:
                        - name: zipCode
                          string: mx.data.qaa.sanity.od-003.zipCode
                        - name: storeName
                          string: mx.data.qaa.sanity.od-003.storeName

    # STEP 4: Perform a search --------------------------------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 4: PERFORM A SEARCH."
            - name: squadNames
              string: PRE-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.sanity.od-003.productSearch
      - executeFunction:
          name: mx.functions.slp.getProductNameBetweenPriceRange
          params:
            - name: minPrice
              string: "1499"
            - name: maxPrice
              string: "3000"
      - executeFunction:
          name: mx.functions.slp.getProductPrice
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - storeIn:
          key: product_price
          value: ${returnedPrice}
      - storeIn:
          key: original_product_price
          value: ${returnedOriginalPrice}

    # STEP 5-6: Add product to cart and increase product quantity to exceed delivery threshold ------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: 'STEP 5-6: ADD PRODUCT TO CART AND ICREASE PRODUCT QUANTITY TO EXCEED DELIVERY THRESHOLD.'
            - name: squadNames
              string: PRE-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - storeIn:
          key: OD_003_IS_CART_EMPTY
          value: false
      - storeIn:
          key: var_product1_price  # Price of Product 1  
          value: ${product_price}
      - executeFunction:
          name: mx.functions.slp.increaseProductQuantityToExceedHomeDeliveryThreshold
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces # --RETURNS--${returnedProductPieces}-->  
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - storeIn:
          key: var_product1_quantity
          value: ${returnedProductPieces}
      # Cart Badge Quantity Validation ................................................................................
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${var_product1_quantity}

    # STEP 7: Open cart and assert products Added ---------------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: 'STEP 7: OPEN CART AND PERFORM PRODUCT ASSERTIONS.'
            - name: squadNames
              string: PURCHASE | QAA
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty
      - storeIn:
          key: var_product1_subtotal
          value: ${returnedSummarySubtotal}
      - executeFunction:
          name: mx.functions.cart.assertProductQuantityAsPieces
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
            - name: expectedQuantity
              string: ${var_product1_quantity}

    # STEP 8-10: Reserve time slot and delivery method ----------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 8-10: RESERVE TIME SLOT AND HOME DELIVERY METHOD."
            - name: squadNames
              string: PURCHASE | QAA  
      - executeFunction:
          name: mx.functions.cart.tapReserveSlot
      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      # assertions reserve slot page from "reservar un horario" button ................................................
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableDateSlots
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableTimeSlots
      - executeFunction: 
          name: mx.functions.reserve-slot.tapClose
      # assertions reserve slot page from "continuar" button ..........................................................
      - executeFunction:
          name: mx.functions.cart.tapContinue
      - executeFunction:
          name: mx.functions.missing-something.continueWithoutSelectionIfPageDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableDateSlots
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableTimeSlots
      # reserve home delivery, and time slot ..........................................................................
      - executeFunction:
          name: mx.functions.reserve-slot.tapHomeDeliveryMethod
      - executeFunction:
          name: mx.flows.od.reserve-slot.changeDeliveryAddress
          params:
            - name: addressName
              string: mx.data.qaa.sanity.od-003.userAddressName
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedAddress
      - storeIn:
          key: tc_003_returnedStreet
          value: ${returnedStreetName}
      - storeIn:
          key: tc_003_returnedExteriorNumber
          value: ${returnedExteriorNumber}
      - executeFunction:
          name: mx.functions.reserve-slot.selectLastAvailableDateSlot
      - executeFunction:
          name: mx.functions.reserve-slot.selectLastAvailableTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedDaySlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.tapReserve
      - executeFunction:
          name: mx.functions.review-order.assertPageDisplayed
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot 
          params:
            - name: forPage
              string: 'ReviewOrder'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.review-order.assertDeliverySlot
          params:
            - name: deliverySlot
              string: ${returnedDeliverySlot}

    # STEP 11-12: Continue to Checkout Add new payment method and assert pay at delivery not available -------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 11-12: CONTINUE TO CHECKOUT ADD NEW PAYMENT METHOD AND ASSERT PAY AT DELIVERY NOT AVAILABLE."
            - name: squadNames
              string: PURCHASE | QAA
      - executeFunction:
          name: mx.functions.review-order.scrollDownToSection
          params:
            - name: sectionName
              string: "Pago"
      - executeFunction:
          name: mx.functions.review-order.payment-section.tapChangePaymentMethod
      - executeFunction:
          name: mx.functions.payment.assertPageDisplayed
      - executeFunction:
          name: mx.functions.payment.scrollDownToPayAtDelivery
      - executeFunction:
          name: mx.functions.payment.assertPayAtDeliveryNotAvailable
      - executeFunction:
          name: mx.functions.payment.tapClose

    # STEP 13-14: Go back to cart, search product exceeded pay at delivery and decrease quantity ----------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 13-14: GO BACK TO CART, SEARCH PRODUCT EXCEEDED PAY AT DELIVERY THRESHOLD AND DECREASE QUANTITY."
            - name: squadNames
              string: PRE-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.review-order.tapBack
      - executeFunction:
          name: mx.functions.review-order.almost-done-popup.tapExitPayment
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.functions.cart.tapBack
      - executeFunction:
          name: mx.functions.slp.scrollDownToProductByName
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - executeFunction:
          name: mx.functions.slp.assertProductDisplayed
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - executeFunction:
          name: mx.functions.slp.decreaseProductQuantityBy
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
            - name: quantity
              string: "1"
      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
      - storeIn:
          key: var_product1_quantity
          value: ${returnedProductPieces}
      # Cart Badge Quantity Validation ................................................................................
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${var_product1_quantity}
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product1_quantity}
            - value: ${var_product1_price}
            - value: "false"
          getResponse:
            storeIn: var_product1_subtotal

    # STEP 15: Open cart, assert product quantities and continue to checkout ------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: 'STEP 15: OPEN CART AND ASSERT PRODUCT QUANTITIES.'
            - name: squadNames
              string: PURCHASE | QAA
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: "1"
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${var_product1_price}
            - name: expectedSubtotal
              string: ${var_product1_subtotal}

    # STEP 16-17: Continue to checkout and select pay at delivery --------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 16-17: CONTINUE TO CHECKOUT AND SELECT PAY AT DELIVERY."
            - name: squadNames
              string: PURCHASE | QAA
      - executeFunction:
          name: mx.functions.cart.tapContinue
      - executeFunction:
          name: mx.functions.missing-something.continueWithoutSelectionIfPageDisplayed
      - executeFunction:
          name: mx.functions.review-order.assertPageDisplayed
      - executeFunction:
          name: mx.functions.utils.scrollToTop
          params:
            - name: elementAtTheTop
              string: mx.mappings.review-order.deliveryHeaderContainer
      - executeFunction:
          name: mx.functions.review-order.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.od-003.deliveryMethod
      - executeFunction:
          name: mx.functions.review-order.scrollDownToSection
          params:          
            - name: sectionName
              string: "MÃ©todo de pago"
      - executeFunction:
          name: mx.flows.od.review-order.forceSelectPayAtDeliveryMethod
          params:
            - name: payAtDeliveryOption
              string: cash

    # STEP 18: Place order and perform assertions ---------------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 18: PLACE ORDER AND PERFORM ASSERTIONS FOR ORDER CONFIRMATION"
            - name: squadNames
              string: PURCHASE | QAA
      - executeFunction:
          name: mx.functions.utils.scrollToTop
      # This function adds the delivery message to the Walmart team so they do not deliver the products.
      - executeFunction:
          name: mx.flows.od.review-order.enterTestOrderDisclaimer
      - executeFunction:
          name: mx.functions.review-order.scrollDownToSection
          params:          
            - name: sectionName
              string: "NÃºmero telefÃ³nico"
      - executeFunction:
          name: mx.functions.review-order.enterCellphoneNumber
          params:
            - name: userPhoneNumber
              string: mx.data.qaa.sanity.od-003.userPhoneNumber
      - storeIn:
          key: deliveryFee
          value: mx.data.qaa.sanity.od-003.deliveryFee
      - arithmetic:
          expression: ${var_product1_subtotal} + ${deliveryFee}
          numberOfDecimalPlaces: 2
          storeIn: cartEstimatedTotal
      - executeNode:
          file: mx/test/helpers/utils/numberToNumberWithComa.js
          args:
            - value: ${cartEstimatedTotal}
          getResponse:
            storeIn: varTC_cart_total

      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotalFromButton
          params:
            - name: estimatedTotalFromButton
              string: ${varTC_cart_total}
      - executeFunction:
          name: mx.functions.review-order.tapPlaceOrder
      - executeNode:
          file: mx/test/helpers/utils/getTodaysDateAsStringForAssertion.js
          getResponse:
            storeIn: varTC_OrderDate
      - sleep:
          duration: 5000
      - storeIn:
          key: OD_003_IS_CART_EMPTY
          value: true

      # Order Confirmation Assertions .................................................................................
      - executeFunction:
          name: mx.functions.order-confirmation.assertPageDisplayed
      - executeFunction:
          name: mx.functions.order-confirmation.getOrderNumber
      - storeIn:
          key: qaa_od003_order_number
          value: ${returnedOrderNumber}
          # [VARIABLE] Order number saved in ${qaa_od003_order_number}"
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.od-003.deliveryMethod
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'OrderConfirmation'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliverySlot
          params:
            - name: expectedDeliverySlot
              string: ${returnedDeliverySlot}
      - executeFunction:
          name: mx.functions.utils.closeRateWalmartPopupIfDisplayed

    # STEP 19: Hit find more products and assert home page is displayed -----------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 19: HIT 'DESCUBRIR MAS PRODUCTOS' BUTTON."
            - name: squadNames
              string: PRE-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.order-confirmation.tapFindMoreProducts
      - executeFunction:
          name:  mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.functions.home.assertPageLoaded

    # STEP 20: Go to Profile screen and open Orders -------------------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 20: GO TO PROFILE AND SELECT 'PEDIDOS'"
            - name: squadNames
              string: POST-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount
      - sleep:
          duration: 10000
      - executeFunction:
          name: mx.functions.account.openOrdersHistory

      - executeFunction:
          name: mx.flows.od.orders-history.assertOrder
          params:
            - name: orderNumber
              string: ${qaa_od003_order_number}
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.od-003.deliveryMethod
            - name: expectedTotal
              string: ${cartEstimatedTotal}
            - name: expectedBanner
              string: mx.data.qaa.sanity.od-003.banner
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: expectedOrderStatus
              string: mx.data.qaa.sanity.od-003.expectedOrderStatus
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.od-003.differentProductsCount

    # STEP 21: Perform Order Validations for newly placed order -------------------------------------------------------
      - executeFunction:
          name: mx.squad-reporting.setTestCaseStep
          params:
            - name: step
              string: "STEP 21: SELECT THE NEWEST PLACED ORDER."
            - name: squadNames
              string: POST-PURCHASE | QAA
      - executeFunction:
          name: mx.functions.orders-history.tapOrderDetailsByPosition
          params:
            - name: position
              string: '1'

      - executeFunction:
          name: mx.flows.od.order-details.assertOrderDetailsWithoutDeliveryLocationAssertion
          params:
            - name: orderNumber
              string: ${qaa_od003_order_number}
            - name: expectedOrderedDate
              string: ${varTC_OrderDate}
            - name: expectedDeliveryMethod
              string: mx.data.qaa.sanity.od-003.deliveryMethod
            - name: expectedOrderStatus
              string: mx.data.qaa.sanity.od-003.expectedOrderStatus
            - name: expectedBanner
              string: mx.data.qaa.sanity.od-003.banner
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: expectedProductsCount
              string: mx.data.qaa.sanity.od-003.differentProductsCount
            - name: expectedPaymentMethod
              string: PayAtDelivery
            - name: expectedSubtotal
              string: ${original_product_price}
            - name: assertDiscount
              string: false
            - name: expectedDeliveryFee
              string: ${deliveryFee}
            - name: expectedTotal
              string: ${cartEstimatedTotal}

      # Product Assertions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

      - executeFunction:
          name: mx.functions.order-details.expandProductsDetailsIfNotExpanded
      - executeFunction:
          name: mx.flows.od.order-details.assertProductDetails
          params:
            - name: productName
              string: ${returnedProductNameBetweenPriceRange}
            - name: expectedPrice
              string: ${original_product_price}
            - name: expectedSubtotal
              string: ${var_product1_price}
            - name: productType
              string: Pieces
            - name: expectedOrderedQuantityAsPieces
              string: "1"

      - storeIn:
          key: OD_003_SUCCESSFUL_EXECUTION
          value: true
              
      - log: "TEST END: QAA - OD - PRODUCTION SANITY - OD-003"

#--------------------------------------------------------------------------------------------------------------------
  - name: Before
    before: true
    flow:
      - log: "BEFORE SCENARIO: Test Preparation..."
      - storeIn:
          key: OD_003_IS_CART_EMPTY
          value: true
      - storeIn:
          key: OD_003_SUCCESSFUL_EXECUTION
          value: false
      - executeFunction:
          name: mx.squad-reporting.setTestCaseName
          params:
            - name: testCaseName
              string: GMX_OD_Sanity_PROD_iOS_003
      - storeIn:
          key: selectedStore
          value: mx.data.qaa.sanity.od-003.storeName
      - log: "BEFORE SCENARIO FINISHED"

#--------------------------------------------------------------------------------------------------------------------
  - name: After
    after: true
    flow:
      - log: "AFTER SCENARIO START: Test Data Reset..."
      
      - executeFunction:
          name: mx.squad-reporting.logTestCaseFailure
          params:
            - name: testCaseExecutionStatus
              string: ${OD_003_SUCCESSFUL_EXECUTION}

      - if:
          condition: ${OD_003_SUCCESSFUL_EXECUTION} != true
          then:
            - log:
                message: "Main Failed: Resetting data for the next execution if necessary..."
                color: CYAN
            - executeFunction:
                name: mx.flows.od.after-scenario-exclusive.emptyCart
                params:
                  - name: userEmail
                    string: mx.data.qaa.sanity.od-003.userEmail
                  - name: userPassword
                    string: mx.data.qaa.sanity.od-003.userPassword
                  - name: isCartEmpty
                    string: ${OD_003_IS_CART_EMPTY}
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: CYAN
      - log: "AFTER SCENARIO END"
