#======================================================================================================================
#  AUTHOR: Francisco Ramirez (vn53vq4)
#  CREATED: Nov/11/2024
#  REVISION: ---
#  MANUAL JIRA TICKET: https://jira.walmart.com/browse/MMC-4250 
#  AUTOMATED JIRA TICKET: https://jira.walmart.com/browse/MMC-4491
#
#  FLOW: Navigate to EA Banner, navigate to account and perform login, go back to home page and add any products to cart
#        open cart and tap on add new delivery address.
#
#  Copyright 춸 2024 Walmart. All rights reserved.
#  NOTE: We are working only on PROD environments.
#======================================================================================================================

general:
  tags: customer-walmart-ea-smoke-production-ios, customer-walmart-ea-smoke-production-ios-4250,
        customer-bodega-ea-smoke-production-ios, customer-bodega-ea-smoke-production-ios-4250
  testCaseId: MMC-4491

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Before
    before: true
    flow:

      - log: R2_SUBFLOW_BEFORE ### [[ 游릭 Flow Identifier: BEFORE 游릭 ]] ###

      - executeFunction:
          name: functions.utils.setMarketInfo
      
      - storeIn:
          key: testStatus 
          value: false
      
      #Cart is empty
      - storeIn:
          key: cartEmpty 
          value: true

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    flow:

      - log: R2_SUBFLOW_LAUNCH_AND_LOGIN ### [[ 游릭 Flow Identifier: LAUNCH & LOGIN 游릭 ]] ###

      - storeIn:
          key: userEmail 
          value: mx.data.customer.userEmail

      # Onboarding
      - log:
          message: "STEP 1: Onboarding..."
          color: CYAN 
      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore

      # Tap global account button and sign in.
      - log:
          message: "STEP 2: LOGIN..."
          color: CYAN 
      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn
      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: ${userEmail}
            - name: userPassword
              string: mx.data.customer.password
      - executeFunction:
          name: functions.accountPage.assertUserLoggedInSuccessfully

      
      - log:
          message: "STEP 3: NAVIGATE TO HOME AND ADD PRODUCTS TO CART..."
          color: CYAN  
      - executeFunction:
          name: functions.global.tapShopBtn
      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: mx.data.customer.simpleProductsArray
      
      #Cart is not empty
      - storeIn:
          key: cartEmpty 
          value: false

      # Open Cart and tap on add delivery address
      - log:
          message: "STEP 4: OPEN CART AND TAP ADD NEW DELIVERY ADDRESS"
          color: CYAN
      - executeFunction:
         name: functions.global.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.functions.cart.tapOnAddressLink
      - executeFunction:
          name: mx.functions.addresses.tapAddAddress

      # Enter address information
      - log:
          message: "STEP 5: ENTER NEW DELIVERY ADDRESS"
          color: CYAN     
      
      - executeFunction:
          name: functions.addAddressPage.isPageDisplayed
      - if:
          condition: '!${returnedIsDisplayed}'
          then: 
            - failTest:
                message: "Add Address Page not displayed after trying to continue to checkout"
      - if:
          condition: ${firstName} == null && ${lastName} == null && ${exteriorNumber} == null && ${interiorNumber} == null && ${streetAddress} == null && ${postalCode} == null && ${phoneNumber} == null && ${coloniaName} == null
          then:
            - executeFunction:
                name: functions.utils.setDefaultAddressData # --> ${firstName}, ${lastName}, ${streetAddress}, ${exteriorNumber}, ${interiorNumber}, ${zipCode}, ${coloniaName}, ${phoneNumber}
      - executeFunction:
          name: functions.addAddressPage.enterFirstName # <-- ${firstName}
          params:
            - name: firstName
              string: mx.data.customer.shared.userName
      - executeFunction:
          name: functions.addAddressPage.enterLastName # <-- ${lastName}
          params:
            - name: lastName
              string: mx.data.customer.shared.lastName
      # Accept location permission pop up if displayed
      - if:
          identifier:
            present:
              - identifier: addAddressPage.allowLocationPermission
            timeout: 3000
          then:
            - click:
                identifier: addAddressPage.allowLocationPermission    
      - executeFunction:
          name: functions.addAddressPage.enterStreetAddress # <-- ${streetAddress}
          params:
            - name: streetAddress
              string: mx.data.customer.shared.streetAddress
      - executeFunction:
          name: functions.addAddressPage.enterExteriorNumber # <-- ${exteriorNumber}
          params:
            - name: exteriorNumber
              string: mx.data.customer.shared.exteriorNumber
      - executeFunction:
          name: functions.addAddressPage.enterInteriorNumber # <-- ${interiorNumber}
          params:
            - name: interiorNumber
              string: mx.data.customer.shared.interiorNumber
      - executeFunction:
          name: functions.addAddressPage.enterZipCode # <-- ${zipCode}
          params:
            - name: zipCode
              string: mx.data.customer.shared.zipCode
      - executeFunction:
          name: functions.addAddressPage.selectColonia # <-- ${coloniaName}
          params:
            - name: coloniaName
              string: mx.data.customer.shared.coloniaName

      - executeFunction:
          name: functions.addAddressPage.enterCrossingStreets # <-- ${crossingStreets}
      - executeFunction:
          name: functions.addAddressPage.enterReferences # <-- ${references}
      - executeFunction:
          name: functions.addAddressPage.enterPhoneNumber # <-- ${phoneNumber}
      - executeFunction:
          name: functions.addAddressPage.tapSaveButton
      
      # Happy Path: Exit and return back to geo-location confirmation page.
      - executeFunction:
          name: functions.addAddressPage.mapViewForAddressConfirmation.isPageDisplayed
      - executeFunction:
          name: mx.functions.add-and-edit-address-form.confirmation-map.tapBack
      - scroll:
          direction: down
          wait: 2000
          scrollLimit: 2
      - executeFunction:
          name: functions.addAddressPage.tapSaveButton
      - sleep:
          duration: 3000
      - executeFunction:
          name: functions.addAddressPage.mapViewForAddressConfirmation.isPageDisplayed
      - executeFunction:
          name: mx.functions.add-and-edit-address-form.confirmation-map.dragGeolocationPin
      - executeFunction:
          name: functions.addAddressPage.mapViewForAddressConfirmation.confirmLocation 

      
      # Extra step: Validate Address was added successully!
      - log:
          message: "EXTRA STEP: VALIDATE ADDRESS WAS ADDED SUCCESSFULLY AND CLEAN CART..."
          color: CYAN
      - executeFunction:
          name: mx.functions.address-selector-popup.assertPageDisplayed
      - executeFunction:
          name: mx.functions.address-selector-popup.assertDeliveryAddressDisplayedByName
          params:
            - name: addressName
              string: mx.data.customer.shared.streetAddress 
      - executeFunction:
          name: mx.functions.address-selector-popup.tapClose
      
      # Clean cart of products added from add new delivery Address flow.
      - if:
          condition: '!${cartEmpty}'
          then:
            - executeFunction:
               name: functions.cartPage.removeRegularAndOOSItems/loop
            # Delete "Save for later" products if founded.
            - executeFunction:
                name: mx.functions.cart.removeSFLProductIfDisplayed/loop
            # Cart is empty
            - storeIn:
                key: cartEmpty 
                value: true

      #Test Execution Status    
      - storeIn:
          key: testStatus 
          value: true
      
      # Main HOOK completed
      - log:
          message: "MAIN HOOK COMPLETED SUCCESSFULLY!"
          color: CYAN

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   A F T E R  S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    flow:
      - if:
          condition: ${testStatus} == true && ${cartEmpty} == true
          then:
          - log:
              message: "4250: Customer_Smoke_PROD_Android_DeliveryAddress_Verify_AddDeliveryAddressFromCheckout - Completed Succesfully!!"
              color: YELLOW_BOLD
          else:
            - failTest:
                message: Test Case has falied, please review logs for more details.