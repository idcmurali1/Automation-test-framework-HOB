#======================================================================================================================
#  AUTHOR: Brenda Robles (vn577kg)
#  CREATED: Oct/09/2024
#  REVISION: ---
#
#  Copyright 춸 2024 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: purchase-walmart-ea-sanity-production-ios-002, purchase-bodega-ea-sanity-production-ios-002, purchase-walmart-ea-sanity-production-ios, purchase-bodega-ea-sanity-production-ios
  testCaseId: MMP-5093

#######################################################################################################################
#
#  TEST CASE TITLE: 
#    Home delivery, restricted items, change cards
#
#  CONFLUENCE TRACKING DASHBOARD:
#    TO-DO 
#
#  JIRA AUTOMATION TC:
#    https://jira.walmart.com/browse/MMP-5093
#
#  JIRA MANUAL TC:
#    https://jira.walmart.com/browse/MMP-5100
#
#######################################################################################################################

scenarios:

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   B E F O R E   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Before
    before: true
    flow:

      - log: R2_SUBFLOW_BEFORE ### [[ 游릭 Flow Identifier: BEFORE 游릭 ]] ###

      - storeIn:
         key: MMP_5057_SUCCESSFUL_EXECUTION
         value: false

      - storeIn:
         key: WALLET_ISSUE_WORKAROUND
         value: true

      - executeFunction:
          name: functions.utils.setMarketInfo

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   M A I N   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: Main
    platform: ios
    flow:

      - log: R2_SUBFLOW_MAIN ### [[ 游릭 Flow Identifier: MAIN 游릭 ]] ###
 
    #---------------------------------------------------------------------------------------------
    # STEP 1: LOGIN -----------------------------------------------------------------------------
    #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 1: LOGIN"
          color: ORANGE

      - executeFunction:
          name: functions.onboardingToHomePage.usingPostalCode
          params:
            - name: PostalCode
              string: data.onboarding.userPostalCode
            - name: ShoppingExperience
              string: data.onboarding.onlineExclusiveStore

      - executeFunction:
          name: functions.global.tapAccountBtn
      - executeFunction:
          name: functions.accountPage.tapSignInBtn

      - executeFunction:
          name: functions.loginPage.userAuthentication
          params:
            - name: userEmail
              string: mx.data.purchase-002.userEmail
            - name: userPassword
              string: mx.data.purchase-user-data.userPassword

      - log: "Emptying cart before test"
      - executeFunction:
          name: functions.global.tapShopBtn
      - executeFunction:
          name: functions.cartPage.clearCart
          
    #---------------------------------------------------------------------------------------------
    # STEPS 2 & 3: SEARCH A RESTRICTED ITEM (2) AND ADD TO CART (3)-------------------------------
    #---------------------------------------------------------------------------------------------
      - log:
         message: "STEPS 2 & 3: SEARCH A RESTRICTED ITEM (2) AND ADD TO CART (3)"
         color: ORANGE

      - executeFunction:
          name: functions.searchPage.addToCartUsingItemArray
          params:
            - name: productArray
              string: mx.data.purchase-002.alcoholArray  

      - executeFunction:
          name: mx.functions.slp.getFirstProductListedName # ---> ${returnedProductName}

      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice # ---> ${returnedPrice}
          params:
            - name: productName
              string: ${returnedProductName}

      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces # ---> ${returnedProductPieces}
          params:
            - name: productName
              string: ${returnedProductName}

      - storeIn:
          key: purchase_5057_product_price
          value: ${returnedPrice}
      - storeIn:
          key: purchase_5057_product_type
          value: "Pieces"
      - storeIn:
          key: purchase_5057_product_quantity
          value: ${returnedProductPieces}
      - storeIn:
          key: purchase_5057_product_subtotal
          value: ${returnedPrice}
      - storeIn:
          key: purchase_5057_product_name
          value: ${returnedProductName}

    #---------------------------------------------------------------------------------------------
    # STEP 4: GO TO CART -------------------------------------------------------------------------
    #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 4: GO TO CART"
          color: ORANGE

      - executeFunction:
          name: functions.global.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty
      - executeFunction:
          name: functions.cartPage.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${purchase_5057_product_quantity}
      - executeFunction:
          name: functions.cartPage.assertCartTotals
          params:
            - name: expectedSubTotal
              string: ${purchase_5057_product_subtotal} # <-- ${totalPrice} / GLOBAL VAR
            - name: assertEstimatedTotal
              string: 'true'

      - log: "Product - ${purchase_5057_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_5057_product_name}
            - name: productType
              string: ${purchase_5057_product_type}
            - name: expectedQuantity
              string: ${purchase_5057_product_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${purchase_5057_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_5057_product_price}

      #---------------------------------------------------------------------------------------------
      # STEP 5: SELECT HOME DELIVERY ---------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 5: SELECT HOME DELIVERY"
          color: ORANGE

      - executeFunction:
          name: functions.cartPage.tapDeliveryOption
      - executeFunction:
          name: functions.cartPage.tapOnAddressLink
      - executeFunction:
          name: functions.cartPage.saveAddressFromList

      #---------------------------------------------------------------------------------------------
      # STEP 6: CONTINUE TO CHECKOUT ---------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 6: CONTINUE TO CHECKOUT"
          color: ORANGE

      - executeFunction:
          name: functions.cartPage.tapContinueToCheckoutBtn
      - executeFunction:
          name: functions.checkoutPage.assertPageLoaded

      #---------------------------------------------------------------------------------------------
      # STEP 7: VALIDATE PRODUCT DETAILS -----------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 7: VALIDATE PRODUCT DETAILS"
          color: ORANGE
      
      - executeFunction:
          name: functions.checkoutPage.validateItemDetails

      ##TODO: Remove this validation when wallet issue is fixed
      - if:
          condition: WALLET_ISSUE_WORKAROUND == true
          then:
            - log:
                message: "SKIPPING STEPS 8-10"
                color: ORANGE
            
          else:     
            #---------------------------------------------------------------------------------------------
            # STEP 8: OPEN WALLET ------------------------------------------------------------------------
            #---------------------------------------------------------------------------------------------
            - log:
                message: "STEP 8: OPEN WALLET"
                color: ORANGE
            
            - executeFunction:
                name: functions.checkoutPage.tapAddPaymentMethodBtn

            #---------------------------------------------------------------------------------------------
            # STEP 9: VALIDATE RESTRICTED MESSAGE --------------------------------------------------------
            #---------------------------------------------------------------------------------------------
            - log:
                message: "STEP 9: VALIDATE RESTRICTED MESSAGE"
                color: ORANGE

            ##TODO: Create wallet restricted message validation function

            - executeFunction:
                name: functions.checkoutPage.wallet.tapContinueButton

            
            #---------------------------------------------------------------------------------------------
            # STEP 10: CHANGE CARD -----------------------------------------------------------------------
            #---------------------------------------------------------------------------------------------
            - log:
                message: "STEP 10: CHANGE CARD"
                color: ORANGE
            
            - executeFunction:
                name: flows.checkoutPage.selectFirstCardListed
            - executeFunction:
                name: functions.checkoutPage.paymentMethod.assertCreditOrDebitCardSelected
      
      - executeFunction:
          name: mx.functions.review-order.payment-section.enterCVV
          params:
            - name: cvv
              string: mx.data.purchase-002.cvv

      #---------------------------------------------------------------------------------------------
      # STEP 11: CHANGE PHONE NUMBER ---------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 11: CHANGE PHONE NUMBER"
          color: ORANGE
          
      - executeFunction:
          name: mx.functions.review-order.enterCellphoneNumber
          params:
            - name: userPhoneNumber
              string: mx.data.purchase-user-data.userPhoneNumber

      #---------------------------------------------------------------------------------------------
      # STEP 12: PLACE ORDER -----------------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 12: PLACE ORDER"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.review-order.assertTotalsInformation
          params:
            - name: expectedSubtotalProductsCount
              string: ${purchase_5057_product_quantity}
            - name: expectedSubtotal
              string: ${purchase_5057_product_subtotal}
            - name: assertDeliveryFee
              string: "false"

      - executeFunction:
          name: mx.functions.review-order.assertRestrictionMessage

      - if:
          condition: ${GLASS_ENV} == 'teflon'
          then:
            - executeFunction:
                name: functions.checkoutPage.tapPlaceOrderButton
            - executeFunction:
                name: functions.thankYouPage.verifyThankYouPageDisplayed
          else:
            - log: "SKIPPING ORDER PLACEMENT IN PROD ENV"
    #---------------------------------------------------------------------------------------------
    # END ----------------------------------------------------------------------------------------
    #---------------------------------------------------------------------------------------------
      - storeIn:
          key: MMP_5057_SUCCESSFUL_EXECUTION
          value: true

# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#   A F T E R   S C E N A R I O
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  - name: After
    after: true
    flow:
      - log: R2_SUBFLOW_AFTER ### [[ 游릭 Flow Identifier: AFTER 游릭 ]] ###

      - if:
          condition: ${MMP_5057_SUCCESSFUL_EXECUTION} != true
          then:
            - log:
                message: "Main Failed."
                color: RED
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: GREEN_BOLD
      - log: "AFTER SCENARIO ENDED"
  