#======================================================================================================================
#    AUTHOR: Jorge Carrillo (vn575hp)
#   CREATED: September/2/2024
#  REVISION: ---
#
#  Copyright Â© 2024 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-purchase-sanity-walmart-od-production-android-010, qaa-purchase-sanity-walmart-od-production-android

scenarios:
  #####################################################################################################################
  #
  #  JIRA MANUAL TC:
  #    https://jira.walmart.com/browse/MMP-1052
  #
  # Flags Used:
  #       ${ASSERT_DELIVERY_SLOT_IN_CART}  -  Values: [true | false]
  #       ${ASSERT_DELIVERY_SLOT_IN_REVIEW_ORDER}  -  Values: [true | false]
  #
  #######################################################################################################################

  - name: Before
    before: true
    flow:
      - log: "BEFORE SCENARIO START: Initial Config..."

      - storeIn:
          key: PURCHASE_TEST_CASE_NAME
          value: "GMX_PURCHASE_SANITY_WOD_ANDROID_010"
      - executeFunction:
          name: mx.functions.utils.relaunchApp
      - storeIn:
          key: WOD_010_SUCCESSFUL_EXECUTION
          value: false
      - log: "BEFORE SCENARIO END"

  #-------------------------------------------------------------------------------------------------

  - name: Main
    platform: android
    flow:
      - log: "TEST START: ${PURCHASE_TEST_CASE_NAME}"

     # STEP 1: Navigate through onboarding and select OD Banner ------------------------------------
      - log:
          message: "STEP 1: Navigate through onboarding and select OD Banner"
          color: ORANGE

      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.qaa.purchase.sanity.wod-010.zipCode
            - name: banner
              string: "OD"

      - executeFunction:
          name: mx.flows.od.delivery-method-selector.selectPickupOdStoreByZipCode
          params:
            - name: zipCode
              string: mx.data.qaa.purchase.sanity.wod-010.zipCode
            - name: storeName
              string: mx.data.qaa.purchase.sanity.wod-010.storeName

     # STEP 2: Search a product and add it to cart -------------------------------------------------
      - log:
          message: "STEP 2: Search a product and add it to cart"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.purchase.sanity.wod-010.searchTerm1

      - executeFunction:
          name: mx.functions.slp.getFirstProductListedName # ---> ${returnedProductName}

      # [VARIABLE] Product's name saved in ${purchase_od010_product_name_1}
      - storeIn:
          key: purchase_od010_product_name_1
          value: ${returnedProductName}

      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: ${purchase_od010_product_name_1}

      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice # ---> ${returnedPrice}
          params:
            - name: productName
              string: ${purchase_od010_product_name_1}

      - executeFunction:
          name: mx.functions.slp.getProductType # ---> ${returnedProductType}
          params:
            - name: productName
              string: ${purchase_od010_product_name_1}

      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces # ---> ${returnedProductPieces}
          params:
            - name: productName
              string: ${purchase_od010_product_name_1}

      # [VARIABLE] Product's price saved in ${purchase_od010_product_price_1}
      - storeIn:
          key: purchase_od010_product_price_1
          value: ${returnedPrice}
      # [VARIABLE] Product's type saved in ${purchase_od010_product_type_1}
      - storeIn:
          key: purchase_od010_product_type_1
          value: ${returnedProductType}
      # [VARIABLE] Product's quantity saved in ${purchase_od010_product_quantity_1}
      - storeIn:
          key: purchase_od010_product_quantity_1
          value: ${returnedProductPieces}
      # [VARIABLE] Product's subtotal saved in ${purchase_od010_product_subtotal_1}
      - arithmetic:
          expression: ${purchase_od010_product_price_1} * ${purchase_od010_product_quantity_1}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od010_product_subtotal_1

      - executeFunction:
          name: mx.functions.bottom-menu.tapDepartments

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.purchase.sanity.wod-010.searchTerm2

      - executeFunction:
          name: mx.functions.slp.openFirstPDPListed
      - executeFunction:
          name: mx.functions.pdp.assertPageDisplayed
      - executeFunction:
          name: mx.functions.pdp.addToCart # ---> ${returnedProductName}

      - executeFunction:
          name: mx.functions.pdp.increaseQuantityBy
          params:
            - name: quantity
              string: mx.data.qaa.purchase.sanity.wod-010.increaseQuantity

      - executeFunction:
          name: mx.functions.pdp.getPrice # ---> ${returnedProductPrice}
      - executeFunction:
          name: mx.functions.pdp.getType # ---> ${returnedProductType}
      - executeFunction:
          name: mx.functions.pdp.getProductQuantityAsPieces # ---> ${returnedProductQuantity}

      # [VARIABLE] Product's name saved in ${purchase_od010_product_name_2}
      - storeIn:
          key: purchase_od010_product_name_2
          value: ${returnedProductName}
      # [VARIABLE] Product's price saved in ${purchase_od010_product_price_2}
      - storeIn:
          key: purchase_od010_product_price_2
          value: ${returnedProductPrice}
      # [VARIABLE] Product's type saved in ${purchase_od010_product_type_2}
      - storeIn:
          key: purchase_od010_product_type_2
          value: ${returnedProductType}
      # [VARIABLE] Product's quantity saved in ${purchase_od010_product_quantity_2}
      - storeIn:
          key: purchase_od010_product_quantity_2
          value: ${returnedProductQuantity}
      # [VARIABLE] Product's subtotal saved in ${purchase_od010_product_subtotal_2}
      - arithmetic:
          expression: ${purchase_od010_product_price_2} * ${purchase_od010_product_quantity_2}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od010_product_subtotal_2

      - executeFunction:
          name: mx.functions.pdp.assertAddedToCart

      - executeFunction:
          name: mx.functions.pdp.tapClose

      # STEP 3: Open cart and validate product data -------------------------------------------------
      - log:
          message: "STEP 3: Open cart and validate product data"
          color: ORANGE

      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon

      - log: "Product - ${purchase_od010_product_name_1} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od010_product_name_1}
            - name: productType
              string: ${purchase_od010_product_type_1}
            - name: expectedQuantity
              string: ${purchase_od010_product_quantity_1}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${purchase_od010_product_price_1}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od010_product_subtotal_1}

      - log: "Product - ${purchase_od010_product_name_2} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od010_product_name_2}
            - name: productType
              string: ${purchase_od010_product_type_2}
            - name: expectedQuantity
              string: ${purchase_od010_product_quantity_2}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${purchase_od010_product_price_2}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od010_product_subtotal_2}

      # [VARIABLE] Order subtotal saved in ${purchase_od010_order_subtotal}
      - arithmetic:
          expression: ${purchase_od010_product_subtotal_1} + ${purchase_od010_product_subtotal_2}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od010_order_subtotal

      # [VARIABLE] Order subtotal saved in ${purchase_od010_order_subtotal}
      - arithmetic:
          expression: ${purchase_od010_product_quantity_1} + ${purchase_od010_product_quantity_2}
          numberOfDecimalPlaces: 0
          storeIn: purchase_od010_order_product_count

      - executeFunction:
          name: mx.flows.od.cart.assertTotals
          params:
            - name: expectedSubtotal
              string: ${purchase_od010_order_subtotal}

      # STEP 4: Continue and login from cart -------------------------------------------------------
      - log:
          message: "STEP 4: Continue and login from cart"
          color: ORANGE

      - executeFunction:
          name: mx.functions.cart.tapContinue

      - executeFunction:
          name: mx.flows.od.login.loginFromPopup
          params:
            - name: userEmail
              string: mx.data.qaa.purchase.sanity.wod-010.userEmail
            - name: userPassword
              string: mx.data.qaa.purchase.sanity.wod-010.userPassword

      #------------------------------

      - storeIn:
          key: WOD_010_SUCCESSFUL_EXECUTION
          value: true

      - log: "TEST END: ${PURCHASE_TEST_CASE_NAME}"

  #----------------------------------------------------------------------------------------------

  - name: After
    after: true
    flow:
      - log: "AFTER SCENARIO START: After Configs..."

      - if:
          condition: ${WOD_010_SUCCESSFUL_EXECUTION} != true
          then:
            - log:
                message: "Main Failed. No need to reset data."
                color: RED
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully, no need to reset data."
                color: GREEN_BOLD
      - log: "AFTER SCENARIO END"
