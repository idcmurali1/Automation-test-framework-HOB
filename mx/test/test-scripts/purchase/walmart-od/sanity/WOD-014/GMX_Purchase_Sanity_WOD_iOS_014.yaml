#======================================================================================================================
#    AUTHOR: Teresa Partida (vn55epy)
#   CREATED: Aug/12/2024
#  REVISION: ---
#
#  Copyright Â© 2024 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-purchase-sanity-walmart-od-production-ios-014, qaa-purchase-sanity-walmart-od-ios

scenarios:
  #####################################################################################################################
  #
  #  JIRA MANUAL TC:
  #    https://jira.walmart.com/browse/MMP-1056
  #
  # Flags Used:
  #       ${ASSERT_DELIVERY_SLOT_IN_CART}  -  Values: [true | false]
  #       ${ASSERT_DELIVERY_SLOT_IN_REVIEW_ORDER}  -  Values: [true | false]
  #       ${IOS_CART_PRODUCT_ASSERTIONS_WORKAROUND}  -  Values: [true | false]
  #
  #######################################################################################################################

  - name: Before
    before: true
    flow:
      - log: "BEFORE SCENARIO START: Initial Config..."

      - storeIn:
          key: PURCHASE_TEST_CASE_NAME
          value: "GMX_PURCHASE_SANITY_WOD_IOS_014"
      - executeFunction:
          name: mx.functions.utils.relaunchApp
      - storeIn:
          key: WOD_014_SUCCESSFUL_EXECUTION
          value: false
      - log: "BEFORE SCENARIO END"

  #-------------------------------------------------------------------------------------------------

  - name: Main
    platform: ios
    flow:
      - log: "TEST START: ${PURCHASE_TEST_CASE_NAME}"

      #---------------------------------------------------------------------------------------------
      # STEP 1: Navigate through onboarding and select OD Banner -----------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 1: Navigate through onboarding and select OD Banner"
          color: ORANGE

      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.qaa.purchase.sanity.wod-014.zipCode
            - name: banner
              string: "OD"

      - executeFunction:
          name: mx.flows.od.delivery-method-selector.selectPickupOdStoreByZipCode
          params:
            - name: zipCode
              string: mx.data.qaa.purchase.sanity.wod-014.zipCode
            - name: storeName
              string: mx.data.qaa.purchase.sanity.wod-014.storeName

      #---------------------------------------------------------------------------------------------
      # STEP 2: Search and add item to Cart from SLP (item sold by pieces) -------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 2: Search and add item to Cart from SLP (item sold by pieces)"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.purchase.sanity.wod-014.searchTerm.piecesProduct

      - executeFunction:
          name: mx.flows.od.add-to-cart.addProductWithoutBadgesToCartInSLP # ---> ${returnedProductName}

      # [VARIABLE] Product's name saved in ${productName} to be used in the following slp functions
      - storeIn:
          key: productName
          value: ${returnedProductName}
      - executeFunction: # <--- ${productName}
          name: mx.functions.slp.getUnitProductPrice # ---> ${returnedPrice}
      - executeFunction: # <--- ${productName}
          name: mx.functions.slp.getProductType # ---> ${returnedProductType}
      - executeFunction: # <--- ${productName}
          name: mx.functions.slp.getProductQuantityAsPieces # ---> ${returnedProductPieces}

      # [VARIABLE] Product's name saved in ${purchase_od014_pieces_product_name}
      - storeIn:
          key: purchase_od014_pieces_product_name
          value: ${returnedProductName}
      # [VARIABLE] Product's price saved in ${purchase_od014_pieces_product_price}
      - storeIn:
          key: purchase_od014_pieces_product_price
          value: ${returnedPrice}
      # [VARIABLE] Product's type saved in ${purchase_od014_pieces_product_type}
      - storeIn:
          key: purchase_od014_pieces_product_type
          value: ${returnedProductType}
      # [VARIABLE] Product's quantity saved in ${purchase_od014_pieces_product_quantity}
      - storeIn:
          key: purchase_od014_pieces_product_quantity
          value: ${returnedProductPieces}
      # [VARIABLE] Product's subtotal saved in ${purchase_od014_pieces_product_subtotal}
      - storeIn:
          key: purchase_od014_pieces_product_subtotal
          value: ${returnedPrice}

      - executeFunction:
          name: mx.functions.bottom-menu.tapDepartments

      #---------------------------------------------------------------------------------------------
      # STEP 3: Search and add item to Cart from SLP (item sold by weight) -------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 3: Search and add item to Cart from SLP (item sold by weight)"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.purchase.sanity.wod-014.searchTerm.weightProduct

      - executeFunction:
          name: mx.flows.od.add-to-cart.addWeighableProductWithoutBadgesToCartInSLP # ---> ${returnedProductName}, ${returnedProductWeight}

      # [VARIABLE] Product's name saved in ${productName} to be used in the following slp functions
      - storeIn:
          key: productName
          value: ${returnedProductName}
      - executeFunction: # <--- ${productName}
          name: mx.functions.slp.getUnitProductPrice # ---> ${returnedPrice}
      - executeFunction: # <--- ${productName}
          name: mx.functions.slp.getProductType # ---> ${returnedProductType}

      # [VARIABLE] Product's name saved in ${purchase_od014_weight_product_name}
      - storeIn:
          key: purchase_od014_weight_product_name
          value: ${returnedProductName}
      # [VARIABLE] Product's price saved in ${purchase_od014_weight_product_price}
      - storeIn:
          key: purchase_od014_weight_product_price
          value: ${returnedPrice}
      # [VARIABLE] Product's type saved in ${purchase_od014_weight_product_type}
      - storeIn:
          key: purchase_od014_weight_product_type
          value: ${returnedProductType}
      # [VARIABLE] Product's pieces number saved in ${purchase_od014_weight_product_quantity_pieces}
      - storeIn:
          key: purchase_od014_weight_product_quantity_pieces
          value: "1" #Weight products always count as one piece
      # [VARIABLE] Product's weight saved in ${purchase_od014_weight_product_quantity_weight}
      - storeIn:
          key: purchase_od014_weight_product_quantity_weight
          value: ${returnedProductWeight}
      # [VARIABLE] Product's subtotal saved in ${purchase_od014_weight_product_subtotal}
      - arithmetic:
          expression: (${purchase_od014_weight_product_price} * ${purchase_od014_weight_product_quantity_weight}) / 1000
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_weight_product_subtotal

      - executeFunction:
          name: mx.functions.bottom-menu.tapDepartments

      #---------------------------------------------------------------------------------------------
      # STEP 4: Search and add item to Cart from PDP (dual item) -----------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 4: Search and add item to Cart from PDP (dual item)"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.qaa.purchase.sanity.wod-014.searchTerm.dualProduct

      - executeFunction:
          name: mx.functions.slp.openPDPWithoutSpecialBadges # ---> ${returnedProductName}
      - executeFunction:
          name: mx.functions.pdp.assertPageDisplayed
      - executeFunction:
          name: mx.functions.pdp.addToCart # ---> ${returnedProductName}
      - executeFunction:
          name: mx.functions.pdp.getPrice # ---> ${returnedProductPrice}
      - executeFunction:
          name: mx.functions.pdp.getType # ---> ${returnedProductType}
      - executeFunction:
          name: mx.functions.pdp.getProductQuantityAsPieces # ---> ${returnedProductQuantity}

      # [VARIABLE] Product's pieces saved in ${purchase_od014_dual_product_quantity_pieces}
      - storeIn:
          key: purchase_od014_dual_product_quantity_pieces
          value: ${returnedProductQuantity}

      - executeFunction:
          name: mx.functions.pdp.switchToWeight
      - executeFunction:
          name: mx.functions.pdp.getProductQuantityAsWeight # ---> ${returnedProductQuantity}

      # [VARIABLE] Product's name saved in ${purchase_od014_dual_product_name}
      - storeIn:
          key: purchase_od014_dual_product_name
          value: ${returnedProductName}
      # [VARIABLE] Product's price saved in ${purchase_od014_dual_product_price}
      - storeIn:
          key: purchase_od014_dual_product_price
          value: ${returnedProductPrice}
      # [VARIABLE] Product's type saved in ${purchase_od014_dual_product_type}
      - storeIn:
          key: purchase_od014_dual_product_type
          value: ${returnedProductType}
      # [VARIABLE] Product's weight saved in ${purchase_od014_dual_product_quantity_weight}
      - storeIn:
          key: purchase_od014_dual_product_quantity_weight
          value: ${returnedProductQuantity}
      # [VARIABLE] Product's conversion rate (how much one piece weights) saved in ${purchase_od014_dual_product_weight_conversion_rate}
      - arithmetic:
          expression: ${purchase_od014_dual_product_quantity_weight} / ${purchase_od014_dual_product_quantity_pieces}
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_dual_product_weight_conversion_rate
       # [VARIABLE] Product's subtotal saved in ${purchase_od014_dual_product_subtotal}
      - arithmetic:
          expression: (${purchase_od014_dual_product_price} * ${purchase_od014_dual_product_quantity_weight}) / 1000
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_dual_product_subtotal

      - executeFunction:
          name: mx.functions.pdp.tapClose

      #---------------------------------------------------------------------------------------------
      # STEP 5: Open cart --------------------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 5: Open cart"
          color: ORANGE

      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon

      - log: "Product - ${purchase_od014_pieces_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_pieces_product_name}
            - name: productType
              string: ${purchase_od014_pieces_product_type}
            - name: expectedQuantity
              string: ${purchase_od014_pieces_product_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${purchase_od014_pieces_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_pieces_product_subtotal}

      - log: "Product - ${purchase_od014_weight_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_weight_product_name}
            - name: productType
              string: ${purchase_od014_weight_product_type}
            - name: expectedQuantity
              string: "null"
            - name: expectedWeightQuantity
              string: ${purchase_od014_weight_product_quantity_weight}
            - name: expectedUnitPrice
              string: ${purchase_od014_weight_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_weight_product_subtotal}

      - log: "Product - ${purchase_od014_dual_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_dual_product_name}
            - name: productType
              string: ${purchase_od014_dual_product_type}
            - name: expectedQuantity
              string: ${purchase_od014_dual_product_quantity_pieces}
            - name: expectedWeightQuantity
              string: ${purchase_od014_dual_product_quantity_weight}
            - name: expectedUnitPrice
              string: ${purchase_od014_dual_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_dual_product_subtotal}

      # [VARIABLE] Order subtotal saved in ${purchase_od014_order_subtotal}
      - arithmetic:
          expression: ${purchase_od014_pieces_product_subtotal} + ${purchase_od014_weight_product_subtotal} + ${purchase_od014_dual_product_subtotal}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_order_subtotal

      # [VARIABLE] Order product count saved in ${purchase_od014_order_product_count}
      - arithmetic:
          expression: ${purchase_od014_pieces_product_quantity} + ${purchase_od014_weight_product_quantity_pieces} + ${purchase_od014_dual_product_quantity_pieces}
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_order_product_count

      - executeFunction:
          name: mx.flows.od.cart.assertTotals
          params:
            - name: expectedSubtotal
              string: ${purchase_od014_order_subtotal}

      - executeFunction:
          name: mx.functions.cart.assertProductsCountInSubtotalLabel
          params:
            - name: expectedProductsCount
              string: ${purchase_od014_order_product_count}

      # [VARIABLE] Reset direction variable to avoid issues with mx.flows.od.cart.quickPerformProductAssertions
      - storeIn:
          key: direction
          value: "null"

      #---------------------------------------------------------------------------------------------
      # STEP 6: Edit quantities of pieces product --------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 6: Edit quantities of pieces product"
          color: ORANGE

      - executeFunction:
          name: mx.functions.cart.increaseProductQuantityBy
          params:
            - name: productName
              string: ${purchase_od014_pieces_product_name}
            - name: increments
              string: mx.data.qaa.purchase.sanity.wod-014.increaseQuantity

      # [VARIABLE] Update product quantity, saved in ${purchase_od014_pieces_product_quantity}
      - arithmetic:
          expression: ${purchase_od014_pieces_product_quantity} + mx.data.qaa.purchase.sanity.wod-014.increaseQuantity
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_pieces_product_quantity

      # [VARIABLE] Update product subtotal, saved in ${purchase_od014_pieces_product_subtotal}
      - arithmetic:
          expression: ${purchase_od014_pieces_product_quantity} * ${purchase_od014_pieces_product_subtotal}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_pieces_product_subtotal

      - log: "Product - ${purchase_od014_pieces_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_pieces_product_name}
            - name: productType
              string: ${purchase_od014_pieces_product_type}
            - name: expectedQuantity
              string: ${purchase_od014_pieces_product_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedUnitPrice
              string: ${purchase_od014_pieces_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_pieces_product_subtotal}

      #---------------------------------------------------------------------------------------------
      # STEP 7: Edit quantities of weight product --------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 7: Edit quantities of weight product"
          color: ORANGE

      - executeFunction:
          name: mx.functions.cart.increaseProductQuantityBy
          params:
            - name: productName
              string: ${purchase_od014_weight_product_name}
            - name: increments
              string: mx.data.qaa.purchase.sanity.wod-014.increaseQuantity

      # [VARIABLE] Update product quantity, saved in ${purchase_od014_weight_product_quantity_weight}
      - arithmetic:
          expression: ${purchase_od014_weight_product_quantity_weight} + (${purchase_od014_weight_product_quantity_weight} * mx.data.qaa.purchase.sanity.wod-014.increaseQuantity)
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_weight_product_quantity_weight

      # [VARIABLE] Update product subtotal, saved in ${purchase_od014_weight_product_subtotal}
      - arithmetic:
          expression: (${purchase_od014_weight_product_price} * ${purchase_od014_weight_product_quantity_weight}) / 1000
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_weight_product_subtotal

      - log: "Product - ${purchase_od014_weight_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_weight_product_name}
            - name: productType
              string: ${purchase_od014_weight_product_type}
            - name: expectedQuantity
              string: "null"
            - name: expectedWeightQuantity
              string: ${purchase_od014_weight_product_quantity_weight}
            - name: expectedUnitPrice
              string: ${purchase_od014_weight_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_weight_product_subtotal}

      #---------------------------------------------------------------------------------------------
      # "STEP 8 and 9: Edit quantities of dual product and change type of dual ---------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 8 and 9: Edit quantities of dual product and change type of dual"
          color: ORANGE

      - executeFunction:
          name: mx.functions.cart.increaseProductQuantityBy
          params:
            - name: productName
              string: ${purchase_od014_dual_product_name}
            - name: increments
              string: mx.data.qaa.purchase.sanity.wod-014.increaseQuantity

      # [VARIABLE] Update product quantity, saved in ${purchase_od014_dual_product_quantity_weight}
      - arithmetic:
          expression: ${purchase_od014_dual_product_quantity_weight} + (${purchase_od014_dual_product_quantity_weight} * mx.data.qaa.purchase.sanity.wod-014.increaseQuantity)
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_dual_product_quantity_weight

      # [VARIABLE] Update product subtotal, saved in ${purchase_od014_dual_product_subtotal}
      - arithmetic:
          expression: (${purchase_od014_dual_product_price} * ${purchase_od014_dual_product_quantity_weight}) / 1000
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_dual_product_subtotal

      - executeFunction:
          name: mx.functions.utils.getWeighableProductAddedQuantityAsPieces # ---> ${returnedAddedQuantityAsPieces}
          params:
            - name: productWeightConversionRate
              string: ${purchase_od014_dual_product_weight_conversion_rate}
            - name: addedProductQuantityAsWeight
              string: ${purchase_od014_dual_product_quantity_weight}

      # [VARIABLE] Update product pieces saved in ${purchase_od014_dual_product_quantity_pieces}
      - storeIn:
          key: purchase_od014_dual_product_quantity_pieces
          value: ${returnedAddedQuantityAsPieces}

      - log: "Product - ${purchase_od014_dual_product_name} - assertions"
      - executeFunction:
          name: mx.flows.od.cart.quickPerformProductAssertions
          params:
            - name: productName
              string: ${purchase_od014_dual_product_name}
            - name: productType
              string: ${purchase_od014_dual_product_type}
            - name: expectedQuantity
              string: ${purchase_od014_dual_product_quantity_pieces}
            - name: expectedWeightQuantity
              string: ${purchase_od014_dual_product_quantity_weight}
            - name: expectedUnitPrice
              string: ${purchase_od014_dual_product_price}
            - name: expectedOriginalPrice
              string: "null"
            - name: expectedSubtotal
              string: ${purchase_od014_dual_product_subtotal}

      #---------------------------------------------------------------------------------------------
      # STEP 10: Delete pieces product -------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 10: Delete pieces product"
          color: ORANGE

      # [VARIABLE] Product's name saved in ${productName} to be used in the following cart functions
      - storeIn:
          key: productName
          value: ${purchase_od014_pieces_product_name}

      - executeFunction:
          name: mx.functions.cart.deleteAvailableProduct # <--- ${productName}
      - executeFunction:
          name: mx.functions.cart.assertProductNotListed # <--- ${productName}

      # [VARIABLE] Update order subtotal saved in ${purchase_od014_order_subtotal}
      - arithmetic:
          expression: ${purchase_od014_weight_product_subtotal} + ${purchase_od014_dual_product_subtotal}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_order_subtotal

      # [VARIABLE] Update order product count saved in ${purchase_od014_order_product_count}
      - arithmetic:
          expression: ${purchase_od014_weight_product_quantity_pieces} + ${purchase_od014_dual_product_quantity_pieces}
          numberOfDecimalPlaces: 0
          storeIn: purchase_od014_order_product_count

      - executeFunction:
          name: mx.flows.od.cart.assertTotals
          params:
            - name: expectedSubtotal
              string: ${purchase_od014_order_subtotal}
            - name: expectedDeliveryFee
              string: "null"

      - executeFunction:
          name: mx.functions.cart.assertProductsCountInSubtotalLabel
          params:
            - name: expectedProductsCount
              string: ${purchase_od014_order_product_count}

      # [VARIABLE] Reset direction variable to avoid issues with other functions
      - storeIn:
          key: direction
          value: "null"

      #---------------------------------------------------------------------------------------------
      # STEP 11: Hit "Continuar" button ------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 11: Hit \"Continuar\" button"
          color: ORANGE

      - executeFunction:
          name: mx.functions.cart.tapContinue

      #---------------------------------------------------------------------------------------------
      # STEP 12: Log in with existing account ------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 12: Log in with existing account"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.login.loginFromPopup
          params:
            - name: userEmail
              string: mx.data.qaa.purchase.sanity.wod-014.userEmail
            - name: userPassword
              string: mx.data.qaa.purchase.sanity.wod-014.userPassword

      #---------------------------------------------------------------------------------------------
      # STEP 13: Select "Envio a domicilio" and select time slot -----------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 13: Select \"Envio a domicilio\" and select time slot"
          color: ORANGE

      - executeFunction:
          name: mx.functions.reserve-slot.tapHomeDeliveryMethod

      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed

      - executeFunction:
          name: mx.functions.reserve-slot.tapAddAddress

      - executeFunction:
          name: mx.functions.address-selector-popup.selectAddressByName
          params:
            - name: addressName
              string: mx.data.qaa.purchase.sanity.wod-014.userAddressName

      - executeFunction:
          name: mx.functions.address-selector-popup.tapContinue

      - executeFunction:
          name: mx.flows.od.reserve-slot.selectDateAndRandomNormalTimeSlot

      # [VARIABLE] Returned day slot saved in ${purchase_od014_reserved_slot_day}
      - storeIn:
          key: purchase_od014_reserved_slot_day
          value: ${returnedSelectedDaySlot}
      # [VARIABLE] Returned time slot saved in ${purchase_od014_reserved_slot_time}
      - storeIn:
          key: purchase_od014_reserved_slot_time
          value: ${returnedSelectedTimeSlot}
      # [VARIABLE] Home delivery fee saved in ${purchase_od014_reserved_slot_fee}
      - storeIn:
          key: purchase_od014_reserved_slot_fee
          value: ${returnedDeliveryFee}

      #---------------------------------------------------------------------------------------------
      # STEP 14: Continue to checkout --------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 14: Continue to checkout"
          color: ORANGE

      - executeFunction:
          name: mx.flows.od.review-order.assertDeliveryInformation
          params:
            - name: deliveryMethod
              string: mx.data.qaa.purchase.sanity.wod-014.deliveryMethod
            - name: expectedDaySlot
              string: ${purchase_od014_reserved_slot_day}
            - name: expectedTimeSlot
              string: ${purchase_od014_reserved_slot_time}
            - name: expectedStoreOrHomeName
              string: mx.data.qaa.purchase.sanity.wod-014.userAddressName
            - name: expectedStoreOrHomeAddress
              string: 'null'
            - name: expectedUserStreet
              string: mx.data.qaa.purchase.sanity.wod-014.addressStreet
            - name: expectedUserExteriorNumber
              string: mx.data.qaa.purchase.sanity.wod-014.addressExteriorNumber
            - name: expectedUserCity
              string: mx.data.qaa.purchase.sanity.wod-014.addressCity
            - name: expectedUserState
              string: mx.data.qaa.purchase.sanity.wod-014.addressState
            - name: expectedUserZipCode
              string: mx.data.qaa.purchase.sanity.wod-014.addressZipCode

      # [VARIABLE] Order total saved in ${purchase_od014_order_total}
      - arithmetic:
          expression: ${purchase_od014_order_subtotal} + ${purchase_od014_reserved_slot_fee}
          numberOfDecimalPlaces: 2
          storeIn: purchase_od014_order_total

      #---------------------------------------------------------------------------------------------
      # STEP 15: Select debit card -----------------------------------------------------------------
      #---------------------------------------------------------------------------------------------
      - log:
          message: "STEP 15: Select debit card"
          color: ORANGE

      - executeFunction:
          name: mx.functions.review-order.scrollDownToWallet

      - executeFunction:
          name: mx.functions.review-order.payment-section.tapChangePaymentMethod

      - executeFunction:
          name: mx.functions.payment.selectCard
          params:
            - name: last4Digits
              string: mx.data.qaa.purchase.sanity.wod-014.cardLast4Digits

      - executeFunction:
          name: mx.functions.payment.tapContinue

      - executeFunction:
          name: mx.functions.review-order.payment-section.enterCVV
          params:
            - name: cvv
              string: mx.data.qaa.purchase.sanity.wod-014.cardCVV

      - executeFunction:
          name: mx.functions.review-order.payment-section.assertSelectedPaymentMethod
          params:
            - name: paymentMethod
              string: mx.data.qaa.purchase.sanity.wod-014.paymentMethod

      - executeFunction:
          name: mx.functions.review-order.payment-section.assertSelectedCardByLast4Digits
          params:
            - name: last4Digits
              string: mx.data.qaa.purchase.sanity.wod-014.cardLast4Digits

      - executeFunction:
          name: mx.flows.od.review-order.assertTotalsInformation
          params:
            - name: expectedSubtotalProductsCount
              string: ${purchase_od014_order_product_count}
            - name: expectedSubtotal
              string: ${purchase_od014_order_subtotal}
            - name: assertDeliveryFee
              string: true
            - name: expectedDeliveryFee
              string: ${purchase_od014_reserved_slot_fee}

      # ---------------------------------------------------------
      # STEPS 16 and 17 ARE ONLY AVAILABLE IN STAGING ENVIRONMENT
      # ---------------------------------------------------------
      - if:
         condition: ${GLASS_ENV} == 'staging'
         then:
           #----------------------------------------------------------------------------------------
           # STEP 16: Place order ------------------------------------------------------------------
           #----------------------------------------------------------------------------------------
           - log:
               message: "STEP 16: Place order"
               color: ORANGE

           - executeFunction:
               name: mx.functions.review-order.tapPlaceOrder

           - executeFunction:
               name: mx.functions.order-confirmation.assertPageDisplayed

           - executeFunction:
               name: mx.functions.utils.closeRateWalmartPopupIfDisplayed

           - executeFunction:
               name: mx.functions.order-confirmation.getOrderNumber

           - executeFunction:
               name: mx.flows.od.order-confirmation.assertConfirmation
               params:
                 - name: expectedTotal
                   string: ${purchase_od014_order_total}
                 - name: expectedDeliveryMethod
                   string: mx.data.qaa.purchase.sanity.wod-014.deliveryMethod
                 - name: expectedDaySlot
                   string: ${purchase_od014_reserved_slot_day}
                 - name: expectedTimeSlot
                   string: ${purchase_od014_reserved_slot_time}
                 - name: expectedHomeAddressName
                   string: mx.data.qaa.purchase.sanity.wod-014.userAddressName
                 - name: expectedUserStreet
                   string: mx.data.qaa.purchase.sanity.wod-014.addressStreet
                 - name: expectedUserExteriorNumber
                   string: mx.data.qaa.purchase.sanity.wod-014.addressExteriorNumber
                 - name: expectedUserCity
                   string: mx.data.qaa.purchase.sanity.wod-014.addressCity
                 - name: expectedUserState
                   string: mx.data.qaa.purchase.sanity.wod-014.addressState
                 - name: expectedUserZipCode
                   string: mx.data.qaa.purchase.sanity.wod-014.addressZipCode
                 - name: expectedProductsCount
                   string: ${purchase_od014_order_product_count}

           #----------------------------------------------------------------------------------------
           # STEP 17: Hit "Descubrir mas productos" button -----------------------------------------
           #----------------------------------------------------------------------------------------
           - log:
               message: "STEP  17: Hit \"Descubrir mas productos\" button"
               color: ORANGE

           - executeFunction:
               name: mx.functions.order-confirmation.tapFindMoreProducts

           - executeFunction:
               name: mx.functions.home.assertPageLoaded
         else:
           - log:
               message: "Steps 16 and 17 will be skipped"
      #------------------------------

      - storeIn:
          key: WOD_014_SUCCESSFUL_EXECUTION
          value: true

      - log: "TEST END: ${PURCHASE_TEST_CASE_NAME}"

  #----------------------------------------------------------------------------------------------

  - name: After
    after: true
    flow:
      - log: "AFTER SCENARIO START: After Configs..."

      - if:
          condition: ${WOD_014_SUCCESSFUL_EXECUTION} != true
          then:
            - log:
                message: "Main Failed."
                color: RED
            - failTest:
                message: "Main Scenario Failed: the After Scenario will propagate the failure to ensure SauceLabs run shows correct execution status."
          else:
            - log:
                message: "Main Scenario ended Successfully."
                color: GREEN_BOLD
      - log:
          message: "Resetting data for the next execution."
      - executeFunction:
          name: mx.flows.od.after-scenario-exclusive.relaunchAndNavigateToHomePage
      - executeFunction:
          name: mx.flows.od.after-scenario-exclusive.emptyCart
      - log: "AFTER SCENARIO END"
