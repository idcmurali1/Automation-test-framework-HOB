#======================================================================================================================
#    AUTHOR: Octavio Cabrales Zárate (vn53g23)
#   CREATED: Jun/24/2022
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-od-e2e-regression-staging-005, qaa-od-e2e-regression-staging

scenarios:

  #--------------------------------------------------------------------------------------------------------------------
  
  - name: Main
    flow:
      - log: TEST START - E2E REGRESSION - OD-005
      
      # Step 1 & 2
      - log: Step 1  - Complete the onboarding, and gets into the prehome page. Step 2 - Select On Demand Store and validate home page is displayed.
      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.e2e-regression.od-005.zipCode
            - name: banner
              string: OD

      # Step 3
      - log: Step 3 - Go to profile page and login
      - executeFunction:
          name: mx.flows.od.login.navigateToAccountAndLogin
          params:
            - name: userEmail
              string: mx.data.e2e-regression.od-005.userEmail
            - name: userPassword
              string: mx.data.e2e-regression.od-005.userPassword
            - name: userName
              string: mx.data.e2e-regression.od-005.userName

      # Step 4
      - log: Step 4 - Add items to cart
      - loop:
          begin: 0
          end: 2
          flow: 
            - executeFunction:
                name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.flows.od.addresses.changeToUsersFirstAddressFromHome
      - executeFunction: 
          name: mx.functions.top-menu.enterSearchTerm
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.top-menu.tapSearchInKeyboard
      - sleep:
          duration: 5000
      - if:
          condition: ${APP_PLATFORM} == 'android'
          then:
            - executeFunction:
                name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
            - executeFunction:
                name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
            - executeFunction:
                name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
            - executeFunction:
                name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
          else:
            - executeFunction:
                name: mx.functions.customized-buy-experience-popup.isPopupDisplayed
            - executeFunction:
                name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
            - executeFunction:
                name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.slp.assertResultsDisplayed
      - executeFunction:
          name: mx.functions.slp.scrollDownToProductByName
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.slp.assertProductAddedToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.slp.increaseProductQuantityBy
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
            - name: quantity
              string: mx.data.e2e-regression.od-005.incrementInProduct1
      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - arithmetic:
          expression: ${quantity} + 1
          storeIn: productQuantity1
      - executeFunction:
          name: mx.functions.slp.assertProductQuantityAsPieces
          params:
            - name: expectedQuantityAsPieces
              string: ${productQuantity1}
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${productQuantity1}
      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - storeIn:
          key: productPrice1
          value: ${returnedPrice} 

      # Adding dual product 2 to cart
      - executeFunction: 
          name: mx.functions.top-menu.enterSearchTerm
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-005.product2Name
      - executeFunction:
          name: mx.functions.top-menu.tapSearchInKeyboard
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.isPopupDisplayed
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.slp.assertResultsDisplayed
      - executeFunction: 
          name: mx.functions.slp.scrollDownToProductByName
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - storeIn:
          key: productQuantity2
          value: "1"
      - executeFunction:
          name: mx.functions.slp.assertProductAddedToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - arithmetic:
          expression: ${productQuantity1} + 1 
          storeIn: productsQuantity
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${productsQuantity}
      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - storeIn:
          key: productPrice2
          value: ${returnedPrice} 

      # Step 5
      - log: Step 5 - Open Cart
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction: 
          name: mx.functions.cart.assertCartNotEmpty
      - if:
          identifier:
            present:
              - identifier: mx.mappings.cart.slot-black-popup.closeButton
          then:
            - executeFunction:
                name: mx.functions.cart.slot-black-popup.tapClose
      - executeFunction:
          name: mx.functions.cart.getProductQuantity
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - storeIn:
          key: productQuantity1
          value: ${returnedProductQuantity}
      - arithmetic:
          expression: ${productPrice1} * ${productQuantity1}
          storeIn: subtotalProduct1
          numberOfDecimalPlaces: 2
      - executeFunction:
          name: mx.functions.cart.getProductQuantity
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - storeIn:
          key: productQuantity2
          value: ${returnedProductQuantity}
      - arithmetic:
          expression: ${productPrice2} * ${productQuantity2}
          storeIn: subtotalProduct2
          numberOfDecimalPlaces: 2
      - scroll:
          direction: up
          scrollLimit: 2
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${productQuantity1}
            - name: expectedPrice
              string: mx.data.e2e-regression.od-005.product1Price
            - name: expectedSubtotal
              string: ${subtotalProduct1}
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${productQuantity2}
            - name: expectedPrice
              string: mx.data.e2e-regression.od-005.product2Price
            - name: expectedSubtotal
              string: ${subtotalProduct2}

      # Step 6
      - log:  Step 6 - Hit "Reservar un horario"
      - executeFunction:
          name: mx.functions.cart.tapReserveSlot  

      # Step 7  
      - log: Step 7 - Select "Envio a domicilio" and select time slot
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      - log:
          message: Selecting home delivery fulfillment type
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.tapHomeDeliveryMethod
      - sleep:
          duration: 2000
      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.tapChange
      - executeFunction:
          name: mx.functions.address-selector-popup.selectVisibleRandomAddress
      - executeFunction:
          name: mx.functions.address-selector-popup.getSelectedAddress
      - executeFunction:
          name: mx.functions.address-selector-popup.getSelectedAddressName
      - executeFunction:
          name: mx.functions.address-selector-popup.tapSave
      - sleep:
          duration: 5000
      - log:
          message: Checking if there are available date slots
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed
      - if:
          identifier:
            present:
              - identifier: mx.mappings.reserve-slot.bookslotError
          then: 
            - log:
                message: This behavior yet to be discussed if is a bug
                color: YELLOW
            - click:
                identifier: mx.mappings.reserve-slot.changeStoreOrAddressButton
            - executeFunction:
                name: mx.functions.address-selector-popup.selectVisibleRandomAddress
            - executeFunction:
                name: mx.functions.address-selector-popup.getSelectedAddress
            - executeFunction:
                name: mx.functions.address-selector-popup.getSelectedAddressName
            - executeFunction:
                name: mx.functions.address-selector-popup.tapSave
            - log:
                message: Checking if there are available date slots
                color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.assertSelectedAddressByIndividualValues
          params:
            - name: streetName
              string: ${returnedStreetName}
            - name: exteriorNumber
              string: ${returnedExteriorNumber}
            - name: city
              string: ${returnedCity}
            - name: state
              string: ${returnedState}
            - name: zipCode
              string: ${returnedZipCode}
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableDateSlots
      - log:
          message: There are available dates
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.selectRandomDateSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedDaySlot
      - log:
          message: Checking if there are available time slots
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableTimeSlots
      - log:
          message: There are slots available
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.selectRandomVisibleTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlotDeliveryFee
      - executeFunction:
          name: mx.functions.reserve-slot.tapReserve
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'Cart'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - getString:
          identifier: mx.mappings.cart.userShortAddress
          storeIn: returnedShortAddressWithCommas
      - executeFunction:
          name: mx.flows.od.cart.assertHomeSlotSelected
          params:
            - name: expectedDeliveryFee
              string: ${returnedDeliveryFee}
            - name: expectedUserExteriorNumber
              string: ${exteriorNumber}
            - name: expectedUserStreet
              string: ${streetName}
            - name: deliverySlot
              string: ${returnedDeliverySlot}
            - name: deliveryMethod
              string: HomeDelivery
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - arithmetic:
                expression: ${returnedDeliveryFee}
                numberOfDecimalPlaces: 2
                storeIn: returnedDeliveryFee
      - arithmetic:
          expression: (${productPrice1} * ${productQuantity1}) + (${productPrice2} * ${productQuantity2})
          numberOfDecimalPlaces: 2
          storeIn: cartSubtotal
      - executeFunction:
          name: mx.functions.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${cartSubtotal}
      - arithmetic:
          expression: ${returnedDeliveryFee} + ${cartSubtotal}
          numberOfDecimalPlaces: 2
          storeIn: cartEstimatedTotal
      - executeFunction:
          name: mx.functions.utils.searchItemInPage
          params:
            - name: elementToFind
              string: mx.mappings.cart.totalBottomSection 
      - executeFunction:
          name: mx.functions.cart.assertEstimatedTotalFromBottom
          params:
            - name: expectedEstimatedTotal
              string: ${cartEstimatedTotal}

      # Step 8
      - log: Step 8 - Continue checkout
      - executeFunction:
          name: mx.functions.cart.tapContinue
      - executeFunction:
          name: mx.functions.review-order.assertPageDisplayed
      
      # Step 9
      - log: Step 9 - Go to "Preferencias de sustitutos" section and remove Substitutions
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'ReviewOrder'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.review-order.assertDeliverySlot
          params:
            - name: deliverySlot
              string: ${returnedDeliverySlot}
      - executeFunction:
          name: mx.functions.review-order.tapEditSubstitutePreferences
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertPageDisplayed
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductListed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
            - name: expectedProductPrice
              string: mx.data.e2e-regression.od-005.product1Price
            - name: expectedProductQuantity
              string: ${productQuantity1}
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductQuantity
          params:
            - name:  productName
              string: mx.data.e2e-regression.od-005.product1Name
            - name: expectedProductQuantity
              string: ${productQuantity1}
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductListed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
            - name: expectedProductPrice
              string: mx.data.e2e-regression.od-005.product2Price
            - name: expectedProductQuantity
              string: 1
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertProductQuantity
          params:
            - name:  productName
              string: mx.data.e2e-regression.od-005.product2Name
            - name: expectedProductQuantity
              string: ${productQuantity2}
      - arithmetic:
          expression: ${productQuantity1} + ${productQuantity2}
          storeIn: expectedTotalProductsCount
      - executeFunction:
          name: mx.functions.substitutes-preferences.assertTotalProductsCount
          params:
            - name: expectedQuantity
              string: ${expectedTotalProductsCount}
      - executeFunction:
          name: mx.functions.substitutes-preferences.unselectAllProducts
      - executeFunction:
          name: mx.functions.substitutes-preferences.tapUnderstood

      # Step 10
      - log: Step 10 - Go to payment methods and select a debit card
      - executeFunction:
          name: mx.functions.review-order.scrollDownToWallet
      - executeFunction:
          name: mx.flows.od.review-order.changeToCard
          params:
            - name: last4Digits
              string: mx.data.e2e-regression.od-005.debitCardLast4Digits
      - executeFunction:
          name: mx.functions.review-order.payment-section.enterCVV
          params:
            - name: cvv
              string: mx.data.e2e-regression.od-005.cardCVV
      - executeFunction:
          name: mx.functions.review-order.scrollDownToSection
          params:
            - name: sectionName
              string: "Número telefónico"
      - executeFunction:
          name: mx.functions.review-order.enterCellphoneNumber
          params:
            - name: userPhoneNumber
              string: mx.data.e2e-regression.od-005.userPhoneNumber
      - executeFunction:
          name: mx.functions.review-order.assertIncompleteCellphoneNumberErrorMessageNotDisplayed
      - executeFunction:
          name: mx.functions.review-order.assertSubtotal
          params:
            - name: direction
              string: down
            - name: subtotal
              string: ${cartSubtotal}
      - executeFunction:
          name: mx.functions.review-order.assertDeliveryFee
          params:
            - name: deliveryFee
              string: ${returnedDeliveryFee}
            - name: posLineItem
              string: Costo de envío
            - name: rightSideItem
              string: ${returnedDeliveryFee}
      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotal
          params:
            - name: posLineItem
              string: Total estimado
            - name: rightSideItem
              string: ${cartEstimatedTotal}
            - name: estimatedTotalFromBottom
              string: ${cartEstimatedTotal}
      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotalFromButton
          params:
            - name: estimatedTotalFromButton
              string: ${cartEstimatedTotal}

      # Step 11
      - log: Step 11 - Place Order
      - executeFunction:
         name: mx.functions.review-order.tapPlaceOrder
      - sleep:
          duration: 10000
      - executeFunction:
          name: mx.functions.order-confirmation.assertPageDisplayed
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.e2e-regression.od-005.deliveryMethod
      - executeFunction:
          name: mx.functions.order-confirmation.getOrderNumber
      - executeFunction:
          name: mx.functions.order-confirmation.assertTotal
          params:
            - name: expectedTotal
              string: ${cartEstimatedTotal}
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'ReviewOrder'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliverySlot
          params:
            - name: expectedDeliverySlot
              string: ${returnedDeliverySlot}
      - executeFunction:
          name: mx.functions.order-confirmation.assertHomeDeliveryAddressName
          params:
            - name: expectedHomeAddressName
              string: ${returnedAddressName}
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductsCount
          params:
            - name: expectedProductsCount
              string: ${productsQuantity}
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductImageDisplayed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductImageDisplayed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      
      # Step 12
      - log: Step 12 - Hit "Descubrir mas productos" button
      - executeFunction:
          name: mx.functions.order-confirmation.tapFindMoreProducts
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.isPopupDisplayed
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed 
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.functions.home.assertPageLoaded
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: "0"

      # Step 13
      - log: Step 13 - Go to Profile screen and select "Pedidos"
      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount
      - executeFunction:
          name: mx.functions.account.assertPageDisplayed
      - executeFunction:
          name: mx.functions.account.openOrdersHistory
      - executeFunction:
          name: mx.flows.od.orders-history.assertOrder
          params:
            - name: position
              string: 1
            - name: expectedDeliveryMethod
              string: mx.data.e2e-regression.od-005.deliveryMethod
            - name: expectedTotal
              string: ${cartEstimatedTotal}
            - name: banner
              string: Walmart
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: orderStatus
              string: mx.data.e2e-regression.od-005.expectedOrderStatus
            - name: productsCount
              string: mx.data.e2e-regression.od-005.differentProducts

      # Step 14
      - log: Step 14 - Select the newest placed order
      - executeFunction:
          name: mx.functions.orders-history.tapOrderDetailsByPosition
          params:
            - name: position
              string: 1
      - executeFunction:
          name: mx.flows.od.order-details.assertOrderDetails
          params:
            - name: expectedOrderNumber
              string: ${returnedOrderNumber}
            - name: expectedDeliveryMethod
              string: HomeDelivery
            - name: expectedOrderStatus
              string: mx.data.e2e-regression.od-005.expectedOrderStatus
            - name: expectedBanner
              string: Walmart
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: expectedHomeAddressName
              string: ${returnedAddressName}
            - name: expectedUserAddressWithCommas
              string: ${returnedShortAddressWithCommas}
            - name: expectedProductsCount
              string: 2
            - name: expectedPaymentMethod
              string: Credito
            - name: expectedSubtotal
              string: ${cartSubtotal}
            - name: expectedDeliveryFee
              string: ${returnedDeliveryFee}
            - name: expectedTotal
              string: ${cartEstimatedTotal}
            - name: expectedStoreName
              string: mx.data.e2e-regression.od-005.baseStore
            - name: expectedUserStreet
              string: ${streetName}
            - name: expectedUserExteriorNumber
              string: ${exteriorNumber}
            - name: expectedUserCity
              string: ${city}
            - name: expectedUserState
              string: ${state}
            - name: expectedUserZipCode
              string: ${zipCode}
      
      # Product 1 assertions.
      - executeFunction:
          name: mx.functions.order-details.assertProductListed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      - executeFunction:
          name: mx.functions.order-details.assertProductUnitPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
            - name: expectedUnitPrice
              string: ${productPrice1}
      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: expectedSubtotal
              string: ${subtotalProduct1}
            - name: productName
              string: mx.data.e2e-regression.od-005.product1Name
      
      # Product 2 assertions.
      - executeFunction:
          name: mx.functions.order-details.assertProductListed
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
      - executeFunction:
          name: mx.functions.order-details.assertProductUnitPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name
            - name: expectedUnitPrice
              string: ${productPrice2}
      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: expectedSubtotal
              string: ${subtotalProduct2}
            - name: productName
              string: mx.data.e2e-regression.od-005.product2Name

  #--------------------------------------------------------------------------------------------------------------------

  - name: Cleaning and login out
    after: true
    flow:
      - log:
          message: Emptying cart
          color: BLUE
      - executeFunction:
          name: mx.flows.od.back-to-home.backToHome
      - log:
          message: "End flow: od.back-to-home.backToHome"
          color: BLUE
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.flows.od.cart.deleteAllProducts
      - log:
          message: "End flow: od.cart.deleteAllProducts"
          color: BLUE
      - executeFunction:
          name: mx.functions.cart.tapBack
      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount
      - executeFunction:
          name: mx.functions.account.assertPageDisplayed
      - if:
          identifier:
            present:
              - identifier: mx.mappings.account.loggedInOptionsContainer
          then:
            - executeFunction:
                name: mx.functions.account.tapLogout