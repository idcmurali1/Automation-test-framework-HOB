#======================================================================================================================
#    AUTHOR: Isis Rojas Tolentino (vn53dge)
#   CREATED: Mar/28/2023
#  REVISION: ---
#
#  Copyright Â© 2023 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-od-e2e-regression-staging-011

scenarios:
 #--------------------------------------------------------------------------------------------------------------------
  - name: Main
    flow:
      - log: 
          message: "TEST START - E2E REGRESSION - OD-011"
          color: CYAN

    # STEP 1-2: Navigate through Onboarding and select OD Banner...
      - log: "STEP 1-2: Navigate through Onboarding and select OD Banner..."
      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.e2e-regression.od-011.zipCode
            - name: banner
              string: "OD"
    
    # STEP 3: Go to Profile screen and Create and account...
      - log: "STEP 3: Go to Profile screen and Create and account..."
      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount
      - executeFunction:
          name: mx.flows.od.login.createAccountFromLoginPopup
          params:
            - name: userFirstName
              string: mx.data.e2e-regression.qaa.od.staging-011.userFirstName
            - name: userLastName
              string: mx.data.e2e-regression.qaa.od.staging-011.userLastName
            - name: userPassword
              string: mx.data.e2e-regression.qaa.od.staging-011.userPassword
            - name: testCaseNum
              string: '011'
      - storeIn:
          key: qaa_od011_user_email
          value: ${returnedUniqueEmail}
      - executeFunction:
          name: mx.functions.account.assertUserLogged
          params:
            - name: userName
              string: mx.data.e2e-regression.qaa.od.staging-011.userFirstName

    # STEP 4: Go to Personal Information section and assert user information is correct...
      - log: "STEP 4: Go to Personal Information section and assert user information..."
      - executeFunction:
          name: mx.functions.account.openPersonalInformation
      - executeFunction:
          name: mx.functions.personal-information.assertPageDisplayed
      - executeFunction:
          name: mx.functions.personal-information.assertUserName
          params:
            - name: userFirstName
              string: mx.data.e2e-regression.qaa.od.staging-011.userFirstName
      - executeFunction:
          name: mx.functions.personal-information.assertEmail
          params:
            - name: userEmail
              string: ${qaa_od011_user_email}
      - executeFunction:
          name: mx.functions.personal-information.tapClose

    # STEP 5: Perform a search...
      - log: "STEP 5: Perform a search..."
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.flows.od.search.performSuccessfulSearch
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-011.productSearch

    # STEP 6-7: Add products to cart and increase products quantities...
      - log: "STEP 6-7: Add products to cart and increase products quantities..."

      # PRODUCT 1
      - executeFunction:
          name: mx.flows.od.add-to-cart.addProductToCartByNameInSLP
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName1
            - name: direction
              string: 'down'
      - executeFunction:
          name: mx.functions.slp.getProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName1
      - storeIn:
          key: var_product1_price  # Price of Product 1  
          value: ${returnedPrice}
      - executeFunction:
          name: mx.functions.slp.increaseProductQuantityBy
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName1
            - name: quantity
              string: mx.data.e2e-regression.od-011.product1.quantityToIncrease

      # PRODUCT 2
      - executeFunction:
          name: mx.flows.od.add-to-cart.addProductToCartByNameInSLP
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName2
            - name: direction
              string: 'down'
      - executeFunction:
          name: mx.functions.slp.getProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName2
      - storeIn:
          key: var_product2_price  # Price of Product 2
          value: ${returnedPrice}

      # Cart Badge Quantity Validation...
      - storeIn:
          key: var_product1_quantity
          value: mx.data.e2e-regression.od-011.quantityProduct1
      - storeIn:
          key: var_product2_quantity
          value: mx.data.e2e-regression.od-011.quantityProduct2
      - arithmetic:
          expression: ${var_product1_quantity} + ${var_product2_quantity}
          storeIn: var_cartBadge_expectedQuantity
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${var_cartBadge_expectedQuantity}

    # STEP 8: Open cart and assert products and quantities are correct...
      - log: "STEP 8: Open cart and assert products and quantities are correct..."
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty

      # PRODUCT1
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product1_price}
            - value: ${var_product1_quantity}
            - value: "false"
          getResponse:
            storeIn: var_product1_subtotal # Subtotal for Product 1
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName1
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${var_product1_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${var_product1_price}
            - name: expectedSubtotal
              string: ${var_product1_subtotal}
    
      # PRODUCT2
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product2_price}
            - value: ${var_product2_quantity}
            - value: "false"
          getResponse:
            storeIn: var_product2_subtotal # Subtotal for Product 2
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName2
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${var_product2_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${var_product2_price}
            - name: expectedSubtotal
              string: ${var_product2_subtotal}

      # Cart Product Count in Subtotal Label Validation...
      - executeFunction:
          name: mx.functions.cart.assertSubtotalProductCount
          params:
            - name: expectedProductCount
              string: ${var_cartBadge_expectedQuantity}
      - arithmetic:
          expression: ${var_product1_subtotal} + ${var_product2_subtotal}
          storeIn: varTC_cart_estimatedTotal
          numberOfDecimalPlaces: 2

      - executeFunction:
          name: mx.functions.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${varTC_cart_estimatedTotal}

    # STEP 9-10: Reserve time slot and delivery method...
      - log: "STEP 9-10: Reserve time slot and delivery method..."
      - executeFunction:
          name: mx.flows.od.cart.reserveSlot
          params:
            - name: deliveryMethod
              string: 'PickupDelivery'
            - name: deliveryPlaceAction
              string: 'Maintain'
            - name: slotDate
              string: 'tomorrow'
            - name: slotTime
              string: 'firstAvailable'

    # STEP 11-13: Go back to search products and add product to cart...
      - log: "STEP 11-13: Go back to search products and add product to cart..."
      - executeFunction:
          name: mx.functions.cart.tapBack
      - executeFunction:
          name: mx.functions.slp.assertPageDisplayed

      # PRODUCT 3
      - executeFunction:
          name: mx.flows.od.add-to-cart.addProductToCartByNameInSLP
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName3
            - name: direction
              string: 'down'
      - executeFunction:
          name: mx.functions.slp.getProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName3
      - storeIn:
          key: var_product3_price  # Price of Product 3 
          value: ${returnedPrice}
      # Increase quantity to exceed pay at delivery threshold...
      - executeFunction:
          name: mx.functions.slp.increaseProductQuantityBy
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName3
            - name: quantity
              string: mx.data.e2e-regression.od-011.product3.quantityToIncrease

      # Cart Badge Quantity Validation...
      - storeIn:
          key: var_product3_quantity
          value: mx.data.e2e-regression.od-011.quantityProduct3
      - arithmetic:
          expression: ${var_product1_quantity} + ${var_product2_quantity} + ${var_product3_quantity}
          storeIn: var_cartBadge_expectedQuantity
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${var_cartBadge_expectedQuantity}
      
    # STEP 14: Open cart and assert products and quantities are correct...
      - log: "STEP 14: Open cart and assert products and quantities are correct..."
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction:
          name: mx.functions.cart.assertCartNotEmpty

      # PRODUCT1
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product1_price}
            - value: ${var_product1_quantity}
            - value: "false"
          getResponse:
            storeIn: var_product1_subtotal # Subtotal for Product 1
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName1
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${var_product1_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${var_product1_price}
            - name: expectedSubtotal
              string: ${var_product1_subtotal}
    
      # PRODUCT2
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product2_price}
            - value: ${var_product2_quantity}
            - value: "false"
          getResponse:
            storeIn: var_product2_subtotal # Subtotal for Product 2
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName2
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${var_product2_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${var_product2_price}
            - name: expectedSubtotal
              string: ${var_product2_subtotal}

      # PRODUCT3
      - executeNode:
          file: mx/test/helpers/utils/calculateProductSubtotal.js
          args:
            - value: ${var_product3_price}
            - value: ${var_product3_quantity}
            - value: "false"
          getResponse:
            storeIn: var_product3_subtotal # Subtotal for Product 
            
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: mx.data.e2e-regression.od-011.productName3
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${var_product3_quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${var_product3_price}
            - name: expectedSubtotal
              string: ${var_product3_subtotal}

      # Cart Product Count in Subtotal Label Validation...
      - executeFunction:
          name: mx.functions.cart.assertSubtotalProductCount
          params:
            - name: expectedProductCount
              string: ${var_cartBadge_expectedQuantity}
      - arithmetic:
          expression: ${var_product1_subtotal} + ${var_product2_subtotal} + ${var_product3_subtotal}
          storeIn: varTC_cart_estimatedTotal
          numberOfDecimalPlaces: 2

      - executeFunction:
          name: mx.functions.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${varTC_cart_estimatedTotal}

    # STEP 15-16: Change shipping details for home delivery, add address and continue to checkout...
      - log: "STEP 15-16: Change shipping details for home delivery, add address and continue to checkout..."

      - executeFunction:
          name: mx.functions.cart.tapChangeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.tapHomeDeliveryMethod
      # Add new address ...
      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.tapAddAddress

      - executeFunction:
          name: mx.flows.od.addresses.addHomeDeliveryAddressFromPopup
          params:
            - name: userFirstName
              string: mx.data.e2e-regression.od-011.userFirstName
            - name: userLastName
              string: mx.data.e2e-regression.od-011.userLastName
            - name: userStreet
              string: mx.data.e2e-regression.od-011.userStreet
            - name: userExteriorNumber
              string: mx.data.e2e-regression.od-011.userExteriorNumber
            - name: userZipCode
              string: mx.data.e2e-regression.od-011.zipCode
            - name: userNeighborhood
              string: mx.data.e2e-regression.od-011.userNeighborhood
            - name: expectedUserState
              string: mx.data.e2e-regression.od-011.userState
            - name: expectedUserCity
              string: mx.data.e2e-regression.od-011.userCity
            - name: expectedUserMunicipality
              string: mx.data.e2e-regression.od-011.userMunicipality
            - name: userPhoneNumber
              string: mx.data.e2e-regression.od-011.userPhoneNumber
            - name: markAsFavorite
              string: 'true'
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      - executeFunction:
          name: mx.functions.reserve-slot.assertSelectedAddressByIndividualValues
          params:
            - name: streetName
              string: mx.data.e2e-regression.od-011.userStreet
            - name: exteriorNumber
              string: mx.data.e2e-regression.od-011.userExteriorNumber
            - name: city
              string: mx.data.e2e-regression.od-011.userCity
            - name: state
              string: mx.data.e2e-regression.od-011.userState
            - name: zipCode
              string: mx.data.e2e-regression.od-011.zipCode