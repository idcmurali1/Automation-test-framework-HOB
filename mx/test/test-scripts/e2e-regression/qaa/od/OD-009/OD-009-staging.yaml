#======================================================================================================================
#    AUTHOR: Octavio Cabrales Zárate (vn53g23)
#   CREATED: Mar/21/2023
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

general:
  tags: qaa-od-e2e-regression-staging-009

scenarios:

  #--------------------------------------------------------------------------------------------------------------------
  
  - name: Main
    flow:
      - log: TEST START - E2E REGRESSION - OD-009
      
      # Step 1 & 2
      - log: Step 1  - Complete the onboarding, and gets into the prehome page. Step 2 - Select On Demand Store and validate home page is displayed.
      - executeFunction:
          name: mx.flows.global.onboarding.navigateToHomeAsGuestUser
          params:
            - name: zipCode
              string: mx.data.e2e-regression.od-009.baseStoreZipCode
            - name: banner
              string: OD

      # Step 3
      - log: Step 3 - Search and add items to cart
      - loop:
          begin: 0
          end: 2
          flow:
            - executeFunction:
                name: mx.functions.bottom-menu.tapHome
      - getString:
          identifier: mx.mappings.home.storeSelectorButton
          storeIn: currentStore
      - storeIn:
          key: baseStore
          value: mx.data.e2e-regression.od-009.baseStoreCaps
      - if: 
          condition: ${currentStore} != ${baseStore}
          then:
            - executeFunction:
                name: mx.functions.home.tapStoreSelector
            - executeFunction:
                name: mx.functions.store-selector-popup.enterZipCode
                params:
                  - name: zipCode
                    string: mx.data.e2e-regression.od-009.baseStoreZipCode
            - executeFunction:
                name: mx.functions.store-selector-popup.selectStore
                params:
                  - name: storeName
                    string: mx.data.e2e-regression.od-009.baseStore
            - executeFunction:
                name: mx.functions.store-selector-popup.tapSave
      - executeFunction:
          name: mx.flows.od.home.addFirst2ProductsToCart

      # Step 4
      - log: Step 4 - Go to cart
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction: 
          name: mx.functions.cart.assertCartNotEmpty
      - storeIn:
          key: productName
          value: ${product1Name}
      - if:
          identifier:
            present:
              - identifier: mx.mappings.cart.productUOMSelector
          then:
            - executeFunction:
                name: mx.functions.cart.switchProductToWeight
      - storeIn:
          key: productName
          value: ${product2Name}
      - if:
          identifier:
            present:
              - identifier: mx.mappings.cart.productUOMSelector
          then:
            - executeFunction:
                name: mx.functions.cart.switchProductToWeight
      - executeFunction:
          name: mx.functions.cart.getProductQuantity
          params:
            - name: productName
              string: ${product1Name}
      - storeIn:
          value: ${returnedProductQuantity}
          key: product1Quantity
      - executeFunction:
          name: mx.functions.cart.getProductQuantity
          params:
            - name: productName
              string: ${product2Name}
      - storeIn:
          value: ${returnedProductQuantity}
          key: product2Quantity
      - scroll:
          direction: up
          scrollLimit: 2
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product1Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product1Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product1UnitPrice}
            - name: expectedSubtotal
              string: ${product1UnitPrice}
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product2Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product2Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product2UnitPrice}
            - name: expectedSubtotal
              string: ${product2UnitPrice}

      # Step 5
      - log: Step 5 - Close Cart and search products
      - executeFunction:
          name: mx.functions.cart.tapBack
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
      
      # Adding product number 3 to cart
      - log: Step 6 - Add products to cart
      - executeFunction:
          name: mx.functions.top-menu.enterSearchTerm
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-009.searchTerm3
      - executeFunction:
          name: mx.functions.top-menu.tapSearchInKeyboard
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.slp.assertResultsDisplayed
      - executeFunction:
          name: mx.functions.slp.scrollDownToProductByName
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
      - arithmetic:
          expression: ${totalQuantity} + 1
          storeIn: totalQuantity
      - executeFunction:
          name: mx.functions.slp.assertProductAddedToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
      - executeFunction:
          name: mx.functions.slp.increaseProductQuantityBy
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
            - name: quantity
              string: mx.data.e2e-regression.od-009.incrementTerm3
      - arithmetic:
          expression: ${totalQuantity} + ${quantity}
          storeIn: totalQuantity
      - executeFunction:
          name: mx.functions.slp.getProductQuantityAsPieces
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
      - arithmetic:
          expression: ${quantity} + 1
          storeIn: product3Quantity
      - executeFunction:
          name: mx.functions.slp.assertProductQuantityAsPieces
          params:
            - name: expectedQuantityAsPieces
              string: ${product3Quantity}
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${totalQuantity}
      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm3
      - storeIn:
          key: product3UnitPrice
          value: ${returnedPrice} 
      - arithmetic:
          expression: ${product3UnitPrice} * ${product3Quantity}
          storeIn: product3Subtotal
          numberOfDecimalPlaces: 2
      - executeFunction:
          name: mx.functions.home.assertSubtotalAdditionToCart
          params:
            - name: subtotal
              string: ${product3Subtotal}
            - name: previousCartSubtotal
              string: ${subtotalHome} 

      # Adding product number 4 to cart
      - log: Step 7 - Add items to cart
      - executeFunction: 
          name: mx.functions.top-menu.enterSearchTerm
          params:
            - name: searchTerm
              string: mx.data.e2e-regression.od-009.searchTerm4
      - executeFunction:
          name: mx.functions.top-menu.tapSearchInKeyboard
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.slp.assertResultsDisplayed
      - executeFunction: 
          name: mx.functions.slp.scrollDownToProductByName
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm4
      - executeFunction:
          name: mx.functions.slp.addProductToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm4
      - arithmetic:
          expression: ${totalQuantity} + 1
          storeIn: totalQuantity 
      - storeIn:
          value: 1
          key: product4Quantity
      - executeFunction:
          name: mx.functions.slp.assertProductAddedToCart
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm4
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: ${totalQuantity}
      - executeFunction:
          name: mx.functions.slp.getUnitProductPrice
          params:
            - name: productName
              string: mx.data.e2e-regression.od-009.searchTerm4
      - storeIn:
          key: product4UnitPrice
          value: ${returnedPrice} 
      - storeIn:
          key: product4Subtotal
          value: ${product4UnitPrice}
      - executeFunction:
          name: mx.functions.home.assertSubtotalAdditionToCart
          params:
            - name: subtotal
              string: ${product4Subtotal}
            - name: previousCartSubtotal
              string: ${subtotalHome}     
    
      # Step 8
      - log: Step 8 - Open cart
      - storeIn:
          key: product3Name
          value: mx.data.e2e-regression.od-009.searchTerm3
      - storeIn:
          key: product4Name
          value: mx.data.e2e-regression.od-009.searchTerm4
      - executeFunction:
          name: mx.functions.top-menu.tapCartIcon
      - executeFunction:
          name: mx.functions.cart.assertPageDisplayed
      - executeFunction: 
          name: mx.functions.cart.assertCartNotEmpty
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product3Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product3Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product3UnitPrice}
            - name: expectedSubtotal
              string: ${product3Subtotal}
      - scroll:
          direction: down
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product4Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product4Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product4UnitPrice}
            - name: expectedSubtotal
              string: ${product4Subtotal}
      
      # Step 9
      - log: Step 9 - Hit "Reservar un horario"
      - executeFunction:
          name: mx.functions.cart.tapReserveSlot  

      # Step 10  
      - log: Step 10 - Select "Pickup" and choose a different Store
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      - log:
          message: Selecting pickup fulfillment type
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.tapPickupDeliveryMethod
      - executeFunction:
          name: mx.functions.reserve-slot.tapChange
      - executeFunction:
          name: mx.functions.store-selector-popup.assertPageDisplayed
      - executeFunction:
          name: mx.functions.store-selector-popup.enterZipCode
          params:
            - name: zipCode
              string: mx.data.e2e-regression.od-009.baseStoreZipCode
      - executeFunction:
          name: mx.functions.store-selector-popup.selectStore
          params:
            - name: storeName
              string: mx.data.e2e-regression.od-009.secondStore
      - executeFunction:
          name: mx.functions.store-selector-popup.tapSave
      - sleep:  
          duration: 5000

      # Step 11  
      - log: Step 11 - Hit "Eliminar y continuar" button
      - executeFunction:
          name:  mx.functions.oos.assertPageDisplayed
      - executeFunction:
          name: mx.flows.oos.extractOOSProductsNameAndSubtotal
      - executeFunction:
          name: mx.functions.oos.deleteAllOOSProducts
      
      # Step 12
      - log: Step 12 - Get back to cart
      - executeFunction:
          name: mx.functions.reserve-slot.tapClose
      - executeFunction:
          name: mx.functions.cart.assertOOSProductsAreDeleted
          params:
            - name: numberOfOOSProducts
              string: ${numberOfOOSProducts} 
      - arithmetic:
          expression: (${substractedSubtotal} * (-1)) + ${subtotalHome}
          storeIn: cartSubtotal
          numberOfDecimalPlaces: 2
      - executeFunction:
          name: mx.functions.cart.assertEstimatedTotalFromBottom
          params:
            - name: expectedEstimatedTotal
              string: ${cartSubtotal}

      # Step 13
      - log: Step 13 - Continue Checkout
      - executeFunction:
          name: mx.functions.cart.tapContinue
      - executeFunction:
         name: mx.functions.login.assertPageDisplayed

      # Step 14
      - log: Step 14 - Login existing account
      - executeFunction:
          name: mx.flows.od.login.loginFromPopup
          params:
            - name: userEmail
              string: mx.data.e2e-regression.od-009.userEmail
            - name: userPassword
              string: mx.data.e2e-regression.od-009.userPassword
      - executeFunction:
          name: mx.functions.utils.something-went-wrong-popup.tapRetryIfPopupDisplayed
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product3Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product3Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product3UnitPrice}
            - name: expectedSubtotal
              string: ${product3UnitPrice}
      - executeFunction:
          name: mx.flows.od.cart.performProductAssertions
          params:
            - name: productName
              string: ${product4Name}
            - name: productListed
              string: "listed"
            - name: availability
              string: "available"
            - name: expectedQuantity
              string: ${product4Quantity}
            - name: expectedWeightQuantity
              string: "null"
            - name: expectedPrice
              string: ${product4UnitPrice}
            - name: expectedSubtotal
              string: ${product4UnitPrice}

      # Step 15
      - log: Step 15 - Select "Delivery" and select time slot
      - executeFunction:
          name: mx.functions.cart.tapReserveSlot
      - executeFunction:
          name: mx.functions.reserve-slot.assertPageDisplayed
      - log:
          message: Selecting home delivery fulfillment type
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.tapHomeDeliveryMethod
      - log:
          message: Checking if there are available date slots
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.address-message-popup.closePopupIfDisplayed
      - if:
          identifier:
            present:
              - identifier: mx.mappings.reserve-slot.bookslotError
          then: 
            - log:
                message: This behavior yet to be discussed if is a bug
                color: YELLOW
            - click:
                identifier: mx.mappings.reserve-slot.changeStoreOrAddressButton
            - executeFunction:
                name: mx.functions.address-selector-popup.selectVisibleRandomAddress
            - executeFunction:
                name: mx.functions.address-selector-popup.getSelectedShortAddress
            - executeFunction:
                name: mx.functions.address-selector-popup.getSelectedAddressName
            - executeFunction:
                name: mx.functions.address-selector-popup.tapSave
            - log:
                message: Checking if there are available date slots
                color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableDateSlots
      - log:
          message: There are available dates
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.selectRandomDateSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedDaySlot
      - log:
          message: Checking if there are available time slots
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.assertThereAreAvailableTimeSlots
      - log:
          message: There are slots available
          color: CYAN
      - executeFunction:
          name: mx.functions.reserve-slot.selectRandomVisibleTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlot
      - executeFunction:
          name: mx.functions.reserve-slot.getSelectedTimeSlotDeliveryFee
      - executeFunction:
          name: mx.mappings.cart.userShortAddress
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'Cart'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - getString:
          identifier: mx.mappings.reserve-slot.userAddress
          storeIn: returnedShortAddress
      - executeNode:
          file: mx/test/helpers/reserve-slot/getShortAddress.js
          args:
            - value: ${returnedShortAddress}
          getResponse:
            storeIn: returnedShortAddress
      - executeFunction:
          name: mx.flows.od.cart.assertDeliveryMethodSlot
          params:
            - name: deliveryMethod
              string: 'HomeDelivery'
            - name: deliverySlot
              string: ${returnedDeliverySlot}
            - name: userShortAddress
              string: ${returnedShortAddress}
            - name: expectedDeliveryFee
              string: ${returnedDeliveryFee}
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - arithmetic:
                expression: ${returnedDeliveryFee}
                numberOfDecimalPlaces: 2
                storeIn: returnedDeliveryFee
      - if:
          condition: ${numberOfOOSProducts} == 2
          then:
            - arithmetic:
                expression: (${product3Price} * ${product3Quantity}) + (${produc4tPrice} * ${product4Quantity})
                numberOfDecimalPlaces: 2
                storeIn: cartSubtotal
          else:
            - if: 
                condition: ${numberOfOOSProducts} == 3
                then:
                  - arithmetic:
                      expression: ${produc4tPrice} * ${product4Quantity}
                      numberOfDecimalPlaces: 2
                      storeIn: cartSubtotal
                else:
                  - failTest:
                      message: No products in cart
      - executeFunction:
          name: mx.functions.cart.assertSubtotal
          params:
            - name: expectedSubtotal
              string: ${cartSubtotal}
      - arithmetic:
          expression: ${returnedDeliveryFee} + ${cartSubtotal}
          numberOfDecimalPlaces: 2
          storeIn: cartEstimatedTotal
      - executeFunction:
          name: mx.functions.utils.searchItemInPage
          params:
            - name: elementToFind
              string: mx.mappings.cart.totalBottomSection 
      - executeFunction:
          name: mx.functions.cart.assertEstimatedTotalFromBottom
          params:
            - name: expectedEstimatedTotal
              string: ${cartEstimatedTotal}

      # Step 16
      - log: Step 16 - Continue checkout
      - executeFunction:
          name: mx.functions.cart.tapContinue
      - executeFunction:
          name: mx.functions.review-order.assertPageDisplayed
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'ReviewOrder'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.review-order.assertDeliverySlot
          params:
            - name: deliverySlot
              string: ${returnedDeliverySlot}

      # Step 17
      - log: Step 17 - Go to payment methods and select AMEX card
      - executeFunction:
          name: mx.functions.review-order.scrollDownToWallet
      - executeFunction:
          name: mx.flows.od.review-order.changeToCard
          params:
            - name: last4Digits
              string: 6940
      - executeFunction:
          name: mx.functions.review-order.payment-section.enterCVV
          params:
            - name: cvv
              string: mx.data.e2e-regression.od-009.amexCVV
      - executeFunction:
          name: mx.functions.review-order.assertSubtotal
          params:
            - name: direction
              string: down
            - name: subtotal
              string: ${cartSubtotal}
      - executeFunction:
          name: mx.functions.review-order.assertDeliveryFee
          params:
            - name: deliveryFee
              string: ${returnedDeliveryFee}
            - name: posLineItem
              string: Costo de envío
            - name: rightSideItem
              string: ${returnedDeliveryFee}
      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotal
          params:
            - name: posLineItem
              string: Total estimado
            - name: rightSideItem
              string: ${cartEstimatedTotal}
            - name: estimatedTotal
              string: ${cartEstimatedTotal}
      - executeFunction:
          name: mx.functions.review-order.assertEstimatedTotalFromButton
          params:
            - name: estimatedTotal
              string: ${cartEstimatedTotal}

      # Step 18
      - log: Step 18 - Place Order
      - executeFunction:
         name: mx.functions.review-order.tapPlaceOrder
      - executeNode:
          file: mx/test/helpers/utils/getTodaysDateAsStringForAssertion.js
          getResponse:
            storeIn: returnedOrderedDate
      - sleep:
          duration: 5000
      - executeFunction:
          name: mx.functions.order-confirmation.assertPageDisplayed
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliveryMethod
          params:
            - name: expectedDeliveryMethod
              string: mx.data.e2e-regression.od-009.deliveryMethod
      - executeFunction:
          name: mx.functions.order-confirmation.getOrderNumber
      - executeFunction:
          name: mx.functions.order-confirmation.assertTotal
          params:
            - name: expectedTotal
              string: ${cartEstimatedTotal}
      - executeFunction:
          name: mx.functions.utils.getDeliverySlot
          params:
            - name: forPage
              string: 'ReviewOrder'
            - name: selectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: selectedTimeSlot
              string: ${returnedSelectedTimeSlot}
      - executeFunction:
          name: mx.functions.order-confirmation.assertDeliverySlot
          params:
            - name: expectedDeliverySlot
              string: ${returnedDeliverySlot}
      - executeFunction:
          name: mx.functions.order-confirmation.assertHomeDeliveryAddressName
          params:
            - name: expectedHomeAddressName
              string: ${returnedAddressName}
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductsCount
          params:
            - name: expectedProductsCount
              string: ${productsQuantity}
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductImageDisplayed
          params:
            - name: productName
              string: ${product3Name}
      - executeFunction:
          name: mx.functions.order-confirmation.assertProductImageDisplayed
          params:
            - name: productName
              string: ${product4Name}
      
      # Step 19
      - log: Step 19 - Hit "Descubrir mas productos" button
      - executeFunction:
          name: mx.functions.order-confirmation.tapFindMoreProducts
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.isPopupDisplayed
      - executeFunction:
          name: mx.functions.customized-buy-experience-popup.dismissPopupIfDisplayed 
      - executeFunction:
          name: mx.functions.bottom-menu.tapHome
      - executeFunction:
          name: mx.functions.home.assertPageLoaded
      - executeFunction:
          name: mx.functions.top-menu.assertCartQuantity
          params:
            - name: expectedQuantity
              string: "0"

      # Step 20
      - log: Step 20 - Go to Profile screen and select "Pedidos"
      - executeFunction:
          name: mx.functions.bottom-menu.tapAccount
      - executeFunction:
          name: mx.functions.account.assertPageDisplayed
      - executeFunction:
          name: mx.functions.account.openOrdersHistory
      - executeFunction:
          name: mx.flows.od.orders-history.assertOrder
          params:
            - name: position
              string: 1
            - name: expectedDeliveryMethod
              string: mx.data.e2e-regression.od-009.deliveryMethod
            - name: expectedTotal
              string: ${cartEstimatedTotal}
            - name: banner
              string: Walmart
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: orderStatus
              string: mx.data.e2e-regression.od-009.expectedOrderStatus
            - name: productsCount
              string: mx.data.e2e-regression.od-009.differentProducts
      
      # Step 21
      - log: Step 21 - Select the newest placed order
      - executeFunction:
          name: mx.functions.orders-history.tapOrderDetailsByPosition
          params:
            - name: position
              string: 1
      - executeFunction:
          name: mx.flows.od.order-details.assertOrderDetails
          params:
            - name: expectedOrderNumber
              string: ${returnedOrderNumber}
            - name: expectedDeliveryMethod
              string: HomeDelivery
            - name: expectedOrderStatus
              string: mx.data.e2e-regression.od-009.expectedOrderStatus
            - name: expectedBanner
              string: Walmart
            - name: expectedDaySlot
              string: ${returnedSelectedDaySlot}
            - name: expectedTimeSlot
              string: ${returnedSelectedTimeSlot}
            - name: expectedHomeAddressName
              string: ${returnedAddressName}
            - name: expectedUserAddressWithCommas
              string: ${returnedShortAddressWithCommas}
            - name: expectedProductsCount
              string: 2
            - name: expectedPaymentMethod
              string: Credito
            - name: expectedSubtotal
              string: ${cartSubtotal}
            - name: expectedDeliveryFee
              string: ${returnedDeliveryFee}
            - name: expectedTotal
              string: ${cartEstimatedTotal}
            - name: expectedOrderedDate
              string: ${returnedOrderedDate}
      
      # Product 1 assertions.
      - executeFunction:
          name: mx.functions.order-details.assertProductListed
          params:
            - name: productName
              string: ${product3Name}
      - executeFunction:
          name: mx.functions.order-details.assertProductUnitPrice
          params:
            - name: productName
              string: ${product3Name}
            - name: expectedUnitPrice
              string: ${produc3tPrice}
      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: expectedSubtotal
              string: ${product3Subtotal}
            - name: productName
              string: ${product3Name}
      
      # Product 2 assertions.
      - executeFunction:
          name: mx.functions.order-details.assertProductListed
          params:
            - name: productName
              string: ${product4Name}
      - executeFunction:
          name: mx.functions.order-details.assertProductUnitPrice
          params:
            - name: productName
              string: ${product4Name}
            - name: expectedUnitPrice
              string: ${produc4tPrice}
      - executeFunction:
          name: mx.functions.order-details.assertProductSubtotal
          params:
            - name: expectedSubtotal
              string: ${product4UnitPrice}
            - name: productName
              string: ${product4Name}