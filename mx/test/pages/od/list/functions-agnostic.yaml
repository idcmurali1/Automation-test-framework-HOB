#======================================================================================================================
#  AUTHOR: Gustavo Antonio Lopez Cambambia (vn53g21)
#  CREATED: Jan/09/2023
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # PARAMS: ${productName}  [Mandatory]  Product name to check whether it is listed or not.
  # AUTHOR: ?????
  # EDITOR: Sergio Fernandez (vn0t1qt), Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.list.assertProductListed
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.list.productByName # <--PARAM--${productName}
          then:
            - scroll:
                direction: down
                scrollLimit: 3
                untilIdentifier: mx.mappings.list.productByName # <--PARAM--${productName}
                wait: 1000
            - verifyIdentifier:
                present:
                  - identifier: mx.mappings.list.productByName # <--PARAM--${productName}
      - log:
          message: "The Product is Listed"
          color: CYAN
      - log:
          message: "End function: list.assertProductListed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # USES FLAG:  ${ASSERT_PAGE_TITLE}
  # EDITOR: Rodrigo Pacheco C. (vn53p0i) - Osmar Juárez (vn56dce)
  - name: mx.functions.list.assertPageDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.list.pageName
            - identifier: mx.mappings.list.backButton
            - identifier: mx.mappings.list.listName
            - identifier: mx.mappings.list.itemsContainer
      - log:
          message: "Success List page is displayed correctly"
          color: GREEN_BOLD
      - log:
          message: "End function: list.assertPageDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts the list name displayed in page
  # Param: ${expectedListName}  [Mandatory]  specific list name to assert.
  - name: mx.functions.list.assertCorrectListOpened
    flow:
      - log:
          message: "List name: ${expectedListName}"
          color: CYAN
      - if:
          identifier:
            present:
              - identifier: mx.mappings.list.listNameForAssertion
          then:
            - log:
                message: "Correct list opened"
                color: CYAN
          else:
            - failTest:
                message: The expected list name does not equal the displayed list name.
      - log:
          message: "End function: list.assertCorrectListOpened (Correct list)"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${productName}  [Mandatory]  Name of the product to click its delete button.
  # AUTHOR: ?????
  # EDITOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.list.tapDeleteProduct
    flow:
      - log: 
          message: "Product name: ${productName}"
          color: CYAN
      - executeFunction:
          name: mx.functions.utils.isElementDisplayed
          params:
            - name: element
              string: mx.mappings.list.deleteButtonByProductName
      - if:
          condition: ${returnedIsDisplayed}
          then:
            - log:
                message: ${productName} is visible
                color: CYAN
          else:
            - scroll:
                direction: up
                scrollLimit: 10
                untilIdentifier: mx.mappings.list.listNameForAssertion
            - executeFunction:
                name: mx.functions.utils.searchItemInPage
                params:
                  - name: elementToFind
                    string: mx.mappings.list.productByName
      - if:
          condition: ${APP_PLATFORM} == 'android'
          then:
            - executeFunction:
                name: mx.functions.bottom-menu.hideBottomMenu
      - click:
          identifier: mx.mappings.list.deleteButtonByProductName
      - log: 
          message: "End function: list.tapDeleteProduct"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.list.delete-product-popup.assertPopupDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.list.delete-product-popup.title
            - identifier: mx.mappings.list.delete-product-popup.deleteButton
            - identifier: mx.mappings.list.delete-product-popup.popupMessage
      - log:
          message: "End function: list.delete-product-popup.assertPopupDisplayed (Displayed)"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.list.delete-product-popup.tapDelete
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - click:
          identifier: mx.mappings.list.delete-product-popup.deleteButton
      - log:
          message: "End function: list.delete-product-popup.tapDelete"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.list.tapBack
    flow: 
      - click:
          identifier: mx.mappings.list.backButton
      - log:
          message: "End function: list.tapBack"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function clicks the add to cart button of specific product
  # Param: ${productName}  [Mandatory]  specific product name.
  - name: mx.functions.list.addProductToCart
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - click:
          identifier: mx.mappings.list.addToCartButtonByProductName
      - log:
          message: "End function: list.addProductToCart"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts a specific product has been added to cart.
  # Param: ${productName}  [Mandatory]  Product name to validate.
  - name: mx.functions.list.assertProductAddedToCart
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.list.addToCartButtonByProductName
          then:
            - log:
                message: "End function: list.assertProductAddedToCart (Product added)"
                color: BLUE
          else:
            - failTest:
                message: "The product has not been added to cart."

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the product type (Dual, Pieces or Weight) of specific product
  # Param: ${productName}  [Mandatory]  specific product name.
  - name: mx.functions.list.getProductType
    flow:
      - log: 
          message: "Product name: ${productName}"
          color: CYAN
      - if:
          identifier:
            present:
              - identifier: mx.mappings.list.dualProductTypeByName
          then:
            - storeIn:
                key: returnedProductType
                value: Dual
          else:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.list.weightProductTypeByName
                then:
                  - storeIn:
                      key: returnedProductType
                      value: Weight
                else:
                  - if:
                      identifier:
                        present:
                          - identifier: mx.mappings.list.piecesProductTypeByName
                      then:
                        - storeIn:
                            key: returnedProductType
                            value: Pieces
                      else:
                        - failTest:
                            message: "There is a problem trying to get the product type"
      - log:
          message: "End function: list.getProductType"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the product price of a specific product and stores it in the global variable ${returnedProductPrice}
  # Param: ${productName}  [Mandatory]  specific product name.
  - name: mx.functions.list.getProductPrice
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - getString:
          identifier: mx.mappings.list.productPriceByProductName
          storeIn: productPrice
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - log:
                message: "Displayed String: ${productPrice}"
                color: CYAN
            - executeNode:
                file: mx/test/helpers/list/getAndSanitizePriceiOS.js
                args:
                  - value: ${productPrice}
                getResponse:
                  storeIn: returnedProductPrice
          else:
            - log:
                message: "Displayed Price: ${productPrice}"
                color: CYAN
            - executeNode:
                file: mx/test/helpers/slp/sanitizePrice.js
                args:
                  - value: ${productPrice}
                getResponse:
                  storeIn: returnedProductPrice
      - log:
          message: "Price got: $${returnedProductPrice}"
          color: CYAN
      - log:
          message: "End function: list.getProductPrice"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the product quantity of specific pieces product
  # Param: ${productName}  [Mandatory]  specific product name.
  - name: mx.functions.list.getProductQuantityAsPieces
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.list.weightProductTypeByName
          then:
            - failTest:
                message: "The product is weighable"
      - if:
          identifier:
            present:
              - identifier: mx.mappings.list.addToCartButtonByProductName
          then:
            - failTest:
                message: "The product has not been added to cart"
      - if:
          identifier:
            present:
              - identifier: mx.mappings.list.piecesProductTypeByName
          then:
            - getString:
                identifier: mx.mappings.list.piecesProductTypeByName
                storeIn: productQuantityAsPieces
            - executeNode:
                file: mx/test/helpers/utils/sanitizeQuantity.js
                args:
                  - value: ${productQuantityAsPieces}
                getResponse:
                  storeIn: returnedProductQuantityAsPieces
            - log:
                message: "Quantity got: ${returnedProductQuantityAsPieces}"
                color: CYAN
            - log:
                message: "End function: list.getProductQuantityAsPieces"
                color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function clicks in the delete link
  - name: mx.functions.list.tapDeleteList
    flow:
      - click:
          identifier: mx.mappings.list.deleteListButton
      - log:
          message: "End function: list.tapDeleteList"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts if delete list pop up is displayed
  - name: mx.functions.list.delete-list-popup.assertPopupDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.list.delete-list-popup.title
            - identifier: mx.mappings.list.delete-list-popup.confirmationMessage
            - identifier: mx.mappings.list.delete-list-popup.deleteButton
            - identifier: mx.mappings.list.delete-list-popup.cancelButton
      - log: 
          message: "End function: delete-list-popup.assertPopupDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts if delete list pop up is displayed
  - name: mx.functions.list.delete-list-popup.tapDelete
    flow:
      - click:
          identifier: mx.mappings.list.delete-list-popup.deleteButton
          coordinates: 75%,75%
      - log:
          message: "End function: list.delete-list-popup.tapDelete" 
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${productName}  [Mandatory]  Name of the product to click plus button.
  # AUTHOR: Guillermo Canales (g0c08aj)
  # EDITOR: Jorge Carrillo (vn575hp)
  - name: mx.functions.list.tapPlusProduct
    flow:
      - log:
          message: "Item button: ${productName}"
          color: CYAN
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.list.mainButtonByProductName
                then:
                    - click:
                        identifier: mx.mappings.list.mainButtonByProductName
      - click:
          identifier: mx.mappings.list.increaseButtonByProductName
      - log:
          message: "End function: list.tapPlusProduct"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i) / Osmar Juárez (vn56dce)
  - name: mx.functions.list.tapSettingsButton
    platform:
    flow:
      - click:
          identifier: mx.mappings.list.settingsButton
      - log:
          message: "End function: list.tapSettingsButton"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.list.lists-settings-popup.assertPopupDisplayed
    platform: 
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.list.lists-settings-popup.title
            - identifier: mx.mappings.list.lists-settings-popup.saveButton
            - identifier: mx.mappings.list.lists-settings-popup.closeButton
            - identifier: mx.mappings.list.lists-settings-popup.deleteListButton
      - log: 
          message: "End function: delete-list-popup.assertPopupDisplayed"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.list.lists-settings-popup.tapDeleteThisList
    platform:
    flow:
      - click:
          identifier: mx.mappings.list.lists-settings-popup.deleteListButton
      - log: 
          message: "End function: delete-list-popup.tapDeleteThisList"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function taps back from the list settings -> delete list popup
  # AUTHOR: Fernanda Peruyero (vn54eya)
  - name: mx.functions.list.delete-list-popup.tapBack
    platform:
    flow:
      - click:
          identifier: mx.mappings.list.delete-list-popup.backButton
      - log: 
          message: "End function: mx.functions.list.lists-settings-popup.delete-list-popup.tapBack"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function closes the list settings -> delete list popup
  # AUTHOR: Fernanda Peruyero (vn54eya)
  - name: mx.functions.list.lists-settings-popup.delete-list.tapClose
    platform:
    flow:
      - click:
          identifier: mx.mappings.list.lists-settings-popup.closeButton
      - log: 
          message: "End function: mx.functions.list.delete-list-popup.tapClose"
          color: BLUE