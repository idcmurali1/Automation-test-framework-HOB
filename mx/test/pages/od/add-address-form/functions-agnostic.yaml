#======================================================================================================================
#    AUTHOR: Francisco Javier Ramirez Hernandez (vn53vq4)
#   CREATED: Mar/13/2023
#  REVISION: ---
#
#  Copyright Â© 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # USES FLAG:  ${ASSERT_PAGE_TITLE}
  # EDITOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.add-address-form.assertPageDisplayed
    flow:
      - if:
          condition: ${ASSERT_PAGE_TITLE} == true
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.add-address-form.pageTitle
                    - identifier: mx.mappings.add-address-form.closeButton
                    - identifier: mx.mappings.add-address-form.saveButton
                    - identifier: mx.mappings.add-address-form.nameField
                then:
                  - log:
                      message: "Assertion Succeeded: Add Address Form is displayed."
                      color: GREEN_BOLD
                else:
                  - failTest:
                      message: "Failed: Add Address Form is not displayed."
          else:
            - log:
                message: "Page title assertion has been turned off by flag:'ASSERT_PAGE_TITLE'"
                color: YELLOW
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.add-address-form.closeButton
                    - identifier: mx.mappings.add-address-form.saveButton
                    - identifier: mx.mappings.add-address-form.nameField
                then:
                  - log:
                      message: "Assertion Succeeded: Add Address Form is displayed."
                      color: GREEN_BOLD
                else:
                  - failTest:
                      message: "Failed: Add Address Form is not displayed."
      - log:
          message: "End function: add-address-form.assertPageDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's name.
  # Param: ${userFirstName} [Mandatory] User's name to enter.
  - name: mx.functions.add-address-form.enterName
    flow:
      - log:
          message: "User first name: ${userFirstName}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.nameField
          string: ${userFirstName}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's last name.
  # Param: ${userLastName} [Mandatory] User's last name to enter.
  - name: mx.functions.add-address-form.enterLastName
    flow:
      - log:
          message: "User last name: ${userLastName}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.lastNameField
          string: ${userLastName}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterLastName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's street.
  # Param: ${userStreet} [Mandatory] User's street to enter.
  - name: mx.functions.add-address-form.enterStreet
    flow:
      - log:
          message: "User's street: ${userStreet}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.streetField
          string: ${userStreet}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterStreet"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's exterior number.
  # Param: ${userExteriorNumber} [Mandatory] User's exterior number to enter.
  - name: mx.functions.add-address-form.enterExteriorNumber
    flow:
      - log:
          message: "User's exterior number: ${userExteriorNumber}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.exteriorNumberField
          string: ${userExteriorNumber}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterExteriorNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's interior number.
  # Param: ${userInteriorNumber} [Mandatory] User's interior number to enter.
  - name: mx.functions.add-address-form.enterInteriorNumber
    flow:
      - log:
          message: "User's interior number: ${userInteriorNumber}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.interiorNumberField
          string: ${userInteriorNumber}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterInteriorNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: On iOS it verifies if the clear button is displayed and then it clicks it, on android it clears the field.
  - name: mx.functions.add-address-form.clearInteriorNumber
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - click:
                identifier: mx.mappings.add-address-form.interiorNumberField
            - click:
                identifier: mx.mappings.add-address-form.clearInteriorNumberButton
          else:
            - enterText:
                identifier: mx.mappings.add-address-form.interiorNumberField
                string: ""
                clearField: true
                clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.clearInteriorNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's zip code number.
  # Param: ${userZipCode} [Mandatory] User's zip code number to enter.
  - name: mx.functions.add-address-form.enterZipCode
    flow:
      - log:
          message: "User's zip code: ${userZipCode}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.zipCodeField
          string: ${userZipCode}
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - sleep:
          duration: 3000
      - log:
          message: "End function: add-address-form.enterZipCode"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's colony/neighborhood.
  # Param: ${userNeighborhood} [Mandatory] User's colony/neighborhood to enter.
  - name: mx.functions.add-address-form.selectNeighborhood
    flow:
      - log:
          message: "User's neighborhood: ${userNeighborhood}"
          color: CYAN
      - if:
          condition: ${APP_PLATFORM} == 'android'
          then:
            - click:
                identifier: mx.mappings.add-address-form.neighborhoodField
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.add-address-form.neighborhoodListOption
                then:
                  - click:
                      identifier: mx.mappings.add-address-form.neighborhoodListOption
                else:
                  - scroll:
                      direction: down
                      wait: 1000
                      scrollLimit: 5
                      untilIdentifier: mx.mappings.add-address-form.neighborhoodListOption
                      withinIdentifier: mx.mappings.add-address-form.neighborhoodList
                  - click:
                      identifier: mx.mappings.add-address-form.neighborhoodListOption
      ## THERE IS AN ISSUE WITH IOS NOT SAVING THE SELECTED OPTION AND SELECTS THE FIRST OPTION INSTEAD.
          else:
            - log:
                message: "Validate for iOS if this function works properly and delete this log after doing so."
                color: YELLOW
            - click:
                identifier: mx.mappings.add-address-form.neighborhoodField
            - enterText:
                identifier: mx.mappings.add-address-form.neighborhoodPickerWheel
                string: ${userNeighborhood}
                clickFirst: false
                clearField: false
            - executeFunction:
                name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.selectNeighborhood"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Enters the user's phone number.
  # Param: ${userPhoneNumber} [Mandatory] User's phone number to enter.
  - name: mx.functions.add-address-form.enterPhoneNumber
    flow:
      - log:
          message: "User's phone number: ${userPhoneNumber}"
          color: CYAN
      - enterText:
          identifier: mx.mappings.add-address-form.phoneNumberField
          string: ${userPhoneNumber}
          clearField: true
          clickFirst: true
      - executeFunction:
          name: mx.functions.utils.tapCloseKeyboardButton
      - log:
          message: "End function: add-address-form.enterPhoneNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Taps the favorite address checkbox, does not verify if checkbox is marked.
  - name: mx.functions.add-address-form.tapFavoriteAddressCheckbox
    flow:
      - click:
          identifier: mx.mappings.add-address-form.favoriteAddressCheckbox
      - log:
          message: "End function: add-address-form.tapFavoriteAddressCheckbox"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the state of the favorite address checkbox.
  # Param: ${expectedCheckboxState} [Mandatory] State of the checkbox you want to assert. Can be "true" or "false".
  - name: mx.functions.add-address-form.assertFavoriteAddressCheckboxState
    flow:
      - if:
          condition: ${expectedCheckboxState} == true
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.add-address-form.markedFavoriteAddressCheckbox
                then:
                  - log: 
                      message: "Favorite Address checkbox is marked."
                      color: CYAN
                else:
                  - failTest:
                      message: "Favorite Address checkbox is unmarked."
          else:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.add-address-form.unmarkedFavoriteAddressCheckbox
                then:
                  - log: 
                      message: "Favorite Address checkbox is unmarked."
                      color: CYAN
                else:
                  - failTest:
                      message: "Favorite Address checkbox is marked."
      - log:
          message: "End function: add-address-form.assertFavoriteAddressCheckboxState"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the correct user's city.
  # Param: ${expectedUserCity} [Mandatory] User's city to verify.
  - name: mx.functions.add-address-form.assertCity
    flow:
      - log:
          message: "User's city: ${expectedUserCity}"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.add-address-form.cityFieldForAssertion
      - log:
          message: "End function: add-address-form.assertCity"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the correct user's state.
  # Param: ${expectedUserState} [Mandatory] User's state to verify.
  - name: mx.functions.add-address-form.assertState
    flow:
      - log:
          message: "User's state: ${expectedUserState}"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.add-address-form.stateFieldForAssertion
      - log:
          message: "End function: add-address-form.assertState"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the correct user's municipality.
  # Param: ${expectedUserMunicipality} [Mandatory] User's municipality to verify.
  - name: mx.functions.add-address-form.assertMunicipality
    flow:
      - log:
          message: "User's municipality: ${expectedUserMunicipality}"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.add-address-form.municipalityFieldForAssertion
      - log:
          message: "End function: add-address-form.assertMunicipality"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Taps the save ("Contiunar") button.
  - name: mx.functions.add-address-form.tapSave
    flow:
      - click:
          identifier: mx.mappings.add-address-form.saveButton
      - log:
          message: "End function: add-address-form.tapSave"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Taps the save ("Contiunar") button.
  - name: mx.functions.add-address-form.assertErrorsNotDisplayed
    flow:
      - verifyIdentifier:
          notPresent:
            - identifier: mx.mappings.add-address-form.errorMessages
      - log:
          message: "End function: add-address-form.assertErrorsNotDisplayed"
          color: BLUE

  # CONFIRMATION-MAP ##################################################################################################

  - name: mx.functions.add-address-form.confirmation-map.assertPageDisplayed
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.add-address-form.confirmation-map.mapView
            - identifier: mx.mappings.add-address-form.confirmation-map.saveConfirmButton
            - identifier: mx.mappings.add-address-form.confirmation-map.userFullAddress
      - log:
          message: "End function: add-address-form.confirmation-map.assertPageDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Asserts the correct user's full address.
  # Param: ${userFullAddress} [Mandatory] User's full address to verify.
  - name: mx.functions.add-address-form.confirmation-map.assertAddress
    flow:
      - log:
          message: "Expected user address: ${userFullAddress}"
          color: CYAN
      - getString:
          identifier: mx.mappings.add-address-form.confirmation-map.userFullAddress
          storeIn: displayedUserAddress
      - executeNode:
          file: mx/test/helpers/add-address-form/assertHomeAddressForConfirmationMap.js
          args:
            - value: ${displayedUserAddress}
            - value: ${userFullAddress}
          getResponse:
            storeIn: returnedIsStoreAddressCorrect
      - if:
          condition: ${returnedIsStoreAddressCorrect} == true
          then:
            - log: 
                message: "End function: add-address-form.confirmation-map.assertAddress (Correct address)"
                color: BLUE
          else:
            - failTest:
                message: "The provided user address: ${userFullAddress}, is not correct. Please check the helper's documentation."

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method verifies the selected delivery address.
  # NOTE: this assertion must be performed with the returned value of mx.functions.reserve-slot.getSelectedAddress
  # Params  ${streetName}     [Mandatory]   Name of the street to be validated.
  #         ${exteriorNumber} [Mandatory]   Exterior number to be validated.
  #         ${city}           [Mandatory]   City to be validated.
  #         ${state}          [Mandatory]   State to be validated.
  #         ${zipCode}        [Mandatory]   ZIP Code to be validated.
  - name: mx.functions.add-address-form.confirmation-map.assertAddressByIndividualValues
    flow:
      # Using '\e[36m' to print in CYAN and '\e[0m' to reset color, to simplify logs.
      - log: "\e[36mExpected StreetName: '${streetName}'\e[0m"
      - log: "\e[36mExpected ExteriorNumber: '${exteriorNumber}'\e[0m"
      - log: "\e[36mExpected City: '${city}'\e[0m"
      - log: "\e[36mExpected State: '${state}'\e[0m"
      - log: "\e[36mExpected ZipCode: '${zipCode}'\e[0m"
      - getString:
          identifier: mx.mappings.add-address-form.confirmation-map.userFullAddress
          storeIn: displayedAddress
      - if:
          condition: ${APP_PLATFORM} == 'android'
          then:
            - executeNode:
                file: mx/test/helpers/utils/stringContainsAll.js
                args:
                  - value: ${displayedAddress}
                  - value: ${streetName}, ${exteriorNumber}, ${city}, ${state}, ${zipCode}
                getResponse:
                  storeIn: isAddressCorrect
          else:
            - executeNode:
                file: mx/test/helpers/utils/stringContainsAll.js
                args:
                  - value: ${displayedAddress}
                  - value: ${streetName}, ${city}, ${state}
                getResponse:
                  storeIn: isAddressCorrect
      - if:
          condition: ${isAddressCorrect} == true
          then:
            - log:
                message: "Address is correct."
                color: CYAN
          else:
            - failTest:
                message: "Expected address not contained in: '${displayedAddress'}"
      - log: 
          message: "End function: add-address-form.confirmation-map.assertAddressByIndividualValues (Correct address)"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Taps the "Confirmar" button ("Guardar" on Android but it is the same button).
  - name: mx.functions.add-address-form.confirmation-map.tapConfirm
    flow:
      - click:
          identifier: mx.mappings.add-address-form.confirmation-map.saveConfirmButton
      - sleep:
          duration: 3000
      - log: 
          message: "End function: add-address-form.confirmation-map.tapConfirm"
          color: BLUE
  #--------------------------------------------------------------------------------------------------------------------
 # Description: This function check if message location  is displayed.
 # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.isLocationAlertDisplayed
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.add-address-form.allowOneTimeAppButton
          then:
            - storeIn:
                key: returnedIsDisplayed
                value: true
            - click:
                identifier: mx.mappings.add-address-form.allowOneTimeAppButton
          else:
            - storeIn:
                key: returnedIsDisplayed
                value: false
            - log:
                message: "End function: Location Alert (Not Displayed)"
                color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address street and stores it in the global variable ${returnedStreet}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getStreet
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - getString:
                identifier: mx.mappings.add-address-form.streetField
                attribute: value
                storeIn: returnedStreet
          else:
            - getString:
                identifier: mx.mappings.add-address-form.streetField
                storeIn: returnedStreet
      - log:
          message: "Displayed street: ${returnedStreet}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getStreet"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address exterior number and stores it in the global variable ${returnedExteriorNumber}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getExteriorNumber
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - getString:
                identifier: mx.mappings.add-address-form.exteriorNumberField
                attribute: value
                storeIn: returnedExteriorNumber
          else:
            - getString:
                identifier: mx.mappings.add-address-form.exteriorNumberField
                storeIn: returnedExteriorNumber
      - log:
          message: "Displayed exterior number: ${returnedExteriorNumber}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getExteriorNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address zip code and stores it in the global variable ${returnedZipCode}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getZipCode
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - getString:
                identifier: mx.mappings.add-address-form.zipCodeField
                attribute: value
                storeIn: returnedZipCode
          else:
            - getString:
                identifier: mx.mappings.add-address-form.zipCodeField
                storeIn: returnedZipCode
      - log:
          message: "Displayed zip code: ${returnedZipCode}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getZipCode"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address state and stores it in the global variable ${returnedState}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getUserState
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - getString:
                identifier: mx.mappings.add-address-form.stateField
                attribute: value
                storeIn: returnedState
          else:
            - getString:
                identifier: mx.mappings.add-address-form.stateField
                storeIn: returnedState
      - log:
          message: "Displayed state: ${returnedState}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getState"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address city and stores it in the global variable ${returnedCity}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getUserCity
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
            - getString:
                identifier: mx.mappings.add-address-form.cityField
                attribute: value
                storeIn: returnedCity
          else:
            - getString:
                identifier: mx.mappings.add-address-form.cityField
                storeIn: returnedCity
      - log:
          message: "Displayed city: ${returnedCity}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getUserCity"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the address municipality and stores it in the global variable ${returnedMunicipality}.
  # AUTHOR: Brenda Robles (vn577kg)
  - name: mx.functions.add-address-form.getUserMunicipality
    flow:
      - if:
          condition: ${APP_PLATFORM} == 'ios'
          then:
          - getString:
              identifier: mx.mappings.add-address-form.municipalityField
              attribute: value
              storeIn: returnedMunicipality
          else:
          - getString:
              identifier: mx.mappings.add-address-form.municipalityField
              storeIn: returnedMunicipality
      - log:
          message: "Displayed municipality: ${returnedMunicipality}"
          color: CYAN
      - log:
          message: "End function: add-address-form.getUserMunicipality"
          color: BLUE