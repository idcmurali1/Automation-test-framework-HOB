#======================================================================================================================
#    AUTHOR: Isis Rojas Tolentino (vn53dge)
#   CREATED: Oct/17/2022
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # Description: Scrolls up until WalmartPass section is displayed on home.
  - name: mx.functions.home.scrollUpToWPBanner
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: mx.mappings.home.wpBannerContainer
          position: center
          scrollLimit: 8

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: Scrolls down until WalmartPass section is displayed on home.
  - name: mx.functions.home.scrollDownToWPBanner
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.home.wpBannerContainer
          position: center
          scrollLimit: 8

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: Scrolls up until promotions carousel is displayed on home.
  - name: mx.functions.home.scrollUpToPromotionsCarousel
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: mx.mappings.home.promotionsCarouselContainer
          position: center
          scrollLimit: 8

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: Scrolls up until the given carousel name is displayed on home
  # Param: ${carouselName}  [Mandatory]  Name of the carousel to scroll into home.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.scrollUpToCarousel
    platform: ios
    flow:
      - scroll:
          direction: up
          untilIdentifier: mx.mappings.home.carouselNameTitle
          position: center
          scrollLimit: 8

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: Scrolls down until the given carousel name is displayed on home
  # Param: ${carouselName}  [Mandatory]  Name of the carousel to scroll into home.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  # AUTHOR: ???
  # EDITOR: Francisco Ramirez (vn53vq4)
  - name: mx.functions.home.scrollDownToCarousel
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.home.carouselNameTitle
          position: center
          scrollLimit: 20

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function gets the carousel name
  # Author: Gustavo Lopez
  # Param returned: ${returnedCarouselName}
  # Editor: Osmar Juárez (vn56dce)
  - name: mx.functions.home.getCarouselName
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.home.carousel.titleContainer
          storeIn: returnedCarouselName
      - log:
          message: "End function: 'mx.functions.home.getCarouselName'"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function moves up a specific section
  - name: mx.functions.home.moveSectionToTop
    platform: ios
    flow:
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.home.carouselNameTitle
          position: up
          scrollLimit: 3
      - log:
          message: "End function: 'mx.functions.home.moveSectionToTop'"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function click on wp banner.
  - name: mx.functions.home.wp-banner.tapBanner
    platform: ios
    flow: 
      - click: 
          identifier: mx.mappings.home.wpBannerContainer

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function clicks on the given option into "most popular" section
  # Param: ${mostPopularOption}  [Mandatory]  Name of the option to be clicked.
   # mostPopularOption examples:
  #     - Artículos para el hogar y autos
  #     - Juguetería
  #     - Electrónica
  #     - Ropa y zapatería
  #     - Carne y pescado
  #     - Farmacia
  - name: mx.functions.home.most-popular-section.tapOption
    platform: ios
    flow:
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.most-popular-section.optionButton
      - click: 
          identifier: mx.mappings.home.most-popular-section.optionButton

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function clicks on current promotion inside Promotions Carousel.
  - name: mx.functions.home.promotions-carousel.tapCurrentPromotion
    platform: ios
    flow: 
      - click: 
          identifier: mx.mappings.home.promotionsCarouselContainer

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls left inside promotions carousel.
  - name: mx.functions.home.promotions-carousel.swipeLeft
    platform: ios
    flow:
      - scroll:
          direction: left
          withinIdentifier: mx.mappings.home.promotionsCarouselContainer
          scrollLimit: 1

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls right inside promotions carousel.
  - name: mx.functions.home.promotions-carousel.swipeRight
    platform: ios
    flow:
      - scroll:
          direction: right
          withinIdentifier: mx.mappings.home.promotionsCarouselContainer
          scrollLimit: 1


  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts the expected promotion is displayed.
  # Param: ${promotionName}  [Mandatory]  Name of the promotion expected to be displayed.
  # promotionName examples:
  #     - Cabello que luce
  #     - Envíos ilimitados
  #     - ¡Frescura y el mejor precio!
  #     - Bonificación de $100
  #     - Nuevo integrante Griego
  - name: mx.functions.home.most-popular-section.assertPromotionDisplayed
    platform: ios
    flow:
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.most-popular-section.promotionTitle

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls left completely inside any carousel.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel to scroll into home.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.carousel.scrollLeftCompletely
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 6
          mode: increment
          flow:
            - scroll:
                withinIdentifier: mx.mappings.home.carousel.carouselContainerByName
                direction: right
                wait: 500

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls right completely inside any carousel.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel to scroll into home.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.carousel.scrollRightCompletely
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 6
          mode: increment
          flow:
            - scroll:
                withinIdentifier: mx.mappings.home.carousel.carouselContainerByName
                direction: left
                wait: 500

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls right inside carousel until given product.
  # Param: ${productName}  [Mandatory]  Name of the product.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel containing the product.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.carousel.scrollRightToProduct
    platform: ios
    flow:
      - scroll:
          direction: left
          untilIdentifier: mx.mappings.home.carousel.productNameByCarouselName
          withinIdentifier: mx.mappings.home.carousel.carouselContainerByName
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.carousel.productNameByCarouselName

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function scrolls left inside carousel until given product.
  # Param: ${productName}  [Mandatory]  Name of the product.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel containing the product.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.carousel.scrollLeftToProduct
    platform: ios
    flow:
      - scroll:
          direction: right
          untilIdentifier: mx.mappings.home.carousel.productNameByCarouselName
          withinIdentifier: mx.mappings.home.carousel.carouselContainerByName
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.carousel.productNameByCarouselName

  #--------------------------------------------------------------------------------------------------------------------
  # Description: This function gets the quantity as pieces
  - name: mx.functions.home.carousel.getProductQuantityAsPieces
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.home.carousel.piecesQuantity
          attribute: name
          storeIn: quantity
      - log: ${quantity} pieces of ${productName} has been added to cart

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function clicks on add to favorites button inside carousel in home.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to favorites.
  - name: mx.functions.home.carousel.markProductAsFavorite
    platform: ios
    flow: 
      - click: 
          identifier: mx.mappings.home.carousel.favoriteHeartButtonByName

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function clicks on remove from favorites button inside carousel in home.
  # Param: ${productName}  [Mandatory]  Name of the product to be removed from favorites.
  - name: mx.functions.home.carousel.unmarkProductAsFavorite
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.home.carousel.markedFavoritesHeartButton
          then:
            - click:
                identifier: mx.mappings.home.carousel.markedFavoritesHeartButton
          else:
            - failTest:
                message: "Product is not already in favorites!"

  #--------------------------------------------------------------------------------------------------------------------
                  
  # Description: This function gets the quantity as weight
  # Param: ${productName}  [Mandatory]  Name of the product.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel containing the product.
  # carouselName examples:
  #     - Mi Belleza
  #     - Ahorrar es una realidad
  #     - ¡Recibe hoy mismo!
  #     - Panadería
  #     - Lácteos
  #     - Dulces y botanas
  #     - Electrónica
  #     - Hogar
  #     - Más opciones para ti
  #     - Los básicos del hogar
  - name: mx.functions.home.carousel.getProductQuantityAsWeight
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.home.carousel.weightQuantity
          attribute: name
          storeIn: quantity
      - log: ${quantity} of ${productName} has been added to cart

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: This function (only) scrolls down into the given carousel, then searches right-wise within it for the
  #   product to be added to Cart, and finally adds it to Cart.
  # PARAMS:
  #     ${carouselType}  [Mandatory]  Type of the carousel to scroll down into. Options: [ Regular | Sponsored ]
  #     ${carouselName}  [Mandatory]  Name of the carousel to scroll down into.
  #     ${productName}   [Mandatory]  Name of the product to be added to Cart (accepts partial name).
  # AUTHOR: ?????
  # EDITOR(S): Sergio Fernandez (vn0t1qt), Francisco Ramirez (vn53vq4)
  - name: mx.functions.home.carousel.addProductToCart
    platform: ios
    flow:
      - log:
          message: "Carousel Name: '${carouselName}'"
          color: CYAN
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Carousel Type: '${carouselType}'"
          color: CYAN
      # Check for available carousel options    
      - if:
          condition: ${carouselType} != 'Regular' && ${carouselType} != 'Sponsored'
          then:
            - failTest:
                message: "Failure: Provided 'carouselType' is invalid: '${carouselType}'"
      # Scroll down to carousel
      - executeFunction:
          name: mx.functions.home.scrollDownToCarousel #--PARAM--${carouselName}
      - if:
          condition: ${carouselType} == 'Regular'
          then:     
            - loop:
                begin: 0
                end: 20
                flow:
                  - if:
                      identifier:
                        notPresent:
                          - identifier: mx.mappings.home.regular-carousel.addToCartButtonByCarouselAndProductName #--PARAMS--${carouselName}--${productName}
                      then:
                        - scroll:
                            direction: left # In R2, horizontal scroll is treated as swipe, not scroll (swipe left to scroll right)
                            scrollLimit: 10
                            withinIdentifier: mx.mappings.home.regular-carousel.productsContainerByCarouselName #--PARAM--${carouselName}
                      else:
                        - storeIn:
                            key: productFound
                            value: true
                        - break: true 
          else:
              - if:
                  condition: ${carouselType} == 'Sponsored'
                  then:
                    - storeIn:
                        key: productFound
                        value: false
                    - loop:
                        begin: 0
                        end: 20
                        flow:
                          - if:
                              identifier:
                                notPresent:
                                  - identifier: mx.mappings.home.sponsored-carousel.addToCartButtonByCarouselAndProductName #--PARAMS--${carouselName}--${productName}
                              then:
                                - scroll:
                                    direction: left # In R2, horizontal scroll is treated as swipe, not scroll (swipe left to scroll right)
                                    scrollLimit: 10
                                    withinIdentifier: mx.mappings.home.sponsored-carousel.productsContainerByCarouselName #--PARAM--${carouselName}
                              else:
                                - storeIn:
                                    key: productFound
                                    value: true
                                - break: true
      # Check if product was found or not to add it to Cart...
      - if:
          condition: ${productFound} == false
          then:
            - failTest:
                message: "Function Failure: Product not found when scrolling right inside the carousel."
          else:
            - click:
                identifier: mx.mappings.home.regular-carousel.addToCartButtonByCarouselAndProductName #--PARAMS--${carouselName}--${productName}
            - sleep:
                duration: 5000
      - log:
          message: "End function: home.carousel.addProductToCart"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is a helper for increaseProductQuantityBy function.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to cart.
  - name: mx.functions.home.carousel.increaseProductQuantityHelper
    platform: ios
    flow:
      - click: 
          identifier: mx.mappings.home.carousel.mainButtonByProductName
      - click:
          identifier: mx.mappings.home.carousel.increaseButtonByProductName

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function clicks on increment product quantity inside Carousel. 
  # Note: This function only increments the quantity after the product is already added to cart at least once.
  # Param: ${quantity}  [Mandatory]  number of times to increment the product quantity.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to cart.
  - name: mx.functions.home.carousel.increaseProductQuantityBy
    platform: ios
    flow:     
      - loop:
          begin: 0
          end: ${quantity}
          mode: increment
          flow:
            - executeFunction:
                name: mx.functions.home.carousel.increaseProductQuantityHelper

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function is a helper for decrementProductQuantityBy function.
  # Param: ${productName}  [Mandatory]  Name of the product to be added to cart.
  - name: mx.functions.home.carousel.decreaseProductQuantityHelper
    platform: ios
    flow:
      - click: 
          identifier: mx.mappings.home.carousel.mainButtonByProductName
      - click:
          identifier: mx.mappings.home.carousel.decreaseButtonByProductName

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function clicks on decrement button of a product quantity inside some Carousel. 
  # Note: This function only decrease the quantity after the product is already added to cart at least once.
  # Param: ${quantity}     [Mandatory]  number of times to decrement the product quantity.
  #        ${productName}  [Mandatory]  name of the product to decrement items.
  # Editor: Osmar Juárez (vn56dce)
  - name: mx.functions.home.carousel.decreaseProductQuantityBy
    platform: ios
    flow:     
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - log:
          message: "Quantity to decrease: ${quantity}"
          color: CYAN
      - executeFunction:
          name: mx.functions.utils.extractElementCoordinates # --RETURNS--${x}--${y}--Coordinates-->
          params:
            - name: element
              string: mx.mappings.home.carousel.mainButtonByProductName # <--PARAMS--${productName}
      # Adjusting element coordinates to click the decrement button relative to the collapsed main button.
      - arithmetic:
          expression: ${x} + 5
          storeIn: x1
      - arithmetic:
          expression: ${y} + 5
          storeIn: y1
      # The first click expands the button so we can show and reach the increase button and the second performs the decrements.
      - click:
          identifier: mx.mappings.home.carousel.mainButtonByProductName # <--PARAMS--${productName}
      - click:
          coordinates: ${x1}, ${y1}
          numberOfClicks: ${quantity}
          waitBetweenClicks: 10
      # This waits for the button to collapse, so function can be used exactly before its increase variation.
      - sleep:
          duration: 3000
      - log:
          message: "End function: mx.functions.home.carousel.decreaseProductQuantityBy"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function switches product to pieces.
  # Param: ${productName}  [Mandatory]  Name of the product to be switched to pieces.
  - name: mx.functions.home.carousel.switchProductToPieces
    platform: ios
    flow: 
      - fetchPageSource: false
      - click: 
          identifier: mx.mappings.home.carousel.mainButtonByProductName
      - click: 
          identifier: mx.mappings.home.carousel.piecesButtonByProductName
      - fetchPageSource: true

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function switches product to weight.
  # Param: ${productName}  [Mandatory]  Name of the product to be switched to weight.
  - name: mx.functions.home.carousel.switchProductToWeight
    platform: ios
    flow: 
      - fetchPageSource: false
      - click: 
          identifier: mx.mappings.home.carousel.mainButtonByProductName
      - click: 
          identifier: mx.mappings.home.carousel.weightButtonByProductName
      - fetchPageSource: true

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${productName}  [Mandatory]  Name of the product to get the price.
  # AUTHOR: Octavio Cabrales (?????)
  # EDITOR: Sergio Fernandez (vn0t1qyt)
  - name: mx.functions.home.carousel.getProductPrice
    platform: ios
    flow:
      - log:
          message: 'Product Name: "${productName}"'
          color: CYAN
      - getString:
          identifier: mx.mappings.home.carousel.productPriceByProductName
          attribute: label
          storeIn: returnedPrice
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceStringIncludingCommas.js
          args:
            - value: ${returnedPrice}
          getResponse:
            storeIn: returnedPrice
      - log:
          message: 'Price Got: "${returnedPrice}"'
          color: CYAN
      - log:
          message: 'End function: mx.functions.home.carousel.getProductPrice'
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function set the type of product selected on carousel and saves it in the global variable ${productType}
  # Param: ${productName}  [Mandatory]  Name of the product to get the price.
  - name: mx.functions.carousel.getProductType
    platform: ios
    flow:
      - click:
          identifier: mx.mappings.home.carousel.mainButtonByProductName
      - if:
          identifier: 
              present: 
                - identifier: mx.mappings.home.carousel.piecesAndWeightButtonByProductName
          then:
              - storeIn:
                  key: productType
                  value: "Dual"
              - log: "The product ${productName} is ${productType}"
          else:
              - if:
                  identifier:
                    present:
                        - identifier: mx.mappings.home.carousel.labelWeightByProductName
                    notPresent:
                        - identifier: mx.mappings.home.carousel.piecesAndWeightButtonByProductName
                  then:
                      - storeIn:
                          key: productType
                          value: "Weighable"
                      - log: "The product ${productName} is ${productType}"
                  else:
                    - storeIn:
                          key: productType
                          value: "Pieces"
                    - log: "The product ${productName} is ${productType}"  

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts carousel displayed.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel.
  - name: mx.functions.home.assertCarouselDisplayed
    platform: ios
    flow:
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.carousel.carouselContainerByName

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts specific product displayed.
  # Param: ${productName}  [Mandatory]  Name of the product.
  # Param: ${carouselName}  [Mandatory]  Name of the carousel containing the product.
  - name: mx.functions.home.assertProductDisplayed
    platform: ios
    flow:
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.carousel.productNameByCarouselName

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts products are displayed.
  - name: mx.functions.home.assertProductsDisplayed
    platform: ios
    flow:
      - verifyIdentifier: 
          present: 
            - identifier: mx.mappings.home.carousel.productsContainer

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts product is added to cart.
  # Param: ${productName}  [Mandatory]  Name of the product.
  - name: mx.functions.home.carousel.assertProductAddedToCart
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.home.carousel.agregarLabelByProductName
          then:
            - log: 
                message: "End function: home.carousel.assertProductAddedToCart"
                color: BLUE
          else:
            - failTest:
                message: "The product was not added to cart"

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This function asserts product is not added to cart.
  # Params: ${productName} [Mandatory]  Name of the Product
  - name: mx.functions.home.carousel.assertProductNotAddedToCart
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.home.carousel.agregarLabelByProductName
          then:
            - log: "The product was not added to cart"
          else:
            - failTest:
                message: "The product was added to cart"
                
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts the product quantity as pieces.
  # Param: ${productName} [Mandatory]  Name of the Product
  # Param: ${expectedQuantityAsPieces} [Mandatory] quantity of pieces to assert
  - name: mx.functions.home.carousel.assertProductQuantityAsPieces
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.home.carousel.productQuantityAsPiecesOnContainer
          then:
            - log: "The product got the expected pieces"
          else:
            - failTest:
                message: "Verify if the product was added to cart or is a weighable product"

#--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts the product quantity as weight.
  # Param: ${productName} [Mandatory]  Name of the Product
  # Param: ${expectedQuantityAsWeight} [Mandatory] quantity weight to assert (just the number)
  - name: mx.functions.home.carousel.assertProductQuantityAsWeight
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.home.carousel.productQuantityAsWeightOnContainer
          then:
            - log: "The product got the expected weight"
          else:
            - failTest:
                message: "Check if the product was added to cart or is a pieces product"

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function opens the first product's PDP of a specific carousel
  # Param: ${carouselName} [Mandatory]  Casousel name
  - name: mx.functions.home.carousel.openFirstPdpDisplayedOnCarousel
    platform: ios
    flow:
      - log:
          message: "Carousel name: ${carouselName}"
          color: CYAN
      - click:
          identifier: mx.mappings.home.carousel.firstProductContainerOnCarousel
          ignoreException: true
      - log:
          message: "End function: home.carousel.openFirstPdpDisplayedOnCarousel"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # !!! TODO: This function must be re-worked to properly center elements within the screen as R2's scroll:center does not work properly.
  # DESCRIPTION: Scrolls into the desired Regular Carousel. This function doesn't work for other type of carousels.
  # PARAMS:  ${carouselName}  [Mandatory]  Name of the Regular Carousel to scroll down into.
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.home.carousel.scrollDownToRegularCarousel
    platform: ios
    flow:
      - log:
          message: "Carousel Name: '${carouselName}'"
          color: CYAN
      # Scroll down to the carousel name if not displayed...
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.home.regular-carousel.carouselName # <--PARAM--${carouselName}
          then:
            - scroll:
                direction: down
                untilIdentifier: mx.mappings.home.regular-carousel.carouselName # <--PARAM--${carouselName}
                position: center
                scrollLimit: 20
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.home.regular-carousel.carouselName # <--PARAM--${carouselName}
      # Scroll down to products container to center it vertically...
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.home.regular-carousel.productsContainerByCarouselName # <--PARAM--${carouselName}
          position: center
          scrollLimit: 1
      # Check if there is at least 1 Add to Cart or Quantity button...
      - if:
          identifier:
            present:
              - identifier: mx.mappings.home.regular-carousel.anyAddToCartOrQuantityButtonByCarouselName # <--PARAM--${carouselName}
          then: # If there is, scroll down to it to center it vertically...
            - scroll:
                direction: down
                untilIdentifier: mx.mappings.home.regular-carousel.anyAddToCartOrQuantityButtonByCarouselName # <--PARAM--${carouselName}
                position: center
                scrollLimit: 1
          else: # If there isn't (due to OOS products showing up), scroll down to any product image to center it vertically...
            - scroll:
                direction: down
                untilIdentifier: mx.mappings.home.regular-carousel.anyProductImageByCarouselName # <--PARAM--${carouselName}
                position: center
                scrollLimit: 1
      - log:
          message: "End function: home.carousel.scrollDownToRegularCarousel"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function opens a product's PDP by its name.
  # Param: ${productName}  [Mandatory]  Product to open its PDP.
  - name: mx.functions.home.openProductDetailsByName
    platform: ios
    flow:
      - log:
          message: "Product name: ${productName}"
          color: CYAN
      - click:
          identifier: mx.mappings.home.productContainerByName
      - log:
          message: "End function: home.openProductDetailsByName"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: This function gets the product name of the first product in a given carousel.
  # PARAM: ${carouselName} [Mandatory] name of the carousel in which we need to get the first porfuct name
  # RETURN: ${displayedProductNameInCarousel} first product name displayed in given carousel
  # AUTHOR: Osmar Juárez (vn56dce)
  - name: mx.functions.home.carousel.getFirstProductName
    platform: ios
    flow:
      - storeIn:
          key: index
          value: 1
      - getString:
          identifier: mx.mappings.home.carousel.productNameLabelInCarousel # PARAM: --${carouselName}--${index}--
          attribute: label
          storeIn: displayedProductNameInCarousel
      - log:
          message: "First Displayed Product in caorusel '${carouselName}': '${displayedProductNameInCarousel}'"
          color: CYAN
      - log:
          message: "End function: mx.functions.home.carousel.getFirstProductName"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: this function scrolls in home until find some carousel centered at home screen. Scroll limit is 7.
  # AUTHOR: Osmar Juárez (vn56dce)
  - name: mx.functions.home.scrollDownUntilSomeCarousel
    platform: ios
    flow:
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.home.genericCarouselView
          then:
            - log:
                message: "No carousel is displayed in current view. proceed to scroll down 5 times until found"
                color: YELLOW
            - scroll:
                direction: down
                withinIdentifier: mx.mappings.home.pageContainer
                untilIdentifier: mx.mappings.home.carousel.titleContainer
                position: center
                scrollLimit: 7
                wait: 1000
      - verifyIdentifier:
         displayed:
           - identifier: mx.mappings.home.genericCarouselView
             value: "true"
      - log:
          message: "End function: mx.functions.home.scrollDownUntilSomeCarousel"
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: Assert text in add to cart button of a product in Sponsored Carousel
  # PARAMS: ${expectedTextInATCButton}   Expected string to assert in ATC button.
  #         ${productIndex}              Product index to validate ATC.
  #         ${isQuantityAssertion}       Flag to manage case when assertion text is to validate quantity text in stepper.
  # AUTHOR: Osmar Juárez (vn56dce)
  - name: mx.functions.home.sponsored-carousel.assertTextInAddToCartButtonByIndex
    platform: ios
    flow:
      - log:
          message: "Expected text in ATC button: '${expectedTextInATCButton}'"
          color: CYAN
      - if: 
         condition: ${isQuantityAssertion} == true
         then:
           - getString:
              identifier: mx.mappings.home.sponsored-carousel.anyProductAddToCartQuantityButton
              storeIn: displayedTextInATCButton
              attribute: label
              index: ${productIndex}
         else:
           - getString:
              identifier: mx.mappings.home.sponsored-carousel.anyProductAddToCartButton
              storeIn: displayedTextInATCButton
              attribute: label
              index: ${productIndex}
      - log:
          message: "Current extracted displayed text in ATC button: '${displayedTextInATCButton}'"
          color: CYAN
      - verifyCondition: "${displayedTextInATCButton} == ${expectedTextInATCButton}"
      - log:
          message: "End function: sponsored-carousel.assertTextInAddToCartButtonByIndex"
          color: BLUE