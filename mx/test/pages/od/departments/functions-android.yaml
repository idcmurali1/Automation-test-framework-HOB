#======================================================================================================================
#  AUTHOR: Francisco Javier Ramírez Hernández (vn53vq4)
#  CREATED: Jan/05/2023
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # Description: This function scrolls down until department by name
  # Param: ${departmentName} [Mandatory]  Name of the department
  - name: mx.functions.departments.scrollDownToDepartment
    platform: android
    flow: 
      - log:
          message: "Scrolls down until find department with name: ${departmentName}"
          color: CYAN
      - scroll:
          direction: down
          untilIdentifier: mx.mappings.departments.departmentByName
          withinIdentifier: mx.mappings.departments.departmentsContainer
          position: center
          wait: 4000
          scrollLimit: 2
  
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function scrolls up until department by name
  # Param: ${departmentName} [Mandatory]  Name of the department
  - name: mx.functions.departments.scrollUpToDepartment
    platform: android
    flow: 
      - log:
          message: "Scrolls up until find department with name: ${departmentName}"
          color: CYAN
      - scroll:
          direction: up
          untilIdentifier: mx.mappings.departments.departmentByName
          withinIdentifier: mx.mappings.departments.departmentsContainer
          position: center
          scrollLimit: 2

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function selects a department by name
  # Param: ${departmentName} [Mandatory]  Name of the department
  - name: mx.functions.departments.selectDepartment
    platform: android
    flow:
      - log:
          message: "Department Name: ${departmentName}"
          color: CYAN
      - executeFunction:
          name: mx.functions.bottom-menu.hideBottomMenu
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.departments.departmentByName # <--PARAM--${departmentName}
          then:
            - scroll:
                untilIdentifier: mx.mappings.departments.departmentByName # <--PARAM--${departmentName}
                position: center
                direction: down
                scrollLimit: 3
                wait: 1000
      - click:
          identifier: mx.mappings.departments.departmentByName # <--PARAM--${departmentName}
      - log:
          message: "End function: departments.selectDepartment"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function returns the departments count.
  - name: mx.functions.departments.getDepartmentsCount
    platform: android
    flow: 
      - log:
          message: "Getting the departments count...."
          color: CYAN
      - numberOfChildElements:
          identifier: mx.mappings.departments.departmentsContainer
          storeIn: returnedDepartmentsCount
          filterBy: mx.mappings.departments.categoryCount
      - log:
          message: There are ${returnedDepartmentsCount} departments.
          color: CYAN

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function selects a department by position.
  # Param: ${departmentIndex} [Mandatory]  Position of the department
  - name: mx.functions.departments.selectDepartmentByPosition
    platform: android
    flow: 
      - log:
          message: "Selecting the department on position: ${departmentIndex}"
          color: CYAN
      - click:
          identifier: mx.mappings.departments.departmentByIndex
      - log:
          message: "Department on position: ${departmentIndex} is selected!"
          color: CYAN
    
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function returns the name of the selected department by position ( ${returnedDeparmentName ).
  # Param: ${departmentIndex} [Mandatory]  Position of the department
  - name: mx.functions.departments.getDepartmentNameByPosition
    platform: android
    flow: 
      - log:
          message: "Getting the deparment name of the store on the position: ${departmentIndex}"
          color: CYAN
      - getString:
          identifier: mx.mappings.departments.categoryNameByIndex
          attribute: text
          storeIn: returnedDeparmentName
      - log:
          message: "The department on position ${departmentIndex} is: ${returnedDeparmentName}!"
          color: CYAN

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method asserts departments by name is displayed
  # Param: ${departmentName} [Mandatory]  Name of the department
  - name: mx.functions.departments.assertDepartmentDisplayed
    platform: android
    flow: 
      - log:
          message: Validating that department ${departmentName} is displayed...
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.departments.departmentByName
      - log:
          message: The department ${departmentName} displayed successfully!
          color: CYAN    

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method asserts departments count
  - name: mx.functions.departments.assertDepartmentNotDisplayed
    platform: android
    flow: 
      - log:
          message: Validating that department ${departmentName} is not displayed...
          color: CYAN
      - verifyIdentifier:
          notPresent:
            - identifier: mx.mappings.departments.departmentByName
      - log:
          message: The department ${departmentName} is not displayed!
          color: CYAN       

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method asserts department count
  # Param: ${expectedDepartmentCount} [Mandatory]  Deparment expected count
  - name: mx.functions.departments.assertDepartmentsCount
    platform: android
    flow: 
      - log:
          message: Validating that department count is equals than the expected...
          color: CYAN
      - numberOfChildElements:
          identifier: mx.mappings.departments.departmentsContainer
          storeIn: returnedDepartmentsCount
          filterBy: mx.mappings.departments.categoryCount
      - log:
          message: The returned department count is ${returnedDepartmentsCount}, now validating with the expected count...
          color: CYAN
      - verifyValue: 
          identifier: ${returnedDepartmentsCount}
          equals: ${expectedDepartmentCount} 
      - log:
          message: The department count matched!
          color: CYAN   
            