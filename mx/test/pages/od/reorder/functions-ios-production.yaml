#======================================================================================================================
#  AUTHOR: Gustavo Antonio Lopez Cambambia (vn53g21)
#  CREATED: Oct/02/2023
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function gets the counter of all the products contained in reorder page and store it in ${returnedAllProductsQuantity}
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.getAllProductsQuantity
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.reorder.allProductsCounter
          attribute: value
          storeIn: returnedAllProductsQuantity
      - executeNode:
          file: mx/test/helpers/reorder/cleanTotalProductsQuantity.js
          args:
            - value: ${returnedAllProductsQuantity}
          getResponse:
            storeIn: returnedAllProductsQuantity
      - log:
          message: "All products quantity got: ${returnedAllProductsQuantity}"
          color: BLUE
      - log:
          message: "End function: mx.functions.reorder.getAllProductsQuantity"
          color: BLUE

  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function add the first three products contained in reorder page and store the products names in 
  # ${returnedProductName1},${returnedProductName2} and ${returnedProductName3} with them respectives prices stored in 
  # ${returnedProductPrice1}, ${returnedProductPrice2} and ${returnedProductPrice1}
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.addFirstThreeProductsToCart
    platform: ios
    flow:
      - loop:
          begin: 1
          end: 4
          storeIndex: i
          mode: increment
          flow:
            - getString:
                identifier: mx.mappings.reorder.productNameByIndex
                attribute: label
                storeIn: returnedProductName
            - if:
                condition: ${i} == 1
                then:
                  - storeIn:
                      key: returnedProductName1
                      value: ${returnedProductName}
            - if:
                condition: ${i} == 2
                then:
                  - storeIn:
                      key: returnedProductName2
                      value: ${returnedProductName}
            - if:
                condition: ${i} == 3
                then:
                  - storeIn:
                      key: returnedProductName3
                      value: ${returnedProductName}
            - executeFunction:
                name: mx.functions.reorder.getProductUnitPriceByIndex
                params:
                  - name: i
                    string: ${i}
            - click:
                identifier: mx.mappings.reorder.addToCartButtonByIndex
            - executeFunction:
                name: mx.functions.reorder.getProductTypeByIndex
            - if:
                condition: ${returnedProductType} == 'Dual'
                then:
                  - executeFunction:
                      name: mx.functions.reorder.switchProductToWeight
                  - storeIn:
                      key: isQuantityWeight
                      value: "true"
                  - if:
                      identifier:
                        notPresent:
                          - identifier: mx.mappings.reorder.weighableProductByIndex
                      then:
                        - executeFunction:
                            name: mx.functions.reorder.switchProductToWeight
            - executeFunction:
                name: mx.functions.reorder.getProductQuantityByIndex
            - executeNode:
                file: mx/test/helpers/utils/calculateProductSubtotal.js
                args:
                  - value: ${returnedUnitProductPrice}
                  - value: ${returnedProductQuantity}
                  - value: "${isQuantityWeight}"
                getResponse:
                  storeIn: returnedCalculatedProductSubTotal
            - if:
                condition: ${i} == 1
                then:
                  - storeIn:
                      key: returnedProductPrice1
                      value: ${returnedCalculatedProductSubTotal}
            - if:
                condition: ${i} == 2
                then:
                  - storeIn:
                      key: returnedProductPrice2
                      value: ${returnedCalculatedProductSubTotal}
            - if:
                condition: ${i} == 3
                then:
                  - storeIn:
                      key: returnedProductPrice3
                      value: ${returnedCalculatedProductSubTotal}  
      - log:
          message: "Product name 1 got: '${returnedProductName1}' with price: '${returnedProductPrice1}'"
          color: CYAN
      - log:
          message: "Product name 1 got: '${returnedProductName2}' with price: '${returnedProductPrice2}'"
          color: CYAN
      - log:
          message: "Product name 1 got: '${returnedProductName3}' with price: '${returnedProductPrice3}'"
          color: CYAN
      - log:
          message: "End function: mx.functions.reorder.addFirstThreeProductsToCart"
          color: BLUE

  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function gets the product quantity especified in param
  # NOTE: The index param supports only 6 items contained in focus
  # PARAM: ${i} [Mandatory]  Product quantiy to increase
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.getProductQuantityByIndex
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.reorder.quantityTextByIndex
          attribute: value
          storeIn: returnedProductQuantity
      - executeNode:
          file: mx/test/helpers/utils/sanitizeQuantity.js
          args:
            - value: ${returnedProductQuantity}
          getResponse:
            storeIn: returnedProductQuantity
      - log:
          message: "Product quantity got: ${returnedProductQuantity}"
          color: CYAN
      - log:
          message: "End function: mx.functions.reorder.getProductQuantityByIndex"
          color: BLUE
      
  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function gets the product unit price especified in param
  # NOTE: The index param supports only 6 items contained in focus
  # PARAM: ${i} [Mandatory]  Product quantiy to increase
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.getProductUnitPriceByIndex
    platform: ios
    flow: 
      - getString:
          identifier: mx.mappings.reorder.unitProductPriceByIndex
          attribute: label
          storeIn: returnedUnitProductPrice
      - executeNode:
                file: mx/test/helpers/slp/sanitizePrice.js
                args:
                  - value: ${returnedUnitProductPrice}
                getResponse:
                  storeIn: returnedUnitProductPrice
      - log:
          message: "Unit product price got: ${returnedUnitProductPrice}"
          color: CYAN
      - log:
          message: "End function: mx.functions.reorder.getProductUnitPriceByIndex"
          color: BLUE

  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function gets the product type especified in param
  # NOTE: The index param supports only 6 items contained in focus
  # PARAM: ${i} [Mandatory]  Product quantiy to increase
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.getProductTypeByIndex
    platform: ios
    flow: 
      - click:
          identifier: mx.mappings.reorder.quantityTextByIndex
      - if:
          identifier:
            present:
              - identifier: mx.mappings.reorder.UOMSelectorByIndex
          then:
            - storeIn:
                key: returnedProductType
                value: Dual
          else:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.reorder.weighableProductByIndex
                then:
                  - storeIn:
                      key: returnedProductType
                      value: Weight
                  - storeIn:
                      key: isQuantityWeight
                      value: 'true'
                else:
                  - storeIn:
                      key: returnedProductType
                      value: Pieces
                  - storeIn:
                      key: isQuantityWeight
                      value: 'false'
      - log:
          message: "Product type got: ${returnedProductType}"
          color: CYAN
      - log:
          message: "End function: mx.functions.reorder.getProductTypeByIndex"
          color: BLUE

  # -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function change the product type to weight based in the index specified in param
  # NOTE: The index param supports only 6 items contained in focus
  # PARAM: ${i} [Mandatory]  Product quantiy to increase
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.reorder.switchProductToWeight
    platform: ios
    flow: 
      - click:
          identifier: mx.mappings.reorder.quantityTextByIndex
      - executeFunction:
          name: mx.functions.utils.clickByCoordinatesRelativeToElement
          params:
            - name: relativeElement
              string: mx.mappings.reorder.quantityTextByIndex
            - name: modifyValueX
              string: '50'
            - name: modifyValueY
              string: '50'
      - log:
          message: "End function: mx.functions.reorder.switchProductToWeight"
          color: BLUE
          
# -------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function gets the product name especified in param
  # NOTE: The index param supports only 6 items contained in focus
  # PARAM: ${i} [Mandatory]  Product in grid to select
  # AUTHOR: Pablo Aguilar Huerta (vn57i2p)
  - name: mx.functions.reorder.getProductNameByIndex
    platform: ios
    flow: 
      - getString:
          identifier: mx.mappings.reorder.productNameByIndex
          attribute: label
          storeIn: returnedProductName
      - log:
          message: "Product name got: ${returnedProductName}"
          color: CYAN
      - log:
          message: "End function: mx.functions.reorder.getProductNameByIndex"
          color: BLUE

#--------------------------------------------------------------------------------------------------------------------
# DESCRIPTION: This function clicks on add product to cart inside carousel into departments l1-l2 using index to add products.
# PARAM: ${indexProduct}  [Mandatory]  Index of the product to be added to cart. # TODO: change variable name to ${productIndex} for android and iOS
# AUTHOR: Osmar Juárez (vn56dce)
  - name: mx.functions.reorder.addProductToCartByIndex
    flow:
      - log:
          message: "Product index for add to cart: '${indexProduct}'"
          color: CYAN
      - click:
          identifier: mx.mappings.reorder.addToCartButtonByIndex
      - log:
          message: "End function: mx.functions.reorder.addProductToCartByIndex"