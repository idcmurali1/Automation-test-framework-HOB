#======================================================================================================================
#  AUTHOR: Rodrigo Pacheco Cámara (vn53p0i)
#  CREATED: Oct/20/2022
#  REVISION: ---
#
#  Copyright © 2022 Walmart. All rights reserved.
#======================================================================================================================

functions:

  - name: mx.functions.top-menu.tapEraseSearch
    platform: ios
    flow:
      - click:
          identifier: mx.mappings.top-menu.eraseSearchButton

  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.top-menu.tapCancel
    platform: ios
    flow:
      - click:
          identifier: mx.mappings.top-menu.cancelButton

  # -------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.top-menu.isCartIconEmpty
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.top-menu.emptyCartIcon
          then:
            - storeIn:
                key: isCartIconEmpty
                value: true
          else:
            - storeIn:
                key: isCartIconEmpty
                value: false
      - log:
          message: "'isCartIconEmpty' = '${isCartIconEmpty}'."
          color: CYAN
      - log:
          message: "End function: top-menu.isCartIconEmpty"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Clicks the desired search term from the recent search terms list, defined by ${recentSearchName}.
  # Param: ${recentSearchName} [Mandatory] Search term to click on the recent search terms list.
  - name: mx.functions.top-menu.recent-searches.tapRecentSearch
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.top-menu.recent-searches.recentSearchesContainer
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.top-menu.recent-searches.recentSearchByName
                then:
                  - click:
                      identifier: mx.mappings.top-menu.recent-searches.recentSearchByName
                else:
                  - failTest:
                      message: "Expected recent search name not found."
          else:
            - failTest:
                message: "List of recent searches is empty or not displayed."

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Clicks the desired search term from the recent search terms list. Defined by ${expectedPosition}.
  # Starts from 1 onwards, being 1 the first position of the recent searches list and ignores suggestions.
  # Param: ${expectedPosition} [Mandatory] Expected position of desired search term.
  - name: mx.functions.top-menu.recent-searches.tapRecentSearchByPosition
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.top-menu.recent-searches.recentSearchesContainer
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.top-menu.recent-searches.recentSearchByPosition
                then:
                  - click:
                      identifier: mx.mappings.top-menu.recent-searches.recentSearchByPosition
                else:
                  - failTest:
                      message: "Expected position not found."
          else:
            - failTest:
                message: "List of recent search terms is empty or not displayed."

  #--------------------------------------------------------------------------------------------------------------------

  # NOTE: This mapping ignores all the suggestions and only verifies if recent searches are displayed.
  - name: mx.functions.top-menu.recent-searches.assertRecentSearchesDisplayed
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.top-menu.recent-searches.recentSearchesContainer

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Clicks the desired search suggestion from the suggestions list, defined by ${suggestionName}.
  # Param: ${suggestionName} [Mandatory] Suggestion to click on the list that appears after typing a search term.
  - name: mx.functions.top-menu.search-suggestions.tapSuggestion
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.top-menu.search-suggestions.suggestionsContainer
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.top-menu.search-suggestions.suggestionByName
                then:
                  - click:
                      identifier: mx.mappings.top-menu.search-suggestions.suggestionByName
                else:
                  - failTest:
                      message: "Expected suggestion name not found."
          else:
            - failTest:
                message: "List of suggestions is not displayed."

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Clicks the desired search suggestion from the suggestions list defined by ${expectedPosition}.
  # Documentation: There must be a search term already typed in the search bar in order to display the suggestions.
  # If the typed search term has been previously used to perform a search a "recent search" suggestion will 
  # be displayed along with the search suggestions. The mapping "suggestionsContainer" ignores the displayed 
  # Recent Search Suggestions (if displayed) so ${expectedPosition} should start from 1 onwards, being 1 the first
  # suggestion of the list.
  # Param: ${expectedPosition} [Mandatory] Expected position of desired suggestion.
  - name: mx.functions.top-menu.search-suggestions.tapSuggestionByPosition
    platform: ios
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.top-menu.search-suggestions.suggestionsContainer
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.top-menu.search-suggestions.suggestionByPosition
                then:
                  - click:
                      identifier: mx.mappings.top-menu.search-suggestions.suggestionByPosition
                else:
                  - failTest:
                      message: "Expected position not found."
          else:
            - failTest:
                message: "List of suggestions is not displayed."

  #--------------------------------------------------------------------------------------------------------------------

  # NOTE: This mapping ignores all the recent searches and only verifies if suggestions are displayed.
  - name: mx.functions.top-menu.search-suggestions.assertSuggestionsDisplayed
    platform: ios
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.top-menu.search-suggestions.suggestionsContainer

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method returns the summary subtotal from the cart icon.
  # RETURNS: ${returnedSummarySubtotal}
  # AUTHOR: Isis Tolentino (vn53dge)
  - name: mx.functions.top-menu.getSubtotalFromCartIcon
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.top-menu.cartIconSubtotal
          attribute: value
          storeIn: returnedSummarySubtotal
      - executeNode:
          file: mx/test/helpers/slp/sanitizePrice.js
          args:
            - value: ${returnedSummarySubtotal}
          getResponse:
            storeIn: returnedSummarySubtotal
      - log:
          message: "The summary subtotal is: ${returnedSummarySubtotal}"
          color: CYAN
      - log:
          message: "End function: top-menu.getSubtotalFromCartIcon"
          color: BLUE
