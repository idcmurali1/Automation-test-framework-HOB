#======================================================================================================================
#  AUTHOR: Rodrigo Pacheco Cámara (vn53p0i)
#  CREATED: Feb/10/2023
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # Description: This method taps on back button
  - name: mx.functions.store-selector-popup.tapBack
    platform: android
    flow:
      - click:
          identifier: mx.mappings.store-selector-popup.backButton

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method taps on close button
  - name: mx.functions.store-selector-popup.tapClose
    platform: android
    flow:
      - click:
          identifier: mx.mappings.store-selector-popup.closeButton
  
  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.store-selector-popup.clearCurrentZipCode
    platform: android
    flow:
      - enterText:
          identifier: mx.mappings.store-selector-popup.zipcodeField
          string: ""
          clearField: true
      - log:
          message: "End function: store-selector-popup.clearCurrentZipCode"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  - name: mx.functions.store-selector-popup.tapUseCurrentLocation
    platform: android
    flow:
      - click:
          identifier: mx.mappings.store-selector-popup.useCurrentLocationButton
      - log:
          message: "End function: store-selector-popup.tapUseCurrentLocation"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # Description: This method taps on address by position
  # Param ${storeIndex} [Mandatory] Index of the desired store to select.
  # Note: Consider the index range (from 0 to 6), 
  # The availability depends of the device screen dimentions and how many elements are displayed on the screen.
  # Note 2: The index of the elements doesn't increase, so the first element displayed on the screen always will be index 0.
  - name: mx.functions.store-selector-popup.selectStoreByPosition
    platform: android
    flow:
          - log:
              message: "Selecting store on position: ${storeIndex}"
              color: CYAN
          - if:
              identifier:
                present:
                  - identifier: mx.mappings.store-selector-popup.storeByIndex                      
              then:
                - log:
                      message: "Address in position ${storeIndex} was found!"
                      color: CYAN
                - click:
                    identifier: mx.mappings.store-selector-popup.storeByIndex
                - executeFunction:
                    name: mx.functions.store-selector-popup.tapSave
                - break: true
              else:
                  - failTest:
                      message: "The store with index ${storeIndex} was not found!"

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects a random store
  - name: mx.functions.store-selector-popup.selectRandomStore
    platform: android
    flow:
      - loop:
           begin: 0
           end: 20      
           storeIndex: j
           mode: increment
           flow:
            - executeNode:
                  file: mx/test/helpers/utils/getRandomInt.js
                  args:
                    - value: 0
                    - value: 5
                  getResponse:
                    storeIn: storeIndex
            - log: 
               message: "Looking for a store with index: ${storeIndex}"
               color: WHITE_BOLD
            - if:
                identifier:
                    present:
                      - identifier: mx.mappings.store-selector-popup.storeByIndex                      
                then:
                    - log:
                          message: "Store found! Selecting store with index: ${storeIndex}"
                          color: CYAN
                    - click:
                        identifier: mx.mappings.store-selector-popup.storeByIndex
                    - break: true
                else:
                  - log:
                     message: "Element with index: ${storeIndex} not found, generating a new random number"
                     color: YELLOW_BOLD_BRIGHT

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects the first Walmart OD store listed
  - name: mx.functions.store-selector-popup.selectFirstODStore
    platform: android
    flow:
      - if: 
          identifier:
            present:
              - identifier: mx.mappings.address-selector-popup.firstODStore
          then:
            - log:
                message: Selecting first OD store available!
                color: CYAN
            - click:
               identifier: mx.mappings.address-selector-popup.firstODStore            
          else:
              - scroll:
                  direction: down
                  untilIdentifier: mx.mappings.address-selector-popup.firstODStore
                  withinIdentifier: mx.mappings.address-selector-popup.addressesContainer
                  position: center
              - click:
                  identifier: mx.mappings.address-selector-popup.firstODStore        

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects the first Walmart XP store listed
  - name: mx.functions.store-selector-popup.selectFirstXPStore
    platform: android
    flow:
      - if: 
          identifier:
            present:
              - identifier: mx.mappings.address-selector-popup.firstXPStore
          then:
            - log:
                message: Selecting first XP store available!
                color: CYAN
            - click:
               identifier: mx.mappings.address-selector-popup.firstXPStore        
          else:
              - scroll:
                  direction: down
                  untilIdentifier: mx.mappings.address-selector-popup.firstXPStore
                  withinIdentifier: mx.mappings.address-selector-popup.addressesContainer
                  position: center
              - click:
                  identifier: mx.mappings.address-selector-popup.firstXPStore 

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects a random OD store
  - name: mx.functions.store-selector-popup.selectRandomODStore
    platform: android
    flow:
      - loop:
           begin: 0
           end: 20
           storeIndex: j
           mode: increment
           flow:
            - executeNode:
                  file: mx/test/helpers/utils/getRandomInt.js
                  args:
                    - value: 0
                    - value: 4
                  getResponse:
                    storeIn: odRandomStoreIndex
            - log: 
               message: "Looking for an OD store with index: ${odRandomStoreIndex}"
               color: WHITE_BOLD
            - if:
                identifier:
                    present:
                      - identifier: mx.mappings.address-selector-popup.firstODStoreByIndex
                then:
                    - log:
                          message: "Store found! Selecting store with index: ${odRandomStoreIndex}"
                          color: CYAN
                    - click:
                        identifier: mx.mappings.address-selector-popup.firstODStoreByIndex
                    - break: true
                else:
                  - log:
                     message: "There is no OD store with index: ${odRandomStoreIndex}, trying with the next random store index!"
                     color: YELLOW_BOLD_BRIGHT

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method returns the name of the selected store.
  - name: mx.functions.store-selector-popup.getSelectedStoreName
    platform: android
    flow:
      - log:
          message: "Getting the name of the selected store... "
          color: CYAN
      - getString:
          identifier: mx.mappings.store-selector-popup.selectedStoreName
          attribute: text
          storeIn: returnedStoreName
      - log:
          message: "The returned Walmart store name is: ${returnedStoreName}"
          color: CYAN

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: ?????
  # EDITOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.store-selector-popup.getSelectedStoreAddress
    platform: android
    flow:
      - getString:
          identifier: mx.mappings.store-selector-popup.selectedStoreAddress
          attribute: text
          storeIn: returnedStoreAddress
      - log:
          message: "Selected Store Address got: '${returnedStoreAddress}'"
          color: CYAN
      - log:
          message: "End function: store-selector-popup.getSelectedStoreAddress"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method returns the banner of the selected store.
  # AUTHOR: ???
  # EDITOR: Rodrigo Pacheco (vn53p0i)
  # RETURNS: ${returnedBanner}
  - name: mx.functions.store-selector-popup.getSelectedStoreBanner
    platform: android
    flow:
      - log:
          message: "Getting the banner of the selected store... "
          color: CYAN
      - getString:
          identifier: mx.mappings.store-selector-popup.selectedStoreBanner
          attribute: text
          storeIn: returnedBanner
      - log:
          message: "Returned Banner: ${returnedBanner}"
          color: CYAN
      - log:
          message: "End function: store-selector-popup.getSelectedStoreBanner"
          color: BLUE
          
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects a random Walmart XP store
  - name: mx.functions.store-selector-popup.selectRandomXPStore
    platform: android
    flow:
      - loop:
           begin: 0
           end: 20      
           storeIndex: j
           mode: increment
           flow:
            - executeNode:
                  file: mx/test/helpers/utils/getRandomInt.js
                  args:
                    - value: 0
                    - value: 4
                  getResponse:
                    storeIn: randomStoreIndex
            - log: 
               message: "Looking for an XP Walmart store with index: ${randomStoreIndex}"
               color: WHITE_BOLD
            - if:
                identifier:
                    present:
                      - identifier: mx.mappings.address-selector-popup.xpStoreByIndex
                then:
                    - log:
                          message: "Store found! Selecting store with index: ${randomStoreIndex}"
                          color: CYAN
                    - click:
                        identifier: mx.mappings.address-selector-popup.xpStoreByIndex
                    - break: true
                else:
                  - log:
                     message: "There is no XP Walmart store with index: ${randomStoreIndex}, trying with the next random store index!"
                     color: YELLOW_BOLD_BRIGHT

  #--------------------------------------------------------------------------------------------------------------------

  # Description: Scrolls up to store with name
  # Param ${storeName} [Mandatory] Store name
  # Note: Please first verify the order of the string for correct validation
  - name: mx.functions.store-selector-popup.scrollUpToAddress
    platform: android
    flow:
     - loop:
           begin: 0
           end: 5      
           mode: increment
           flow:
               - if:
                  identifier:
                    present:
                      - identifier: mx.mappings.store-selector-popup.storeByName
                  then: 
                    - log: 
                        message: "Store was found!"
                        color: CYAN
                    - break : true
                  else:
                      - if:
                          identifier:
                            notPresent:
                              - identifier: mx.mappings.store-selector-popup.storeByName
                          then:
                            - drag:
                                from:
                                  x: 380
                                  y: 1500
                                to:
                                  x: 380
                                  y: 1900

#--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: ?????
  # EDITOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.store-selector-popup.tapSave
    platform: android
    flow:
      - click:
          identifier: mx.mappings.store-selector-popup.saveChooseButton
      - log:
          message: "End function: store-selector-popup.tapSave"
          color: BLUE
