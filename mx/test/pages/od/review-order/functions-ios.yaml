#======================================================================================================================
#  AUTHOR: Francisco Javier Ramírez Hernández (vn53vq4)
#  CREATED: Feb/09/2023
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # Description: This method returns user's home delivery address.
  - name: mx.functions.review-order.almost-done-popup.getHomeDeliveryAddress
    platform: ios
    flow:
    - log:
        message: Getting Home delivery Address...
        color: CYAN
    - getString:
        identifier: mx.mappings.review-order.deliveryAddress
        attribute: value
        storeIn: returnedDeliveryAddress
    - log: 
        message: "End function: review-order.almost-done-popup.getHomeDeliveryAddress (Address got: ${returnedDeliveryAddress})"
        color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method returns user's delivery slot.
  - name: mx.functions.review-order.getDeliverySlot
    platform: ios
    flow:
    - log:
        message: Getting Delivery Slot label...
        color: CYAN
    - getString:
        identifier: mx.mappings.order-confirmation.deliverySlotLabel
        attribute: value
        storeIn: returnedDeliverySlot
    - log: 
        message: "End function: mx.functions.review-order.almost-done-popup.getDeliverySlot (Delivery slot got: ${returnedDeliverySlot})"
        color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION: This method scrolls up to the specified Section on param.
  #
  # PARAMS:  ${sectionName}  [Mandatory]  Name of section to scroll into (as displayed on page)
  #                                       (i.e. [ Envío a domicilio | Pickup | Método de pago | Total ] ) etc.
  # AUTHOR: Francisco Ramirez (-----)
  # EDITOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.review-order.scrollUpToSection
    platform: ios
    flow:
      - log:
          message: '[ PARAM: Section Name: "${sectionName}" ]'
          color: CYAN
      - scroll:
          direction: up
          scrollLimit: 5
          wait: 1000
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.review-order.sectionContainerByName
          then:
            - scroll:
                direction: down
                scrollLimit: 5
                wait: 1000
      - log:
          message: 'End function: mx.functions.review-order.scrollUpToSection'
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method selects the MSI promotion
  # Param ${msiPromotionOption} [Mandatory] MSI promotion of your choice 
  # (Eg. "Pagar en una sola exhibición", 3 MSI, 9 MSI, 12 MSI, 24 MSI)
  # NOTE: For android test data may differ.
  - name: mx.functions.review-order.payment-section.selectMSIPromotion
    platform: ios
    flow:
    - log:
        message: Selecting ${msiPromotionOption} MSI promotion...
        color: CYAN
    - if:
        identifier:
          present:
            - identifier: mx.mappings.review-order.msiPromotionBannerDisplayed
        then:
          - click:
              identifier: mx.mappings.review-order.expandCollapseMSIPromotionsButton
          - click:
              identifier: mx.mappings.review-order.msiPromotionOption
        else:
          - failTest:
              message: "MSI promotion is not available."
    - log:
        message: "End function: review-order.payment-section.selectMSIPromotion (Promotion ${msiPromotionOption} applied)"
        color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This method asserts the MSI promotion was applied successfully.
  # Param ${msiPromotionOption} [Mandatory] MSI promotion of your choice 
  # (Eg. "Pagar en una sola exhibición", 3 MSI, 9 MSI, 12 MSI, 24 MSI)
  - name: mx.functions.review-order.payment-section.assertMSIPromotionIsApplied
    platform: ios
    flow:
    - log:
        message: "MSI promotion option: ${msiPromotionOption}"
        color: CYAN
    - if:
        identifier:
          value:
            - identifier: mx.mappings.review-order.msiPromotionApplied
              contains: ${msiPromotionOption}
        then:
            - log:
                message: "Promotion of ${msiPromotionOption} was applied successfully."
                color: CYAN
        else:
          - failTest:
              message: "MSI promotion is not available."
    - log:
        message: "End function: review-order.payment-section.assertMSIPromotionIsApplied"
        color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function returns the estimated total price from wallet section and returns: ${returnedEstimatedTotalPrice}
  - name: mx.functions.review-order.payment-section.getEstimatedTotal
    platform: ios
    flow:
    - log:
        message: Getting the estimated total...
        color: CYAN
    - getString:
        identifier:  mx.mappings.review-order.estimatedTotalPrice
        attribute: value
        storeIn: returnedEstimatedTotalPrice
    - storeIn:
        key: estimatedTotal
        value: ${returnedEstimatedTotalPrice}
    - log:
        message: "The estimated total is: ${returnedEstimatedTotalPrice} "
        color: CYAN
    - log:
        message: "End function: review-order.payment-section.getEstimatedTotal"
        color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts whether the displayed subtotal equals the given expected subtotal.
  #                 If there are discounts, assertion will run on subtotal BEFORE discounts.
  #
  # NOTE:         This function will even work when there are discounts present, for discount assertions refer to the next functions/flows:
  #                 mx.flows.od.review-order.assertTotalsInformation
  #                 mx.functions.review-order.assertSubtotalAfterDiscount
  #                 mx.flows.od.review-order.assertSubtotalsIfThereAreDiscounts
  # PARAM:
  #   ${subtotal} [Mandatory] Expected subtotal to assert. This is the value of the full subtotal without discounts.
  # EDITOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.review-order.assertSubtotal
    platform: ios
    flow:
      - log:
          message: "Expected subtotal: '${subtotal}'"
          color: CYAN
      # Get displayed Subtotal.
      - getString:
          # This mapping gets the Subtotal value when discounts are NOT present.
          identifier: mx.mappings.review-order.subtotalValue
          storeIn: displayedSubtotal
      # Clean the subtotal obtained and log it...
      - executeNode:
           file: mx/test/helpers/utils/cleanPriceStringIncludingCommas.js
           args:
             - value: ${displayedSubtotal}
           getResponse:
               storeIn: displayedSubtotal
      - log:
          message: "Displayed Subtotal: '${displayedSubtotal}'"
          color: CYAN
      # Assert expected vs displayed...
      - if:
          condition: ${subtotal} == ${displayedSubtotal}
          then:
            - log:
                message: "Successful Assertion: Displayed Subtotal is correct"
                color: CYAN
          else:
            - failTest:
                message: "Failed Assertion: Displayed Subtotal is incorrect"
      - log:
          message: "End function: review-order.assertSubtotal"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # Description: This function asserts estimated total at the bottom of the page.
  # Param ${estimatedTotalFromBottom} [Mandatory] Estimated Total to assert.
  - name: mx.functions.review-order.assertEstimatedTotal
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.review-order.estimatedTotalPriceFromBottomLabelValue
          storeIn: returnedEstimatedTotal
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceStringIncludingCommas.js
          args:
            - value: ${returnedEstimatedTotal}
          getResponse:
            storeIn: returnedEstimatedTotal
      - if:
          condition: ${returnedEstimatedTotal} == ${estimatedTotalFromBottom}
          then:
            - log:
                message: "Successful Assertion: Estimated Total from bottom is correct!"
                color: CYAN
          else:
            - failTest:
                message: "Failed Assertion: expected $${estimatedTotalFromBottom} and got $${returnedEstimatedTotal}"
      - log:
          message: "End function: review-order.assertEstimatedTotal (Success: estimated total correct)"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
 
  # Description:
  #   This method retrieves the discount value below Subtotal BEFORE discount, returns -0.00 if there is no discount.
  # RETURNS:
  #   ${returnedDiscount}  Final discount value below Subtotal BEFORE discount (if available, else this equals '-0.00').
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.review-order.getDiscountValueInTotalsSection
    platform: ios
    flow:
      - log:
          message: Retrieving displayed discount value...
          color: CYAN
      - try:
          flow:
            - getString:
                identifier: mx.mappings.review-order.discountValue
                storeIn: returnedDiscount
            - executeNode:
                file: mx/test/helpers/utils/cleanPriceStringIncludingCommas.js
                args:
                  - value: ${returnedDiscount}
                getResponse:
                  storeIn: returnedDiscount
          catch:
            flow:
              - storeIn:
                  key: returnedDiscount
                  value: "-0.00"
      - log:
          message: "Cart Discount got: '${returnedDiscount}'"
          color: CYAN
      - log:
          message: "End function: review-order.getDiscountValueInTotalsSection"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
 
  # Description:
  #   This method asserts substitutions are not selected for any product in Review Order page.
  # NOTE:
  #   This assertion is NOT performed in substitutions popup.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.review-order.assertNoSubstitutionsSelected
    platform: ios
    flow:
      - verifyIdentifier:
          label:
            - identifier: mx.mappings.review-order.substitutesDisclaimer
              equals: "Te ofreceremos sustitutos para 0 artículos si no están disponibles."
      - log:
          message: "Assertion Succeeded: No substitutions will be offered for this order."
          color: CYAN
      - log:
          message: "End function: review-order.assertNoSubstitutionsSelected"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  #
  # DESCRIPTION: Asserts the displayed store name is correct.
  #
  # PARAMS:
  #   ${expectedStoreName}  [Mandatory]  Expected store name to assert for.
  #
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  # EDITOR: -----
  - name: mx.functions.review-order.assertStoreName
    platform: ios
    flow:
      - log:
          message: '[ PARAM: Expected Store Name: "${expectedStoreName}" ]'
          color: CYAN
      - getString:
          identifier: mx.mappings.review-order.addressName
          storeIn: displayedStoreName
      - log:
          message: 'Displayed Store Name: "${displayedStoreName}"'
          color: GREEN
      - executeNode:
          file: mx/test/helpers/utils/stringStartsWith.js
          args:
            - value: ${displayedStoreName}
            - value: ${expectedStoreName}
          getResponse:
            storeIn: startsWith
      - if:
          condition: ${startsWith} == false
          then:
            - failTest:
                message: Displayed Store Name does not start with the same Store Name in Expected Store Name.
      - log:
          message: 'End function: mx.functions.review-order.assertStoreName ( succeeded! )'
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  #
  # DESCRIPTION: Asserts the displayed store address is correct.
  #
  # PARAMS:
  #   ${expectedStoreAddress}  [Mandatory]  Expected store address to assert for.
  #
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  # EDITOR: -----
  - name: mx.functions.review-order.assertStoreAddress
    platform: ios
    flow:
      - log:
          message: '[ PARAM: Expected Store Address: "${expectedStoreAddress}" ]'
          color: CYAN
      - getString:
          identifier: mx.mappings.review-order.deliveryAddress
          storeIn: displayedStoreAddress
      - log:
          message: 'Displayed Store Address: "${displayedStoreAddress}"'
          color: GREEN
      - executeNode:
          file: mx/test/helpers/utils/stringContains.js
          args:
            - value: ${displayedStoreAddress}
            - value: ${expectedStoreAddress}
          getResponse:
            storeIn: contains
      - if:
          condition: ${contains} == false
          then:
            - failTest:
                message: Displayed Store Address does not contain the same Address in Expected Store Address.
      - log:
          message: 'End function: mx.functions.review-order.assertStoreAddress (Success!)'
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.review-order.uncheckUpdatesByPhoneCheckbox
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.review-order.updatesByPhoneCheckbox
          attribute: value
          storeIn: isChecked
      - if:
          condition: ${isChecked} == null
          then:
            - log:
                message: Updates by Phone is already unchecked.
                color: CYAN
          else:
            - click:
                identifier: mx.mappings.review-order.updatesByPhoneCheckbox
            - if:
                condition: ${IOS_PHONE_UPDATES_OPT_OUT_WORKAROUND_IN_REVIEW_ORDER} == true
                then:
                  - log:
                      message: '[!] Opt Out Workaround enabled by flag IOS_PHONE_UPDATES_OPT_OUT_WORKAROUND_IN_REVIEW_ORDER'
                      color: YELLOW
                  - executeFunction:
                      name: mx.functions.review-order.getUpdatesByPhoneStatus
                  - if:
                      condition: ${returnedStatus} == 'checked'
                      then:
                        - click:
                            identifier: mx.mappings.review-order.updatesByPhoneCheckbox
                  - log:
                      message: 'Workaround finished'
                      color: YELLOW
            - log:
                message: Updates by Phone has been unchecked successfully.
                color: CYAN
      - log:
          message: 'End function: mx.functions.review-order.uncheckUpdatesByPhoneCheckbox'
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${expectedState}  [Mandatory]  Expected state to assert the checkbox is in.
  #                                        Values: [ checked | unchecked ].
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.review-order.assertUpdatesByPhoneCheckboxState
    platform: ios
    flow:
      - log:
          message: 'Expected State: "${expectedState}"'
          color: CYAN
      - getString:
          identifier: mx.mappings.review-order.updatesByPhoneCheckbox
          attribute: value
          storeIn: currentState
      - if:
          condition: ${currentState} == null
          then:
            - storeIn:
                key: currentState
                value: unchecked
          else:
            - storeIn:
                key: currentState
                value: checked
      - log:
          message: 'Current State: "${currentState}"'
          color: CYAN
      - if:
          condition: ${currentState} == ${expectedState}
          then:
            - log:
                message: 'Successful Assertion: expected and current states are the same.'
                color: CYAN
          else:
            - failTest:
                message: 'Failed Assertion: expected and current state are not the same.'
      - log:
          message: 'End function: mx.functions.review-order.assertUpdatesByPhoneCheckboxState'
          color: BLUE
  
  #--------------------------------------------------------------------------------------------------------------------

  # RETURNS:  ${returnedStatus}  The status of the Updates by Phone Opt In Checkbox ([ checked | unchecked ]).
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.functions.review-order.getUpdatesByPhoneStatus
    platform: ios
    flow:
      - getString:
          identifier: mx.mappings.review-order.updatesByPhoneCheckbox
          attribute: value
          storeIn: returnedStatus
      - if:
          condition: ${returnedStatus} == null
          then:
            - storeIn:
                key: returnedStatus
                value: unchecked
          else:
            - storeIn:
                key: returnedStatus
                value: checked
      - log:
          message: 'Status Got: "${returnedStatus}"'
          color: CYAN
      - log:
          message: 'End function: mx.functions.review-order.getUpdatesByPhoneStatus'
          color: BLUE
