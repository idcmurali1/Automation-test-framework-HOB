#======================================================================================================================
#    AUTHOR: Rodrigo Pacheco C. (vn53p0i)
#   CREATED: Oct/31/2023
#  REVISION: ---
#
#  Copyright © 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.orders-history.assertPageDisplayed
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.ea.orders-history.pageTitle
              - identifier: mx.mappings.ea.orders-history.ordersContainer
              - identifier: mx.mappings.ea.orders-history.backButton
          then:
            - log:
                message: "Assertion Succeeded: Orders History Page is Displayed."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Orders History Page did not Display."
      - log:
          message: "End function: orders-history.assertPageDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS:
  #   ${orderNumber}          [Mandatory]  ID of the order.
  #   ${expectedOrderStatus}  [Mandatory]  Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.orders-history.assertOrderStatus
    platform: android
    flow:
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - if:
          condition: ${expectedOrderStatus} != 'Received' && ${expectedOrderStatus} != 'Waiting4Payment' && ${expectedOrderStatus} != 'Ready4Pickup' && ${expectedOrderStatus} != 'OnTheWay' && ${expectedOrderStatus} != 'Delivered'
          then:
            - failTest:
                message: "Expected Order Status not valid. Provided Order Status: '${expectedOrderStatus}'"
      - executeNode:
          file: mx/test/helpers/orders-history/parseToOrderStatusText.js
          args:
            - value: ${expectedOrderStatus}
          getResponse:
            storeIn: orderStatus
      - log:
          message: "Expected Order Status: '${expectedOrderStatus}' (${orderStatus})"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.ea.orders-history.orderStatusByOrderNumber # <--PARAMS--${orderNumber}--${orderStatus}
      - log:
          message: "Order Status is correct!"
          color: CYAN
      - log:
          message: "End function: orders-history.assertOrderStatus"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # NOTE:   This function is ONLY for orders without multiple delivery sections.
  # PARAMS:
  #   ${orderNumber}            [Mandatory]   ID of the order.
  #   ${expectedDeliveryDate}   [Mandatory]   Delivery date to assert.
  # RETURNS:
  #   ${returnedDeliveryDate}   This is the parsed delivery date that can be used to assert the date on Order-Details page.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.orders-history.assertOrderSingleDeliveryDate
    platform: android
    flow:
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - log:
          message: "Expected Delivery Date: '${expectedDeliveryDate}'"
          color: CYAN

      # Parsing the expected Delivery Date...
      - executeNode:
          file: mx/test/helpers/orders-history/parseToOrderDeliveryDateLabelEA.js
          args:
            - value: ${expectedDeliveryDate}
          getResponse:
            storeIn: expectedDeliveryDate
      - log:
          message: "Parsed Expected Delivery Date: '${expectedDeliveryDate}'"
          color: CYAN

      # Getting the displayed Delivery Date...
      - getString:
          identifier: mx.mappings.ea.orders-history.estimatedDeliveryDateByOrderNumber # <--PARAMS--${orderNumber}
          attribute: text
          storeIn: displayedDeliveryDate
      - log:
          message: "Displayed Delivery Date: '${displayedDeliveryDate}'"
          color: CYAN

      # Comparing Expected vs Displayed...
      - if:
          condition: ${expectedDeliveryDate} == ${displayedDeliveryDate}
          then:
            - log:
                message: "Assertion Succeeded: Correct Delivery Date."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Incorrect Delivery Date."
      - storeIn:
          key: returnedDeliveryDate
          value: ${expectedDeliveryDate}
      - log:
          message: "Returned Parsed Delivery Date: '${returnedDeliveryDate}'"
          color: CYAN
      - log:
          message: "End function orders-history.assertOrderSingleDeliveryDate"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.orders-history.tapBack
    platform: android
    flow:
      - click:
          identifier: mx.mappings.ea.orders-history.backButton
      - log:
          message: "End function: orders-history.tapBack"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # PARAMS:  ${orderNumber}   [Mandatory]   ID of the order.
  #          ${productName}   [Mandatory]   Product Name to search related to order.
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)

  - name: mx.functions.ea.orders-history.assertProductInOrder
    platform: android
    flow:
      - log:
          message: "Product to Search: '${productName}'"
          color: CYAN
      - log:
          message: "Related to Order Number: '${orderNumber}'"
          color: CYAN
      - if:
          identifier:
            present:
              - identifier: mx.mappings.ea.orders-history.productImageByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--
          then:
            - log:
                message: "Product found"
                color: CYAN
          else:
             - scroll:
                direction: down
                untilIdentifier: mx.mappings.ea.orders-history.productImageByOrderNumberAndProductName
                scrollLimit: 5
                position: center
      - log:
          message: "End function: mx.functions.ea.orders-history.assertProductInOrder"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS:        ${orderNumber}   [Mandatory]   ID of the order.
  #                ${productName}   [Mandatory]   Product Name to search related to order.  
  #                ${expectedDeliveryMethod}   [Mandatory]   Delivery method to assert. Options: [ 'HomeDelivery' | 'PickupDelivery' ].
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.ea.orders-history.assertDeliveryMethodByProductAndOrderNumber
    platform: android
    flow:
      - if:
          condition: ${expectedDeliveryMethod} != 'HomeDelivery' && ${expectedDeliveryMethod} != 'PickupDelivery'
          then:
            - failTest:
                message: "Invalid Delivery Method Option provided: '${expectedDeliveryMethod}'"
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Assert For: '${expectedDeliveryMethod}'"
          color: CYAN

      # Home Delivery Assertion...
      - if:
          condition: ${expectedDeliveryMethod} == 'HomeDelivery'
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.ea.orders-history.homeDeliveryMethodByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--${expectedDeliveryMethod}--
                then:
                  - log:
                      message: "Assertion Succeeded: Home Delivery Method is Selected."
                      color: CYAN
                else:
                  - failTest:
                      message: "Failed: Home Delivery Method is not Selected."

      # Pickup Delivery Assertion...
      - if:
          condition: ${expectedDeliveryMethod} == 'PickupDelivery'
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.ea.orders-history.pickUpDeliveryMethodByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--${expectedDeliveryMethod}--
                then:
                  - log:
                      message: "Assertion Succeeded: Pickup Delivery Method is Selected for product"
                      color: CYAN
                else:
                  - failTest:
                      message: "Failed: Pickup Delivery Method is not Selected."
      - log:
          message: "End function mx.functions.ea.orders-history.assertDeliveryMethodByProductAndOrderNumber"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS:        ${orderNumber}    [Mandatory]   ID of the order.
  #                ${productName}   [Mandatory]   Product Name to search related to order. 
  #                ${expectedOrderStatus}   [Mandatory]  Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.ea.orders-history.assertStatusByProductAndOrderNumber
    platform: android
    flow:
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - if:
          condition: ${expectedOrderStatus} != 'Received' && ${expectedOrderStatus} != 'Waiting4Payment' && ${expectedOrderStatus} != 'Ready4Pickup' && ${expectedOrderStatus} != 'OnTheWay' && ${expectedOrderStatus} != 'Delivered'
          then:
            - failTest:
                message: "Expected Order Status not valid. Provided Order Status: '${expectedOrderStatus}'"
      - executeNode:
          file: mx/test/helpers/orders-history/parseToOrderStatusText.js
          args:
            - value: ${expectedOrderStatus}
          getResponse:
            storeIn: orderStatus
      - log:
          message: "Expected Order Status: '${expectedOrderStatus}' (${orderStatus})"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.ea.orders-history.productStatusByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--${orderStatus}--
      - log:
          message: "Order Status is correct!"
          color: CYAN
      - log:
          message: "End function: orders-history.assertStatusByProductAndOrderNumber"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------

  # PARAMS:
  #   ${orderNumber}            [Mandatory]   ID of the order.
  #   ${expectedDeliveryDate}   [Mandatory]   Delivery date to assert.
  # RETURNS:
  #   ${returnedDeliveryDate}   This is the parsed delivery date that can be used to assert the date on Order-Details page.
  # AUTHOR: Gustavo (vn53p0i)
  - name: mx.functions.ea.orders-history.assertDeliveryDateByProductAndOrderNumber
    platform: android
    flow:
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - log:
          message: "Expected Delivery Date: '${expectedDeliveryDate}'"
          color: CYAN

      # Parsing the expected Delivery Date...
      - executeNode:
          file: mx/test/helpers/orders-history/parseToOrderDeliveryDateLabelEA.js
          args:
            - value: ${expectedDeliveryDate}
          getResponse:
            storeIn: expectedDeliveryDate
      - log:
          message: "Parsed Expected Delivery Date: '${expectedDeliveryDate}'"
          color: CYAN

      # Getting the displayed Delivery Date...
      - getString:
          identifier: mx.mappings.ea.orders-history.estimatedDeliveryDateByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--
          attribute: text
          storeIn: displayedDeliveryDate
      - log:
          message: "Displayed Delivery Date: '${displayedDeliveryDate}'"
          color: CYAN

      # Comparing Expected vs Displayed...
      - if:
          condition: ${expectedDeliveryDate} == ${displayedDeliveryDate}
          then:
            - log:
                message: "Assertion Succeeded: Correct Delivery Date."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Incorrect Delivery Date."
      - storeIn:
          key: returnedDeliveryDate
          value: ${expectedDeliveryDate}
      - log:
          message: "Returned Parsed Delivery Date: '${returnedDeliveryDate}'"
          color: CYAN
      - log:
          message: "End function mx.functions.ea.orders-history.assertDeliveryDateByProductAndOrderNumber"
          color: BLUE

 #--------------------------------------------------------------------------------------------------------------------

  # PARAMS:
  #   ${orderNumber}            [Mandatory]   ID of the order.
  #   ${expectedProductsCount}  [Mandatory]   Expected total quantity of specified product
  # AUTHOR: Gustavo Antonio López Cambambia (vn53g21)
  - name: mx.functions.ea.orders-history.assertProductsCountByProductAndOrderNumber
    platform: android
    flow:
      - log:
          message: "Order Number: '${orderNumber}'"
          color: CYAN
      - log:
          message: "Expected products count: '${expectedProductsCount}'"
          color: CYAN

      # Retrieving and parsing the displayed quantity...
      - getString:
          identifier: mx.mappings.ea.orders-history.productCountByOrderNumberAndProductName # <--PARAMS--${productName}--${orderNumber}--${expectedProductsCount}--
          storeIn: displayedQuantity
      - executeNode:
          file: mx/test/helpers/utils/sanitizeQuantity.js
          args:
            - value: ${displayedQuantity}
          getResponse:
            storeIn: displayedQuantity
      - log:
          message: "Displayed Products Count: '${displayedQuantity}'"
          color: CYAN

      # Comparing the expected vs the displayed...
      - if:
          condition: ${expectedProductsCount} == ${displayedQuantity}
          then:
            - log:
                message: "Assertion Succeeded: Products Count is correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Products Count is not correct."
      - log:
          message: "End function: orders-history.assertProductsCountByProductAndOrderNumber"
          color: BLUE
