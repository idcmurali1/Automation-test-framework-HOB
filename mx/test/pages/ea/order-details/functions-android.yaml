#======================================================================================================================
#    AUTHOR: Rodrigo Pacheco C. (vn53p0i)
#   CREATED: Nov/01/2023
#  REVISION: ---
#
#  Copyright Â© 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # DESCRIPTION:  This function asserts the correct order has been opened.
  # PARAM:        ${expectedOrderNumber}  [Mandatory]  Order number to assert.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertCorrectOrderDisplayed
    platform: android
    flow:
      - log:
          message: "Expected Order Number: '${expectedOrderNumber}'"
          color: CYAN

      # Get and parse displayed Order Number...
      - getString:
          identifier: mx.mappings.ea.order-details.orderNumber
          extractNumbers: true
          attribute: text
          storeIn: displayedOrderNumber
      - log:
          message: "Displayed Order Number: '${displayedOrderNumber}'"
          color: GREEN_BOLD

      # Comparing expected vs displayed...
      - if:
          condition: ${expectedOrderNumber} == ${displayedOrderNumber}
          then:
            - log:
                message: "Assertion Succeeded: Correct Order Page Displayed."
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Failed: Incorrect Order Page Displayed."
      - log:
          message: "End function: order-details.assertCorrectOrderDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  
  # PARAM:  ${expectedOrderedDate}  [Mandatory]   Expected Ordered Date, obtained from this function's returned value:
  #                                                 mx.functions.ea.review-order.tapPlaceOrder
  # Note:   This value must be obtained exactly when the order is placed, otherwise there could be errors
  #           during SauceLabs and Looper executions.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertOrderedDate
    platform: android
    flow:
      - log:
          message: "Expected Ordered Date: '${expectedOrderedDate}'"
          color: CYAN

      # Get displayed Ordered Date...
      - getString:
          identifier: mx.mappings.ea.order-details.orderedDate
          storeIn: displayedOrderedDate
      - log:
          message: "Displayed Ordered Date: '${displayedOrderedDate}'"
          color: CYAN

      # Comparing expected vs displayed...
      - if:
          condition: ${expectedOrderedDate} == ${displayedOrderedDate}
          then:
            - log:
                message: "Assertion Succeeded: Ordered date is correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Ordered date is incorrect."
      - log:
          message: "End function: order-details.assertOrderedDate"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Order's Delivery Method is correct. Only for orders with single deliveries.
  # PARAM:        ${expectedDeliveryMethod}   [Mandatory]   Expected selected delivery method (Input: [ HomeDelivery | PickupDelivery ]).
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertDeliveryMethodForSingleDelivery
    platform: android
    flow:
      - if:
          condition: ${expectedDeliveryMethod} != 'HomeDelivery' && ${expectedDeliveryMethod} != 'PickupDelivery'
          then:
            - failTest:
                message: "Invalid Delivery Method Option provided: '${expectedDeliveryMethod}'"
      - log:
          message: "Assert For: '${expectedDeliveryMethod}'"
          color: CYAN

      # Home Delivery Assertion...
      - if:
          condition: ${expectedDeliveryMethod} == 'HomeDelivery'
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.ea.order-details.homeDeliveryIsSelected
                then:
                  - log:
                      message: "Assertion Succeeded: Home Delivery Method is Selected."
                      color: CYAN
                else:
                  - failTest:
                      message: "Failed: Home Delivery Method is not Selected."

      # Pickup Delivery Assertion...
      - if:
          condition: ${expectedDeliveryMethod} == 'PickupDelivery'
          then:
            - if:
                identifier:
                  present:
                    - identifier: mx.mappings.ea.order-details.pickupDeliveryIsSelected
                then:
                  - log:
                      message: "Assertion Succeeded: Pickup Delivery Method is Selected."
                      color: CYAN
                else:
                  - failTest:
                      message: "Failed: Pickup Delivery Method is not Selected."
      - log:
          message: "End function: order-details.assertDeliveryMethodForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${expectedOrderStatus}  [Mandatory]  Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  # NOTE:   Only for orders with single deliveries.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertStatusForSingleDelivery
    platform: android
    flow:
      - if:
          condition: ${expectedOrderStatus} != 'Received' && ${expectedOrderStatus} != 'Waiting4Payment' && ${expectedOrderStatus} != 'Ready4Pickup' && ${expectedOrderStatus} != 'OnTheWay' && ${expectedOrderStatus} != 'Delivered'
          then:
            - failTest:
                message: "Expected Order Status not valid. Provided Order Status: '${expectedOrderStatus}'"
      - executeNode:
          file: mx/test/helpers/orders-history/parseToOrderStatusText.js
          args:
            - value: ${expectedOrderStatus}
          getResponse:
            storeIn: orderStatus
      - log:
          message: "Expected Order Status: '${expectedOrderStatus}' (${orderStatus})"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.ea.order-details.orderStatus # <--PARAMS--${orderStatus}
      - log:
          message: "Assertion Succeeded: Order Status is correct."
          color: CYAN
      - log:
          message: "End function: order-details.assertStatusForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # NOTE:   This function is ONLY for orders with single deliveries.
  # PARAM:  ${expectedDeliveryDate}   [Mandatory]   Delivery date to assert.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertDeliveryDateForSingleDelivery
    platform: android
    flow:
      - log:
          message: "Expected Delivery Date: '${expectedDeliveryDate}'"
          color: CYAN

      # Getting the displayed Delivery Date...
      - getString:
          identifier: mx.mappings.ea.order-details.estimatedDeliveryDate
          attribute: text
          storeIn: displayedDeliveryDate
      - log:
          message: "Displayed Delivery Date: '${displayedDeliveryDate}'"
          color: CYAN

      # Comparing Expected vs Displayed...
      - if:
          condition: ${expectedDeliveryDate} == ${displayedDeliveryDate}
          then:
            - log:
                message: "Assertion Succeeded: Correct Delivery Date."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Incorrect Delivery Date."
      - log:
          message: "End function orders-history.assertDeliveryDateForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This method asserts the Home Delivery Address NAME and not the actual address.
  # NOTE:         This function is ONLY for orders with single deliveries.
  # PARAM         ${expectedHomeAddressName} [Mandatory] Address Name to validate.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertHomeAddressNameForSingleDelivery
    platform: android
    flow:
      - log:
          message: "Expected Home Address Name: '${expectedHomeAddressName}'"
          color: CYAN
      - if:
          identifier:
            text:
              - identifier: mx.mappings.ea.order-details.homeAddressName
                equals: ${expectedHomeAddressName}
          then:
            - log:
                message: "Assertion Succeeded: Correct Home Address Name."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Incorrect Home Address Name."
      - log:
          message: "End function order-details.assertHomeAddressNameForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This method verifies the selected store Name.
  # NOTE:         Pickup Delivery must be selected in order to perform assertion correctly.
  # NOTE:         This function is ONLY for orders with single deliveries.
  # PARAM:        ${expectedStoreName}  [Mandatory]   Expected Store Name.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertStoreNameForSingleDelivery
    platform: android
    flow:
      - log:
          message: "Expected Store Name: '${expectedStoreName}'"
          color: CYAN

      # Retrieving displayed Address...
      - getString:
          identifier: mx.mappings.ea.order-details.storeAddress
          storeIn: displayedAddress
      - executeNode:
          file: mx/test/helpers/order-details/removeNewLineFromStoreAddress.js
          args:
            - value: ${displayedAddress}
          getResponse:
            storeIn: displayedAddress
      - log:
          message: "Displayed Address (Store Name should be contained inside this string): '${displayedAddress}'"
          color: CYAN

      # Comparing expected vs displayed...
      - if:
          identifier:
            text:
              - identifier: mx.mappings.ea.order-details.storeAddress
                contains: ${expectedStoreName}
          then:
            - log:
                message: "Assertion Succeeded: Store Name is displayed."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Store Name is not displayed."
      - log:
          message: "End function: order-details.assertStoreNameForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This method verifies the selected store address by full string.
  # NOTE:         Pickup Delivery must be selected in order to perform assertion correctly.
  # NOTE:         This function is ONLY for orders with single deliveries.
  # PARAM:        ${addressFullString}  [Mandatory]   Full string containing the address to be validated. The displayed
  #                                                     string contains a "New Line" character, when you pass the value
  #                                                     obtained from inspector, remove this new line without adding any
  #                                                     extra spaces or anything at all, just remove the new line.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertStoreAddressByFullStringForSingleDelivery
    platform: android
    flow:
      - log:
          message: "Expected Store Address Full String: '${addressFullString}'"
          color: CYAN

      # Retrieving displayed Address...
      - getString:
          identifier: mx.mappings.ea.order-details.storeAddress
          storeIn: displayedAddress
      - executeNode:
          file: mx/test/helpers/order-details/removeNewLineFromStoreAddress.js
          args:
            - value: ${displayedAddress}
          getResponse:
            storeIn: displayedAddress
      - log:
          message: "Displayed Address: '${displayedAddress}'"
          color: CYAN

      # Comparing expected vs displayed...
      - if:
          condition: ${addressFullString} == ${displayedAddress}
          then:
            - log:
                message: "Assertion Succeeded: Store Address by Full String is correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Store Address by Full String is not correct."
      - log:
          message: "End function: order-details.assertStoreAddressByFullStringForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This method verifies the selected user address by full string.
  # NOTE:         Home Delivery must be selected in order to perform assertion correctly.
  # NOTE:         This function is ONLY for orders with single deliveries.
  # PARAM:        ${addressFullString}  [Mandatory]  Full string containing the address to be validated.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertHomeAddressByFullStringForSingleDelivery
    platform: android
    flow:
      - log:
          message: "Expected Address Full String: '${addressFullString}'"
          color: CYAN

      # Retrieving displayed Address...
      - getString:
          identifier: mx.mappings.ea.order-details.homeAddress
          storeIn: displayedAddress
      - log:
          message: "Displayed Address: '${displayedAddress}'"
          color: CYAN

      # Comparing expected vs displayed...
      - if:
          condition: ${addressFullString} == ${displayedAddress}
          then:
            - log:
                message: "Assertion Succeeded: Home Address by Full String is correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Home Address by Full String is not correct."
      - log:
          message: "End function: order-details.assertHomeAddressByFullStringForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This method verifies the selected user address by its individual values.
  # NOTE:         Home Delivery must be selected in order to perform assertion correctly.
  # PARAMS:
  #               ${streetName}       [Mandatory]   Name of the street to be validated.
  #               ${exteriorNumber}   [Mandatory]   Exterior number to be validated.
  #               ${city}             [Mandatory]   City to be validated.
  #               ${state}            [Mandatory]   State to be validated.
  #               ${zipCode}          [Mandatory]   ZIP Code to be validated.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.assertHomeAddressByIndividualValuesForSingleDelivery
    platform: android
    flow:
      # Using '\e[36m' to print in CYAN and '\e[0m' to reset color, to simplify logs.
      - log: "\e[36mExpected StreetName: '${streetName}'\e[0m"
      - log: "\e[36mExpected ExteriorNumber: '${exteriorNumber}'\e[0m"
      - log: "\e[36mExpected City: '${city}'\e[0m"
      - log: "\e[36mExpected State: '${state}'\e[0m"
      - log: "\e[36mExpected ZipCode: '${zipCode}'\e[0m"

      # Retrieving displayed Address...
      - getString:
          identifier: mx.mappings.ea.order-details.homeAddress
          storeIn: displayedAddress
      - log:
          message: "Displayed Address: '${displayedAddress}'"
          color: CYAN

      # Assertion by Individual Values...
      - executeNode:
          file: mx/test/helpers/utils/stringContainsAll.js
          args:
            - value: ${displayedAddress}
            - value: ${streetName}, ${exteriorNumber}, ${city}, ${state}, ${zipCode}
          getResponse:
            storeIn: isAddressCorrect
      - if:
          condition: ${isAddressCorrect} == true
          then:
            - log:
                message: "Home Address by individual values is correct."
                color: CYAN
          else:
            - failTest:
                message: "Expected Home address not contained in: '${displayedAddress}'"
      - log:
          message: "End function: order-details.assertHomeAddressByIndividualValuesForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # NOTE: If the order has multiple deliveries, the mappings won't be able to determine which section to expand and may not expand the desired product section.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.functions.ea.order-details.expandProductsDetailsIfNotExpandedForSingleDelivery
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.ea.order-details.expandProductDetailsSectionButton
          then:
            - click:
                identifier: mx.mappings.ea.order-details.expandProductDetailsSectionButton
      - log:
          message: "End function: order-details.expandProductsDetailsIfNotExpandedForSingleDelivery"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # PARAMS: ${productName}  [Mandatory]  Name of the certain product.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertProductDisplayed
    platform: android
    flow:
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.ea.order-details.productByName # <--PARAM--${productName}
      - log:
          message: "Assertion Succeeded: Product is Listed."
          color: CYAN
      - log:
          message: "End function: order-details.assertProductDisplayed"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed product's unit price for the given product name.
  # PARAMS:       ${productName}        [Mandatory]  Product name to assert for.
  #               ${expectedUnitPrice}  [Mandatory]  Expected unit price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertProductUnitPrice
    platform: android
    flow:
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Expected Unit Price: '${expectedUnitPrice}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.productUnitPriceByProductName # <--PARAM--${productName}
          storeIn: displayedUnitPrice
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedUnitPrice}
          getResponse:
              storeIn: displayedUnitPrice
      - log:
          message: "Displayed Unit Price: '${displayedUnitPrice}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedUnitPrice} == ${expectedUnitPrice}
          then:
            - log:
                message: "Assertion Succeeded: Unit Price is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Unit Price is not Correct."
      - log:
          message: "End function: order-details.assertProductUnitPrice"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed product ordered quantity for the given product name.
  # PARAMS:       ${productName}        [Mandatory]  Product name to assert for.
  #               ${expectedQuantity}   [Mandatory]  Product ordered quantity to assert for.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertProductOrderedQuantity
    platform: android
    flow:
      - log:
          message: "Product Name: '${productName}'"
          color: CYAN
      - log:
          message: "Expected Ordered Quantity: '${expectedQuantity}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.productOrderedQuantityByProductName # <--PARAM--${productName}
          storeIn: displayedQuantity
      - executeNode:
          file: mx/test/helpers/utils/sanitizeQuantity.js
          args:
            - value: ${displayedQuantity}
          getResponse:
              storeIn: displayedQuantity
      - log:
          message: "Displayed Ordered Quantity: '${displayedQuantity}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedQuantity} == ${expectedQuantity}
          then:
            - log:
                message: "Assertion Succeeded: Ordered Quantity is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Ordered Quantity is not Correct."
      - log:
          message: "End function: order-details.assertProductOrderedQuantity"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Subtotal in the Totals section.
  # PARAMS:       ${expectedSubtotal}   [Mandatory]  Expected subtotal price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertSubtotal
    platform: android
    flow:
      - log:
          message: "Expected Subtotal: '${expectedSubtotal}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderSubtotalValue # <--PARAM--${productName}
          storeIn: displayedSubtotal
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedSubtotal}
          getResponse:
              storeIn: displayedSubtotal
      - log:
          message: "Displayed Subtotal: '${displayedSubtotal}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedSubtotal} == ${expectedSubtotal}
          then:
            - log:
                message: "Assertion Succeeded: Subtotal is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Subtotal is not Correct."
      - log:
          message: "End function: order-details.assertSubtotal"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Discount in the Totals section.
  # PARAMS:       ${expectedDiscount}   [Mandatory]  Expected discount price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertDiscount
    platform: android
    flow:
      - log:
          message: "Expected Discount: '${expectedDiscount}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderDiscountValue # <--PARAM--${productName}
          storeIn: displayedDiscount
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedDiscount}
          getResponse:
              storeIn: displayedDiscount
      - log:
          message: "Displayed Discount: '${displayedDiscount}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedDiscount} == ${expectedDiscount}
          then:
            - log:
                message: "Assertion Succeeded: Discount is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Discount is not Correct."
      - log:
          message: "End function: order-details.assertDiscount"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Delivery Discount in the Totals section.
  # PARAMS:       ${expectedDeliveryDiscount}   [Mandatory]  Expected delivery discount price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertDeliveryDiscount
    platform: android
    flow:
      - log:
          message: "Expected Delivery Discount: '${expectedDeliveryDiscount}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderDeliveryDiscountValue # <--PARAM--${productName}
          storeIn: displayedDeliveryDiscount
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedDeliveryDiscount}
          getResponse:
              storeIn: displayedDeliveryDiscount
      - log:
          message: "Displayed Delivery Discount: '${displayedDeliveryDiscount}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedDeliveryDiscount} == ${expectedDeliveryDiscount}
          then:
            - log:
                message: "Assertion Succeeded: Delivery Discount is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Delivery Discount is not Correct."
      - log:
          message: "End function: order-details.assertDeliveryDiscount"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Delivery Fee in the Totals section, if delivery discount is found, function will perform a fix on the expected delivery fee value in order to run the correct assertion in the UI.
  # PARAMS:       ${expectedDeliveryFee}  [Mandatory]  Expected delivery fee price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertDeliveryFee
    platform: android
    flow:
      - log:
          message: "Expected Delivery Fee: '${expectedDeliveryFee}'"
          color: CYAN

      # Getting and parsing displayed Delivery Fee value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderDeliveryFeeValue # <--PARAM--${productName}
          storeIn: displayedDeliveryFee
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedDeliveryFee}
          getResponse:
              storeIn: displayedDeliveryFee
      - log:
          message: "Displayed Delivery Fee: '${displayedDeliveryFee}'"
          color: GREEN_BOLD

      # Getting and parsing displayed Delivery Discount value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderDeliveryDiscountValue # <--PARAM--${productName}
          storeIn: displayedDeliveryDiscount
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedDeliveryDiscount}
          getResponse:
              storeIn: displayedDeliveryDiscount
      - log:
          message: "Displayed Delivery Discount: '${displayedDeliveryDiscount}'"
          color: GREEN_BOLD

      # Calculating Full Delivery Fee cost...
      - if:
          condition: ${displayedDeliveryDiscount} != 0.00
          then:
            - log:
                message: "Delivery Discount found, fixing expected Delivery Fee for correct assertion..."
                color: GREEN_BOLD
            - arithmetic:
                expression: ${expectedDeliveryFee} + ${displayedDeliveryDiscount}
                storeIn: expectedDeliveryFee
                numberOfDecimalPlaces: 2
          else:
            - log:
                message: "Delivery Discount not found, no need to fix expected Delivery Fee for correct assertion..."
                color: GREEN_BOLD

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedDeliveryFee} == ${expectedDeliveryFee}
          then:
            - log:
                message: "Assertion Succeeded: Delivery Fee is Correct."
                color: GREEN_BOLD
          else:
            - failTest:
                message: "Failed: Delivery Fee is not Correct."
      - log:
          message: "End function: order-details.assertDeliveryFee"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # RETURNS:  ${returnedIsProductSoldAndFulfilledByWalmart}   Can be true or false.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.checkIfProductIsSoldAndFulfilledByWalmart
    platform: android
    flow:
      - if:
          identifier:
            present:
              - identifier: mx.mappings.ea.order-details.soldAndFulfilledByWalmartLabel
          then:
            - log:
                message: "Product is sold and fulfilled by Walmart, returning 'true'."
                color: GREEN_BOLD
            - storeIn:
                key: returnedIsProductSoldAndFulfilledByWalmart
                value: true
          else:
            - log:
                message: "Product is not sold and fulfilled by Walmart, returning 'false'."
                color: GREEN_BOLD
            - storeIn:
                key: returnedIsProductSoldAndFulfilledByWalmart
                value: false
      - log:
          message: "End function: order-details.checkIfProductIsSoldAndFulfilledByWalmart"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Asserts the displayed Total in the Totals section.
  # PARAM:        ${expectedTotal}  [Mandatory]  Expected total price.
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertTotal
    platform: android
    flow:
      - log:
          message: "Expected Total: '${expectedTotal}'"
          color: CYAN

      # Getting and parsing displayed value...
      - getString:
          identifier: mx.mappings.ea.order-details.orderTotalValue # <--PARAM--${productName}
          storeIn: displayedTotal
      - executeNode:
          file: mx/test/helpers/utils/cleanPriceString.js
          args:
            - value: ${displayedTotal}
          getResponse:
              storeIn: displayedTotal
      - log:
          message: "Displayed Total: '${displayedTotal}'"
          color: CYAN

      # Comparing displayed vs expected...
      - if:
          condition: ${displayedTotal} == ${expectedTotal}
          then:
            - log:
                message: "Assertion Succeeded: Total is Correct."
                color: CYAN
          else:
            - failTest:
                message: "Failed: Total is not Correct."
      - log:
          message: "End function: order-details.assertTotal"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.assertOrderIsCanceled
    platform: android
    flow:
      - verifyIdentifier:
          present:
            - identifier: mx.mappings.ea.order-details.cancelledOrderStatusLabel
      - log:
          message: "Assertion Succeeded: Order has been cancelled."
          color: CYAN
      - log:
          message: "End function: order-details.assertOrderIsCanceled"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.tapBack
    platform: android
    flow:
      - click:
          identifier: mx.mappings.ea.order-details.backButton
      - log:
          message: "End function: order-details.tapBack"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.reloadPage
    platform: android
    flow:
      - log:
          message: "Scrolling all the way to the top..."
          color: CYAN
      - if:
          identifier:
            notPresent:
              - identifier: mx.mappings.ea.order-details.estimatedDeliveryDate
          then:
            - scroll:
                direction: up
                untilIdentifier: mx.mappings.ea.order-details.estimatedDeliveryDate
                wait: 1000
                scrollLimit: 12
      - sleep:
          duration: 8000
      - scroll:
          direction: up
          scrollLimit: 1
          wait: 1000
      - sleep:
          duration: 8000
      - log:
          message: "End function: order-details.reloadPage"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.cancel-order-popup.selectRandomOption
    platform: android
    flow:
      - click:
          identifier: mx.mappings.ea.order-details.cancel-order-popup.genericCancelReasonOption
          index: -1
      - getString:
          identifier: mx.mappings.ea.order-details.cancel-order-popup.selectedCancelReasonOption
          attribute: text
          storeIn: selectedCancelReasonOption
      - log:
          message: "Selected Cancel Reason Option: '${selectedCancelReasonOption}'"
          color: CYAN
      - log:
          message: "End function: order-details.cancel-order-popup.selectRandomOption"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  Cancels the order from Order Details page with the first option (RealicÃ© el pedido por error).
  # AUTHOR: Rodrigo Pacheco C. (vn53p0i)
  - name: mx.functions.ea.order-details.cancel-order-popup.selectFirstOption
    platform: android
    flow:
      - click:
          identifier: mx.mappings.ea.order-details.cancel-order-popup.genericCancelReasonOption
          index: 0
      - getString:
          identifier: mx.mappings.ea.order-details.cancel-order-popup.selectedCancelReasonOption
          attribute: text
          storeIn: selectedCancelReasonOption
      - log:
          message: "Selected Cancel Reason Option: '${selectedCancelReasonOption}'"
          color: CYAN
      - log:
          message: "End function: order-details.cancel-order-popup.selectFirstOption"
          color: BLUE
