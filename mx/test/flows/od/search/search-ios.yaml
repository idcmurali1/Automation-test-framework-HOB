#======================================================================================================================
#    AUTHOR: Rodrigo Pacheco C. (vn53p0i)
#   CREATED: Feb/02/2023
#  REVISION: ---
#
#  Copyright Â© 2023 Walmart. All rights reserved.
#======================================================================================================================

functions:

  #--------------------------------------------------------------------------------------------------------------------

  # PARAM:  ${searchTerm}  [Mandatory]  Search term to perform the search with.
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.flows.od.search.performSearch
    flow: 
      - executeFunction:
          name: mx.functions.top-menu.tapSearchField
      - executeFunction:
          name: mx.functions.top-menu.enterSearchTerm # <--${searchTerm}--
      - executeFunction:
          name: mx.functions.top-menu.tapSearchInKeyboard
      - executeFunction:
          name: mx.functions.delivery-methods-info-popup.dismissPopupIfDisplayed
      - executeFunction:
          name: mx.functions.slp.assertPageDisplayed
      - log:
          message: "End flow: mx.flows.od.search.performSearch"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------
  # DESCRIPTION: This function checks, from a given list of Product Names, which of those products is available to be
  #   purchased. The check happens by reviewing the availability of the products in the SLP, which means the function
  #   performs a search of the given products 1 by 1 and stops searching when it finds the first one that is available.
  #   At the end, it takes the user to the Home Page and returns the name of the product that it found.
  #
  # PARAMS:
  #   ${productNamesList}  [Mandatory]  The list of Product Names, separated by |, to search for their availability.
  #
  #                                        i.e. Manzana Gala por Kilo | Aceite vegetal 123 1 l | Bolillo integral por pza
  #                                        * NOTE: do not use partial Product Names; always use complete exact names.
  #
  #   ${maxScrolls}        [Mandatory]  Max number of scrolls down to perform to search each individual product within the
  #                                     SLP results.
  #
  #                                        Valid Options: [ default | <any positive integer number> ]
  #                                        * NOTE 1: 'default' option will perform 3 scrolls down.
  #                                        * NOTE 2: if an invalid option is provided, the function will use 'default'.
  # RETURNS:
  #   ${returnedAvailableProductName}  Name of the first product found available, or 'NONE' when none of the products
  #                                    in ${productNamesList} was found available.
  #
  # AUTHOR: Sergio Fernandez (vn0t1qt)
  - name: mx.flows.od.search.identifyWhichOfTheseProductsIsTheFirstOneAvailableToBePurchased
    platform: ios
    flow:
      - log:
          message: "Product Names List: '${productNamesList}'"
          color: CYAN
      # Set default value for ${returnedAvailableProduct} (assume none is available)...
      - storeIn:
          key: returnedAvailableProduct
          value: NONE
      # Get the number of products to look for availability and loop through them...
      - executeNode:
          file: mx/test/helpers/utils/getArrayLength.js
          args:
            - value: ${productNamesList} # <-- array
            - value: default             # <-- separator
          getResponse:
            storeIn: arrayLength #hello world goodbye
      - loop:
          begin: 0
          end: ${arrayLength}
          storeIndex: i
          flow:
            # Get the product based on the current index...
            - executeNode:
                file: mx/test/helpers/utils/getArrayElementByIndex.js
                args:
                  - value: ${productNamesList} # <-- array
                  - value: ${i}                # <-- index
                  - value: default             # <-- separator
                  - value: true                # <-- trimElement
                getResponse:
                  storeIn: productToLookFor
            - log:
                message: "Checking Product: '${productToLookFor}'..."
                color: GREEN_BOLD
            # Search for the product...
            - executeFunction:
                name: mx.flows.od.search.performSearch
                params:
                  - name: searchTerm
                    string: ${productToLookFor}
            # Check if there are results displayed...
            - executeFunction:
                name: mx.functions.slp.areResultsDisplayed
            - if:
                condition: ${returnedResultsDisplayed} == false
                # No results are displayed...
                then:
                  - log:
                      message: There are no results displayed after searching. Process cannot check current product.
                      color: GREEN
                # Results are displayed...
                else:
                  - log:
                      message: Checking for product availability within the results...
                      color: GREEN
                  # Scroll into the product...
                  - executeFunction:
                      name: mx.functions.slp.scrollDownToProductByName.withoutFailure
                      params:
                        - name: productName
                          string: ${productToLookFor}
                        - name: scrollLimit
                          string: ${maxScrolls}
                  # Check if product was found within the scrolls...
                  - if:
                      condition: ${returnedProductFound} == false
                      # Product was not found within the scrolls...
                      then:
                        - log:
                            message: Product was not found within the results in ${maxScrolls} scrolls.
                            color: GREEN
                      # Product was found within the scrolls...
                      else:
                        - log:
                            message: Product found, checking for its availability...
                            color: GREEN
                        # Check for product's availability...
                        - storeIn:
                            key: productName
                            value: ${productToLookFor}
                        - if:
                            identifier:
                              present:
                                - identifier: mx.mappings.slp.addToCartButton # <--${productName}--
                            then:
                              - storeIn:
                                  key: returnedAvailableProduct
                                  value: ${productToLookFor}
                              - break: true
            # Whether or not the product was found, return to Home, in preparation for the next loop cycle...
            - executeFunction:
                name: mx.functions.bottom-menu.tapDepartments
            - executeFunction:
                name: mx.functions.bottom-menu.tapHome
      # If product was found, return to Home, as the loop break didn't allowed to do so...
      - if:
          condition: ${returnedAvailableProduct} != 'NONE'
          then:
            - executeFunction:
                name: mx.functions.bottom-menu.tapDepartments
            - executeFunction:
                name: mx.functions.bottom-menu.tapHome
      # Log the product found...
      - log:
          message: "First Product Available to be Purchased: '${returnedAvailableProduct}'."
          color: CYAN
      - log:
          message: 'End function: mx.flows.od.search.identifyWhichOfTheseProductsIsTheFirstOneAvailableToBePurchased'
          color: BLUE
