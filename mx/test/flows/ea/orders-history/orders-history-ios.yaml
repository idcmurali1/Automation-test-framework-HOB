#======================================================================================================================
#  AUTHOR: Rodrigo Pacheco Cámara (vn53p0i)
#  CREATED: Mar/01/2024
#  REVISION: ---
#
#  Copyright © 2024 Walmart. All rights reserved.
#======================================================================================================================

functions:

  # DESCRIPTION:  This flow performs all the assertions necessary for this page
  # NOTE:         Since there are some assertions that cannot be done properly when the Order has Multiple Delivery
  #                 sections, the use of parameter 'isMultipleDelivery' becomes highly important. This parameter will define
  #                 which assertions to perform and/or how to perform them.
  #                 The assertions affected by the 'isMultipleDelivery' parameter are:
  #                   - Delivery Date   (this assertion is skipped if 'true')
  #                   - Order Status    (this assertion is skipped if 'true')
  #                   - Products Count  (this assertion is skipped if 'true')
  # PARAMS:
  #   ${orderNumber}              [Mandatory]   ID of the order.
  #
  #   ${expectedDeliveryMethod}   [Mandatory]   Delivery method to assert. Options: [ 'HomeDelivery' | 'PickupDelivery' ].
  #
  #   ${expectedTotal}            [Mandatory]   Expected (cleaned) Total amount to assert.
  #
  #   ${isMultipleDelivery}       [Mandatory]   Whether or not the Order has Multiple Delivery sections. Options: [ true | false ]
  #                                               - If 'true': the function will perform the assertion process specific for a Multiple Delivery Order.
  #                                               - If 'false': the function will perform the assertion process specific for a Single Delivery Order.
  #                                                 (See the Description above for more details)
  #
  #   ${expectedOrderStatus}      [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  #
  #   ${expectedDeliveryDate}     [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected Delivery Date to Assert.
  #
  #   ${expectedProductsCount}    [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected total quantity of purchased products.
  #
  # FLAGS: IOS_ORDERS_HISTORY_WORKAROUND
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.flows.ea.orders-history.assertOrder
    platform: ios
    flow:
      - log:
          message: "Performing Orders History Page Assertions..."
          color: CYAN
      - if:
          condition: ${IOS_ORDERS_HISTORY_WORKAROUND} == true
          then:
            - log:
                message: "[!] Flag IOS_ORDERS_HISTORY_WORKAROUND is set to 'true'."
                color: YELLOW
            - log:
                message: "[!] The scenario will perform the Order Assertions with the Order at the top of the list."
                color: YELLOW
            - executeFunction:
                name: mx.flows.ea.orders-history.assertOrderByPosition
                      # <--PARAM--${expectedDeliveryMethod}--${expectedTotal}---------${isMultipleDelivery}
                      # <--PARAM--${expectedOrderStatus}-----${expectedDeliveryDate}--${expectedProductsCount}
          else:
            - executeFunction:
                name: mx.flows.ea.orders-history.assertOrderByOrderNumber
                      # <--PARAM--${expectedDeliveryMethod}--${expectedTotal}---------${isMultipleDelivery}
                      # <--PARAM--${expectedOrderStatus}-----${expectedDeliveryDate}--${expectedProductsCount}
                      # <--PARAM--${orderNumber}
      - log:
          message: "End flow: orders-history.assertOrder"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This flow performs all the assertions necessary for this page by Position, and that means the first order in Orders History.
  # NOTE:         Since there are some assertions that cannot be done properly when the Order has Multiple Delivery
  #                 sections, the use of parameter 'isMultipleDelivery' becomes highly important. This parameter will define
  #                 which assertions to perform and/or how to perform them.
  #                 The assertions affected by the 'isMultipleDelivery' parameter are:
  #                   - Delivery Date   (this assertion is skipped if 'true')
  #                   - Order Status    (this assertion is skipped if 'true')
  #                   - Products Count  (this assertion is skipped if 'true')
  # PARAMS:
  #   ${expectedDeliveryMethod}   [Mandatory]   Delivery method to assert. Options: [ 'HomeDelivery' | 'PickupDelivery' ].
  #
  #   ${expectedTotal}            [Mandatory]   Expected (cleaned) Total amount to assert.
  #
  #   ${isMultipleDelivery}       [Mandatory]   Whether or not the Order has Multiple Delivery sections. Options: [ true | false ]
  #                                               - If 'true': the function will perform the assertion process specific for a Multiple Delivery Order.
  #                                               - If 'false': the function will perform the assertion process specific for a Single Delivery Order.
  #                                                 (See the Description above for more details)
  #
  #   ${expectedOrderStatus}      [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  #
  #   ${expectedDeliveryDate}     [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected Delivery Date to Assert.
  #
  #   ${expectedProductsCount}    [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected total quantity of purchased products.
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.flows.ea.orders-history.assertOrderByPosition
    platform: ios
    flow:
      - log:
          message: "Running Orders History assertions by: 'Position'..."
          color: CYAN
      - storeIn:
          key: position
          value: '1'

      # Delivery Method Assertion...
      - executeFunction:
          name: mx.functions.ea.orders-history.assertOrderDeliveryMethodByPosition # <--PARAMS--${position}
          params:
            - name: expectedDeliveryMethod
              string: ${expectedDeliveryMethod}
      # Order Total Assertion...
      - executeFunction:
          name: mx.functions.ea.orders-history.assertOrderTotalByPosition # <--PARAMS--${position}
          params:
            - name: expectedTotal
              string: ${expectedTotal}
      # Delivery Date, Status and Products Count Assertions...
      - log:
          message: "Does the order have multiple delivery sections?: '${isMultipleDelivery}'..."
          color: CYAN
      - if:
          condition: ${isMultipleDelivery} != true && ${isMultipleDelivery} != false
          then:
            - failTest:
                message: "Invalid 'isMultipleDelivery' Option provided: '${isMultipleDelivery}'"
      - if:
          condition: ${isMultipleDelivery} == true
          then:
            - log:
                message: "[!] WARNING: SOME ASSERTIONS WILL BE SKIPPED. LOGIC TO RUN ASSERTIONS FOR ORDERS WITH MULTIPLE DELIVERIES NOT YET CODED ! ! !"
                color: YELLOW
            - log:
                message: "[!] TO DO: ADD LOGIC FOR ORDERS WITH MULTIPLE DELIVERIES WHEN NEEDED ! ! !"
                color: YELLOW
      - if:
          condition: ${isMultipleDelivery} == false
          then:
            - log:
                message: "The Order does not have multiple delivery sections, Delivery Date, Status and Products Count assertions will be performed."
                color: CYAN
            # Order Status Assertion...
            - executeFunction:
                name: mx.functions.ea.orders-history.assertOrderStatusByPosition # <--PARAMS--${position}
                params:
                  - name: expectedOrderStatus
                    string: ${expectedOrderStatus}
            # Order Delivery Date Assertion...
            - executeFunction:
                name: mx.functions.ea.orders-history.assertOrderSingleDeliveryDateByPosition # <--PARAMS--${position}
                params:
                  - name: expectedDeliveryDate
                    string: ${expectedDeliveryDate}
            # Products Count Assertion...
            - executeFunction:
                name: mx.functions.ea.orders-history.assertOrderProductsCountByPosition # <--PARAMS--${position}
                params:
                  - name: expectedProductsCount
                    string: ${expectedProductsCount}
      - log:
          message: "End flow: mx.flows.ea.orders-history.assertOrderByPosition"
          color: BLUE

  #--------------------------------------------------------------------------------------------------------------------

  # DESCRIPTION:  This flow performs all the assertions necessary for this page by the order number.
  # NOTE:         Since there are some assertions that cannot be done properly when the Order has Multiple Delivery
  #                 sections, the use of parameter 'isMultipleDelivery' becomes highly important. This parameter will define
  #                 which assertions to perform and/or how to perform them.
  #                 The assertions affected by the 'isMultipleDelivery' parameter are:
  #                   - Delivery Date   (this assertion is skipped if 'true')
  #                   - Order Status    (this assertion is skipped if 'true')
  #                   - Products Count  (this assertion is skipped if 'true')
  # PARAMS:
  #   ${orderNumber}              [Mandatory]   ID of the order.
  #
  #   ${expectedDeliveryMethod}   [Mandatory]   Delivery method to assert. Options: [ 'HomeDelivery' | 'PickupDelivery' ].
  #
  #   ${expectedTotal}            [Mandatory]   Expected (cleaned) Total amount to assert.
  #
  #   ${isMultipleDelivery}       [Mandatory]   Whether or not the Order has Multiple Delivery sections. Options: [ true | false ]
  #                                               - If 'true': the function will perform the assertion process specific for a Multiple Delivery Order.
  #                                               - If 'false': the function will perform the assertion process specific for a Single Delivery Order.
  #                                                 (See the Description above for more details)
  #
  #   ${expectedOrderStatus}      [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected order status. Values: [ Received | Waiting4Payment | Ready4Pickup | OnTheWay | Delivered ].
  #
  #   ${expectedDeliveryDate}     [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected Delivery Date to Assert.
  #
  #   ${expectedProductsCount}    [Conditional] (Used only if 'isMultipleDelivery' == false).
  #                                               Expected total quantity of purchased products.
  #
  # AUTHOR: Rodrigo Pacheco (vn53p0i)
  - name: mx.flows.ea.orders-history.assertOrderByOrderNumber
    platform: ios
    flow:
      - log:
          message: "Running Orders History assertions by: 'Order Number'..."
          color: CYAN
      - log:
          message: "[1] WARNING: THE ORDER NUMBER IS STILL NOT DISPLAYING IN ORDERS HISTORY PAGE SO THESE ASSERTIONS WILL BE SKIPPED, THE ORDER CAN ONLY BE VALIDATED BY 'POSITION' ! ! !"
          color: YELLOW

      # TODO: Uncomment these lines once the order number is available in Orders History page.
      # # Correct Order Displayed Assertion...
      # - executeFunction:
      #     name: mx.functions.ea.orders-history.assertOrderDisplayed
      #     params:
      #       - name: orderNumber
      #         string: ${orderNumber}
      # # Delivery Method Assertion...
      # - executeFunction:
      #     name: mx.functions.ea.orders-history.assertOrderDeliveryMethod # <--PARAMS--${orderNumber}
      #     params:
      #       - name: expectedDeliveryMethod
      #         string: ${expectedDeliveryMethod}
      # # Order Total Assertion...
      # - executeFunction:
      #     name: mx.functions.ea.orders-history.assertOrderTotal # <--PARAMS--${orderNumber}
      #     params:
      #       - name: expectedTotal
      #         string: ${expectedTotal}
      # # Delivery Date, Status and Products Count Assertions...
      # - log:
      #     message: "Does the order have multiple delivery sections?: '${isMultipleDelivery}'..."
      #     color: CYAN
      # - if:
      #     condition: ${isMultipleDelivery} != true && ${isMultipleDelivery} != false
      #     then:
      #       - failTest:
      #           message: "Invalid 'isMultipleDelivery' Option provided: '${isMultipleDelivery}'"
      # - if:
      #     condition: ${isMultipleDelivery} == true
      #     then:
      #       - log:
      #           message: "[!] WARNING: SOME ASSERTIONS WILL BE SKIPPED. LOGIC TO RUN ASSERTIONS FOR ORDERS WITH MULTIPLE DELIVERIES NOT YET CODED ! ! !"
      #           color: YELLOW
      #       - log:
      #           message: "[!] TO DO: ADD LOGIC FOR ORDERS WITH MULTIPLE DELIVERIES WHEN NEEDED ! ! !"
      #           color: YELLOW
      # - if:
      #     condition: ${isMultipleDelivery} == false
      #     then:
      #       - log:
      #           message: "The Order does not have multiple delivery sections, Delivery Date, Status and Products Count assertions will be performed."
      #           color: CYAN
      #       # Order Status Assertion...
      #       - executeFunction:
      #           name: mx.functions.ea.orders-history.assertOrderStatus # <--PARAMS--${orderNumber}
      #           params:
      #             - name: expectedOrderStatus
      #               string: ${expectedOrderStatus}
      #       # Order Delivery Date Assertion...
      #       - executeFunction:
      #           name: mx.functions.ea.orders-history.assertOrderSingleDeliveryDate # <--PARAMS--${orderNumber}
      #           params:
      #             - name: expectedDeliveryDate
      #               string: ${expectedDeliveryDate}
      #       # Products Count Assertion...
      #       - executeFunction:
      #           name: mx.functions.ea.orders-history.assertOrderProductsCount # <--PARAMS--${orderNumber}
      #           params:
      #             - name: expectedProductsCount
      #               string: ${expectedProductsCount}
      - log:
          message: "End flow: mx.flows.ea.orders-history.assertOrderByOrderNumber"
          color: BLUE
