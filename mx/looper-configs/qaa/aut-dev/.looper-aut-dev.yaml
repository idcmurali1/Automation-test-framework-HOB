inherit: 'job:///glass-mobile-app-automation/mx/qaa/base-job/global-base:mx/looper-configs/qaa/base/.looper-base.yml'

gitShallowDepth: 10

branches:
  - spec: mx/looper-integration/MMPP*
    scheduling: concurrent
    triggers:
      - push: disabled
      - pr: disabled
      - manual:
          name: '>> Run Test Suite'
          call: pre_build
      - manual:
          name: '>> Default Build'
          call: default

  - spec: mx/MMPP*
    scheduling: concurrent
    triggers:
      - push: disabled
      - pr: disabled
      - manual:
          name: '>> Run Test Suite'
          call: pre_build
      - manual:
          name: '>> Default Build'
          call: default

  - spec: development
    scheduling: concurrent
    triggers:
      - push: disabled
      - pr: disabled
      - manual:
          name: '>> Default Build'
          call: default

envs:
  global:
    variables:
      JIRA_PROJECT_ID: ''
      SAUCELABS_APK_FILENAME: ''
      SAUCELABS_IOS_FILENAME: ''
      APP_PACKAGE: ''
      BUNDLE_ID: ''
      TEST_SUITE: ''
      PREFIX_MAPPING_LABELS: ''
      REMOTE_DEVICE_NAME_ANDROID: ''
      REMOTE_PLATFORM_VERSION_ANDROID: ''
      REMOTE_DEVICE_NAME_IOS: ''
      REMOTE_PLATFORM_VERSION_IOS: ''
      TURN_OFF_INDIVIDUAL_TEST_EXECUTION_SQUADS_REPORT: true

      # Kept same channel ID for #mx-qaa-test-results to maintain Development results post separate that posts made in squad's channels...
      SLACK_TEST_RESULTS_CHANNEL_ID: C04VBH9QVV2

parameters:

  - SQUAD_NAME: {
      type: choice,
      choices: "customer,prepurchase,purchase,postpurchase,qaa"}
  
  - APP_PLATFORM: {
      type: choice,
      choices: "android,ios"}

  - SAUCELABS_FILENAME: {
      type: choice,
      choices: "mxqaa-walmartmx-latest.apk,mxqaa-walmartmx-latest.zip",
      label: "Android or iOS filename from SauceLabs."}

  - OVERWRITE_SAUCELABS_FILENAME: {
      type: string,
      defaultValue: "",
      label: "If provided, it will use this file name instead of SAUCELABS_FILENAME."}

  - MOBILE_APP: {
      type: choice,
      choices: "walmart,bodega"}
  
  - TEST_SUITE_TYPE: {
      type: choice,
      choices: "sanity,smoke,regression,dev-phase"}

  - OVERWRITE_TC_SELECTION: {
      type: boolean,
      label: "Whether or not to select which TCs to execute from the Test Suite."}

  - TC_IDS: {
      type: string,
      label: "List of Test Cases to be executed from the selected Test Suite. Provide the list of Test Case IDs separated by comma ( , )."}

  - PARALLEL_EXECUTION: {
      type: boolean,
      defaultValue: "true",
      label: "Whether or not to execute Test Suite TCs in parallel."}

  - EXECUTION_NAME: {
      type: string,
      defaultValue: "<post-purchase looper execution>",
      label: "Name you want to give to the execution to easily identify it in Slack's Results Post. This name does not affect the execution."}

  - GLASS_ENV: {
      type: choice,
      choices: "production,teflon"}

  - IS_WCP_TEST_EXECUTION: {
      type: boolean,
      defaultValue: "true"}
  
  - REMOTE_DEVICE_NAME: {
      type: string,
      defaultValue: "Google Pixel 6 GoogleAPI Emulator",
      label: "Device Name to be used in SauceLabs."}

  - REMOTE_PLATFORM_VERSION: {
      type: string,
      defaultValue: "14.0",
      label: "Platform Version of the SauceLabs device."}
  
  - STOP_JIRA_REPORTING: {
      type: boolean,
      defaultValue: "true",
      label: "NOTE: do not change unless required."}

flows:
  default:
    - shell (name Default Flow): echo 'âœ” Default Build (SUCCESS)' && exit 0

  pre_build:
    - if: |
        %{OVERWRITE_SAUCELABS_FILENAME != ''}
      then:
        - var(SAUCELABS_FILENAME = $OVERWRITE_SAUCELABS_FILENAME)
    - if: |
        %{APP_PLATFORM == 'android'}
      then:
        - var(SAUCELABS_APK_FILENAME = $SAUCELABS_FILENAME)
        - if: |
            %{MOBILE_APP == 'walmart'}
          then:
            - var(APP_PACKAGE = 'com.walmart.mg.debug')
            - var(PREFIX_MAPPING_LABELS = 'mx_ea_android')
            - var(TEST_SUITE = '$SQUAD_NAME-walmart-ea-$TEST_SUITE_TYPE')
        - if: |
            %{MOBILE_APP == 'bodega'}
          then:
            - var(APP_PACKAGE = 'com.mx.walmart.bodega.debug')
            - var(PREFIX_MAPPING_LABELS = 'bo_ea_android')
            - var(TEST_SUITE = '$SQUAD_NAME-bodega-ea-$TEST_SUITE_TYPE')
        - var(REMOTE_DEVICE_NAME_ANDROID = $REMOTE_DEVICE_NAME)
        - var(REMOTE_PLATFORM_VERSION_ANDROID = $REMOTE_PLATFORM_VERSION)
        - shell (name Pre-build Data): |
            echo "[ $MOBILE_APP + Android ]" && \
            echo "SAUCELABS_APK_FILENAME          = $SAUCELABS_APK_FILENAME" && \
            echo "APP_PACKAGE                     = $APP_PACKAGE" && \
            echo "PREFIX_MAPPING_LABELS           = $PREFIX_MAPPING_LABELS" && \
            echo "TEST_SUITE                      = $TEST_SUITE" && \
            echo "REMOTE_DEVICE_NAME_ANDROID      = $REMOTE_DEVICE_NAME_ANDROID" && \
            echo "REMOTE_PLATFORM_VERSION_ANDROID = $REMOTE_PLATFORM_VERSION_ANDROID"
      else:
        - var(SAUCELABS_IOS_FILENAME = $SAUCELABS_FILENAME)
        - if: |
            %{MOBILE_APP == 'walmart'}
          then:
            - var(BUNDLE_ID = 'com.walmartmexico.WalmartMG.qa')
            - var(PREFIX_MAPPING_LABELS = 'mx_ea_ios')
            - var(TEST_SUITE = '$SQUAD_NAME-walmart-ea-$TEST_SUITE_TYPE')
        - if: |
            %{MOBILE_APP == 'bodega'}
          then:
            - var(BUNDLE_ID = 'com.walmart.bodegaGM.qa')
            - var(PREFIX_MAPPING_LABELS = 'bo_ea_ios')
            - var(TEST_SUITE = '$SQUAD_NAME-bodega-ea-$TEST_SUITE_TYPE')
        - var(REMOTE_DEVICE_NAME_IOS = $REMOTE_DEVICE_NAME)
        - var(REMOTE_PLATFORM_VERSION_IOS = $REMOTE_PLATFORM_VERSION)
        - shell (name Pre-build Data): |
            echo "[ $MOBILE_APP + iOS ]" && \
            echo "SAUCELABS_IOS_FILENAME      = $SAUCELABS_IOS_FILENAME" && \
            echo "BUNDLE_ID                   = $BUNDLE_ID" && \
            echo "PREFIX_MAPPING_LABELS       = $PREFIX_MAPPING_LABELS" && \
            echo "TEST_SUITE                  = $TEST_SUITE" && \
            echo "REMOTE_DEVICE_NAME_IOS      = $REMOTE_DEVICE_NAME_IOS" && \
            echo "REMOTE_PLATFORM_VERSION_IOS = $REMOTE_PLATFORM_VERSION_IOS"
    - switch($SQUAD_NAME):
        case(customer):
            - var(JIRA_PROJECT_ID = 'MMC')
        case(prepurchase):
            - var(JIRA_PROJECT_ID = 'MMS')
        case(purchase):
            - var(JIRA_PROJECT_ID = 'MMP')
        case(postpurchase):
            - var(JIRA_PROJECT_ID = 'MMPP')
        case(qaa):
            - var(JIRA_PROJECT_ID = 'MXMOB')
        otherwise:
            - var(JIRA_PROJECT_ID = 'MXMOB')
    - call: build
