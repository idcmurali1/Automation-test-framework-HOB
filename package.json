{
  "name": "@walmart/glass-automation",
  "version": "1.0.0",
  "description": "Glass E2E Automation",
  "scripts": {
    "prettier": "prettier --write '{,!(node_modules)/**/}*.js'",
    "lint": "eslint ./ --ext .js",
    "start-appium": "if pgrep -f '/usr/local/bin/appium' > /dev/null; then echo 'Appium server already running'; else rm -rf logs/appium.log & APPIUM_PREFER_SYSTEM_UNZIP=false appium --allow-insecure=adb_shell --log-level error:debug --log logs/appium.log | grep -Fv '[Xcode]' & echo '\\033[0;31mAppium server starting, please wait ...\\033[0;32m' &&  appium -v && echo 'Appium server started'; fi",
    "stop-appium": "if pgrep -f '/bin/appium' > /dev/null; then pkill -f appium; pkill -f appium; echo 'Appium server stopped'; else echo 'Appium server is not running'; fi",
    "r2-verifier": "java -jar r2-binary/r2.jar -a . -d r2-verifier-dependencies.yaml -v",
    "download-r2": "./us/scripts/download_build_local.sh downloadR2",
    "downloadScreenshots": "./wcp/scripts/download_screenshots.sh downloadScreenshots",
    "us-download-ios-app": "./us/scripts/download_build_local.sh downloadIos",
    "us-download-android-app": "./us/scripts/download_build_local.sh downloadAndroid",
    "us-b2b-download-ios-app": "./us/us-b2b/scripts/download_build_local.sh downloadIos",
    "us-b2b-download-android-app": "./us/us-b2b/scripts/download_build_local.sh downloadAndroid",
    "us-upload-saucelabs-ios-app": "./us/scripts/upload_build_local.sh uploadIos",
    "us-upload-saucelabs-ios-app-proxy": "https_proxy=sysproxy.wal-mart.com:8080 no_proxy=walmart.com ./us/scripts/upload_build_local.sh uploadIos",
    "us-upload-saucelabs-android-app": "./us/scripts/upload_build_local.sh uploadAndroid",
    "us-upload-saucelabs-android-app-proxy": "https_proxy=sysproxy.wal-mart.com:8080 no_proxy=walmart.com ./us/scripts/upload_build_local.sh uploadAndroid",
    "us-upload-saucelabs-common-app": "./us/scripts/upload_build_local.sh uploadCommon",
    "us-start-test-ios": "java -jar r2-binary/r2.jar -a us/ -d us/e2e-tests/dependencies/ios/ios-default.yaml",
    "us-start-test-proxy-ios": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a . -d us/e2e-tests/dependencies/ios/ios-default.yaml",
    "us-start-test-proxy-sc-ios": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a sellerCenter/ -d sellerCenter/e2e-tests/dependencies/ios/ios-default.yaml",
    "us-start-test-android": "java -jar r2-binary/r2.jar -a . -d us/e2e-tests/dependencies/android/android-default.yaml",
    "us-start-test-proxy-android": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a . -d us/e2e-tests/dependencies/android/android-default.yaml",
    "us-start-test-proxy-sc-android": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a sellerCenter/ -d sellerCenter/e2e-tests/dependencies/android/android-default.yaml",
    "us-start-func-test-ios": "java -jar r2-binary/r2.jar -a us/ -d us/functional-tests/dependencies/ios/ios-default.yaml",
    "us-start-func-test-proxy-ios": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a . -d us/functional-tests/dependencies/ios/ios-default.yaml",
    "us-start-func-test-android": "java -jar r2-binary/r2.jar -a . -d us/functional-tests/dependencies/android/android-default.yaml",
    "us-start-func-test-proxy-android": "java -Dhttps.proxyHost=sysproxy.wal-mart.com -Dhttps.proxyPort=8080 -jar r2-binary/r2.jar -a . -d us/functional-tests/dependencies/android/android-default.yaml",
    "mx-lint": "eslint ./mx/ --ext .js",
    "mx-local-ios-test": "sh mx/scripts/local-ios-test-runner.sh | tee ~/Desktop/execution_log.txt",
    "mx-local-android-test": "sh mx/scripts/local-android-test-runner.sh | tee ~/Desktop/execution_log.txt",
    "sc-download-ios-app": "./sellerCenter/scripts/download_build_local.sh downloadIos",
    "sc-download-android-app": "./sellerCenter/scripts/download_build_local.sh downloadAndroid",
    "generateDocs": "node generateDocs.js",
    "wcp-download-ios-app": "./wcp/scripts/download_build_local.sh downloadIos",
    "wcp-download-android-app": "./wcp/scripts/download_build_local.sh downloadAndroid",
    "wcp-upload-ios-app": "./wcp/scripts/upload_build_local.sh uploadIos",
    "wcp-upload-android-app": "./wcp/scripts/upload_build_local.sh uploadAndroid"
  },
  "devDependencies": {
    "nodemon": "^2.0.2"
  },
  "repository": {
    "type": "git",
    "url": "https://gecgithub01.walmart.com/MobileQE/glass-automation"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.6.7",
    "dateformat": "^4.5.1",
    "elasticsearch": "^16.7.2",
    "eslint": "^6.7.2",
    "eslint-config-prettier": "^6.7.0",
    "eslint-plugin-prettier": "^3.1.1",
    "js-yaml": "^4.1.0",
    "jsonpath": "^1.1.1",
    "node-fetch": "^3.3.2",
    "prettier": "^1.19.1",
    "prompt-sync": "^4.2.0",
    "request": "^2.88.2",
    "wait-on": "^7.2.0",
    "yargs": "^17.3.0"
  },
  "publishConfig": {
    "registry": "https://npme.walmart.com"
  }
}
